
crc_32.elf:     file format elf32-littleriscv


Disassembly of section .vectors:

00000000 <_stack_start-0x10000>:
  // external interrupts are handled by the same callback
  // until compiler supports IRQ routines
  .org 0x00
  .rept 31
  nop
  .endr
   0:	00000013          	nop
   4:	00000013          	nop
   8:	00000013          	nop
   c:	00000013          	nop
  10:	00000013          	nop
  14:	00000013          	nop
  18:	00000013          	nop
  1c:	00000013          	nop
  20:	00000013          	nop
  24:	00000013          	nop
  28:	00000013          	nop
  2c:	00000013          	nop
  30:	00000013          	nop
  34:	00000013          	nop
  38:	00000013          	nop
  3c:	00000013          	nop
  40:	00000013          	nop
  44:	00000013          	nop
  48:	00000013          	nop
  4c:	00000013          	nop
  50:	00000013          	nop
  54:	00000013          	nop
  58:	00000013          	nop
  5c:	00000013          	nop
  60:	00000013          	nop
  64:	00000013          	nop
  68:	00000013          	nop
  6c:	00000013          	nop
  70:	00000013          	nop
  74:	00000013          	nop
  78:	00000013          	nop
  jal x0, default_exc_handler
  7c:	29c0006f          	j	318 <default_exc_handler>

  // reset vector
  .org 0x80
  jal x0, reset_handler
  80:	29c0006f          	j	31c <reset_handler>

  // illegal instruction exception
  .org 0x84
  jal x0, default_exc_handler
  84:	2940006f          	j	318 <default_exc_handler>

  // ecall handler
  .org 0x88
  jal x0, default_exc_handler
  88:	2900006f          	j	318 <default_exc_handler>

Disassembly of section .text:

0000008c <crc32pseudo>:
};


DWORD
crc32pseudo ()
{
  8c:	ff010113          	addi	sp,sp,-16
  90:	00812423          	sw	s0,8(sp)
  94:	00912223          	sw	s1,4(sp)
  98:	01212023          	sw	s2,0(sp)
  9c:	00112623          	sw	ra,12(sp)
  a0:	40000493          	li	s1,1024
  int i;
  register DWORD oldcrc32;

  oldcrc32 = 0xFFFFFFFF;
  a4:	fff00413          	li	s0,-1

  for (i = 0; i < 1024; ++i)
    {
      oldcrc32 = UPDC32 (rand_beebs (), oldcrc32);
  a8:	4f400913          	li	s2,1268
  ac:	0b8000ef          	jal	ra,164 <rand_beebs>
  b0:	00a44533          	xor	a0,s0,a0
  b4:	0ff57513          	andi	a0,a0,255
  b8:	00251513          	slli	a0,a0,0x2
  bc:	00a90533          	add	a0,s2,a0
  c0:	00052783          	lw	a5,0(a0)
  c4:	00845413          	srli	s0,s0,0x8
  c8:	fff48493          	addi	s1,s1,-1
  cc:	0087c433          	xor	s0,a5,s0
  for (i = 0; i < 1024; ++i)
  d0:	fc049ee3          	bnez	s1,ac <crc32pseudo+0x20>
    }

  return ~oldcrc32;
}
  d4:	fff44513          	not	a0,s0
  d8:	00c12083          	lw	ra,12(sp)
  dc:	00812403          	lw	s0,8(sp)
  e0:	00412483          	lw	s1,4(sp)
  e4:	00012903          	lw	s2,0(sp)
  e8:	01010113          	addi	sp,sp,16
  ec:	00008067          	ret

000000f0 <benchmark_body>:
}


static int __attribute__ ((noinline))
benchmark_body (int rpt)
{
  f0:	ff010113          	addi	sp,sp,-16
  f4:	00812423          	sw	s0,8(sp)
  f8:	00912223          	sw	s1,4(sp)
  fc:	00112623          	sw	ra,12(sp)
 100:	00050493          	mv	s1,a0
  int i;
  DWORD r;

  for (i = 0; i < rpt; i++)
 104:	00000413          	li	s0,0
 108:	02944063          	blt	s0,s1,128 <benchmark_body+0x38>
      srand_beebs (0);
      r = crc32pseudo ();
    }

  return (int) (r % 32768);
}
 10c:	00c12083          	lw	ra,12(sp)
 110:	00812403          	lw	s0,8(sp)
  return (int) (r % 32768);
 114:	01179513          	slli	a0,a5,0x11
}
 118:	00412483          	lw	s1,4(sp)
 11c:	01155513          	srli	a0,a0,0x11
 120:	01010113          	addi	sp,sp,16
 124:	00008067          	ret
      srand_beebs (0);
 128:	00000513          	li	a0,0
 12c:	070000ef          	jal	ra,19c <srand_beebs>
      r = crc32pseudo ();
 130:	f5dff0ef          	jal	ra,8c <crc32pseudo>
 134:	00050793          	mv	a5,a0
  for (i = 0; i < rpt; i++)
 138:	00140413          	addi	s0,s0,1
 13c:	fcdff06f          	j	108 <benchmark_body+0x18>

00000140 <initialise_benchmark>:
}
 140:	00008067          	ret

00000144 <warm_caches>:
  int  res = benchmark_body (heat);
 144:	fadff06f          	j	f0 <benchmark_body>

00000148 <benchmark>:
  return benchmark_body (LOCAL_SCALE_FACTOR * CPU_MHZ);
 148:	00100513          	li	a0,1
 14c:	fa5ff06f          	j	f0 <benchmark_body>

00000150 <verify_benchmark>:


int
verify_benchmark (int r)
{
  return 11433 == r;
 150:	ffffd7b7          	lui	a5,0xffffd
 154:	35778793          	addi	a5,a5,855 # ffffd357 <_stack_start+0xfffed357>
 158:	00f50533          	add	a0,a0,a5
}
 15c:	00153513          	seqz	a0,a0
 160:	00008067          	ret

00000164 <rand_beebs>:
   multipliers and offsets and RAND_MAX variations. */

int
rand_beebs (void)
{
  seed = (seed * 1103515245L + 12345) & ((1UL << 31) - 1);
 164:	00000717          	auipc	a4,0x0
 168:	79c70713          	addi	a4,a4,1948 # 900 <seed>
 16c:	00072503          	lw	a0,0(a4)
 170:	41c657b7          	lui	a5,0x41c65
 174:	e6d78793          	addi	a5,a5,-403 # 41c64e6d <_stack_start+0x41c54e6d>
 178:	02f50533          	mul	a0,a0,a5
 17c:	000037b7          	lui	a5,0x3
 180:	03978793          	addi	a5,a5,57 # 3039 <_min_stack+0x1039>
 184:	00f50533          	add	a0,a0,a5
 188:	00151513          	slli	a0,a0,0x1
 18c:	00155513          	srli	a0,a0,0x1
 190:	00a72023          	sw	a0,0(a4)
  return (int) (seed >> 16);
}
 194:	01055513          	srli	a0,a0,0x10
 198:	00008067          	ret

0000019c <srand_beebs>:
/* Initialize the random number generator */

void
srand_beebs (unsigned int new_seed)
{
  seed = (long int) new_seed;
 19c:	00000797          	auipc	a5,0x0
 1a0:	76a7a223          	sw	a0,1892(a5) # 900 <seed>
}
 1a4:	00008067          	ret

000001a8 <init_heap_beebs>:

void
init_heap_beebs (void *heap, size_t heap_size)
{
  heap_ptr = (void *) heap;
  heap_end = (void *) ((char *) heap_ptr + heap_size);
 1a8:	00b505b3          	add	a1,a0,a1
  heap_ptr = (void *) heap;
 1ac:	00000797          	auipc	a5,0x0
 1b0:	74a7a823          	sw	a0,1872(a5) # 8fc <heap_ptr>
  heap_end = (void *) ((char *) heap_ptr + heap_size);
 1b4:	00000797          	auipc	a5,0x0
 1b8:	74b7a223          	sw	a1,1860(a5) # 8f8 <heap_end>
  heap_requested = 0;
 1bc:	00000797          	auipc	a5,0x0
 1c0:	7207ac23          	sw	zero,1848(a5) # 8f4 <_edata>
}
 1c4:	00008067          	ret

000001c8 <check_heap_beebs>:
   since the last call to init_heap_beebs, zero (FALSE) otherwise. */

int
check_heap_beebs (void *heap)
{
  return ((void *) ((char *) heap + heap_requested) <= heap_end);
 1c8:	00000797          	auipc	a5,0x0
 1cc:	72c78793          	addi	a5,a5,1836 # 8f4 <_edata>
 1d0:	0007a783          	lw	a5,0(a5)
 1d4:	00f50533          	add	a0,a0,a5
 1d8:	00000797          	auipc	a5,0x0
 1dc:	72078793          	addi	a5,a5,1824 # 8f8 <heap_end>
 1e0:	0007a783          	lw	a5,0(a5)
 1e4:	00a7b533          	sltu	a0,a5,a0
}
 1e8:	00154513          	xori	a0,a0,1
 1ec:	00008067          	ret

000001f0 <malloc_beebs>:
void *
malloc_beebs (size_t size)
{
  void *new_ptr = heap_ptr;

  heap_requested += size;
 1f0:	00000717          	auipc	a4,0x0
 1f4:	70470713          	addi	a4,a4,1796 # 8f4 <_edata>
 1f8:	00072703          	lw	a4,0(a4)
  void *new_ptr = heap_ptr;
 1fc:	00000797          	auipc	a5,0x0
 200:	70078793          	addi	a5,a5,1792 # 8fc <heap_ptr>
 204:	0007a783          	lw	a5,0(a5)
  heap_requested += size;
 208:	00a70733          	add	a4,a4,a0
 20c:	00000697          	auipc	a3,0x0
 210:	6ee6a423          	sw	a4,1768(a3) # 8f4 <_edata>

  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
 214:	00000697          	auipc	a3,0x0
 218:	6e468693          	addi	a3,a3,1764 # 8f8 <heap_end>
 21c:	0006a683          	lw	a3,0(a3)
 220:	00a78733          	add	a4,a5,a0
 224:	00e6ec63          	bltu	a3,a4,23c <malloc_beebs+0x4c>
 228:	00050a63          	beqz	a0,23c <malloc_beebs+0x4c>
    return NULL;
  else
    {
      heap_ptr = (void *) ((char *) heap_ptr + size);
 22c:	00000697          	auipc	a3,0x0
 230:	6ce6a823          	sw	a4,1744(a3) # 8fc <heap_ptr>
      return new_ptr;
    }
}
 234:	00078513          	mv	a0,a5
 238:	00008067          	ret
    return NULL;
 23c:	00000793          	li	a5,0
 240:	ff5ff06f          	j	234 <malloc_beebs+0x44>

00000244 <calloc_beebs>:
   Implement as wrapper for malloc */

void *
calloc_beebs (size_t nmemb, size_t size)
{
  void *new_ptr = malloc_beebs (nmemb * size);
 244:	02b50633          	mul	a2,a0,a1
{
 248:	fe010113          	addi	sp,sp,-32
 24c:	00812c23          	sw	s0,24(sp)
 250:	00112e23          	sw	ra,28(sp)
  void *new_ptr = malloc_beebs (nmemb * size);
 254:	00060513          	mv	a0,a2
 258:	00c12623          	sw	a2,12(sp)
 25c:	f95ff0ef          	jal	ra,1f0 <malloc_beebs>
 260:	00050413          	mv	s0,a0

  /* Calloc is defined to zero the memory. OK to use a function here, because
     it will be handled specially by the compiler anyway. */

  if (NULL != new_ptr)
 264:	00050863          	beqz	a0,274 <calloc_beebs+0x30>
    memset (new_ptr, 0, nmemb * size);
 268:	00c12603          	lw	a2,12(sp)
 26c:	00000593          	li	a1,0
 270:	15c000ef          	jal	ra,3cc <memset>

  return new_ptr;
}
 274:	00040513          	mv	a0,s0
 278:	01c12083          	lw	ra,28(sp)
 27c:	01812403          	lw	s0,24(sp)
 280:	02010113          	addi	sp,sp,32
 284:	00008067          	ret

00000288 <realloc_beebs>:
void *
realloc_beebs (void *ptr, size_t size)
{
  void *new_ptr = heap_ptr;

  heap_requested += size;
 288:	00000717          	auipc	a4,0x0
 28c:	66c70713          	addi	a4,a4,1644 # 8f4 <_edata>
 290:	00072703          	lw	a4,0(a4)
  void *new_ptr = heap_ptr;
 294:	00000797          	auipc	a5,0x0
 298:	66878793          	addi	a5,a5,1640 # 8fc <heap_ptr>
 29c:	0007a783          	lw	a5,0(a5)
  heap_requested += size;
 2a0:	00b70733          	add	a4,a4,a1
 2a4:	00000697          	auipc	a3,0x0
 2a8:	64e6a823          	sw	a4,1616(a3) # 8f4 <_edata>

  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
 2ac:	00000697          	auipc	a3,0x0
 2b0:	64c68693          	addi	a3,a3,1612 # 8f8 <heap_end>
 2b4:	0006a683          	lw	a3,0(a3)
 2b8:	00b78733          	add	a4,a5,a1
 2bc:	02e6ec63          	bltu	a3,a4,2f4 <realloc_beebs+0x6c>
 2c0:	02058a63          	beqz	a1,2f4 <realloc_beebs+0x6c>
    return NULL;
  else
    {
      heap_ptr = (void *) ((char *) heap_ptr + size);
 2c4:	00000697          	auipc	a3,0x0
 2c8:	62e6ac23          	sw	a4,1592(a3) # 8fc <heap_ptr>
      /* This is clunky, since we don't know the size of the original
         pointer. However it is a read only action and we know it must
         be big enough if we right off the end, or we couldn't have
         allocated here. If the size is smaller, it doesn't matter. */

      if (NULL != ptr)
 2cc:	02050063          	beqz	a0,2ec <realloc_beebs+0x64>
	{
	  size_t i;

	  for (i = 0; i < size; i++)
 2d0:	00000713          	li	a4,0
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
 2d4:	00e506b3          	add	a3,a0,a4
 2d8:	0006c603          	lbu	a2,0(a3)
 2dc:	00e786b3          	add	a3,a5,a4
	  for (i = 0; i < size; i++)
 2e0:	00170713          	addi	a4,a4,1
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
 2e4:	00c68023          	sb	a2,0(a3)
	  for (i = 0; i < size; i++)
 2e8:	fee596e3          	bne	a1,a4,2d4 <realloc_beebs+0x4c>
	}

      return new_ptr;
    }
}
 2ec:	00078513          	mv	a0,a5
 2f0:	00008067          	ret
    return NULL;
 2f4:	00000793          	li	a5,0
 2f8:	ff5ff06f          	j	2ec <realloc_beebs+0x64>

000002fc <free_beebs>:
   For our simplified version of memory handling, free can just do nothing. */

void
free_beebs (void *ptr __attribute__ ((unused)))
{
}
 2fc:	00008067          	ret

00000300 <initialise_board>:
//#include <support.h>

void
initialise_board ()
{
  __asm__ volatile ("li a0, 0" : : : "memory");
 300:	00000513          	li	a0,0
}
 304:	00008067          	ret

00000308 <start_trigger>:

void __attribute__ ((noinline)) __attribute__ ((externally_visible))
start_trigger ()
{
  __asm__ volatile ("li a0, 0" : : : "memory");
 308:	00000513          	li	a0,0
}
 30c:	00008067          	ret

00000310 <stop_trigger>:

void __attribute__ ((noinline)) __attribute__ ((externally_visible))
stop_trigger ()
{
  __asm__ volatile ("li a0, 0" : : : "memory");
 310:	00000513          	li	a0,0
}
 314:	00008067          	ret

00000318 <default_exc_handler>:
  jal x0, default_exc_handler
 318:	0000006f          	j	318 <default_exc_handler>

0000031c <reset_handler>:
  mv  x1, x0
 31c:	00000093          	li	ra,0
  mv  x2, x1
 320:	00008113          	mv	sp,ra
  mv  x3, x1
 324:	00008193          	mv	gp,ra
  mv  x4, x1
 328:	00008213          	mv	tp,ra
  mv  x5, x1
 32c:	00008293          	mv	t0,ra
  mv  x6, x1
 330:	00008313          	mv	t1,ra
  mv  x7, x1
 334:	00008393          	mv	t2,ra
  mv  x8, x1
 338:	00008413          	mv	s0,ra
  mv  x9, x1
 33c:	00008493          	mv	s1,ra
  mv x10, x1
 340:	00008513          	mv	a0,ra
  mv x11, x1
 344:	00008593          	mv	a1,ra
  mv x12, x1
 348:	00008613          	mv	a2,ra
  mv x13, x1
 34c:	00008693          	mv	a3,ra
  mv x14, x1
 350:	00008713          	mv	a4,ra
  mv x15, x1
 354:	00008793          	mv	a5,ra
  mv x16, x1
 358:	00008813          	mv	a6,ra
  mv x17, x1
 35c:	00008893          	mv	a7,ra
  mv x18, x1
 360:	00008913          	mv	s2,ra
  mv x19, x1
 364:	00008993          	mv	s3,ra
  mv x20, x1
 368:	00008a13          	mv	s4,ra
  mv x21, x1
 36c:	00008a93          	mv	s5,ra
  mv x22, x1
 370:	00008b13          	mv	s6,ra
  mv x23, x1
 374:	00008b93          	mv	s7,ra
  mv x24, x1
 378:	00008c13          	mv	s8,ra
  mv x25, x1
 37c:	00008c93          	mv	s9,ra
  mv x26, x1
 380:	00008d13          	mv	s10,ra
  mv x27, x1
 384:	00008d93          	mv	s11,ra
  mv x28, x1
 388:	00008e13          	mv	t3,ra
  mv x29, x1
 38c:	00008e93          	mv	t4,ra
  mv x30, x1
 390:	00008f13          	mv	t5,ra
  mv x31, x1
 394:	00008f93          	mv	t6,ra
  la   x2, _stack_start
 398:	00010117          	auipc	sp,0x10
 39c:	c6810113          	addi	sp,sp,-920 # 10000 <_stack_start>

000003a0 <_start>:
  la x26, _bss_start
 3a0:	00000d17          	auipc	s10,0x0
 3a4:	554d0d13          	addi	s10,s10,1364 # 8f4 <_edata>
  la x27, _bss_end
 3a8:	00000d97          	auipc	s11,0x0
 3ac:	55cd8d93          	addi	s11,s11,1372 # 904 <_bss_end>
  bge x26, x27, zero_loop_end
 3b0:	01bd5863          	bge	s10,s11,3c0 <main_entry>

000003b4 <zero_loop>:
  sw x0, 0(x26)
 3b4:	000d2023          	sw	zero,0(s10)
  addi x26, x26, 4
 3b8:	004d0d13          	addi	s10,s10,4
  ble x26, x27, zero_loop
 3bc:	ffaddce3          	bge	s11,s10,3b4 <zero_loop>

000003c0 <main_entry>:
  addi x10, x0, 0
 3c0:	00000513          	li	a0,0
  addi x11, x0, 0
 3c4:	00000593          	li	a1,0
  jal x1, main
 3c8:	0e0000ef          	jal	ra,4a8 <main>

000003cc <memset>:
 3cc:	00f00313          	li	t1,15
 3d0:	00050713          	mv	a4,a0
 3d4:	02c37e63          	bgeu	t1,a2,410 <memset+0x44>
 3d8:	00f77793          	andi	a5,a4,15
 3dc:	0a079063          	bnez	a5,47c <memset+0xb0>
 3e0:	08059263          	bnez	a1,464 <memset+0x98>
 3e4:	ff067693          	andi	a3,a2,-16
 3e8:	00f67613          	andi	a2,a2,15
 3ec:	00e686b3          	add	a3,a3,a4
 3f0:	00b72023          	sw	a1,0(a4)
 3f4:	00b72223          	sw	a1,4(a4)
 3f8:	00b72423          	sw	a1,8(a4)
 3fc:	00b72623          	sw	a1,12(a4)
 400:	01070713          	addi	a4,a4,16
 404:	fed766e3          	bltu	a4,a3,3f0 <memset+0x24>
 408:	00061463          	bnez	a2,410 <memset+0x44>
 40c:	00008067          	ret
 410:	40c306b3          	sub	a3,t1,a2
 414:	00269693          	slli	a3,a3,0x2
 418:	00000297          	auipc	t0,0x0
 41c:	005686b3          	add	a3,a3,t0
 420:	00c68067          	jr	12(a3)
 424:	00b70723          	sb	a1,14(a4)
 428:	00b706a3          	sb	a1,13(a4)
 42c:	00b70623          	sb	a1,12(a4)
 430:	00b705a3          	sb	a1,11(a4)
 434:	00b70523          	sb	a1,10(a4)
 438:	00b704a3          	sb	a1,9(a4)
 43c:	00b70423          	sb	a1,8(a4)
 440:	00b703a3          	sb	a1,7(a4)
 444:	00b70323          	sb	a1,6(a4)
 448:	00b702a3          	sb	a1,5(a4)
 44c:	00b70223          	sb	a1,4(a4)
 450:	00b701a3          	sb	a1,3(a4)
 454:	00b70123          	sb	a1,2(a4)
 458:	00b700a3          	sb	a1,1(a4)
 45c:	00b70023          	sb	a1,0(a4)
 460:	00008067          	ret
 464:	0ff5f593          	andi	a1,a1,255
 468:	00859693          	slli	a3,a1,0x8
 46c:	00d5e5b3          	or	a1,a1,a3
 470:	01059693          	slli	a3,a1,0x10
 474:	00d5e5b3          	or	a1,a1,a3
 478:	f6dff06f          	j	3e4 <memset+0x18>
 47c:	00279693          	slli	a3,a5,0x2
 480:	00000297          	auipc	t0,0x0
 484:	005686b3          	add	a3,a3,t0
 488:	00008293          	mv	t0,ra
 48c:	fa0680e7          	jalr	-96(a3)
 490:	00028093          	mv	ra,t0
 494:	ff078793          	addi	a5,a5,-16
 498:	40f70733          	sub	a4,a4,a5
 49c:	00f60633          	add	a2,a2,a5
 4a0:	f6c378e3          	bgeu	t1,a2,410 <memset+0x44>
 4a4:	f3dff06f          	j	3e0 <memset+0x14>

000004a8 <main>:


int __attribute__ ((used))
main (int argc __attribute__ ((unused)),
      char *argv[] __attribute__ ((unused)))
{
 4a8:	fe010113          	addi	sp,sp,-32
 4ac:	00112e23          	sw	ra,28(sp)
  volatile int result;
  volatile int correct;

  initialise_board ();
 4b0:	e51ff0ef          	jal	ra,300 <initialise_board>
  initialise_benchmark ();
 4b4:	c8dff0ef          	jal	ra,140 <initialise_benchmark>
  warm_caches (WARMUP_HEAT);
 4b8:	00000513          	li	a0,0
 4bc:	c89ff0ef          	jal	ra,144 <warm_caches>

  start_trigger ();
 4c0:	e49ff0ef          	jal	ra,308 <start_trigger>
  result = benchmark ();
 4c4:	c85ff0ef          	jal	ra,148 <benchmark>
 4c8:	00a12423          	sw	a0,8(sp)
  stop_trigger ();
 4cc:	e45ff0ef          	jal	ra,310 <stop_trigger>

  /* bmarks that use arrays will check a global array rather than int result */

  correct = verify_benchmark (result);
 4d0:	00812503          	lw	a0,8(sp)
 4d4:	c7dff0ef          	jal	ra,150 <verify_benchmark>
 4d8:	00a12623          	sw	a0,12(sp)

  //return (!correct);
  for (;;) {
    asm("wfi");
 4dc:	10500073          	wfi
 4e0:	ffdff06f          	j	4dc <main+0x34>

000004e4 <__CTOR_LIST__>:
	...

000004ec <__CTOR_END__>:
	...

Disassembly of section .rodata:

000004f4 <crc_32_tab>:
static const UNS_32_BITS crc_32_tab[] = {	/* CRC polynomial 0xedb88320 */
 4f4:	0000                	unimp
 4f6:	0000                	unimp
 4f8:	3096                	fld	ft1,352(sp)
 4fa:	612c7707          	0x612c7707
 4fe:	ee0e                	fsw	ft3,28(sp)
 500:	51ba                	lw	gp,172(sp)
 502:	9909                	andi	a0,a0,-30
 504:	c419                	beqz	s0,512 <crc_32_tab+0x1e>
 506:	076d                	addi	a4,a4,27
 508:	706af48f          	0x706af48f
 50c:	a535                	j	b38 <_bss_end+0x234>
 50e:	95a3e963          	bltu	t2,s10,fffff660 <_stack_start+0xfffef660>
 512:	9e64                	0x9e64
 514:	8832                	mv	a6,a2
 516:	b8a40edb          	0xb8a40edb
 51a:	79dc                	flw	fa5,52(a1)
 51c:	e91e                	fsw	ft7,144(sp)
 51e:	e0d5                	bnez	s1,5c2 <crc_32_tab+0xce>
 520:	d988                	sw	a0,48(a1)
 522:	97d2                	add	a5,a5,s4
 524:	09b64c2b          	0x9b64c2b
 528:	7cbd                	lui	s9,0xfffef
 52a:	7eb1                	lui	t4,0xfffec
 52c:	e7b82d07          	flw	fs10,-389(a6)
 530:	1d91                	addi	s11,s11,-28
 532:	106490bf 20f21db7 	0x20f21db7106490bf
 53a:	6ab0                	flw	fa2,80(a3)
 53c:	7148                	flw	fa0,36(a0)
 53e:	f3b9                	bnez	a5,484 <memset+0xb8>
 540:	41de                	lw	gp,212(sp)
 542:	84be                	mv	s1,a5
 544:	d47d                	beqz	s0,532 <crc_32_tab+0x3e>
 546:	1ada                	slli	s5,s5,0x36
 548:	6ddde4eb          	0x6ddde4eb
 54c:	b551                	j	3d0 <memset+0x4>
 54e:	f4d4                	fsw	fa3,44(s1)
 550:	83d385c7          	fmsub.d	fa1,ft7,ft9,fa6,rne
 554:	9856                	add	a6,a6,s5
 556:	136c                	addi	a1,sp,428
 558:	a8c0                	fsd	fs0,144(s1)
 55a:	f97a646b          	0xf97a646b
 55e:	fd62                	fsw	fs8,184(sp)
 560:	c9ec                	sw	a1,84(a1)
 562:	8a65                	andi	a2,a2,25
 564:	14015c4f          	0x14015c4f
 568:	6cd9                	lui	s9,0x16
 56a:	6306                	flw	ft6,64(sp)
 56c:	fa0f3d63          	0xfa0f3d63
 570:	0df5                	addi	s11,s11,29
 572:	8d08                	0x8d08
 574:	20c8                	fld	fa0,128(s1)
 576:	3b6e                	fld	fs6,248(sp)
 578:	105e                	c.slli	zero,0x37
 57a:	4c69                	li	s8,26
 57c:	41e4                	lw	s1,68(a1)
 57e:	d560                	sw	s0,108(a0)
 580:	7172                	flw	ft2,60(sp)
 582:	e4d1a267          	0xe4d1a267
 586:	d4473c03          	0xd4473c03
 58a:	4b04                	lw	s1,16(a4)
 58c:	85fd                	srai	a1,a1,0x1f
 58e:	d20d                	beqz	a2,4b0 <main+0x8>
 590:	a50ab56b          	0xa50ab56b
 594:	a8fa                	fsd	ft10,80(sp)
 596:	35b5                	jal	402 <memset+0x36>
 598:	986c                	0x986c
 59a:	42b2                	lw	t0,12(sp)
 59c:	c9d6                	sw	s5,208(sp)
 59e:	f940dbbb          	0xf940dbbb
 5a2:	acbc                	fsd	fa5,88(s1)
 5a4:	32d86ce3          	bltu	a6,a3,10dc <_bss_end+0x7d8>
 5a8:	5c75                	li	s8,-3
 5aa:	45df 0dcf dcd6      	0xdcd60dcf45df
 5b0:	3d59                	jal	446 <memset+0x7a>
 5b2:	abd1                	j	b86 <_bss_end+0x282>
 5b4:	30ac                	fld	fa1,96(s1)
 5b6:	26d9                	jal	97c <_bss_end+0x78>
 5b8:	003a                	c.slli	zero,0xe
 5ba:	51de                	lw	gp,244(sp)
 5bc:	5180                	lw	s0,32(a1)
 5be:	6116c8d7          	0x6116c8d7
 5c2:	bfd0                	fsd	fa2,184(a5)
 5c4:	f4b5                	bnez	s1,530 <crc_32_tab+0x3c>
 5c6:	21b4                	fld	fa3,64(a1)
 5c8:	56b3c423          	0x56b3c423
 5cc:	9599                	srai	a1,a1,0x26
 5ce:	cfba                	sw	a4,220(sp)
 5d0:	b8bda50f          	0xb8bda50f
 5d4:	b89e                	fsd	ft7,112(sp)
 5d6:	2802                	fld	fa6,0(sp)
 5d8:	8808                	0x8808
 5da:	5f05                	li	t5,-31
 5dc:	d9b2                	sw	a2,240(sp)
 5de:	c60c                	sw	a1,8(a2)
 5e0:	e924                	fsw	fs1,80(a0)
 5e2:	7c87b10b          	0x7c87b10b
 5e6:	4c112f6f          	jal	t5,132a6 <_stack_start+0x32a6>
 5ea:	5868                	lw	a0,116(s0)
 5ec:	c1611dab          	0xc1611dab
 5f0:	2d3d                	jal	c2e <_bss_end+0x32a>
 5f2:	b666                	fsd	fs9,296(sp)
 5f4:	4190                	lw	a2,0(a1)
 5f6:	76dc                	flw	fa5,44(a3)
 5f8:	7106                	flw	ft2,96(sp)
 5fa:	20bc01db          	0x20bc01db
 5fe:	98d2                	add	a7,a7,s4
 600:	102a                	c.slli	zero,0x2a
 602:	efd5                	bnez	a5,6be <crc_32_tab+0x1ca>
 604:	8589                	srai	a1,a1,0x2
 606:	71b1                	lui	gp,0xfffec
 608:	b51f 06b6 e4a5      	0xe4a506b6b51f
 60e:	d4339fbf c9a2e8b8 	0xc9a2e8b8d4339fbf
 616:	f9347807          	0xf9347807
 61a:	0f00                	addi	s0,sp,912
 61c:	a88e                	fsd	ft3,80(sp)
 61e:	9609                	srai	a2,a2,0x22
 620:	9818                	0x9818
 622:	e10e                	fsw	ft3,128(sp)
 624:	7f6a0dbb          	0x7f6a0dbb
 628:	3d2d                	jal	462 <memset+0x96>
 62a:	086d                	addi	a6,a6,27
 62c:	91646c97          	auipc	s9,0x91646
 630:	5c01                	li	s8,-32
 632:	51f4e663          	bltu	s1,t6,b3e <_bss_end+0x23a>
 636:	61626b6b          	0x61626b6b
 63a:	1c6c                	addi	a1,sp,572
 63c:	30d8                	fld	fa4,160(s1)
 63e:	8565                	srai	a0,a0,0x19
 640:	004e                	c.slli	zero,0x13
 642:	f262                	fsw	fs8,36(sp)
 644:	95ed                	srai	a1,a1,0x3b
 646:	6c06                	flw	fs8,64(sp)
 648:	1b01a57b          	0x1b01a57b
 64c:	f4c1                	bnez	s1,5d4 <crc_32_tab+0xe0>
 64e:	8208                	0x8208
 650:	f50fc457          	0xf50fc457
 654:	d9c6                	sw	a7,240(sp)
 656:	65b0                	flw	fa2,72(a1)
 658:	e950                	fsw	fa2,20(a0)
 65a:	b8ea12b7          	lui	t0,0xb8ea1
 65e:	8bbe                	mv	s7,a5
 660:	887c                	0x887c
 662:	fcb9                	bnez	s1,5c0 <crc_32_tab+0xcc>
 664:	1ddf 62dd 2d49      	0x2d4962dd1ddf
 66a:	15da                	slli	a1,a1,0x36
 66c:	8cd37cf3          	csrrci	s9,0x8cd,6
 670:	4c65                	li	s8,25
 672:	fbd4                	fsw	fa3,52(a5)
 674:	6158                	flw	fa4,4(a0)
 676:	4db2                	lw	s11,12(sp)
 678:	51ce                	lw	gp,240(sp)
 67a:	3ab5                	jal	fffffff6 <_stack_start+0xfffefff6>
 67c:	0074                	addi	a3,sp,12
 67e:	a3bc                	fsd	fa5,64(a5)
 680:	30e2                	fld	ft1,56(sp)
 682:	a541d4bb          	0xa541d4bb
 686:	4adf 95d7 3dd8      	0x3dd895d74adf
 68c:	c46d                	beqz	s0,776 <crc_32_tab+0x282>
 68e:	a4d1                	j	952 <_bss_end+0x4e>
 690:	d3d6f4fb          	0xd3d6f4fb
 694:	e96a                	fsw	fs10,144(sp)
 696:	4369                	li	t1,26
 698:	d9fc                	sw	a5,116(a1)
 69a:	346e                	fld	fs0,248(sp)
 69c:	8846                	mv	a6,a7
 69e:	b8d0ad67          	0xb8d0ad67
 6a2:	da60                	sw	s0,116(a2)
 6a4:	44042d73          	csrrs	s10,0x440,s0
 6a8:	1de5                	addi	s11,s11,-7
 6aa:	4c5f3303          	0x4c5f3303
 6ae:	aa0a                	fsd	ft2,272(sp)
 6b0:	7cc9                	lui	s9,0xffff2
 6b2:	dd0d                	beqz	a0,5ec <crc_32_tab+0xf8>
 6b4:	713c                	flw	fa5,96(a0)
 6b6:	5005                	c.li	zero,-31
 6b8:	41aa                	lw	gp,136(sp)
 6ba:	2702                	fld	fa4,0(sp)
 6bc:	1010                	addi	a2,sp,32
 6be:	2086be0b          	0x2086be0b
 6c2:	c90c                	sw	a1,16(a0)
 6c4:	b525                	j	4ec <__CTOR_END__>
 6c6:	5768                	lw	a0,108(a4)
 6c8:	206f85b3          	0x206f85b3
 6cc:	d409                	beqz	s0,5d6 <crc_32_tab+0xe2>
 6ce:	b966                	fsd	fs9,176(sp)
 6d0:	e49f ce61 f90e      	0xf90ece61e49f
 6d6:	5ede                	lw	t4,244(sp)
 6d8:	c998                	sw	a4,16(a1)
 6da:	29d9                	jal	bb0 <_bss_end+0x2ac>
 6dc:	9822                	add	a6,a6,s0
 6de:	b0d0                	fsd	fa2,160(s1)
 6e0:	a8b4                	fsd	fa3,80(s1)
 6e2:	3d17c7d7          	0x3d17c7d7
 6e6:	0d8159b3          	0xd8159b3
 6ea:	2eb4                	fld	fa3,88(a3)
 6ec:	b7bd5c3b          	0xb7bd5c3b
 6f0:	6cad                	lui	s9,0xb
 6f2:	c0ba                	sw	a4,64(sp)
 6f4:	8320                	0x8320
 6f6:	edb8                	fsw	fa4,88(a1)
 6f8:	b3b6                	fsd	fa3,480(sp)
 6fa:	e20c9abf d29a03b6 	0xd29a03b6e20c9abf
 702:	74b1                	lui	s1,0xfffec
 704:	4739                	li	a4,14
 706:	ead5                	bnez	a3,7ba <crc_32_tab+0x2c6>
 708:	9dd277af          	0x9dd277af
 70c:	2615                	jal	a30 <_bss_end+0x12c>
 70e:	168304db          	0x168304db
 712:	73dc                	flw	fa5,36(a5)
 714:	0b12                	slli	s6,s6,0x4
 716:	3b84e363          	bltu	s1,s8,abc <_bss_end+0x1b8>
 71a:	9464                	0x9464
 71c:	6a3e                	flw	fs4,204(sp)
 71e:	0d6d                	addi	s10,s10,27
 720:	5aa8                	lw	a0,112(a3)
 722:	7a6a                	flw	fs4,184(sp)
 724:	e40ecf0b          	0xe40ecf0b
 728:	ff9d                	bnez	a5,666 <crc_32_tab+0x172>
 72a:	9309                	srli	a4,a4,0x22
 72c:	0a00ae27          	fsw	ft0,188(ra)
 730:	9eb1                	0x9eb1
 732:	93447d07          	0x93447d07
 736:	a3d2f00f          	0xa3d2f00f
 73a:	8708                	0x8708
 73c:	f268                	fsw	fa0,100(a2)
 73e:	1e01                	addi	t3,t3,-32
 740:	c2fe                	sw	t6,68(sp)
 742:	6906                	flw	fs2,64(sp)
 744:	575d                	li	a4,-9
 746:	f762                	fsw	fs8,172(sp)
 748:	806567cb          	fnmsub.s	fa5,fa0,ft6,fa6,unknown
 74c:	3671                	jal	2d8 <realloc_beebs+0x50>
 74e:	196c                	addi	a1,sp,188
 750:	6e6b06e7          	jalr	a3,1766(s6)
 754:	1b76                	slli	s6,s6,0x3d
 756:	fed4                	fsw	fa3,60(a3)
 758:	2be0                	fld	fs0,208(a5)
 75a:	7a5a89d3          	0x7a5a89d3
 75e:	10da                	slli	ra,ra,0x36
 760:	4acc                	lw	a1,20(a3)
 762:	67dd                	lui	a5,0x17
 764:	f9b9df6f          	jal	t5,fff9e6fe <_stack_start+0xfff8e6fe>
 768:	eff9                	bnez	a5,846 <crc_32_tab+0x352>
 76a:	8ebe                	mv	t4,a5
 76c:	17b7be43          	fmadd.q	ft8,fa5,fs11,ft2,rup
 770:	8ed5                	or	a3,a3,a3
 772:	60b0                	flw	fa2,64(s1)
 774:	a3e8                	fsd	fa0,192(a5)
 776:	d6d6                	sw	s5,108(sp)
 778:	937e                	add	t1,t1,t6
 77a:	a1d1                	j	c3e <_bss_end+0x33a>
 77c:	c2c4                	sw	s1,4(a3)
 77e:	38d8                	fld	fa4,176(s1)
 780:	f252                	fsw	fs4,36(sp)
 782:	4fdf 67f1 d1bb      	0xd1bb67f14fdf
 788:	a6bc5767          	0xa6bc5767
 78c:	06dd                	addi	a3,a3,23
 78e:	3fb5                	jal	70a <crc_32_tab+0x216>
 790:	48b2364b          	fnmsub.s	fa2,ft4,fa1,fs1,rup
 794:	2bda                	fld	fs7,400(sp)
 796:	d80d                	beqz	s0,6c8 <crc_32_tab+0x1d4>
 798:	1b4c                	addi	a1,sp,436
 79a:	af0a                	fsd	ft2,408(sp)
 79c:	4af6                	lw	s5,92(sp)
 79e:	7a603603          	0x7a603603
 7a2:	4104                	lw	s1,0(a0)
 7a4:	df60efc3          	fmadd.q	ft11,ft1,fs6,fs11,unknown
 7a8:	df55                	beqz	a4,764 <crc_32_tab+0x270>
 7aa:	8eefa867          	0x8eefa867
 7ae:	316e                	fld	ft2,248(sp)
 7b0:	be79                	j	34e <reset_handler+0x32>
 7b2:	4669                	li	a2,26
 7b4:	b38c                	fsd	fa1,32(a5)
 7b6:	cb61                	beqz	a4,886 <crc_32_tab+0x392>
 7b8:	831a                	mv	t1,t1
 7ba:	bc66                	fsd	fs9,56(sp)
 7bc:	d2a0                	sw	s0,96(a3)
 7be:	e236256f          	jal	a0,fff635e0 <_stack_start+0xfff535e0>
 7c2:	5268                	lw	a0,100(a2)
 7c4:	7795                	lui	a5,0xfffe5
 7c6:	cc0c                	sw	a1,24(s0)
 7c8:	bb0b4703          	lbu	a4,-1104(s6)
 7cc:	16b9                	addi	a3,a3,-18
 7ce:	2202                	fld	ft4,0(sp)
 7d0:	5505262f          	0x5505262f
 7d4:	3bbe                	fld	fs7,488(sp)
 7d6:	c5ba                	sw	a4,200(sp)
 7d8:	0b28                	addi	a0,sp,408
 7da:	b2bd                	j	148 <benchmark>
 7dc:	5a92                	lw	s5,36(sp)
 7de:	2bb4                	fld	fa3,80(a5)
 7e0:	6a04                	flw	fs1,16(a2)
 7e2:	ffa75cb3          	0xffa75cb3
 7e6:	cf31c2d7          	0xcf31c2d7
 7ea:	b5d0                	fsd	fa2,168(a1)
 7ec:	2cd99e8b          	0x2cd99e8b
 7f0:	ae1d                	j	b26 <_bss_end+0x222>
 7f2:	5bde                	lw	s7,244(sp)
 7f4:	c2b0                	sw	a2,64(a3)
 7f6:	9b64                	0x9b64
 7f8:	f226                	fsw	fs1,36(sp)
 7fa:	a39cec63          	bltu	s9,s9,fffffa32 <_stack_start+0xfffefa32>
 7fe:	756a                	flw	fa0,184(sp)
 800:	930a                	add	t1,t1,sp
 802:	026d                	addi	tp,tp,27
 804:	06a9                	addi	a3,a3,10
 806:	9c09                	0x9c09
 808:	eb0e363f 72076785 	0x72076785eb0e363f
 810:	05005713          	0x5005713
 814:	4a82                	lw	s5,0(sp)
 816:	7a1495bf 2baee2b8 	0x2baee2b87a1495bf
 81e:	7bb1                	lui	s7,0xfffec
 820:	1b38                	addi	a4,sp,440
 822:	0cb6                	slli	s9,s9,0xd
 824:	92d28e9b          	0x92d28e9b
 828:	be0d                	j	35a <reset_handler+0x3e>
 82a:	e5d5                	bnez	a1,8d6 <crc_32_tab+0x3e2>
 82c:	7cdcefb7          	lui	t6,0x7cdce
 830:	df21                	beqz	a4,788 <crc_32_tab+0x294>
 832:	d2d40bdb          	0xd2d40bdb
 836:	e24286d3          	0xe24286d3
 83a:	f1d4                	fsw	fa3,36(a1)
 83c:	b3f8                	fsd	fa4,224(a5)
 83e:	68dd                	lui	a7,0x17
 840:	836e                	mv	t1,s11
 842:	1fda                	slli	t6,t6,0x36
 844:	16cd                	addi	a3,a3,-13
 846:	81be                	mv	gp,a5
 848:	f6b9265b          	0xf6b9265b
 84c:	77e1                	lui	a5,0xffff8
 84e:	6fb0                	flw	fa2,88(a5)
 850:	18b74777          	0x18b74777
 854:	5ae6                	lw	s5,120(sp)
 856:	8808                	0x8808
 858:	6a70                	flw	fa2,84(a2)
 85a:	3bcaff0f          	0x3bcaff0f
 85e:	6606                	flw	fa2,64(sp)
 860:	0b5c                	addi	a5,sp,404
 862:	1101                	addi	sp,sp,-32
 864:	9eff                	0x9eff
 866:	8f65                	and	a4,a4,s1
 868:	ae69                	j	c02 <_bss_end+0x2fe>
 86a:	f862                	fsw	fs8,48(sp)
 86c:	616bffd3          	0x616bffd3
 870:	cf45                	beqz	a4,928 <_bss_end+0x24>
 872:	166c                	addi	a1,sp,812
 874:	e278                	fsw	fa4,68(a2)
 876:	a00a                	fsd	ft2,0(sp)
 878:	d2ee                	sw	s11,100(sp)
 87a:	d70d                	beqz	a4,7a4 <crc_32_tab+0x2b0>
 87c:	8354                	0x8354
 87e:	4e04                	lw	s1,24(a2)
 880:	b3c2                	fsd	fa6,480(sp)
 882:	26613903          	0x26613903
 886:	16f7a767          	0x16f7a767
 88a:	d060                	sw	s0,100(s0)
 88c:	474d                	li	a4,19
 88e:	4969                	li	s2,26
 890:	3e6e77db          	0x3e6e77db
 894:	6a4a                	flw	fs4,144(sp)
 896:	aed1                	j	c6a <_bss_end+0x366>
 898:	5adc                	lw	a5,52(a3)
 89a:	d9d6                	sw	s5,240(sp)
 89c:	0b66                	slli	s6,s6,0x19
 89e:	40df 3bf0 37d8      	0x37d83bf040df
 8a4:	a9bcae53          	0xa9bcae53
 8a8:	9ec5                	0x9ec5
 8aa:	cf7fdebb          	0xcf7fdebb
 8ae:	47b2                	lw	a5,12(sp)
 8b0:	ffe9                	bnez	a5,88a <crc_32_tab+0x396>
 8b2:	30b5                	jal	11e <benchmark_body+0x2e>
 8b4:	f21c                	fsw	fa5,32(a2)
 8b6:	bdbd                	j	734 <crc_32_tab+0x240>
 8b8:	c28a                	sw	sp,68(sp)
 8ba:	caba                	sw	a4,84(sp)
 8bc:	9330                	0x9330
 8be:	a3a653b3          	0xa3a653b3
 8c2:	24b4                	fld	fa3,72(s1)
 8c4:	3605                	jal	3e4 <memset+0x18>
 8c6:	bad0                	fsd	fa2,176(a3)
 8c8:	cdd70693          	addi	a3,a4,-803
 8cc:	5729                	li	a4,-22
 8ce:	54de                	lw	s1,244(sp)
 8d0:	23d967bf b3667a2e 	0xb3667a2e23d967bf
 8d8:	4ab8                	lw	a4,80(a3)
 8da:	c461                	beqz	s0,9a2 <_bss_end+0x9e>
 8dc:	1b02                	slli	s6,s6,0x20
 8de:	5d68                	lw	a0,124(a0)
 8e0:	2b94                	fld	fa3,16(a5)
 8e2:	be372a6f          	jal	s4,fff734c4 <_stack_start+0xfff634c4>
 8e6:	8ea1b40b          	0x8ea1b40b
 8ea:	c30c                	sw	a1,0(a4)
 8ec:	5a05df1b          	0x5a05df1b
 8f0:	ef8d                	bnez	a5,92a <_bss_end+0x26>
 8f2:	2d02                	fld	fs10,0(sp)

Disassembly of section .bss:

000008f4 <_bss_start>:
 8f4:	0000                	unimp
	...

000008f8 <heap_end>:
static void *heap_end = NULL;
 8f8:	0000                	unimp
	...

000008fc <heap_ptr>:
static void *heap_ptr = NULL;
 8fc:	0000                	unimp
	...

00000900 <seed>:
static long int seed = 0;
 900:	0000                	unimp
	...

Disassembly of section .stack:

0000c000 <_stack-0x2000>:
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
  .endr
       0:	0ad4                	addi	a3,sp,340
       2:	0000                	unimp
       4:	0004                	0x4
       6:	0000                	unimp
       8:	0000                	unimp
       a:	0104                	addi	s1,sp,128
       c:	00000427          	0x427
      10:	240c                	fld	fa1,8(s0)
      12:	0005                	c.nop	1
      14:	6900                	flw	fs0,16(a0)
      16:	0001                	nop
      18:	8c00                	0x8c00
      1a:	0000                	unimp
      1c:	d800                	sw	s0,48(s0)
      1e:	0000                	unimp
      20:	0000                	unimp
      22:	0000                	unimp
      24:	0200                	addi	s0,sp,256
      26:	0504                	addi	s1,sp,640
      28:	6e69                	lui	t3,0x1a
      2a:	0074                	addi	a3,sp,12
      2c:	4a070403          	lb	s0,1184(a4)
      30:	0000                	unimp
      32:	0300                	addi	s0,sp,384
      34:	0508                	addi	a0,sp,640
      36:	00000097          	auipc	ra,0x0
      3a:	8b041003          	lh	zero,-1872(s0)
      3e:	0002                	c.slli64	zero
      40:	0400                	addi	s0,sp,512
      42:	0250                	addi	a2,sp,260
      44:	0000                	unimp
      46:	6502                	flw	fa0,0(sp)
      48:	1701                	addi	a4,a4,-32
      4a:	002c                	addi	a1,sp,8
      4c:	0000                	unimp
      4e:	00060103          	lb	sp,0(a2)
      52:	03000003          	lb	zero,48(zero) # 30 <__DYNAMIC+0x30>
      56:	0801                	addi	a6,a6,0
      58:	02fe                	slli	t0,t0,0x1f
      5a:	0000                	unimp
      5c:	1a050203          	lb	tp,416(a0)
      60:	03000003          	lb	zero,48(zero) # 30 <__DYNAMIC+0x30>
      64:	0702                	c.slli64	a4
      66:	020d                	addi	tp,tp,3
      68:	0000                	unimp
      6a:	9c050403          	lb	s0,-1600(a0)
      6e:	0000                	unimp
      70:	0300                	addi	s0,sp,384
      72:	0704                	addi	s1,sp,896
      74:	0045                	c.nop	17
      76:	0000                	unimp
      78:	40070803          	lb	a6,1024(a4)
  jal x0, default_exc_handler
      7c:	0000                	unimp
      7e:	0500                	addi	s0,sp,640
  jal x0, reset_handler
      80:	000002cf          	fnmadd.s	ft5,ft0,ft0,ft0,rne
  jal x0, default_exc_handler
      84:	6a0e2e03          	lw	t3,1696(t3) # 1a6a0 <_stack_start+0xa6a0>
  jal x0, default_exc_handler
      88:	0000                	unimp
      8a:	0500                	addi	s0,sp,640
{
      8c:	03d0                	addi	a2,sp,452
      8e:	0000                	unimp
      90:	6a0e7403          	0x6a0e7403
      94:	0000                	unimp
      96:	0500                	addi	s0,sp,640
      98:	04c0                	addi	s0,sp,580
      9a:	0000                	unimp
      9c:	25179303          	lh	t1,593(a5) # ffff8251 <_stack_start+0xfffe8251>
      a0:	0000                	unimp
      a2:	0600                	addi	s0,sp,768
  oldcrc32 = 0xFFFFFFFF;
      a4:	0304                	addi	s1,sp,384
      a6:	03a5                	addi	t2,t2,9
      oldcrc32 = UPDC32 (rand_beebs (), oldcrc32);
      a8:	00c5                	addi	ra,ra,17
      aa:	0000                	unimp
      ac:	00024a07          	flq	fs4,0(tp) # 0 <__DYNAMIC>
      b0:	0300                	addi	s0,sp,384
      b2:	00410ca7          	0x410ca7
      b6:	0000                	unimp
      b8:	0001e907          	0x1e907
      bc:	0300                	addi	s0,sp,384
      be:	13a8                	addi	a0,sp,488
      c0:	00c5                	addi	ra,ra,17
      c2:	0000                	unimp
      c4:	0800                	addi	s0,sp,16
      c6:	0055                	c.nop	21
      c8:	0000                	unimp
      ca:	00d5                	addi	ra,ra,21
      cc:	0000                	unimp
      ce:	2c09                	jal	2e0 <realloc_beebs+0x58>
  for (i = 0; i < 1024; ++i)
      d0:	0000                	unimp
      d2:	0300                	addi	s0,sp,384
}
      d4:	0a00                	addi	s0,sp,272
      d6:	0308                	addi	a0,sp,384
      d8:	09a2                	slli	s3,s3,0x8
      da:	00f9                	addi	ra,ra,30
      dc:	0000                	unimp
      de:	0003ba0b          	0x3ba0b
      e2:	0300                	addi	s0,sp,384
      e4:	07a4                	addi	s1,sp,968
      e6:	0025                	c.nop	9
      e8:	0000                	unimp
      ea:	0b00                	addi	s0,sp,400
      ec:	03c2                	slli	t2,t2,0x10
      ee:	0000                	unimp
{
      f0:	a305a903          	lw	s2,-1488(a1)
      f4:	0000                	unimp
      f6:	0400                	addi	s0,sp,512
      f8:	0500                	addi	s0,sp,640
      fa:	0342                	slli	t1,t1,0x10
      fc:	0000                	unimp
      fe:	d503aa03          	lw	s4,-688(t2)
     102:	0000                	unimp
  for (i = 0; i < rpt; i++)
     104:	0c00                	addi	s0,sp,528
     106:	0504                	addi	s1,sp,640
     108:	0412                	slli	s0,s0,0x4
     10a:	0000                	unimp
}
     10c:	1604                	addi	s1,sp,800
     10e:	7119                	addi	sp,sp,-128
     110:	0000                	unimp
     112:	0500                	addi	s0,sp,640
  return (int) (r % 32768);
     114:	02e0                	addi	s0,sp,332
     116:	0000                	unimp
}
     118:	0c05                	addi	s8,s8,1
     11a:	250d                	jal	73c <__DTOR_END__+0x248>
     11c:	0000                	unimp
     11e:	0500                	addi	s0,sp,640
     120:	000001a7          	0x1a7
     124:	2304                	fld	fs1,0(a4)
     126:	0001131b          	0x1131b
      srand_beebs (0);
     12a:	0d00                	addi	s0,sp,656
     12c:	01b8                	addi	a4,sp,200
     12e:	0000                	unimp
      r = crc32pseudo ();
     130:	0418                	addi	a4,sp,512
     132:	0834                	addi	a3,sp,24
     134:	0185                	addi	gp,gp,1
     136:	0000                	unimp
  for (i = 0; i < rpt; i++)
     138:	0003630b          	0x3630b
     13c:	0400                	addi	s0,sp,512
     13e:	1336                	slli	t1,t1,0x2d
}
     140:	0185                	addi	gp,gp,1
     142:	0000                	unimp
  int  res = benchmark_body (heat);
     144:	0e00                	addi	s0,sp,784
     146:	6b5f 0400 0737      	0x73704006b5f
  return benchmark_body (LOCAL_SCALE_FACTOR * CPU_MHZ);
     14c:	0025                	c.nop	9
     14e:	0000                	unimp
  return 11433 == r;
     150:	0b04                	addi	s1,sp,400
     152:	000003ab          	0x3ab
     156:	3704                	fld	fs1,40(a4)
     158:	0000250b          	0x250b
}
     15c:	0800                	addi	s0,sp,16
     15e:	0000140b          	0x140b
     162:	0400                	addi	s0,sp,512
  seed = (seed * 1103515245L + 12345) & ((1UL << 31) - 1);
     164:	00251437          	lui	s0,0x251
     168:	0000                	unimp
     16a:	0b0c                	addi	a1,sp,400
     16c:	000004ab          	0x4ab
     170:	3704                	fld	fs1,40(a4)
     172:	0000251b          	0x251b
     176:	1000                	addi	s0,sp,32
     178:	5f0e                	lw	t5,224(sp)
     17a:	0078                	addi	a4,sp,12
     17c:	3804                	fld	fs1,48(s0)
     17e:	00018b0b          	0x18b0b
     182:	1400                	addi	s0,sp,544
     184:	0f00                	addi	s0,sp,912
     186:	2b04                	fld	fs1,16(a4)
     188:	0001                	nop
     18a:	0800                	addi	s0,sp,16
     18c:	00000107          	0x107
     190:	0000019b          	0x19b
}
     194:	2c09                	jal	3a6 <_start+0x6>
     196:	0000                	unimp
     198:	0000                	unimp
     19a:	0d00                	addi	s0,sp,656
  seed = (long int) new_seed;
     19c:	01e4                	addi	s1,sp,204
     19e:	0000                	unimp
     1a0:	0424                	addi	s1,sp,520
     1a2:	083c                	addi	a5,sp,24
}
     1a4:	021e                	slli	tp,tp,0x7
     1a6:	0000                	unimp
  heap_end = (void *) ((char *) heap_ptr + heap_size);
     1a8:	00008e0b          	0x8e0b
  heap_ptr = (void *) heap;
     1ac:	0400                	addi	s0,sp,512
     1ae:	093e                	slli	s2,s2,0xf
     1b0:	0025                	c.nop	9
     1b2:	0000                	unimp
  heap_end = (void *) ((char *) heap_ptr + heap_size);
     1b4:	0b00                	addi	s0,sp,400
     1b6:	03dd                	addi	t2,t2,23
     1b8:	0000                	unimp
     1ba:	3f04                	fld	fs1,56(a4)
  heap_requested = 0;
     1bc:	2509                	jal	7be <__DTOR_END__+0x2ca>
     1be:	0000                	unimp
     1c0:	0400                	addi	s0,sp,512
     1c2:	0000bd0b          	0xbd0b
}
     1c6:	0400                	addi	s0,sp,512
  return ((void *) ((char *) heap + heap_requested) <= heap_end);
     1c8:	0940                	addi	s0,sp,148
     1ca:	0025                	c.nop	9
     1cc:	0000                	unimp
     1ce:	0b08                	addi	a0,sp,400
     1d0:	0542                	slli	a0,a0,0x10
     1d2:	0000                	unimp
     1d4:	4104                	lw	s1,0(a0)
     1d6:	2509                	jal	7d8 <__DTOR_END__+0x2e4>
     1d8:	0000                	unimp
     1da:	0c00                	addi	s0,sp,528
     1dc:	0002a90b          	0x2a90b
     1e0:	0400                	addi	s0,sp,512
     1e2:	0942                	slli	s2,s2,0x10
     1e4:	0025                	c.nop	9
     1e6:	0000                	unimp
}
     1e8:	0b10                	addi	a2,sp,400
     1ea:	026c                	addi	a1,sp,268
     1ec:	0000                	unimp
     1ee:	4304                	lw	s1,0(a4)
  heap_requested += size;
     1f0:	2509                	jal	7f2 <__DTOR_END__+0x2fe>
     1f2:	0000                	unimp
     1f4:	1400                	addi	s0,sp,544
     1f6:	0004b00b          	0x4b00b
     1fa:	0400                	addi	s0,sp,512
  void *new_ptr = heap_ptr;
     1fc:	0944                	addi	s1,sp,148
     1fe:	0025                	c.nop	9
     200:	0000                	unimp
     202:	0b18                	addi	a4,sp,400
     204:	0324                	addi	s1,sp,392
     206:	0000                	unimp
  heap_requested += size;
     208:	4504                	lw	s1,8(a0)
     20a:	2509                	jal	80c <__DTOR_END__+0x318>
     20c:	0000                	unimp
     20e:	1c00                	addi	s0,sp,560
     210:	0004eb0b          	0x4eb0b
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
     214:	0400                	addi	s0,sp,512
     216:	0946                	slli	s2,s2,0x11
     218:	0025                	c.nop	9
     21a:	0000                	unimp
     21c:	0020                	addi	s0,sp,8
     21e:	cc10                	sw	a2,24(s0)
     220:	0000                	unimp
     222:	0800                	addi	s0,sp,16
     224:	0401                	addi	s0,s0,0
     226:	0263084f          	fnmadd.d	fa6,ft6,ft6,ft0,rne
     22a:	0000                	unimp
      heap_ptr = (void *) ((char *) heap_ptr + size);
     22c:	0001530b          	0x1530b
     230:	0400                	addi	s0,sp,512
     232:	0a50                	addi	a2,sp,276
}
     234:	00000263          	beqz	zero,238 <malloc_beebs+0x48>
     238:	0b00                	addi	s0,sp,400
     23a:	0000                	unimp
    return NULL;
     23c:	0000                	unimp
     23e:	5104                	lw	s1,32(a0)
     240:	6309                	lui	t1,0x2
     242:	0002                	c.slli64	zero
  void *new_ptr = malloc_beebs (nmemb * size);
     244:	8000                	0x8000
     246:	0411                	addi	s0,s0,4
{
     248:	0004                	0x4
     24a:	0400                	addi	s0,sp,512
     24c:	01070a53          	fadd.s	fs4,fa4,fa6,rne
     250:	0000                	unimp
     252:	0100                	addi	s0,sp,128
  void *new_ptr = malloc_beebs (nmemb * size);
     254:	f111                	bnez	a0,158 <verify_benchmark+0x8>
     256:	0000                	unimp
     258:	0400                	addi	s0,sp,512
     25a:	0a56                	slli	s4,s4,0x15
     25c:	00000107          	0x107
     260:	0104                	addi	s1,sp,128
     262:	0800                	addi	s0,sp,16
  if (NULL != new_ptr)
     264:	0105                	addi	sp,sp,1
     266:	0000                	unimp
    memset (new_ptr, 0, nmemb * size);
     268:	00000273          	0x273
     26c:	2c09                	jal	47e <memset+0xb2>
     26e:	0000                	unimp
     270:	1f00                	addi	s0,sp,944
     272:	1000                	addi	s0,sp,32
}
     274:	02b2                	slli	t0,t0,0xc
     276:	0000                	unimp
     278:	0190                	addi	a2,sp,192
     27a:	6204                	flw	fs1,0(a2)
     27c:	b608                	fsd	fa0,40(a2)
     27e:	0002                	c.slli64	zero
     280:	0b00                	addi	s0,sp,400
     282:	00000363          	beqz	zero,288 <realloc_beebs>
     286:	6304                	flw	fs1,0(a4)
  heap_requested += size;
     288:	b612                	fsd	ft4,296(sp)
     28a:	0002                	c.slli64	zero
     28c:	0000                	unimp
     28e:	00037b0b          	0x37b0b
     292:	0400                	addi	s0,sp,512
  void *new_ptr = heap_ptr;
     294:	0664                	addi	s1,sp,780
     296:	0025                	c.nop	9
     298:	0000                	unimp
     29a:	0b04                	addi	s1,sp,400
     29c:	0164                	addi	s1,sp,140
     29e:	0000                	unimp
  heap_requested += size;
     2a0:	6604                	flw	fs1,8(a2)
     2a2:	bc09                	j	fffffcb4 <_stack_start+0xfffefcb4>
     2a4:	0002                	c.slli64	zero
     2a6:	0800                	addi	s0,sp,16
     2a8:	0000cc0b          	0xcc0b
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
     2ac:	0400                	addi	s0,sp,512
     2ae:	021e1e67          	0x21e1e67
     2b2:	0000                	unimp
     2b4:	0088                	addi	a0,sp,64
     2b6:	0273040f          	0x273040f
     2ba:	0000                	unimp
     2bc:	cc08                	sw	a0,24(s0)
     2be:	0002                	c.slli64	zero
     2c0:	cc00                	sw	s0,24(s0)
     2c2:	0002                	c.slli64	zero
      heap_ptr = (void *) ((char *) heap_ptr + size);
     2c4:	0900                	addi	s0,sp,144
     2c6:	002c                	addi	a1,sp,8
     2c8:	0000                	unimp
     2ca:	001f 040f 02d2      	0x2d2040f001f
	  for (i = 0; i < size; i++)
     2d0:	0000                	unimp
     2d2:	0d12                	slli	s10,s10,0x4
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
     2d4:	032e                	slli	t1,t1,0xb
     2d6:	0000                	unimp
     2d8:	0408                	addi	a0,sp,512
     2da:	087a                	slli	a6,a6,0x1e
     2dc:	000002fb          	0x2fb
	  for (i = 0; i < size; i++)
     2e0:	0000b70b          	0xb70b
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
     2e4:	0400                	addi	s0,sp,512
     2e6:	02fb117b          	0x2fb117b
	  for (i = 0; i < size; i++)
     2ea:	0000                	unimp
}
     2ec:	0b00                	addi	s0,sp,400
     2ee:	0561                	addi	a0,a0,24
     2f0:	0000                	unimp
     2f2:	7c04                	flw	fs1,56(s0)
    return NULL;
     2f4:	2506                	fld	fa0,64(sp)
     2f6:	0000                	unimp
     2f8:	0400                	addi	s0,sp,512
     2fa:	0f00                	addi	s0,sp,912
}
     2fc:	5504                	lw	s1,40(a0)
     2fe:	0000                	unimp
  __asm__ volatile ("li a0, 0" : : : "memory");
     300:	0d00                	addi	s0,sp,656
     302:	034d                	addi	t1,t1,19
}
     304:	0000                	unimp
     306:	0468                	addi	a0,sp,524
  __asm__ volatile ("li a0, 0" : : : "memory");
     308:	08ba                	slli	a7,a7,0xe
     30a:	0444                	addi	s1,sp,516
}
     30c:	0000                	unimp
     30e:	5f0e                	lw	t5,224(sp)
  __asm__ volatile ("li a0, 0" : : : "memory");
     310:	0070                	addi	a2,sp,12
     312:	bb04                	fsd	fs1,48(a4)
}
     314:	fb12                	fsw	ft4,180(sp)
     316:	0002                	c.slli64	zero
  jal x0, default_exc_handler
     318:	0000                	unimp
     31a:	5f0e                	lw	t5,224(sp)
  mv  x1, x0
     31c:	0072                	c.slli	zero,0x1c
     31e:	bc04                	fsd	fs1,56(s0)
  mv  x2, x1
     320:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
  mv  x3, x1
     324:	0400                	addi	s0,sp,512
     326:	5f0e                	lw	t5,224(sp)
  mv  x4, x1
     328:	bd040077          	0xbd040077
  mv  x5, x1
     32c:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
  mv  x6, x1
     330:	0800                	addi	s0,sp,16
     332:	0000ea0b          	0xea0b
  mv  x7, x1
     336:	0400                	addi	s0,sp,512
  mv  x8, x1
     338:	09be                	slli	s3,s3,0xf
     33a:	005c                	addi	a5,sp,4
  mv  x9, x1
     33c:	0000                	unimp
     33e:	0b0c                	addi	a1,sp,400
  mv x10, x1
     340:	0200                	addi	s0,sp,256
     342:	0000                	unimp
  mv x11, x1
     344:	bf04                	fsd	fs1,56(a4)
     346:	5c09                	li	s8,-30
  mv x12, x1
     348:	0000                	unimp
     34a:	0e00                	addi	s0,sp,784
  mv x13, x1
     34c:	5f0e                	lw	t5,224(sp)
     34e:	6662                	flw	fa2,24(sp)
  mv x14, x1
     350:	0400                	addi	s0,sp,512
     352:	11c0                	addi	s0,sp,228
  mv x15, x1
     354:	000002d3          	fadd.s	ft5,ft0,ft0,rne
  mv x16, x1
     358:	0b10                	addi	a2,sp,400
     35a:	00000057          	0x57
  mv x17, x1
     35e:	c104                	sw	s1,0(a0)
  mv x18, x1
     360:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
  mv x19, x1
     364:	1800                	addi	s0,sp,48
     366:	0000da0b          	0xda0b
  mv x20, x1
     36a:	0400                	addi	s0,sp,512
  mv x21, x1
     36c:	0ac8                	addi	a0,sp,340
     36e:	0105                	addi	sp,sp,1
  mv x22, x1
     370:	0000                	unimp
     372:	0b1c                	addi	a5,sp,400
  mv x23, x1
     374:	01d4                	addi	a3,sp,196
     376:	0000                	unimp
  mv x24, x1
     378:	ca04                	sw	s1,16(a2)
     37a:	c81d                	beqz	s0,3b0 <_start+0x10>
  mv x25, x1
     37c:	0005                	c.nop	1
     37e:	2000                	fld	fs0,0(s0)
  mv x26, x1
     380:	0002650b          	0x2650b
  mv x27, x1
     384:	0400                	addi	s0,sp,512
     386:	1dcc                	addi	a1,sp,756
  mv x28, x1
     388:	05f2                	slli	a1,a1,0x1c
     38a:	0000                	unimp
  mv x29, x1
     38c:	0b24                	addi	s1,sp,408
     38e:	03ca                	slli	t2,t2,0x12
  mv x30, x1
     390:	0000                	unimp
     392:	cf04                	sw	s1,24(a4)
  mv x31, x1
     394:	160d                	addi	a2,a2,-29
     396:	0006                	c.slli	zero,0x1
  la   x2, _stack_start
     398:	2800                	fld	fs0,16(s0)
     39a:	0005050b          	0x5050b
     39e:	0400                	addi	s0,sp,512
  la x26, _bss_start
     3a0:	09d0                	addi	a2,sp,212
     3a2:	0630                	addi	a2,sp,776
     3a4:	0000                	unimp
     3a6:	0e2c                	addi	a1,sp,792
  la x27, _bss_end
     3a8:	755f 0062 d304      	0xd3040062755f
     3ae:	d311                	beqz	a4,2b2 <realloc_beebs+0x2a>
  bge x26, x27, zero_loop_end
     3b0:	0002                	c.slli64	zero
     3b2:	3000                	fld	fs0,32(s0)
  sw x0, 0(x26)
     3b4:	5f0e                	lw	t5,224(sp)
     3b6:	7075                	c.lui	zero,0xffffd
  addi x26, x26, 4
     3b8:	0400                	addi	s0,sp,512
     3ba:	12d4                	addi	a3,sp,356
  ble x26, x27, zero_loop
     3bc:	000002fb          	0x2fb
  addi x10, x0, 0
     3c0:	0e38                	addi	a4,sp,792
     3c2:	755f 0072 d504      	0xd5040072755f
  jal x1, main
     3c8:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     3cc:	3c00                	fld	fs0,56(s0)
     3ce:	0000b10b          	0xb10b
     3d2:	0400                	addi	s0,sp,512
     3d4:	11d8                	addi	a4,sp,228
     3d6:	0636                	slli	a2,a2,0xd
     3d8:	0000                	unimp
     3da:	0b40                	addi	s0,sp,404
     3dc:	04dd                	addi	s1,s1,23
     3de:	0000                	unimp
     3e0:	d904                	sw	s1,48(a0)
     3e2:	4611                	li	a2,4
     3e4:	0006                	c.slli	zero,0x1
     3e6:	4300                	lw	s0,0(a4)
     3e8:	5f0e                	lw	t5,224(sp)
     3ea:	626c                	flw	fa1,68(a2)
     3ec:	0400                	addi	s0,sp,512
     3ee:	11dc                	addi	a5,sp,228
     3f0:	000002d3          	fadd.s	ft5,ft0,ft0,rne
     3f4:	0b44                	addi	s1,sp,404
     3f6:	0100                	addi	s0,sp,128
     3f8:	0000                	unimp
     3fa:	df04                	sw	s1,56(a4)
     3fc:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     400:	4c00                	lw	s0,24(s0)
     402:	00012c0b          	0x12c0b
     406:	0400                	addi	s0,sp,512
     408:	0ae0                	addi	s0,sp,348
     40a:	007f                	0x7f
     40c:	0000                	unimp
     40e:	0b50                	addi	a2,sp,404
     410:	001a                	c.slli	zero,0x6
     412:	0000                	unimp
     414:	e304                	fsw	fs1,0(a4)
     416:	6212                	flw	ft4,4(sp)
     418:	0004                	0x4
     41a:	5400                	lw	s0,40(s0)
     41c:	0002570b          	0x2570b
     420:	0400                	addi	s0,sp,512
     422:	011f0ce7          	jalr	s9,17(t5)
     426:	0000                	unimp
     428:	0b58                	addi	a4,sp,404
     42a:	0355                	addi	t1,t1,21
     42c:	0000                	unimp
     42e:	e904                	fsw	fs1,16(a0)
     430:	f90e                	fsw	ft3,176(sp)
     432:	0000                	unimp
     434:	5c00                	lw	s0,56(s0)
     436:	00025d0b          	0x25d0b
     43a:	0400                	addi	s0,sp,512
     43c:	09ea                	slli	s3,s3,0x1a
     43e:	0025                	c.nop	9
     440:	0000                	unimp
     442:	0064                	addi	s1,sp,12
     444:	00009713          	slli	a4,ra,0x0
     448:	6200                	flw	fs0,0(a2)
     44a:	0004                	0x4
     44c:	1400                	addi	s0,sp,544
     44e:	0462                	slli	s0,s0,0x18
     450:	0000                	unimp
     452:	0514                	addi	a3,sp,640
     454:	0001                	nop
     456:	1400                	addi	s0,sp,544
     458:	05b6                	slli	a1,a1,0xd
     45a:	0000                	unimp
     45c:	2514                	fld	fa3,8(a0)
     45e:	0000                	unimp
     460:	0000                	unimp
     462:	046d040f          	0x46d040f
     466:	0000                	unimp
     468:	6215                	lui	tp,0x5
     46a:	0004                	0x4
     46c:	1600                	addi	s0,sp,800
     46e:	000003b3          	add	t2,zero,zero
     472:	0428                	addi	a0,sp,520
     474:	6504                	flw	fs1,8(a0)
     476:	0802                	c.slli64	a6
     478:	05b6                	slli	a1,a1,0xd
     47a:	0000                	unimp
     47c:	00031317          	auipc	t1,0x31
     480:	0400                	addi	s0,sp,512
     482:	25070267          	jalr	tp,592(a4)
     486:	0000                	unimp
     488:	0000                	unimp
     48a:	0000f917          	auipc	s2,0xf
     48e:	0400                	addi	s0,sp,512
     490:	026c                	addi	a1,sp,268
     492:	0006a20b          	0x6a20b
     496:	0400                	addi	s0,sp,512
     498:	0001f017          	auipc	zero,0x1f
     49c:	0400                	addi	s0,sp,512
     49e:	026c                	addi	a1,sp,268
     4a0:	a214                	fsd	fa3,0(a2)
     4a2:	0006                	c.slli	zero,0x1
     4a4:	0800                	addi	s0,sp,16
     4a6:	0001b017          	auipc	zero,0x1b
{
     4aa:	0400                	addi	s0,sp,512
     4ac:	026c                	addi	a1,sp,268
     4ae:	a21e                	fsd	ft7,256(sp)
  initialise_board ();
     4b0:	0006                	c.slli	zero,0x1
     4b2:	0c00                	addi	s0,sp,528
  initialise_benchmark ();
     4b4:	00037617          	auipc	a2,0x37
  warm_caches (WARMUP_HEAT);
     4b8:	0400                	addi	s0,sp,512
     4ba:	026e                	slli	tp,tp,0x1b
     4bc:	2508                	fld	fa0,8(a0)
     4be:	0000                	unimp
  start_trigger ();
     4c0:	1000                	addi	s0,sp,32
     4c2:	0003e617          	auipc	a2,0x3e
  result = benchmark ();
     4c6:	0400                	addi	s0,sp,512
     4c8:	a208026f          	jal	tp,fff806e8 <_stack_start+0xfff706e8>
  stop_trigger ();
     4cc:	0008                	0x8
     4ce:	1400                	addi	s0,sp,544
  correct = verify_benchmark (result);
     4d0:	00039217          	auipc	tp,0x39
     4d4:	0400                	addi	s0,sp,512
     4d6:	0272                	slli	tp,tp,0x1c
     4d8:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
    asm("wfi");
     4dc:	3000                	fld	fs0,32(s0)
     4de:	00038017          	auipc	zero,0x38
     4e2:	0400                	addi	s0,sp,512
     4e4:	b7160273          	0xb7160273
     4e8:	0008                	0x8
     4ea:	3400                	fld	fs0,40(s0)
     4ec:	0002c417          	auipc	s0,0x2c
     4f0:	0400                	addi	s0,sp,512
     4f2:	0275                	addi	tp,tp,29
     4f4:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     4f8:	3800                	fld	fs0,48(s0)
     4fa:	00038817          	auipc	a6,0x38
     4fe:	0400                	addi	s0,sp,512
     500:	c80a0277          	0xc80a0277
     504:	0008                	0x8
     506:	3c00                	fld	fs0,56(s0)
     508:	00024217          	auipc	tp,0x24
     50c:	0400                	addi	s0,sp,512
     50e:	027a                	slli	tp,tp,0x1e
     510:	00018513          	mv	a0,gp
     514:	4000                	lw	s0,0(s0)
     516:	0001da17          	auipc	s4,0x1d
     51a:	0400                	addi	s0,sp,512
     51c:	2507027b          	0x2507027b
     520:	0000                	unimp
     522:	4400                	lw	s0,8(s0)
     524:	00051f17          	auipc	t5,0x51
     528:	0400                	addi	s0,sp,512
     52a:	027c                	addi	a5,sp,268
     52c:	00018513          	mv	a0,gp
     530:	4800                	lw	s0,16(s0)
     532:	0002d617          	auipc	a2,0x2d
     536:	0400                	addi	s0,sp,512
     538:	027d                	addi	tp,tp,31
     53a:	ce14                	sw	a3,24(a2)
     53c:	0008                	0x8
     53e:	4c00                	lw	s0,24(s0)
     540:	0001f817          	auipc	a6,0x1f
     544:	0400                	addi	s0,sp,512
     546:	0280                	addi	s0,sp,320
     548:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     54c:	5000                	lw	s0,32(s0)
     54e:	00012417          	auipc	s0,0x12
     552:	0400                	addi	s0,sp,512
     554:	0281                	addi	t0,t0,0
     556:	b609                	j	58 <__DYNAMIC+0x58>
     558:	0005                	c.nop	1
     55a:	5400                	lw	s0,40(s0)
     55c:	00030c17          	auipc	s8,0x30
     560:	0400                	addi	s0,sp,512
     562:	02a4                	addi	s1,sp,328
     564:	00087d07          	0x87d07
     568:	5800                	lw	s0,48(s0)
     56a:	b218                	fsd	fa4,32(a2)
     56c:	0002                	c.slli64	zero
     56e:	0400                	addi	s0,sp,512
     570:	02a8                	addi	a0,sp,328
     572:	0002b613          	sltiu	a2,t0,0
     576:	4800                	lw	s0,16(s0)
     578:	1801                	addi	a6,a6,-32
     57a:	0220                	addi	s0,sp,264
     57c:	0000                	unimp
     57e:	a904                	fsd	fs1,16(a0)
     580:	1202                	slli	tp,tp,0x20
     582:	00000273          	0x273
     586:	014c                	addi	a1,sp,132
     588:	d318                	sw	a4,32(a4)
     58a:	0004                	0x4
     58c:	0400                	addi	s0,sp,512
     58e:	02ad                	addi	t0,t0,11
     590:	df0c                	sw	a1,56(a4)
     592:	0008                	0x8
     594:	dc00                	sw	s0,56(s0)
     596:	1802                	slli	a6,a6,0x20
     598:	00e2                	slli	ra,ra,0x18
     59a:	0000                	unimp
     59c:	b204                	fsd	fs1,32(a2)
     59e:	1002                	c.slli	zero,0x20
     5a0:	00000663          	beqz	zero,5ac <__DTOR_END__+0xb8>
     5a4:	02e0                	addi	s0,sp,332
     5a6:	c718                	sw	a4,8(a4)
     5a8:	0000                	unimp
     5aa:	0400                	addi	s0,sp,512
     5ac:	02b4                	addi	a3,sp,328
     5ae:	eb0a                	fsw	ft2,148(sp)
     5b0:	0008                	0x8
     5b2:	ec00                	fsw	fs0,24(s0)
     5b4:	0002                	c.slli64	zero
     5b6:	05bc040f          	0x5bc040f
     5ba:	0000                	unimp
     5bc:	07080103          	lb	sp,112(a6) # 1f5b0 <_stack_start+0xf5b0>
     5c0:	15000003          	lb	zero,336(zero) # 150 <verify_benchmark>
     5c4:	05bc                	addi	a5,sp,712
     5c6:	0000                	unimp
     5c8:	0444040f          	0x444040f
     5cc:	0000                	unimp
     5ce:	00009713          	slli	a4,ra,0x0
     5d2:	ec00                	fsw	fs0,24(s0)
     5d4:	0005                	c.nop	1
     5d6:	1400                	addi	s0,sp,544
     5d8:	0462                	slli	s0,s0,0x18
     5da:	0000                	unimp
     5dc:	0514                	addi	a3,sp,640
     5de:	0001                	nop
     5e0:	1400                	addi	s0,sp,544
     5e2:	05ec                	addi	a1,sp,716
     5e4:	0000                	unimp
     5e6:	2514                	fld	fa3,8(a0)
     5e8:	0000                	unimp
     5ea:	0000                	unimp
     5ec:	05c3040f          	0x5c3040f
     5f0:	0000                	unimp
     5f2:	05ce040f          	0x5ce040f
     5f6:	0000                	unimp
     5f8:	00008b13          	mv	s6,ra
     5fc:	1600                	addi	s0,sp,800
     5fe:	0006                	c.slli	zero,0x1
     600:	1400                	addi	s0,sp,544
     602:	0462                	slli	s0,s0,0x18
     604:	0000                	unimp
     606:	0514                	addi	a3,sp,640
     608:	0001                	nop
     60a:	1400                	addi	s0,sp,544
     60c:	0000008b          	0x8b
     610:	2514                	fld	fa3,8(a0)
     612:	0000                	unimp
     614:	0000                	unimp
     616:	05f8040f          	0x5f8040f
     61a:	0000                	unimp
     61c:	00002513          	slti	a0,zero,0
     620:	3000                	fld	fs0,32(s0)
     622:	0006                	c.slli	zero,0x1
     624:	1400                	addi	s0,sp,544
     626:	0462                	slli	s0,s0,0x18
     628:	0000                	unimp
     62a:	0514                	addi	a3,sp,640
     62c:	0001                	nop
     62e:	0000                	unimp
     630:	061c040f          	0x61c040f
     634:	0000                	unimp
     636:	5508                	lw	a0,40(a0)
     638:	0000                	unimp
     63a:	4600                	lw	s0,8(a2)
     63c:	0006                	c.slli	zero,0x1
     63e:	0900                	addi	s0,sp,144
     640:	002c                	addi	a1,sp,8
     642:	0000                	unimp
     644:	0002                	c.slli64	zero
     646:	5508                	lw	a0,40(a0)
     648:	0000                	unimp
     64a:	5600                	lw	s0,40(a2)
     64c:	0006                	c.slli	zero,0x1
     64e:	0900                	addi	s0,sp,144
     650:	002c                	addi	a1,sp,8
     652:	0000                	unimp
     654:	0000                	unimp
     656:	3b04                	fld	fs1,48(a4)
     658:	04000003          	lb	zero,64(zero) # 40 <__DYNAMIC+0x40>
     65c:	0124                	addi	s1,sp,136
     65e:	011a                	slli	sp,sp,0x6
     660:	19000003          	lb	zero,400(zero) # 190 <rand_beebs+0x2c>
     664:	04ba                	slli	s1,s1,0xe
     666:	0000                	unimp
     668:	040c                	addi	a1,sp,512
     66a:	0128                	addi	a0,sp,136
     66c:	9c08                	0x9c08
     66e:	0006                	c.slli	zero,0x1
     670:	1700                	addi	s0,sp,928
     672:	00000363          	beqz	zero,678 <__DTOR_END__+0x184>
     676:	2a04                	fld	fs1,16(a2)
     678:	1101                	addi	sp,sp,-32
     67a:	069c                	addi	a5,sp,832
     67c:	0000                	unimp
     67e:	1700                	addi	s0,sp,928
     680:	0206                	slli	tp,tp,0x1
     682:	0000                	unimp
     684:	2b04                	fld	fs1,16(a4)
     686:	0701                	addi	a4,a4,0
     688:	0025                	c.nop	9
     68a:	0000                	unimp
     68c:	1704                	addi	s1,sp,928
     68e:	0335                	addi	t1,t1,13
     690:	0000                	unimp
     692:	2c04                	fld	fs1,24(s0)
     694:	0b01                	addi	s6,s6,0
     696:	06a2                	slli	a3,a3,0x8
     698:	0000                	unimp
     69a:	0008                	0x8
     69c:	0663040f          	0x663040f
     6a0:	0000                	unimp
     6a2:	0656040f          	0x656040f
     6a6:	0000                	unimp
     6a8:	0c19                	addi	s8,s8,6
     6aa:	0000                	unimp
     6ac:	0e00                	addi	s0,sp,784
     6ae:	4404                	lw	s1,8(s0)
     6b0:	0801                	addi	a6,a6,0
     6b2:	06e1                	addi	a3,a3,24
     6b4:	0000                	unimp
     6b6:	0005ab17          	auipc	s6,0x5a
     6ba:	0400                	addi	s0,sp,512
     6bc:	0145                	addi	sp,sp,17
     6be:	e112                	fsw	ft4,128(sp)
     6c0:	0006                	c.slli	zero,0x1
     6c2:	0000                	unimp
     6c4:	0003f117          	auipc	sp,0x3f
     6c8:	0400                	addi	s0,sp,512
     6ca:	0146                	slli	sp,sp,0x11
     6cc:	e112                	fsw	ft4,128(sp)
     6ce:	0006                	c.slli	zero,0x1
     6d0:	0600                	addi	s0,sp,768
     6d2:	00040d17          	auipc	s10,0x40
     6d6:	0400                	addi	s0,sp,512
     6d8:	63120147          	fmsub.d	ft2,ft4,fa7,fa2,rne
     6dc:	0000                	unimp
     6de:	0c00                	addi	s0,sp,528
     6e0:	0800                	addi	s0,sp,16
     6e2:	00000063          	beqz	zero,6e2 <__DTOR_END__+0x1ee>
     6e6:	06f1                	addi	a3,a3,28
     6e8:	0000                	unimp
     6ea:	2c09                	jal	8fc <heap_ptr>
     6ec:	0000                	unimp
     6ee:	0200                	addi	s0,sp,256
     6f0:	1a00                	addi	s0,sp,304
     6f2:	04d0                	addi	a2,sp,580
     6f4:	0285                	addi	t0,t0,1
     6f6:	00080607          	0x80607
     6fa:	1700                	addi	s0,sp,928
     6fc:	048d                	addi	s1,s1,3
     6fe:	0000                	unimp
     700:	8704                	0x8704
     702:	1802                	slli	a6,a6,0x20
     704:	002c                	addi	a1,sp,8
     706:	0000                	unimp
     708:	1700                	addi	s0,sp,928
     70a:	000003f7          	0x3f7
     70e:	8804                	0x8804
     710:	1202                	slli	tp,tp,0x20
     712:	05b6                	slli	a1,a1,0xd
     714:	0000                	unimp
     716:	1704                	addi	s1,sp,928
     718:	0235                	addi	tp,tp,13
     71a:	0000                	unimp
     71c:	8904                	0x8904
     71e:	1002                	c.slli	zero,0x20
     720:	0806                	slli	a6,a6,0x1
     722:	0000                	unimp
     724:	1708                	addi	a0,sp,928
     726:	04f6                	slli	s1,s1,0x1d
     728:	0000                	unimp
     72a:	8a04                	0x8a04
     72c:	1702                	slli	a4,a4,0x20
     72e:	0000019b          	0x19b
     732:	1724                	addi	s1,sp,936
     734:	01c0                	addi	s0,sp,196
     736:	0000                	unimp
     738:	8b04                	0x8b04
     73a:	0f02                	c.slli64	t5
     73c:	0025                	c.nop	9
     73e:	0000                	unimp
     740:	1748                	addi	a0,sp,932
     742:	035e                	slli	t1,t1,0x17
     744:	0000                	unimp
     746:	8c04                	0x8c04
     748:	2c02                	fld	fs8,0(sp)
     74a:	0078                	addi	a4,sp,12
     74c:	0000                	unimp
     74e:	1750                	addi	a2,sp,932
     750:	050c                	addi	a1,sp,640
     752:	0000                	unimp
     754:	8d04                	0x8d04
     756:	1a02                	slli	s4,s4,0x20
     758:	06a8                	addi	a0,sp,840
     75a:	0000                	unimp
     75c:	1758                	addi	a4,sp,932
     75e:	0369                	addi	t1,t1,26
     760:	0000                	unimp
     762:	8e04                	0x8e04
     764:	1602                	slli	a2,a2,0x20
     766:	00f9                	addi	ra,ra,30
     768:	0000                	unimp
     76a:	1768                	addi	a0,sp,940
     76c:	0511                	addi	a0,a0,4
     76e:	0000                	unimp
     770:	8f04                	0x8f04
     772:	1602                	slli	a2,a2,0x20
     774:	00f9                	addi	ra,ra,30
     776:	0000                	unimp
     778:	1770                	addi	a2,sp,940
     77a:	0080                	addi	s0,sp,64
     77c:	0000                	unimp
     77e:	9004                	0x9004
     780:	1602                	slli	a2,a2,0x20
     782:	00f9                	addi	ra,ra,30
     784:	0000                	unimp
     786:	1778                	addi	a4,sp,940
     788:	04c9                	addi	s1,s1,18
     78a:	0000                	unimp
     78c:	9104                	0x9104
     78e:	1002                	c.slli	zero,0x20
     790:	0816                	slli	a6,a6,0x5
     792:	0000                	unimp
     794:	1780                	addi	s0,sp,992
     796:	0229                	addi	tp,tp,10
     798:	0000                	unimp
     79a:	9204                	0x9204
     79c:	1002                	c.slli	zero,0x20
     79e:	0826                	slli	a6,a6,0x9
     7a0:	0000                	unimp
     7a2:	1788                	addi	a0,sp,992
     7a4:	041a                	slli	s0,s0,0x6
     7a6:	0000                	unimp
     7a8:	9304                	0x9304
     7aa:	0f02                	c.slli64	t5
     7ac:	0025                	c.nop	9
     7ae:	0000                	unimp
     7b0:	17a0                	addi	s0,sp,1000
     7b2:	0145                	addi	sp,sp,17
     7b4:	0000                	unimp
     7b6:	9404                	0x9404
     7b8:	1602                	slli	a2,a2,0x20
     7ba:	00f9                	addi	ra,ra,30
     7bc:	0000                	unimp
     7be:	17a4                	addi	s1,sp,1000
     7c0:	0000006b          	0x6b
     7c4:	9504                	0x9504
     7c6:	1602                	slli	a2,a2,0x20
     7c8:	00f9                	addi	ra,ra,30
     7ca:	0000                	unimp
     7cc:	17ac                	addi	a1,sp,1000
     7ce:	0134                	addi	a3,sp,136
     7d0:	0000                	unimp
     7d2:	9604                	0x9604
     7d4:	1602                	slli	a2,a2,0x20
     7d6:	00f9                	addi	ra,ra,30
     7d8:	0000                	unimp
     7da:	17b4                	addi	a3,sp,1000
     7dc:	0020                	addi	s0,sp,8
     7de:	0000                	unimp
     7e0:	9704                	0x9704
     7e2:	1602                	slli	a2,a2,0x20
     7e4:	00f9                	addi	ra,ra,30
     7e6:	0000                	unimp
     7e8:	17bc                	addi	a5,sp,1000
     7ea:	0000002f          	0x2f
     7ee:	9804                	0x9804
     7f0:	1602                	slli	a2,a2,0x20
     7f2:	00f9                	addi	ra,ra,30
     7f4:	0000                	unimp
     7f6:	17c4                	addi	s1,sp,996
     7f8:	0311                	addi	t1,t1,4
     7fa:	0000                	unimp
     7fc:	9904                	0x9904
     7fe:	0802                	c.slli64	a6
     800:	0025                	c.nop	9
     802:	0000                	unimp
     804:	00cc                	addi	a1,sp,68
     806:	bc08                	fsd	fa0,56(s0)
     808:	0005                	c.nop	1
     80a:	1600                	addi	s0,sp,800
     80c:	0008                	0x8
     80e:	0900                	addi	s0,sp,144
     810:	002c                	addi	a1,sp,8
     812:	0000                	unimp
     814:	0019                	c.nop	6
     816:	bc08                	fsd	fa0,56(s0)
     818:	0005                	c.nop	1
     81a:	2600                	fld	fs0,8(a2)
     81c:	0008                	0x8
     81e:	0900                	addi	s0,sp,144
     820:	002c                	addi	a1,sp,8
     822:	0000                	unimp
     824:	bc080007          	0xbc080007
     828:	0005                	c.nop	1
     82a:	3600                	fld	fs0,40(a2)
     82c:	0008                	0x8
     82e:	0900                	addi	s0,sp,144
     830:	002c                	addi	a1,sp,8
     832:	0000                	unimp
     834:	f01a0017          	auipc	zero,0xf01a0
     838:	9e04                	0x9e04
     83a:	0702                	c.slli64	a4
     83c:	085d                	addi	a6,a6,23
     83e:	0000                	unimp
     840:	00029717          	auipc	a4,0x29
     844:	0400                	addi	s0,sp,512
     846:	02a1                	addi	t0,t0,8
     848:	00085d1b          	0x85d1b
     84c:	0000                	unimp
     84e:	00027617          	auipc	a2,0x27
     852:	0400                	addi	s0,sp,512
     854:	02a2                	slli	t0,t0,0x8
     856:	6d18                	flw	fa4,24(a0)
     858:	0008                	0x8
     85a:	7800                	flw	fs0,48(s0)
     85c:	0800                	addi	s0,sp,16
     85e:	000002fb          	0x2fb
     862:	086d                	addi	a6,a6,27
     864:	0000                	unimp
     866:	2c09                	jal	a78 <_bss_end+0x174>
     868:	0000                	unimp
     86a:	1d00                	addi	s0,sp,688
     86c:	0800                	addi	s0,sp,16
     86e:	002c                	addi	a1,sp,8
     870:	0000                	unimp
     872:	087d                	addi	a6,a6,31
     874:	0000                	unimp
     876:	2c09                	jal	a88 <_bss_end+0x184>
     878:	0000                	unimp
     87a:	1d00                	addi	s0,sp,688
     87c:	1b00                	addi	s0,sp,432
     87e:	04f0                	addi	a2,sp,588
     880:	a2030283          	lb	t0,-1504(t1) # 30e9c <_stack_start+0x20e9c>
     884:	0008                	0x8
     886:	1c00                	addi	s0,sp,560
     888:	000003b3          	add	t2,zero,zero
     88c:	9a04                	0x9a04
     88e:	0b02                	c.slli64	s6
     890:	06f1                	addi	a3,a3,28
     892:	0000                	unimp
     894:	e31c                	fsw	fa5,0(a4)
     896:	0004                	0x4
     898:	0400                	addi	s0,sp,512
     89a:	360b02a3          	sb	zero,869(s6) # 5aa1b <_stack_start+0x4aa1b>
     89e:	0008                	0x8
     8a0:	0000                	unimp
     8a2:	bc08                	fsd	fa0,56(s0)
     8a4:	0005                	c.nop	1
     8a6:	b200                	fsd	fs0,32(a2)
     8a8:	0008                	0x8
     8aa:	0900                	addi	s0,sp,144
     8ac:	002c                	addi	a1,sp,8
     8ae:	0000                	unimp
     8b0:	0018                	0x18
     8b2:	601d                	c.lui	zero,0x7
     8b4:	0000                	unimp
     8b6:	0f00                	addi	s0,sp,912
     8b8:	b204                	fsd	fs1,32(a2)
     8ba:	0008                	0x8
     8bc:	1e00                	addi	s0,sp,816
     8be:	08c8                	addi	a0,sp,84
     8c0:	0000                	unimp
     8c2:	6214                	flw	fa3,0(a2)
     8c4:	0004                	0x4
     8c6:	0000                	unimp
     8c8:	08bd040f          	0x8bd040f
     8cc:	0000                	unimp
     8ce:	0185040f          	0x185040f
     8d2:	0000                	unimp
     8d4:	df1e                	sw	t2,188(sp)
     8d6:	0008                	0x8
     8d8:	1400                	addi	s0,sp,544
     8da:	0025                	c.nop	9
     8dc:	0000                	unimp
     8de:	0f00                	addi	s0,sp,912
     8e0:	e504                	fsw	fs1,8(a0)
     8e2:	0008                	0x8
     8e4:	0f00                	addi	s0,sp,912
     8e6:	d404                	sw	s1,40(s0)
     8e8:	0008                	0x8
     8ea:	0800                	addi	s0,sp,16
     8ec:	0656                	slli	a2,a2,0x15
     8ee:	0000                	unimp
     8f0:	000008fb          	0x8fb
     8f4:	2c09                	jal	b06 <_bss_end+0x202>
     8f6:	0000                	unimp
     8f8:	0200                	addi	s0,sp,256
     8fa:	1f00                	addi	s0,sp,944
     8fc:	0481                	addi	s1,s1,0
     8fe:	0000                	unimp
     900:	3304                	fld	fs1,32(a4)
     902:	04621703          	lh	a4,70(tp) # 2454e <_stack_start+0x1454e>
     906:	0000                	unimp
     908:	7a1f 0004 0400      	0x40000047a1f
     90e:	0334                	addi	a3,sp,392
     910:	681d                	lui	a6,0x7
     912:	0004                	0x4
     914:	2000                	fld	fs0,0(s0)
     916:	02ba                	slli	t0,t0,0xe
     918:	0000                	unimp
     91a:	6706                	flw	fa4,64(sp)
     91c:	b60e                	fsd	ft3,296(sp)
     91e:	0005                	c.nop	1
     920:	0500                	addi	s0,sp,640
     922:	000001cf          	fnmadd.s	ft3,ft0,ft0,ft0,rne
     926:	2d01                	jal	f36 <_bss_end+0x632>
     928:	00005517          	auipc	a0,0x5
     92c:	0500                	addi	s0,sp,640
     92e:	007a                	c.slli	zero,0x1e
     930:	0000                	unimp
     932:	2e01                	jal	c42 <_bss_end+0x33e>
     934:	00007117          	auipc	sp,0x7
     938:	0500                	addi	s0,sp,640
     93a:	0109                	addi	sp,sp,2
     93c:	0000                	unimp
     93e:	3501                	jal	73e <__DTOR_END__+0x24a>
     940:	00092d0f          	0x92d0f
     944:	1500                	addi	s0,sp,672
     946:	0939                	addi	s2,s2,14
     948:	0000                	unimp
     94a:	4508                	lw	a0,8(a0)
     94c:	0009                	c.nop	2
     94e:	5a00                	lw	s0,48(a2)
     950:	0009                	c.nop	2
     952:	0900                	addi	s0,sp,144
     954:	002c                	addi	a1,sp,8
     956:	0000                	unimp
     958:	00ff                	0xff
     95a:	4a15                	li	s4,5
     95c:	0009                	c.nop	2
     95e:	2100                	fld	fs0,0(a0)
     960:	029e                	slli	t0,t0,0x7
     962:	0000                	unimp
     964:	6801                	0x6801
     966:	5a1a                	lw	s4,164(sp)
     968:	0009                	c.nop	2
     96a:	0500                	addi	s0,sp,640
     96c:	0004f403          	0x4f403
     970:	2200                	fld	fs0,0(a2)
     972:	049a                	slli	s1,s1,0x6
     974:	0000                	unimp
     976:	d001                	beqz	s0,876 <__DTOR_END__+0x382>
     978:	2501                	jal	f78 <_bss_end+0x674>
     97a:	0000                	unimp
     97c:	5000                	lw	s0,32(s0)
     97e:	0001                	nop
     980:	1400                	addi	s0,sp,544
     982:	0000                	unimp
     984:	0100                	addi	s0,sp,128
     986:	9a9c                	0x9a9c
     988:	0009                	c.nop	2
     98a:	2300                	fld	fs0,0(a4)
     98c:	0072                	c.slli	zero,0x1c
     98e:	d001                	beqz	s0,88e <__DTOR_END__+0x39a>
     990:	00002517          	auipc	a0,0x2
     994:	0000                	unimp
     996:	0000                	unimp
     998:	0000                	unimp
     99a:	1524                	addi	s1,sp,680
     99c:	0001                	nop
     99e:	0100                	addi	s0,sp,128
     9a0:	01c0                	addi	s0,sp,196
     9a2:	0025                	c.nop	9
     9a4:	0000                	unimp
     9a6:	00f0                	addi	a2,sp,76
     9a8:	0000                	unimp
     9aa:	0050                	addi	a2,sp,4
     9ac:	0000                	unimp
     9ae:	9c01                	0x9c01
     9b0:	09fd                	addi	s3,s3,31
     9b2:	0000                	unimp
     9b4:	74707223          	0x74707223
     9b8:	0100                	addi	s0,sp,128
     9ba:	15c0                	addi	s0,sp,740
     9bc:	0025                	c.nop	9
     9be:	0000                	unimp
     9c0:	0030                	addi	a2,sp,8
     9c2:	0000                	unimp
     9c4:	6925                	lui	s2,0x9
     9c6:	0100                	addi	s0,sp,128
     9c8:	07c2                	slli	a5,a5,0x10
     9ca:	0025                	c.nop	9
     9cc:	0000                	unimp
     9ce:	00000067          	jr	zero # 0 <__DYNAMIC>
     9d2:	7225                	lui	tp,0xfffe9
     9d4:	0100                	addi	s0,sp,128
     9d6:	092d09c3          	fmadd.s	fs3,fs10,fs2,ft1,rne
     9da:	0000                	unimp
     9dc:	0091                	addi	ra,ra,4
     9de:	0000                	unimp
     9e0:	3026                	fld	ft0,104(sp)
     9e2:	0001                	nop
     9e4:	bf00                	fsd	fs0,56(a4)
     9e6:	000a                	c.slli	zero,0x2
     9e8:	f300                	fsw	fs0,32(a4)
     9ea:	0009                	c.nop	2
     9ec:	2700                	fld	fs0,8(a4)
     9ee:	5a01                	li	s4,-32
     9f0:	3001                	jal	1f0 <malloc_beebs>
     9f2:	2800                	fld	fs0,16(s0)
     9f4:	0134                	addi	a3,sp,136
     9f6:	0000                	unimp
     9f8:	0a7d                	addi	s4,s4,31
     9fa:	0000                	unimp
     9fc:	2200                	fld	fs0,0(a2)
     9fe:	0538                	addi	a4,sp,648
     a00:	0000                	unimp
     a02:	b901                	j	612 <__DTOR_END__+0x11e>
     a04:	2501                	jal	1004 <_bss_end+0x700>
     a06:	0000                	unimp
     a08:	4800                	lw	s0,16(s0)
     a0a:	0001                	nop
     a0c:	0800                	addi	s0,sp,16
     a0e:	0000                	unimp
     a10:	0100                	addi	s0,sp,128
     a12:	279c                	fld	fa5,8(a5)
     a14:	000a                	c.slli	zero,0x2
     a16:	2900                	fld	fs0,16(a0)
     a18:	0150                	addi	a2,sp,132
     a1a:	0000                	unimp
     a1c:	099a                	slli	s3,s3,0x6
     a1e:	0000                	unimp
     a20:	015a0127          	0x15a0127
     a24:	0031                	c.nop	12
     a26:	2a00                	fld	fs0,16(a2)
     a28:	02f2                	slli	t0,t0,0x1c
     a2a:	0000                	unimp
     a2c:	b001                	j	22c <malloc_beebs+0x3c>
     a2e:	4401                	li	s0,0
     a30:	0001                	nop
     a32:	0400                	addi	s0,sp,512
     a34:	0000                	unimp
     a36:	0100                	addi	s0,sp,128
     a38:	6b9c                	flw	fa5,16(a5)
     a3a:	000a                	c.slli	zero,0x2
     a3c:	2b00                	fld	fs0,16(a4)
     a3e:	03d8                	addi	a4,sp,452
     a40:	0000                	unimp
     a42:	b001                	j	242 <malloc_beebs+0x52>
     a44:	00002513          	slti	a0,zero,0
     a48:	af00                	fsd	fs0,24(a4)
     a4a:	0000                	unimp
     a4c:	2c00                	fld	fs0,24(s0)
     a4e:	6572                	flw	fa0,28(sp)
     a50:	b2010073          	0xb2010073
     a54:	2508                	fld	fa0,8(a0)
     a56:	0000                	unimp
     a58:	2900                	fld	fs0,16(a0)
     a5a:	0148                	addi	a0,sp,132
     a5c:	0000                	unimp
     a5e:	099a                	slli	s3,s3,0x6
     a60:	0000                	unimp
     a62:	035a0127          	0x35a0127
     a66:	005a01f3          	0x5a01f3
     a6a:	2d00                	fld	fs0,24(a0)
     a6c:	052d                	addi	a0,a0,11
     a6e:	0000                	unimp
     a70:	a801                	j	a80 <_bss_end+0x17c>
     a72:	4001                	c.li	zero,0
     a74:	0001                	nop
     a76:	0400                	addi	s0,sp,512
     a78:	0000                	unimp
     a7a:	0100                	addi	s0,sp,128
     a7c:	2e9c                	fld	fa5,24(a3)
     a7e:	00a5                	addi	ra,ra,9
     a80:	0000                	unimp
     a82:	9801                	andi	s0,s0,-32
     a84:	2d01                	jal	1094 <_bss_end+0x790>
     a86:	0009                	c.nop	2
     a88:	8c00                	0x8c00
     a8a:	0000                	unimp
     a8c:	6400                	flw	fs0,8(s0)
     a8e:	0000                	unimp
     a90:	0100                	addi	s0,sp,128
     a92:	bf9c                	fsd	fa5,56(a5)
     a94:	000a                	c.slli	zero,0x2
     a96:	2500                	fld	fs0,8(a0)
     a98:	0069                	c.nop	26
     a9a:	9a01                	andi	a2,a2,-32
     a9c:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     aa0:	d000                	sw	s0,32(s0)
     aa2:	0000                	unimp
     aa4:	2f00                	fld	fs0,24(a4)
     aa6:	0000015b          	0x15b
     aaa:	9b01                	andi	a4,a4,-32
     aac:	2d12                	fld	fs10,256(sp)
     aae:	0009                	c.nop	2
     ab0:	0600                	addi	s0,sp,768
     ab2:	0001                	nop
     ab4:	2800                	fld	fs0,16(s0)
     ab6:	00b0                	addi	a2,sp,72
     ab8:	0000                	unimp
     aba:	00000acb          	fnmsub.s	fs5,ft0,ft0,ft0,rne
     abe:	3000                	fld	fs0,32(s0)
     ac0:	027f                	0x27f
     ac2:	0000                	unimp
     ac4:	027f                	0x27f
     ac6:	0000                	unimp
     ac8:	30062607          	flw	fa2,768(a2) # 27b4e <_stack_start+0x17b4e>
     acc:	0280                	addi	s0,sp,320
     ace:	0000                	unimp
     ad0:	0280                	addi	s0,sp,320
     ad2:	0000                	unimp
     ad4:	00052507          	flw	fa0,0(a0) # 2990 <_min_stack+0x990>
     ad8:	0b49                	addi	s6,s6,18
     ada:	0000                	unimp
     adc:	0004                	0x4
     ade:	02ea                	slli	t0,t0,0x1a
     ae0:	0000                	unimp
     ae2:	0104                	addi	s1,sp,128
     ae4:	00000427          	0x427
     ae8:	ed0c                	fsw	fa1,24(a0)
     aea:	0005                	c.nop	1
     aec:	6900                	flw	fs0,16(a0)
     aee:	0001                	nop
     af0:	6400                	flw	fs0,8(s0)
     af2:	0001                	nop
     af4:	9c00                	0x9c00
     af6:	0001                	nop
     af8:	6600                	flw	fs0,8(a2)
     afa:	02000003          	lb	zero,32(zero) # 20 <__DYNAMIC+0x20>
     afe:	0504                	addi	s1,sp,640
     b00:	6e69                	lui	t3,0x1a
     b02:	0074                	addi	a3,sp,12
     b04:	0004c203          	lbu	tp,0(s1) # fffec000 <_stack_start+0xfffdc000>
     b08:	0200                	addi	s0,sp,256
     b0a:	17d8                	addi	a4,sp,996
     b0c:	0038                	addi	a4,sp,8
     b0e:	0000                	unimp
     b10:	0404                	addi	s1,sp,512
     b12:	00004a07          	flq	fs4,0(zero) # 0 <__DYNAMIC>
     b16:	0400                	addi	s0,sp,512
     b18:	0508                	addi	a0,sp,640
     b1a:	00000097          	auipc	ra,0x0
     b1e:	1004                	addi	s1,sp,32
     b20:	8b04                	0x8b04
     b22:	0002                	c.slli64	zero
     b24:	0500                	addi	s0,sp,640
     b26:	0250                	addi	a2,sp,260
     b28:	0000                	unimp
     b2a:	6502                	flw	fa0,0(sp)
     b2c:	1701                	addi	a4,a4,-32
     b2e:	0038                	addi	a4,sp,8
     b30:	0000                	unimp
     b32:	0104                	addi	s1,sp,128
     b34:	0006                	c.slli	zero,0x1
     b36:	04000003          	lb	zero,64(zero) # 40 <__DYNAMIC+0x40>
     b3a:	0801                	addi	a6,a6,0
     b3c:	02fe                	slli	t0,t0,0x1f
     b3e:	0000                	unimp
     b40:	0204                	addi	s1,sp,256
     b42:	1a05                	addi	s4,s4,-31
     b44:	04000003          	lb	zero,64(zero) # 40 <__DYNAMIC+0x40>
     b48:	0702                	c.slli64	a4
     b4a:	020d                	addi	tp,tp,3
     b4c:	0000                	unimp
     b4e:	0404                	addi	s1,sp,512
     b50:	9c05                	0x9c05
     b52:	0000                	unimp
     b54:	0400                	addi	s0,sp,512
     b56:	0704                	addi	s1,sp,896
     b58:	0045                	c.nop	17
     b5a:	0000                	unimp
     b5c:	0804                	addi	s1,sp,16
     b5e:	00004007          	flq	ft0,0(zero) # 0 <__DYNAMIC>
     b62:	0300                	addi	s0,sp,384
     b64:	000002cf          	fnmadd.s	ft5,ft0,ft0,ft0,rne
     b68:	760e2e03          	lw	t3,1888(t3) # 1a760 <_stack_start+0xa760>
     b6c:	0000                	unimp
     b6e:	0300                	addi	s0,sp,384
     b70:	03d0                	addi	a2,sp,452
     b72:	0000                	unimp
     b74:	760e7403          	0x760e7403
     b78:	0000                	unimp
     b7a:	0300                	addi	s0,sp,384
     b7c:	04c0                	addi	s0,sp,580
     b7e:	0000                	unimp
     b80:	25179303          	lh	t1,593(a5)
     b84:	0000                	unimp
     b86:	0600                	addi	s0,sp,768
     b88:	0304                	addi	s1,sp,384
     b8a:	03a5                	addi	t2,t2,9
     b8c:	00d1                	addi	ra,ra,20
     b8e:	0000                	unimp
     b90:	00024a07          	flq	fs4,0(tp) # fffe9000 <_stack_start+0xfffd9000>
     b94:	0300                	addi	s0,sp,384
     b96:	004d0ca7          	0x4d0ca7
     b9a:	0000                	unimp
     b9c:	0001e907          	0x1e907
     ba0:	0300                	addi	s0,sp,384
     ba2:	13a8                	addi	a0,sp,488
     ba4:	00d1                	addi	ra,ra,20
     ba6:	0000                	unimp
     ba8:	0800                	addi	s0,sp,16
     baa:	0061                	c.nop	24
     bac:	0000                	unimp
     bae:	00e1                	addi	ra,ra,24
     bb0:	0000                	unimp
     bb2:	3809                	jal	3c4 <main_entry+0x4>
     bb4:	0000                	unimp
     bb6:	0300                	addi	s0,sp,384
     bb8:	0a00                	addi	s0,sp,272
     bba:	0308                	addi	a0,sp,384
     bbc:	09a2                	slli	s3,s3,0x8
     bbe:	0105                	addi	sp,sp,1
     bc0:	0000                	unimp
     bc2:	0003ba0b          	0x3ba0b
     bc6:	0300                	addi	s0,sp,384
     bc8:	07a4                	addi	s1,sp,968
     bca:	0025                	c.nop	9
     bcc:	0000                	unimp
     bce:	0b00                	addi	s0,sp,400
     bd0:	03c2                	slli	t2,t2,0x10
     bd2:	0000                	unimp
     bd4:	af05a903          	lw	s2,-1296(a1)
     bd8:	0000                	unimp
     bda:	0400                	addi	s0,sp,512
     bdc:	0300                	addi	s0,sp,384
     bde:	0342                	slli	t1,t1,0x10
     be0:	0000                	unimp
     be2:	e103aa03          	lw	s4,-496(t2)
     be6:	0000                	unimp
     be8:	0c00                	addi	s0,sp,528
     bea:	0304                	addi	s1,sp,384
     bec:	0412                	slli	s0,s0,0x4
     bee:	0000                	unimp
     bf0:	1604                	addi	s1,sp,800
     bf2:	7d19                	lui	s10,0xfffe6
     bf4:	0000                	unimp
     bf6:	0300                	addi	s0,sp,384
     bf8:	02e0                	addi	s0,sp,332
     bfa:	0000                	unimp
     bfc:	0c05                	addi	s8,s8,1
     bfe:	250d                	jal	1220 <_bss_end+0x91c>
     c00:	0000                	unimp
     c02:	0300                	addi	s0,sp,384
     c04:	000001a7          	0x1a7
     c08:	2304                	fld	fs1,0(a4)
     c0a:	00011f1b          	0x11f1b
     c0e:	0d00                	addi	s0,sp,656
     c10:	01b8                	addi	a4,sp,200
     c12:	0000                	unimp
     c14:	0418                	addi	a4,sp,512
     c16:	0834                	addi	a3,sp,24
     c18:	0191                	addi	gp,gp,4
     c1a:	0000                	unimp
     c1c:	0003630b          	0x3630b
     c20:	0400                	addi	s0,sp,512
     c22:	1336                	slli	t1,t1,0x2d
     c24:	0191                	addi	gp,gp,4
     c26:	0000                	unimp
     c28:	0e00                	addi	s0,sp,784
     c2a:	6b5f 0400 0737      	0x73704006b5f
     c30:	0025                	c.nop	9
     c32:	0000                	unimp
     c34:	0b04                	addi	s1,sp,400
     c36:	000003ab          	0x3ab
     c3a:	3704                	fld	fs1,40(a4)
     c3c:	0000250b          	0x250b
     c40:	0800                	addi	s0,sp,16
     c42:	0000140b          	0x140b
     c46:	0400                	addi	s0,sp,512
     c48:	00251437          	lui	s0,0x251
     c4c:	0000                	unimp
     c4e:	0b0c                	addi	a1,sp,400
     c50:	000004ab          	0x4ab
     c54:	3704                	fld	fs1,40(a4)
     c56:	0000251b          	0x251b
     c5a:	1000                	addi	s0,sp,32
     c5c:	5f0e                	lw	t5,224(sp)
     c5e:	0078                	addi	a4,sp,12
     c60:	3804                	fld	fs1,48(s0)
     c62:	0001970b          	0x1970b
     c66:	1400                	addi	s0,sp,544
     c68:	0f00                	addi	s0,sp,912
     c6a:	3704                	fld	fs1,40(a4)
     c6c:	0001                	nop
     c6e:	0800                	addi	s0,sp,16
     c70:	00000113          	li	sp,0
     c74:	000001a7          	0x1a7
     c78:	3809                	jal	48a <memset+0xbe>
     c7a:	0000                	unimp
     c7c:	0000                	unimp
     c7e:	0d00                	addi	s0,sp,656
     c80:	01e4                	addi	s1,sp,204
     c82:	0000                	unimp
     c84:	0424                	addi	s1,sp,520
     c86:	083c                	addi	a5,sp,24
     c88:	022a                	slli	tp,tp,0xa
     c8a:	0000                	unimp
     c8c:	00008e0b          	0x8e0b
     c90:	0400                	addi	s0,sp,512
     c92:	093e                	slli	s2,s2,0xf
     c94:	0025                	c.nop	9
     c96:	0000                	unimp
     c98:	0b00                	addi	s0,sp,400
     c9a:	03dd                	addi	t2,t2,23
     c9c:	0000                	unimp
     c9e:	3f04                	fld	fs1,56(a4)
     ca0:	2509                	jal	12a2 <_bss_end+0x99e>
     ca2:	0000                	unimp
     ca4:	0400                	addi	s0,sp,512
     ca6:	0000bd0b          	0xbd0b
     caa:	0400                	addi	s0,sp,512
     cac:	0940                	addi	s0,sp,148
     cae:	0025                	c.nop	9
     cb0:	0000                	unimp
     cb2:	0b08                	addi	a0,sp,400
     cb4:	0542                	slli	a0,a0,0x10
     cb6:	0000                	unimp
     cb8:	4104                	lw	s1,0(a0)
     cba:	2509                	jal	12bc <_bss_end+0x9b8>
     cbc:	0000                	unimp
     cbe:	0c00                	addi	s0,sp,528
     cc0:	0002a90b          	0x2a90b
     cc4:	0400                	addi	s0,sp,512
     cc6:	0942                	slli	s2,s2,0x10
     cc8:	0025                	c.nop	9
     cca:	0000                	unimp
     ccc:	0b10                	addi	a2,sp,400
     cce:	026c                	addi	a1,sp,268
     cd0:	0000                	unimp
     cd2:	4304                	lw	s1,0(a4)
     cd4:	2509                	jal	12d6 <_bss_end+0x9d2>
     cd6:	0000                	unimp
     cd8:	1400                	addi	s0,sp,544
     cda:	0004b00b          	0x4b00b
     cde:	0400                	addi	s0,sp,512
     ce0:	0944                	addi	s1,sp,148
     ce2:	0025                	c.nop	9
     ce4:	0000                	unimp
     ce6:	0b18                	addi	a4,sp,400
     ce8:	0324                	addi	s1,sp,392
     cea:	0000                	unimp
     cec:	4504                	lw	s1,8(a0)
     cee:	2509                	jal	12f0 <_bss_end+0x9ec>
     cf0:	0000                	unimp
     cf2:	1c00                	addi	s0,sp,560
     cf4:	0004eb0b          	0x4eb0b
     cf8:	0400                	addi	s0,sp,512
     cfa:	0946                	slli	s2,s2,0x11
     cfc:	0025                	c.nop	9
     cfe:	0000                	unimp
     d00:	0020                	addi	s0,sp,8
     d02:	cc10                	sw	a2,24(s0)
     d04:	0000                	unimp
     d06:	0800                	addi	s0,sp,16
     d08:	0401                	addi	s0,s0,0
     d0a:	026f084f          	fnmadd.d	fa6,ft10,ft6,ft0,rne
     d0e:	0000                	unimp
     d10:	0001530b          	0x1530b
     d14:	0400                	addi	s0,sp,512
     d16:	0a50                	addi	a2,sp,276
     d18:	0000026f          	jal	tp,d18 <_bss_end+0x414>
     d1c:	0b00                	addi	s0,sp,400
     d1e:	0000                	unimp
     d20:	0000                	unimp
     d22:	5104                	lw	s1,32(a0)
     d24:	6f09                	lui	t5,0x2
     d26:	0002                	c.slli64	zero
     d28:	8000                	0x8000
     d2a:	0411                	addi	s0,s0,4
     d2c:	0004                	0x4
     d2e:	0400                	addi	s0,sp,512
     d30:	01130a53          	fadd.s	fs4,ft6,fa7,rne
     d34:	0000                	unimp
     d36:	0100                	addi	s0,sp,128
     d38:	f111                	bnez	a0,c3c <_bss_end+0x338>
     d3a:	0000                	unimp
     d3c:	0400                	addi	s0,sp,512
     d3e:	0a56                	slli	s4,s4,0x15
     d40:	00000113          	li	sp,0
     d44:	0104                	addi	s1,sp,128
     d46:	0800                	addi	s0,sp,16
     d48:	0111                	addi	sp,sp,4
     d4a:	0000                	unimp
     d4c:	027f                	0x27f
     d4e:	0000                	unimp
     d50:	3809                	jal	562 <__DTOR_END__+0x6e>
     d52:	0000                	unimp
     d54:	1f00                	addi	s0,sp,944
     d56:	1000                	addi	s0,sp,32
     d58:	02b2                	slli	t0,t0,0xc
     d5a:	0000                	unimp
     d5c:	0190                	addi	a2,sp,192
     d5e:	6204                	flw	fs1,0(a2)
     d60:	c208                	sw	a0,0(a2)
     d62:	0002                	c.slli64	zero
     d64:	0b00                	addi	s0,sp,400
     d66:	00000363          	beqz	zero,d6c <_bss_end+0x468>
     d6a:	6304                	flw	fs1,0(a4)
     d6c:	c212                	sw	tp,4(sp)
     d6e:	0002                	c.slli64	zero
     d70:	0000                	unimp
     d72:	00037b0b          	0x37b0b
     d76:	0400                	addi	s0,sp,512
     d78:	0664                	addi	s1,sp,780
     d7a:	0025                	c.nop	9
     d7c:	0000                	unimp
     d7e:	0b04                	addi	s1,sp,400
     d80:	0164                	addi	s1,sp,140
     d82:	0000                	unimp
     d84:	6604                	flw	fs1,8(a2)
     d86:	c809                	beqz	s0,d98 <_bss_end+0x494>
     d88:	0002                	c.slli64	zero
     d8a:	0800                	addi	s0,sp,16
     d8c:	0000cc0b          	0xcc0b
     d90:	0400                	addi	s0,sp,512
     d92:	022a1e67          	0x22a1e67
     d96:	0000                	unimp
     d98:	0088                	addi	a0,sp,64
     d9a:	027f040f          	0x27f040f
     d9e:	0000                	unimp
     da0:	d808                	sw	a0,48(s0)
     da2:	0002                	c.slli64	zero
     da4:	d800                	sw	s0,48(s0)
     da6:	0002                	c.slli64	zero
     da8:	0900                	addi	s0,sp,144
     daa:	0038                	addi	a4,sp,8
     dac:	0000                	unimp
     dae:	001f 040f 02de      	0x2de040f001f
     db4:	0000                	unimp
     db6:	0d12                	slli	s10,s10,0x4
     db8:	032e                	slli	t1,t1,0xb
     dba:	0000                	unimp
     dbc:	0408                	addi	a0,sp,512
     dbe:	087a                	slli	a6,a6,0x1e
     dc0:	00000307          	0x307
     dc4:	0000b70b          	0xb70b
     dc8:	0400                	addi	s0,sp,512
     dca:	0307117b          	0x307117b
     dce:	0000                	unimp
     dd0:	0b00                	addi	s0,sp,400
     dd2:	0561                	addi	a0,a0,24
     dd4:	0000                	unimp
     dd6:	7c04                	flw	fs1,56(s0)
     dd8:	2506                	fld	fa0,64(sp)
     dda:	0000                	unimp
     ddc:	0400                	addi	s0,sp,512
     dde:	0f00                	addi	s0,sp,912
     de0:	6104                	flw	fs1,0(a0)
     de2:	0000                	unimp
     de4:	0d00                	addi	s0,sp,656
     de6:	034d                	addi	t1,t1,19
     de8:	0000                	unimp
     dea:	0468                	addi	a0,sp,524
     dec:	08ba                	slli	a7,a7,0xe
     dee:	0450                	addi	a2,sp,516
     df0:	0000                	unimp
     df2:	5f0e                	lw	t5,224(sp)
     df4:	0070                	addi	a2,sp,12
     df6:	bb04                	fsd	fs1,48(a4)
     df8:	0712                	slli	a4,a4,0x4
     dfa:	00000003          	lb	zero,0(zero) # 0 <__DYNAMIC>
     dfe:	5f0e                	lw	t5,224(sp)
     e00:	0072                	c.slli	zero,0x1c
     e02:	bc04                	fsd	fs1,56(s0)
     e04:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     e08:	0400                	addi	s0,sp,512
     e0a:	5f0e                	lw	t5,224(sp)
     e0c:	bd040077          	0xbd040077
     e10:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     e14:	0800                	addi	s0,sp,16
     e16:	0000ea0b          	0xea0b
     e1a:	0400                	addi	s0,sp,512
     e1c:	09be                	slli	s3,s3,0xf
     e1e:	0068                	addi	a0,sp,12
     e20:	0000                	unimp
     e22:	0b0c                	addi	a1,sp,400
     e24:	0200                	addi	s0,sp,256
     e26:	0000                	unimp
     e28:	bf04                	fsd	fs1,56(a4)
     e2a:	6809                	lui	a6,0x2
     e2c:	0000                	unimp
     e2e:	0e00                	addi	s0,sp,784
     e30:	5f0e                	lw	t5,224(sp)
     e32:	6662                	flw	fa2,24(sp)
     e34:	0400                	addi	s0,sp,512
     e36:	11c0                	addi	s0,sp,228
     e38:	02df 0000 0b10      	0xb10000002df
     e3e:	00000057          	0x57
     e42:	c104                	sw	s1,0(a0)
     e44:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     e48:	1800                	addi	s0,sp,48
     e4a:	0000da0b          	0xda0b
     e4e:	0400                	addi	s0,sp,512
     e50:	0ac8                	addi	a0,sp,340
     e52:	0111                	addi	sp,sp,4
     e54:	0000                	unimp
     e56:	0b1c                	addi	a5,sp,400
     e58:	01d4                	addi	a3,sp,196
     e5a:	0000                	unimp
     e5c:	ca04                	sw	s1,16(a2)
     e5e:	d41d                	beqz	s0,d8c <_bss_end+0x488>
     e60:	0005                	c.nop	1
     e62:	2000                	fld	fs0,0(s0)
     e64:	0002650b          	0x2650b
     e68:	0400                	addi	s0,sp,512
     e6a:	1dcc                	addi	a1,sp,756
     e6c:	05fe                	slli	a1,a1,0x1f
     e6e:	0000                	unimp
     e70:	0b24                	addi	s1,sp,408
     e72:	03ca                	slli	t2,t2,0x12
     e74:	0000                	unimp
     e76:	cf04                	sw	s1,24(a4)
     e78:	220d                	jal	f9a <_bss_end+0x696>
     e7a:	0006                	c.slli	zero,0x1
     e7c:	2800                	fld	fs0,16(s0)
     e7e:	0005050b          	0x5050b
     e82:	0400                	addi	s0,sp,512
     e84:	09d0                	addi	a2,sp,212
     e86:	063c                	addi	a5,sp,776
     e88:	0000                	unimp
     e8a:	0e2c                	addi	a1,sp,792
     e8c:	755f 0062 d304      	0xd3040062755f
     e92:	df11                	beqz	a4,dae <_bss_end+0x4aa>
     e94:	0002                	c.slli64	zero
     e96:	3000                	fld	fs0,32(s0)
     e98:	5f0e                	lw	t5,224(sp)
     e9a:	7075                	c.lui	zero,0xffffd
     e9c:	0400                	addi	s0,sp,512
     e9e:	12d4                	addi	a3,sp,356
     ea0:	00000307          	0x307
     ea4:	0e38                	addi	a4,sp,792
     ea6:	755f 0072 d504      	0xd5040072755f
     eac:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     eb0:	3c00                	fld	fs0,56(s0)
     eb2:	0000b10b          	0xb10b
     eb6:	0400                	addi	s0,sp,512
     eb8:	11d8                	addi	a4,sp,228
     eba:	0642                	slli	a2,a2,0x10
     ebc:	0000                	unimp
     ebe:	0b40                	addi	s0,sp,404
     ec0:	04dd                	addi	s1,s1,23
     ec2:	0000                	unimp
     ec4:	d904                	sw	s1,48(a0)
     ec6:	5211                	li	tp,-28
     ec8:	0006                	c.slli	zero,0x1
     eca:	4300                	lw	s0,0(a4)
     ecc:	5f0e                	lw	t5,224(sp)
     ece:	626c                	flw	fa1,68(a2)
     ed0:	0400                	addi	s0,sp,512
     ed2:	11dc                	addi	a5,sp,228
     ed4:	02df 0000 0b44      	0xb44000002df
     eda:	0100                	addi	s0,sp,128
     edc:	0000                	unimp
     ede:	df04                	sw	s1,56(a4)
     ee0:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     ee4:	4c00                	lw	s0,24(s0)
     ee6:	00012c0b          	0x12c0b
     eea:	0400                	addi	s0,sp,512
     eec:	0ae0                	addi	s0,sp,348
     eee:	0000008b          	0x8b
     ef2:	0b50                	addi	a2,sp,404
     ef4:	001a                	c.slli	zero,0x6
     ef6:	0000                	unimp
     ef8:	e304                	fsw	fs1,0(a4)
     efa:	6e12                	flw	ft8,4(sp)
     efc:	0004                	0x4
     efe:	5400                	lw	s0,40(s0)
     f00:	0002570b          	0x2570b
     f04:	0400                	addi	s0,sp,512
     f06:	012b0ce7          	jalr	s9,18(s6)
     f0a:	0000                	unimp
     f0c:	0b58                	addi	a4,sp,404
     f0e:	0355                	addi	t1,t1,21
     f10:	0000                	unimp
     f12:	e904                	fsw	fs1,16(a0)
     f14:	050e                	slli	a0,a0,0x3
     f16:	0001                	nop
     f18:	5c00                	lw	s0,56(s0)
     f1a:	00025d0b          	0x25d0b
     f1e:	0400                	addi	s0,sp,512
     f20:	09ea                	slli	s3,s3,0x1a
     f22:	0025                	c.nop	9
     f24:	0000                	unimp
     f26:	0064                	addi	s1,sp,12
     f28:	0000a313          	slti	t1,ra,0
     f2c:	6e00                	flw	fs0,24(a2)
     f2e:	0004                	0x4
     f30:	1400                	addi	s0,sp,544
     f32:	046e                	slli	s0,s0,0x1b
     f34:	0000                	unimp
     f36:	1114                	addi	a3,sp,160
     f38:	0001                	nop
     f3a:	1400                	addi	s0,sp,544
     f3c:	05c2                	slli	a1,a1,0x10
     f3e:	0000                	unimp
     f40:	2514                	fld	fa3,8(a0)
     f42:	0000                	unimp
     f44:	0000                	unimp
     f46:	0479040f          	0x479040f
     f4a:	0000                	unimp
     f4c:	6e15                	lui	t3,0x5
     f4e:	0004                	0x4
     f50:	1600                	addi	s0,sp,800
     f52:	000003b3          	add	t2,zero,zero
     f56:	0428                	addi	a0,sp,520
     f58:	6504                	flw	fs1,8(a0)
     f5a:	0802                	c.slli64	a6
     f5c:	05c2                	slli	a1,a1,0x10
     f5e:	0000                	unimp
     f60:	00031317          	auipc	t1,0x31
     f64:	0400                	addi	s0,sp,512
     f66:	25070267          	jalr	tp,592(a4) # 29a90 <_stack_start+0x19a90>
     f6a:	0000                	unimp
     f6c:	0000                	unimp
     f6e:	0000f917          	auipc	s2,0xf
     f72:	0400                	addi	s0,sp,512
     f74:	026c                	addi	a1,sp,268
     f76:	0006ae0b          	0x6ae0b
     f7a:	0400                	addi	s0,sp,512
     f7c:	0001f017          	auipc	zero,0x1f
     f80:	0400                	addi	s0,sp,512
     f82:	026c                	addi	a1,sp,268
     f84:	ae14                	fsd	fa3,24(a2)
     f86:	0006                	c.slli	zero,0x1
     f88:	0800                	addi	s0,sp,16
     f8a:	0001b017          	auipc	zero,0x1b
     f8e:	0400                	addi	s0,sp,512
     f90:	026c                	addi	a1,sp,268
     f92:	ae1e                	fsd	ft7,280(sp)
     f94:	0006                	c.slli	zero,0x1
     f96:	0c00                	addi	s0,sp,528
     f98:	00037617          	auipc	a2,0x37
     f9c:	0400                	addi	s0,sp,512
     f9e:	026e                	slli	tp,tp,0x1b
     fa0:	2508                	fld	fa0,8(a0)
     fa2:	0000                	unimp
     fa4:	1000                	addi	s0,sp,32
     fa6:	0003e617          	auipc	a2,0x3e
     faa:	0400                	addi	s0,sp,512
     fac:	ae08026f          	jal	tp,fff8128c <_stack_start+0xfff7128c>
     fb0:	0008                	0x8
     fb2:	1400                	addi	s0,sp,544
     fb4:	00039217          	auipc	tp,0x39
     fb8:	0400                	addi	s0,sp,512
     fba:	0272                	slli	tp,tp,0x1c
     fbc:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     fc0:	3000                	fld	fs0,32(s0)
     fc2:	00038017          	auipc	zero,0x38
     fc6:	0400                	addi	s0,sp,512
     fc8:	c3160273          	0xc3160273
     fcc:	0008                	0x8
     fce:	3400                	fld	fs0,40(s0)
     fd0:	0002c417          	auipc	s0,0x2c
     fd4:	0400                	addi	s0,sp,512
     fd6:	0275                	addi	tp,tp,29
     fd8:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     fdc:	3800                	fld	fs0,48(s0)
     fde:	00038817          	auipc	a6,0x38
     fe2:	0400                	addi	s0,sp,512
     fe4:	d40a0277          	0xd40a0277
     fe8:	0008                	0x8
     fea:	3c00                	fld	fs0,56(s0)
     fec:	00024217          	auipc	tp,0x24
     ff0:	0400                	addi	s0,sp,512
     ff2:	027a                	slli	tp,tp,0x1e
     ff4:	00019113          	slli	sp,gp,0x0
     ff8:	4000                	lw	s0,0(s0)
     ffa:	0001da17          	auipc	s4,0x1d
     ffe:	0400                	addi	s0,sp,512
    1000:	2507027b          	0x2507027b
    1004:	0000                	unimp
    1006:	4400                	lw	s0,8(s0)
    1008:	00051f17          	auipc	t5,0x51
    100c:	0400                	addi	s0,sp,512
    100e:	027c                	addi	a5,sp,268
    1010:	00019113          	slli	sp,gp,0x0
    1014:	4800                	lw	s0,16(s0)
    1016:	0002d617          	auipc	a2,0x2d
    101a:	0400                	addi	s0,sp,512
    101c:	027d                	addi	tp,tp,31
    101e:	da14                	sw	a3,48(a2)
    1020:	0008                	0x8
    1022:	4c00                	lw	s0,24(s0)
    1024:	0001f817          	auipc	a6,0x1f
    1028:	0400                	addi	s0,sp,512
    102a:	0280                	addi	s0,sp,320
    102c:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
    1030:	5000                	lw	s0,32(s0)
    1032:	00012417          	auipc	s0,0x12
    1036:	0400                	addi	s0,sp,512
    1038:	0281                	addi	t0,t0,0
    103a:	c209                	beqz	a2,103c <_bss_end+0x738>
    103c:	0005                	c.nop	1
    103e:	5400                	lw	s0,40(s0)
    1040:	00030c17          	auipc	s8,0x30
    1044:	0400                	addi	s0,sp,512
    1046:	02a4                	addi	s1,sp,328
    1048:	00088907          	0x88907
    104c:	5800                	lw	s0,48(s0)
    104e:	b218                	fsd	fa4,32(a2)
    1050:	0002                	c.slli64	zero
    1052:	0400                	addi	s0,sp,512
    1054:	02a8                	addi	a0,sp,328
    1056:	0002c213          	xori	tp,t0,0
    105a:	4800                	lw	s0,16(s0)
    105c:	1801                	addi	a6,a6,-32
    105e:	0220                	addi	s0,sp,264
    1060:	0000                	unimp
    1062:	a904                	fsd	fs1,16(a0)
    1064:	1202                	slli	tp,tp,0x20
    1066:	027f                	0x27f
    1068:	0000                	unimp
    106a:	014c                	addi	a1,sp,132
    106c:	d318                	sw	a4,32(a4)
    106e:	0004                	0x4
    1070:	0400                	addi	s0,sp,512
    1072:	02ad                	addi	t0,t0,11
    1074:	eb0c                	fsw	fa1,16(a4)
    1076:	0008                	0x8
    1078:	dc00                	sw	s0,56(s0)
    107a:	1802                	slli	a6,a6,0x20
    107c:	00e2                	slli	ra,ra,0x18
    107e:	0000                	unimp
    1080:	b204                	fsd	fs1,32(a2)
    1082:	1002                	c.slli	zero,0x20
    1084:	0000066f          	jal	a2,1084 <_bss_end+0x780>
    1088:	02e0                	addi	s0,sp,332
    108a:	c718                	sw	a4,8(a4)
    108c:	0000                	unimp
    108e:	0400                	addi	s0,sp,512
    1090:	02b4                	addi	a3,sp,328
    1092:	f70a                	fsw	ft2,172(sp)
    1094:	0008                	0x8
    1096:	ec00                	fsw	fs0,24(s0)
    1098:	0002                	c.slli64	zero
    109a:	05c8040f          	0x5c8040f
    109e:	0000                	unimp
    10a0:	0104                	addi	s1,sp,128
    10a2:	0708                	addi	a0,sp,896
    10a4:	15000003          	lb	zero,336(zero) # 150 <verify_benchmark>
    10a8:	05c8                	addi	a0,sp,708
    10aa:	0000                	unimp
    10ac:	0450040f          	0x450040f
    10b0:	0000                	unimp
    10b2:	0000a313          	slti	t1,ra,0
    10b6:	f800                	fsw	fs0,48(s0)
    10b8:	0005                	c.nop	1
    10ba:	1400                	addi	s0,sp,544
    10bc:	046e                	slli	s0,s0,0x1b
    10be:	0000                	unimp
    10c0:	1114                	addi	a3,sp,160
    10c2:	0001                	nop
    10c4:	1400                	addi	s0,sp,544
    10c6:	05f8                	addi	a4,sp,716
    10c8:	0000                	unimp
    10ca:	2514                	fld	fa3,8(a0)
    10cc:	0000                	unimp
    10ce:	0000                	unimp
    10d0:	05cf040f          	0x5cf040f
    10d4:	0000                	unimp
    10d6:	05da040f          	0x5da040f
    10da:	0000                	unimp
    10dc:	00009713          	slli	a4,ra,0x0
    10e0:	2200                	fld	fs0,0(a2)
    10e2:	0006                	c.slli	zero,0x1
    10e4:	1400                	addi	s0,sp,544
    10e6:	046e                	slli	s0,s0,0x1b
    10e8:	0000                	unimp
    10ea:	1114                	addi	a3,sp,160
    10ec:	0001                	nop
    10ee:	1400                	addi	s0,sp,544
    10f0:	00000097          	auipc	ra,0x0
    10f4:	2514                	fld	fa3,8(a0)
    10f6:	0000                	unimp
    10f8:	0000                	unimp
    10fa:	0604040f          	0x604040f
    10fe:	0000                	unimp
    1100:	00002513          	slti	a0,zero,0
    1104:	3c00                	fld	fs0,56(s0)
    1106:	0006                	c.slli	zero,0x1
    1108:	1400                	addi	s0,sp,544
    110a:	046e                	slli	s0,s0,0x1b
    110c:	0000                	unimp
    110e:	1114                	addi	a3,sp,160
    1110:	0001                	nop
    1112:	0000                	unimp
    1114:	0628040f          	0x628040f
    1118:	0000                	unimp
    111a:	6108                	flw	fa0,0(a0)
    111c:	0000                	unimp
    111e:	5200                	lw	s0,32(a2)
    1120:	0006                	c.slli	zero,0x1
    1122:	0900                	addi	s0,sp,144
    1124:	0038                	addi	a4,sp,8
    1126:	0000                	unimp
    1128:	0002                	c.slli64	zero
    112a:	6108                	flw	fa0,0(a0)
    112c:	0000                	unimp
    112e:	6200                	flw	fs0,0(a2)
    1130:	0006                	c.slli	zero,0x1
    1132:	0900                	addi	s0,sp,144
    1134:	0038                	addi	a4,sp,8
    1136:	0000                	unimp
    1138:	0000                	unimp
    113a:	3b05                	jal	e6a <_bss_end+0x566>
    113c:	04000003          	lb	zero,64(zero) # 40 <__DYNAMIC+0x40>
    1140:	0124                	addi	s1,sp,136
    1142:	0d1a                	slli	s10,s10,0x6
    1144:	19000003          	lb	zero,400(zero) # 190 <rand_beebs+0x2c>
    1148:	04ba                	slli	s1,s1,0xe
    114a:	0000                	unimp
    114c:	040c                	addi	a1,sp,512
    114e:	0128                	addi	a0,sp,136
    1150:	a808                	fsd	fa0,16(s0)
    1152:	0006                	c.slli	zero,0x1
    1154:	1700                	addi	s0,sp,928
    1156:	00000363          	beqz	zero,115c <_bss_end+0x858>
    115a:	2a04                	fld	fs1,16(a2)
    115c:	1101                	addi	sp,sp,-32
    115e:	06a8                	addi	a0,sp,840
    1160:	0000                	unimp
    1162:	1700                	addi	s0,sp,928
    1164:	0206                	slli	tp,tp,0x1
    1166:	0000                	unimp
    1168:	2b04                	fld	fs1,16(a4)
    116a:	0701                	addi	a4,a4,0
    116c:	0025                	c.nop	9
    116e:	0000                	unimp
    1170:	1704                	addi	s1,sp,928
    1172:	0335                	addi	t1,t1,13
    1174:	0000                	unimp
    1176:	2c04                	fld	fs1,24(s0)
    1178:	0b01                	addi	s6,s6,0
    117a:	06ae                	slli	a3,a3,0xb
    117c:	0000                	unimp
    117e:	0008                	0x8
    1180:	066f040f          	0x66f040f
    1184:	0000                	unimp
    1186:	0662040f          	0x662040f
    118a:	0000                	unimp
    118c:	0c19                	addi	s8,s8,6
    118e:	0000                	unimp
    1190:	0e00                	addi	s0,sp,784
    1192:	4404                	lw	s1,8(s0)
    1194:	0801                	addi	a6,a6,0
    1196:	06ed                	addi	a3,a3,27
    1198:	0000                	unimp
    119a:	0005ab17          	auipc	s6,0x5a
    119e:	0400                	addi	s0,sp,512
    11a0:	0145                	addi	sp,sp,17
    11a2:	ed12                	fsw	ft4,152(sp)
    11a4:	0006                	c.slli	zero,0x1
    11a6:	0000                	unimp
    11a8:	0003f117          	auipc	sp,0x3f
    11ac:	0400                	addi	s0,sp,512
    11ae:	0146                	slli	sp,sp,0x11
    11b0:	ed12                	fsw	ft4,152(sp)
    11b2:	0006                	c.slli	zero,0x1
    11b4:	0600                	addi	s0,sp,768
    11b6:	00040d17          	auipc	s10,0x40
    11ba:	0400                	addi	s0,sp,512
    11bc:	6f120147          	fmsub.q	ft2,ft4,fa7,fa3,rne
    11c0:	0000                	unimp
    11c2:	0c00                	addi	s0,sp,528
    11c4:	0800                	addi	s0,sp,16
    11c6:	0000006f          	j	11c6 <_bss_end+0x8c2>
    11ca:	06fd                	addi	a3,a3,31
    11cc:	0000                	unimp
    11ce:	3809                	jal	9e0 <_bss_end+0xdc>
    11d0:	0000                	unimp
    11d2:	0200                	addi	s0,sp,256
    11d4:	1a00                	addi	s0,sp,304
    11d6:	04d0                	addi	a2,sp,580
    11d8:	0285                	addi	t0,t0,1
    11da:	00081207          	0x81207
    11de:	1700                	addi	s0,sp,928
    11e0:	048d                	addi	s1,s1,3
    11e2:	0000                	unimp
    11e4:	8704                	0x8704
    11e6:	1802                	slli	a6,a6,0x20
    11e8:	0038                	addi	a4,sp,8
    11ea:	0000                	unimp
    11ec:	1700                	addi	s0,sp,928
    11ee:	000003f7          	0x3f7
    11f2:	8804                	0x8804
    11f4:	1202                	slli	tp,tp,0x20
    11f6:	05c2                	slli	a1,a1,0x10
    11f8:	0000                	unimp
    11fa:	1704                	addi	s1,sp,928
    11fc:	0235                	addi	tp,tp,13
    11fe:	0000                	unimp
    1200:	8904                	0x8904
    1202:	1002                	c.slli	zero,0x20
    1204:	0812                	slli	a6,a6,0x4
    1206:	0000                	unimp
    1208:	1708                	addi	a0,sp,928
    120a:	04f6                	slli	s1,s1,0x1d
    120c:	0000                	unimp
    120e:	8a04                	0x8a04
    1210:	1702                	slli	a4,a4,0x20
    1212:	000001a7          	0x1a7
    1216:	1724                	addi	s1,sp,936
    1218:	01c0                	addi	s0,sp,196
    121a:	0000                	unimp
    121c:	8b04                	0x8b04
    121e:	0f02                	c.slli64	t5
    1220:	0025                	c.nop	9
    1222:	0000                	unimp
    1224:	1748                	addi	a0,sp,932
    1226:	035e                	slli	t1,t1,0x17
    1228:	0000                	unimp
    122a:	8c04                	0x8c04
    122c:	2c02                	fld	fs8,0(sp)
    122e:	0084                	addi	s1,sp,64
    1230:	0000                	unimp
    1232:	1750                	addi	a2,sp,932
    1234:	050c                	addi	a1,sp,640
    1236:	0000                	unimp
    1238:	8d04                	0x8d04
    123a:	1a02                	slli	s4,s4,0x20
    123c:	06b4                	addi	a3,sp,840
    123e:	0000                	unimp
    1240:	1758                	addi	a4,sp,932
    1242:	0369                	addi	t1,t1,26
    1244:	0000                	unimp
    1246:	8e04                	0x8e04
    1248:	1602                	slli	a2,a2,0x20
    124a:	0105                	addi	sp,sp,1
    124c:	0000                	unimp
    124e:	1768                	addi	a0,sp,940
    1250:	0511                	addi	a0,a0,4
    1252:	0000                	unimp
    1254:	8f04                	0x8f04
    1256:	1602                	slli	a2,a2,0x20
    1258:	0105                	addi	sp,sp,1
    125a:	0000                	unimp
    125c:	1770                	addi	a2,sp,940
    125e:	0080                	addi	s0,sp,64
    1260:	0000                	unimp
    1262:	9004                	0x9004
    1264:	1602                	slli	a2,a2,0x20
    1266:	0105                	addi	sp,sp,1
    1268:	0000                	unimp
    126a:	1778                	addi	a4,sp,940
    126c:	04c9                	addi	s1,s1,18
    126e:	0000                	unimp
    1270:	9104                	0x9104
    1272:	1002                	c.slli	zero,0x20
    1274:	0822                	slli	a6,a6,0x8
    1276:	0000                	unimp
    1278:	1780                	addi	s0,sp,992
    127a:	0229                	addi	tp,tp,10
    127c:	0000                	unimp
    127e:	9204                	0x9204
    1280:	1002                	c.slli	zero,0x20
    1282:	0832                	slli	a6,a6,0xc
    1284:	0000                	unimp
    1286:	1788                	addi	a0,sp,992
    1288:	041a                	slli	s0,s0,0x6
    128a:	0000                	unimp
    128c:	9304                	0x9304
    128e:	0f02                	c.slli64	t5
    1290:	0025                	c.nop	9
    1292:	0000                	unimp
    1294:	17a0                	addi	s0,sp,1000
    1296:	0145                	addi	sp,sp,17
    1298:	0000                	unimp
    129a:	9404                	0x9404
    129c:	1602                	slli	a2,a2,0x20
    129e:	0105                	addi	sp,sp,1
    12a0:	0000                	unimp
    12a2:	17a4                	addi	s1,sp,1000
    12a4:	0000006b          	0x6b
    12a8:	9504                	0x9504
    12aa:	1602                	slli	a2,a2,0x20
    12ac:	0105                	addi	sp,sp,1
    12ae:	0000                	unimp
    12b0:	17ac                	addi	a1,sp,1000
    12b2:	0134                	addi	a3,sp,136
    12b4:	0000                	unimp
    12b6:	9604                	0x9604
    12b8:	1602                	slli	a2,a2,0x20
    12ba:	0105                	addi	sp,sp,1
    12bc:	0000                	unimp
    12be:	17b4                	addi	a3,sp,1000
    12c0:	0020                	addi	s0,sp,8
    12c2:	0000                	unimp
    12c4:	9704                	0x9704
    12c6:	1602                	slli	a2,a2,0x20
    12c8:	0105                	addi	sp,sp,1
    12ca:	0000                	unimp
    12cc:	17bc                	addi	a5,sp,1000
    12ce:	0000002f          	0x2f
    12d2:	9804                	0x9804
    12d4:	1602                	slli	a2,a2,0x20
    12d6:	0105                	addi	sp,sp,1
    12d8:	0000                	unimp
    12da:	17c4                	addi	s1,sp,996
    12dc:	0311                	addi	t1,t1,4
    12de:	0000                	unimp
    12e0:	9904                	0x9904
    12e2:	0802                	c.slli64	a6
    12e4:	0025                	c.nop	9
    12e6:	0000                	unimp
    12e8:	00cc                	addi	a1,sp,68
    12ea:	c808                	sw	a0,16(s0)
    12ec:	0005                	c.nop	1
    12ee:	2200                	fld	fs0,0(a2)
    12f0:	0008                	0x8
    12f2:	0900                	addi	s0,sp,144
    12f4:	0038                	addi	a4,sp,8
    12f6:	0000                	unimp
    12f8:	0019                	c.nop	6
    12fa:	c808                	sw	a0,16(s0)
    12fc:	0005                	c.nop	1
    12fe:	3200                	fld	fs0,32(a2)
    1300:	0008                	0x8
    1302:	0900                	addi	s0,sp,144
    1304:	0038                	addi	a4,sp,8
    1306:	0000                	unimp
    1308:	c8080007          	0xc8080007
    130c:	0005                	c.nop	1
    130e:	4200                	lw	s0,0(a2)
    1310:	0008                	0x8
    1312:	0900                	addi	s0,sp,144
    1314:	0038                	addi	a4,sp,8
    1316:	0000                	unimp
    1318:	f01a0017          	auipc	zero,0xf01a0
    131c:	9e04                	0x9e04
    131e:	0702                	c.slli64	a4
    1320:	0869                	addi	a6,a6,26
    1322:	0000                	unimp
    1324:	00029717          	auipc	a4,0x29
    1328:	0400                	addi	s0,sp,512
    132a:	02a1                	addi	t0,t0,8
    132c:	0008691b          	0x8691b
    1330:	0000                	unimp
    1332:	00027617          	auipc	a2,0x27
    1336:	0400                	addi	s0,sp,512
    1338:	02a2                	slli	t0,t0,0x8
    133a:	7918                	flw	fa4,48(a0)
    133c:	0008                	0x8
    133e:	7800                	flw	fs0,48(s0)
    1340:	0800                	addi	s0,sp,16
    1342:	00000307          	0x307
    1346:	0879                	addi	a6,a6,30
    1348:	0000                	unimp
    134a:	3809                	jal	b5c <_bss_end+0x258>
    134c:	0000                	unimp
    134e:	1d00                	addi	s0,sp,688
    1350:	0800                	addi	s0,sp,16
    1352:	0038                	addi	a4,sp,8
    1354:	0000                	unimp
    1356:	0889                	addi	a7,a7,2
    1358:	0000                	unimp
    135a:	3809                	jal	b6c <_bss_end+0x268>
    135c:	0000                	unimp
    135e:	1d00                	addi	s0,sp,688
    1360:	1b00                	addi	s0,sp,432
    1362:	04f0                	addi	a2,sp,588
    1364:	ae030283          	lb	t0,-1312(t1) # 31a40 <_stack_start+0x21a40>
    1368:	0008                	0x8
    136a:	1c00                	addi	s0,sp,560
    136c:	000003b3          	add	t2,zero,zero
    1370:	9a04                	0x9a04
    1372:	0b02                	c.slli64	s6
    1374:	06fd                	addi	a3,a3,31
    1376:	0000                	unimp
    1378:	e31c                	fsw	fa5,0(a4)
    137a:	0004                	0x4
    137c:	0400                	addi	s0,sp,512
    137e:	420b02a3          	sb	zero,1061(s6) # 5b5bf <_stack_start+0x4b5bf>
    1382:	0008                	0x8
    1384:	0000                	unimp
    1386:	c808                	sw	a0,16(s0)
    1388:	0005                	c.nop	1
    138a:	be00                	fsd	fs0,56(a2)
    138c:	0008                	0x8
    138e:	0900                	addi	s0,sp,144
    1390:	0038                	addi	a4,sp,8
    1392:	0000                	unimp
    1394:	0018                	0x18
    1396:	601d                	c.lui	zero,0x7
    1398:	0000                	unimp
    139a:	0f00                	addi	s0,sp,912
    139c:	be04                	fsd	fs1,56(a2)
    139e:	0008                	0x8
    13a0:	1e00                	addi	s0,sp,816
    13a2:	08d4                	addi	a3,sp,84
    13a4:	0000                	unimp
    13a6:	6e14                	flw	fa3,24(a2)
    13a8:	0004                	0x4
    13aa:	0000                	unimp
    13ac:	08c9040f          	0x8c9040f
    13b0:	0000                	unimp
    13b2:	0191040f          	0x191040f
    13b6:	0000                	unimp
    13b8:	eb1e                	fsw	ft7,148(sp)
    13ba:	0008                	0x8
    13bc:	1400                	addi	s0,sp,544
    13be:	0025                	c.nop	9
    13c0:	0000                	unimp
    13c2:	0f00                	addi	s0,sp,912
    13c4:	f104                	fsw	fs1,32(a0)
    13c6:	0008                	0x8
    13c8:	0f00                	addi	s0,sp,912
    13ca:	e004                	fsw	fs1,0(s0)
    13cc:	0008                	0x8
    13ce:	0800                	addi	s0,sp,16
    13d0:	0662                	slli	a2,a2,0x18
    13d2:	0000                	unimp
    13d4:	00000907          	0x907
    13d8:	3809                	jal	bea <_bss_end+0x2e6>
    13da:	0000                	unimp
    13dc:	0200                	addi	s0,sp,256
    13de:	1f00                	addi	s0,sp,944
    13e0:	0481                	addi	s1,s1,0
    13e2:	0000                	unimp
    13e4:	3304                	fld	fs1,32(a4)
    13e6:	046e1703          	lh	a4,70(t3) # 5046 <_stack_len+0x1046>
    13ea:	0000                	unimp
    13ec:	7a1f 0004 0400      	0x40000047a1f
    13f2:	0334                	addi	a3,sp,392
    13f4:	741d                	lui	s0,0xfffe7
    13f6:	0004                	0x4
    13f8:	2000                	fld	fs0,0(s0)
    13fa:	05ac                	addi	a1,sp,712
    13fc:	0000                	unimp
    13fe:	1701                	addi	a4,a4,-32
    1400:	7611                	lui	a2,0xfffe4
    1402:	0000                	unimp
    1404:	0500                	addi	s0,sp,640
    1406:	00090003          	lb	zero,0(s2) # ff6e <_stack+0x1f6e>
    140a:	2000                	fld	fs0,0(s0)
    140c:	059f 0000 1b01      	0x1b010000059f
    1412:	110e                	slli	sp,sp,0x23
    1414:	0001                	nop
    1416:	0500                	addi	s0,sp,640
    1418:	0008fc03          	0x8fc03
    141c:	2000                	fld	fs0,0(s0)
    141e:	05d9                	addi	a1,a1,22
    1420:	0000                	unimp
    1422:	1c01                	addi	s8,s8,-32
    1424:	110e                	slli	sp,sp,0x23
    1426:	0001                	nop
    1428:	0500                	addi	s0,sp,640
    142a:	0008f803          	0x8f803
    142e:	2000                	fld	fs0,0(s0)
    1430:	0590                	addi	a2,sp,704
    1432:	0000                	unimp
    1434:	1d01                	addi	s10,s10,-32
    1436:	00002c0f          	0x2c0f
    143a:	0500                	addi	s0,sp,640
    143c:	0008f403          	0x8f403
    1440:	2100                	fld	fs0,0(a0)
    1442:	05e2                	slli	a1,a1,0x18
    1444:	0000                	unimp
    1446:	a701                	j	1b46 <_bss_end+0x1242>
    1448:	fc01                	bnez	s0,1360 <_bss_end+0xa5c>
    144a:	0002                	c.slli64	zero
    144c:	0400                	addi	s0,sp,512
    144e:	0000                	unimp
    1450:	0100                	addi	s0,sp,128
    1452:	8e9c                	0x8e9c
    1454:	0009                	c.nop	2
    1456:	2200                	fld	fs0,0(a2)
    1458:	7470                	flw	fa2,108(s0)
    145a:	0072                	c.slli	zero,0x1c
    145c:	a701                	j	1b5c <_bss_end+0x1258>
    145e:	00011113          	slli	sp,sp,0x0
    1462:	0100                	addi	s0,sp,128
    1464:	005a                	c.slli	zero,0x16
    1466:	0005b123          	0x5b123
    146a:	0100                	addi	s0,sp,128
    146c:	0184                	addi	s1,sp,192
    146e:	0111                	addi	sp,sp,4
    1470:	0000                	unimp
    1472:	0288                	addi	a0,sp,320
    1474:	0000                	unimp
    1476:	0074                	addi	a3,sp,12
    1478:	0000                	unimp
    147a:	9c01                	0x9c01
    147c:	000009ef          	jal	s3,147c <_bss_end+0xb78>
    1480:	7024                	flw	fs1,96(s0)
    1482:	7274                	flw	fa3,100(a2)
    1484:	0100                	addi	s0,sp,128
    1486:	1684                	addi	s1,sp,864
    1488:	0111                	addi	sp,sp,4
    148a:	0000                	unimp
    148c:	0000013f 00056225 	0x562250000013f
    1494:	0100                	addi	s0,sp,128
    1496:	2284                	fld	fs1,0(a3)
    1498:	002c                	addi	a1,sp,8
    149a:	0000                	unimp
    149c:	5b01                	li	s6,-32
    149e:	6726                	flw	fa4,72(sp)
    14a0:	0005                	c.nop	1
    14a2:	0100                	addi	s0,sp,128
    14a4:	0986                	slli	s3,s3,0x1
    14a6:	0111                	addi	sp,sp,4
    14a8:	0000                	unimp
    14aa:	0000016b          	0x16b
    14ae:	0002d027          	0x2d027
    14b2:	1c00                	addi	s0,sp,560
    14b4:	0000                	unimp
    14b6:	2800                	fld	fs0,16(s0)
    14b8:	0069                	c.nop	26
    14ba:	9701                	srai	a4,a4,0x20
    14bc:	00002c0b          	0x2c0b
    14c0:	9800                	0x9800
    14c2:	0001                	nop
    14c4:	0000                	unimp
    14c6:	2300                	fld	fs0,0(a4)
    14c8:	000005bf 11017001 	0x11017001000005bf
    14d0:	0001                	nop
    14d2:	4400                	lw	s0,8(s0)
    14d4:	0002                	c.slli64	zero
    14d6:	4400                	lw	s0,8(s0)
    14d8:	0000                	unimp
    14da:	0100                	addi	s0,sp,128
    14dc:	6b9c                	flw	fa5,16(a5)
    14de:	000a                	c.slli	zero,0x2
    14e0:	2900                	fld	fs0,16(a0)
    14e2:	000005fb          	0x5fb
    14e6:	7001                	c.lui	zero,0xfffe0
    14e8:	2c16                	fld	fs8,320(sp)
    14ea:	0000                	unimp
    14ec:	ab00                	fsd	fs0,16(a4)
    14ee:	0001                	nop
    14f0:	2900                	fld	fs0,16(a0)
    14f2:	0562                	slli	a0,a0,0x18
    14f4:	0000                	unimp
    14f6:	7001                	c.lui	zero,0xfffe0
    14f8:	2c24                	fld	fs1,88(s0)
    14fa:	0000                	unimp
    14fc:	cc00                	sw	s0,24(s0)
    14fe:	0001                	nop
    1500:	2600                	fld	fs0,8(a2)
    1502:	00000567          	jalr	a0,zero # 0 <__DYNAMIC>
    1506:	7201                	lui	tp,0xfffe0
    1508:	1109                	addi	sp,sp,-30
    150a:	0001                	nop
    150c:	ed00                	fsw	fs0,24(a0)
    150e:	0001                	nop
    1510:	2a00                	fld	fs0,16(a2)
    1512:	0260                	addi	s0,sp,268
    1514:	0000                	unimp
    1516:	00000a6b          	0xa6b
    151a:	0a4e                	slli	s4,s4,0x13
    151c:	0000                	unimp
    151e:	035a012b          	0x35a012b
    1522:	6c91                	lui	s9,0x4
    1524:	0006                	c.slli	zero,0x1
    1526:	742c                	flw	fa1,104(s0)
    1528:	0002                	c.slli64	zero
    152a:	4100                	lw	s0,0(a0)
    152c:	2b00000b          	0x2b00000b
    1530:	5a01                	li	s4,-32
    1532:	7802                	flw	fa6,32(sp)
    1534:	2b00                	fld	fs0,16(a4)
    1536:	5b01                	li	s6,-32
    1538:	3001                	jal	d38 <_bss_end+0x434>
    153a:	035c012b          	0x35c012b
    153e:	6c91                	lui	s9,0x4
    1540:	0006                	c.slli	zero,0x1
    1542:	2300                	fld	fs0,0(a4)
    1544:	05cc                	addi	a1,sp,708
    1546:	0000                	unimp
    1548:	5b01                	li	s6,-32
    154a:	1101                	addi	sp,sp,-32
    154c:	0001                	nop
    154e:	f000                	fsw	fs0,32(s0)
    1550:	0001                	nop
    1552:	5400                	lw	s0,40(s0)
    1554:	0000                	unimp
    1556:	0100                	addi	s0,sp,128
    1558:	a69c                	fsd	fa5,8(a3)
    155a:	000a                	c.slli	zero,0x2
    155c:	2900                	fld	fs0,16(a0)
    155e:	0562                	slli	a0,a0,0x18
    1560:	0000                	unimp
    1562:	5b01                	li	s6,-32
    1564:	2c16                	fld	fs8,320(sp)
    1566:	0000                	unimp
    1568:	0b00                	addi	s0,sp,400
    156a:	0002                	c.slli64	zero
    156c:	2600                	fld	fs0,8(a2)
    156e:	00000567          	jalr	a0,zero # 0 <__DYNAMIC>
    1572:	5d01                	li	s10,-32
    1574:	1109                	addi	sp,sp,-30
    1576:	0001                	nop
    1578:	3700                	fld	fs0,40(a4)
    157a:	0002                	c.slli64	zero
    157c:	0000                	unimp
    157e:	00056f23          	0x56f23
    1582:	0100                	addi	s0,sp,128
    1584:	0025014b          	fnmsub.s	ft2,fa0,ft2,ft0,rne
    1588:	0000                	unimp
    158a:	01c8                	addi	a0,sp,196
    158c:	0000                	unimp
    158e:	0028                	addi	a0,sp,8
    1590:	0000                	unimp
    1592:	9c01                	0x9c01
    1594:	0ad1                	addi	s5,s5,20
    1596:	0000                	unimp
    1598:	f629                	bnez	a2,14e2 <_bss_end+0xbde>
    159a:	0005                	c.nop	1
    159c:	0100                	addi	s0,sp,128
    159e:	0111194b          	fnmsub.s	fs2,ft2,fa7,ft0,rtz
    15a2:	0000                	unimp
    15a4:	0264                	addi	s1,sp,268
    15a6:	0000                	unimp
    15a8:	2100                	fld	fs0,0(a0)
    15aa:	0580                	addi	s0,sp,704
    15ac:	0000                	unimp
    15ae:	3d01                	jal	13be <_bss_end+0xaba>
    15b0:	a801                	j	15c0 <_bss_end+0xcbc>
    15b2:	0001                	nop
    15b4:	2000                	fld	fs0,0(s0)
    15b6:	0000                	unimp
    15b8:	0100                	addi	s0,sp,128
    15ba:	069c                	addi	a5,sp,832
    15bc:	2500000b          	0x2500000b
    15c0:	05f6                	slli	a1,a1,0x1d
    15c2:	0000                	unimp
    15c4:	3d01                	jal	13d4 <_bss_end+0xad0>
    15c6:	1118                	addi	a4,sp,160
    15c8:	0001                	nop
    15ca:	0100                	addi	s0,sp,128
    15cc:	295a                	fld	fs2,400(sp)
    15ce:	055d                	addi	a0,a0,23
    15d0:	0000                	unimp
    15d2:	3d01                	jal	13e2 <_bss_end+0xade>
    15d4:	2c25                	jal	180c <_bss_end+0xf08>
    15d6:	0000                	unimp
    15d8:	8500                	0x8500
    15da:	0002                	c.slli64	zero
    15dc:	0000                	unimp
    15de:	7f21                	lui	t5,0xfffe8
    15e0:	0002                	c.slli64	zero
    15e2:	0100                	addi	s0,sp,128
    15e4:	019c0133          	add	sp,s8,s9
    15e8:	0000                	unimp
    15ea:	000c                	0xc
    15ec:	0000                	unimp
    15ee:	9c01                	0x9c01
    15f0:	00000b2b          	0xb2b
    15f4:	a825                	j	162c <_bss_end+0xd28>
    15f6:	0005                	c.nop	1
    15f8:	0100                	addi	s0,sp,128
    15fa:	00381b33          	sll	s6,a6,gp
    15fe:	0000                	unimp
    1600:	5a01                	li	s4,-32
    1602:	2d00                	fld	fs0,24(a0)
    1604:	0280                	addi	s0,sp,320
    1606:	0000                	unimp
    1608:	2901                	jal	1a18 <_bss_end+0x1114>
    160a:	2501                	jal	1c0a <_bss_end+0x1306>
    160c:	0000                	unimp
    160e:	6400                	flw	fs0,8(s0)
    1610:	0001                	nop
    1612:	3800                	fld	fs0,48(s0)
    1614:	0000                	unimp
    1616:	0100                	addi	s0,sp,128
    1618:	2e9c                	fld	fa5,24(a3)
    161a:	0556                	slli	a0,a0,0x15
    161c:	0000                	unimp
    161e:	054c                	addi	a1,sp,644
    1620:	0000                	unimp
    1622:	0006                	c.slli	zero,0x1
    1624:	5800                	lw	s0,48(s0)
    1626:	0000                	unimp
    1628:	0400                	addi	s0,sp,512
    162a:	9700                	0x9700
    162c:	0005                	c.nop	1
    162e:	0400                	addi	s0,sp,512
    1630:	2701                	jal	1d30 <_bss_end+0x142c>
    1632:	0004                	0x4
    1634:	0c00                	addi	s0,sp,528
    1636:	060e                	slli	a2,a2,0x3
    1638:	0000                	unimp
    163a:	0169                	addi	sp,sp,26
    163c:	0000                	unimp
    163e:	0300                	addi	s0,sp,384
    1640:	0000                	unimp
    1642:	0018                	0x18
    1644:	0000                	unimp
    1646:	0794                	addi	a3,sp,960
    1648:	0000                	unimp
    164a:	0102                	c.slli64	sp
    164c:	0006                	c.slli	zero,0x1
    164e:	0100                	addi	s0,sp,128
    1650:	0119                	addi	sp,sp,6
    1652:	0310                	addi	a2,sp,384
    1654:	0000                	unimp
    1656:	0008                	0x8
    1658:	0000                	unimp
    165a:	9c01                	0x9c01
    165c:	1602                	slli	a2,a2,0x20
    165e:	0006                	c.slli	zero,0x1
    1660:	0100                	addi	s0,sp,128
    1662:	03080113          	addi	sp,a6,48 # 20054 <_stack_start+0x10054>
    1666:	0000                	unimp
    1668:	0008                	0x8
    166a:	0000                	unimp
    166c:	9c01                	0x9c01
    166e:	2402                	fld	fs0,0(sp)
    1670:	0006                	c.slli	zero,0x1
    1672:	0100                	addi	s0,sp,128
    1674:	010d                	addi	sp,sp,3
    1676:	0300                	addi	s0,sp,384
    1678:	0000                	unimp
    167a:	0008                	0x8
    167c:	0000                	unimp
    167e:	9c01                	0x9c01
    1680:	4c00                	lw	s0,24(s0)
    1682:	0001                	nop
    1684:	0400                	addi	s0,sp,512
    1686:	c300                	sw	s0,0(a4)
    1688:	0005                	c.nop	1
    168a:	0400                	addi	s0,sp,512
    168c:	2701                	jal	1d8c <_bss_end+0x1488>
    168e:	0004                	0x4
    1690:	0c00                	addi	s0,sp,528
    1692:	00000647          	fmsub.s	fa2,ft0,ft0,ft0,rne
    1696:	0169                	addi	sp,sp,26
	...
    16a0:	0000                	unimp
    16a2:	0816                	slli	a6,a6,0x5
    16a4:	0000                	unimp
    16a6:	0402                	c.slli64	s0
    16a8:	6905                	lui	s2,0x1
    16aa:	746e                	flw	fs0,248(sp)
    16ac:	0300                	addi	s0,sp,384
    16ae:	0025                	c.nop	9
    16b0:	0000                	unimp
    16b2:	0404                	addi	s1,sp,512
    16b4:	00004a07          	flq	fs4,0(zero) # 0 <__DYNAMIC>
    16b8:	0400                	addi	s0,sp,512
    16ba:	0508                	addi	a0,sp,640
    16bc:	00000097          	auipc	ra,0x0
    16c0:	1004                	addi	s1,sp,32
    16c2:	8b04                	0x8b04
    16c4:	0002                	c.slli64	zero
    16c6:	0500                	addi	s0,sp,640
    16c8:	064e                	slli	a2,a2,0x13
    16ca:	0000                	unimp
    16cc:	1201                	addi	tp,tp,-32
    16ce:	2501                	jal	1cce <_bss_end+0x13ca>
    16d0:	0000                	unimp
    16d2:	a800                	fsd	fs0,16(s0)
    16d4:	0004                	0x4
    16d6:	3c00                	fld	fs0,56(s0)
    16d8:	0000                	unimp
    16da:	0100                	addi	s0,sp,128
    16dc:	e89c                	fsw	fa5,16(s1)
    16de:	0000                	unimp
    16e0:	0600                	addi	s0,sp,768
    16e2:	063a                	slli	a2,a2,0xe
    16e4:	0000                	unimp
    16e6:	1201                	addi	tp,tp,-32
    16e8:	0000250b          	0x250b
    16ec:	a600                	fsd	fs0,8(a2)
    16ee:	0002                	c.slli64	zero
    16f0:	0600                	addi	s0,sp,768
    16f2:	0635                	addi	a2,a2,13
    16f4:	0000                	unimp
    16f6:	1301                	addi	t1,t1,-32
    16f8:	e80d                	bnez	s0,172a <_bss_end+0xe26>
    16fa:	0000                	unimp
    16fc:	c700                	sw	s0,8(a4)
    16fe:	0002                	c.slli64	zero
    1700:	0700                	addi	s0,sp,896
    1702:	00000243          	fmadd.s	ft4,ft0,ft0,ft0,rne
    1706:	1501                	addi	a0,a0,-32
    1708:	2c10                	fld	fa2,24(s0)
    170a:	0000                	unimp
    170c:	0200                	addi	s0,sp,256
    170e:	6891                	lui	a7,0x4
    1710:	00063f07          	fld	ft10,0(a2) # fffe4000 <_stack_start+0xfffd4000>
    1714:	0100                	addi	s0,sp,128
    1716:	1016                	c.slli	zero,0x25
    1718:	002c                	addi	a1,sp,8
    171a:	0000                	unimp
    171c:	9102                	jalr	sp
    171e:	086c                	addi	a1,sp,28
    1720:	04b4                	addi	a3,sp,584
    1722:	0000                	unimp
    1724:	000000fb          	0xfb
    1728:	b808                	fsd	fa0,48(s0)
    172a:	0004                	0x4
    172c:	0700                	addi	s0,sp,896
    172e:	0001                	nop
    1730:	0900                	addi	s0,sp,144
    1732:	04c0                	addi	s0,sp,580
    1734:	0000                	unimp
    1736:	00000113          	li	sp,0
    173a:	000000c3          	fmadd.s	ft1,ft0,ft0,ft0,rne
    173e:	010a                	slli	sp,sp,0x2
    1740:	015a                	slli	sp,sp,0x16
    1742:	0030                	addi	a2,sp,8
    1744:	c408                	sw	a0,8(s0)
    1746:	0004                	0x4
    1748:	1f00                	addi	s0,sp,944
    174a:	0001                	nop
    174c:	0800                	addi	s0,sp,16
    174e:	04c8                	addi	a0,sp,580
    1750:	0000                	unimp
    1752:	0000012b          	0x12b
    1756:	d008                	sw	a0,32(s0)
    1758:	0004                	0x4
    175a:	3700                	fld	fs0,40(a4)
    175c:	0001                	nop
    175e:	0800                	addi	s0,sp,16
    1760:	04d8                	addi	a4,sp,580
    1762:	0000                	unimp
    1764:	00000143          	fmadd.s	ft2,ft0,ft0,ft0,rne
    1768:	0b00                	addi	s0,sp,400
    176a:	ee04                	fsw	fs1,24(a2)
    176c:	0000                	unimp
    176e:	0b00                	addi	s0,sp,400
    1770:	f404                	fsw	fs1,40(s0)
    1772:	0000                	unimp
    1774:	0400                	addi	s0,sp,512
    1776:	0801                	addi	a6,a6,0
    1778:	00000307          	0x307
    177c:	240c                	fld	fa1,8(s0)
    177e:	0006                	c.slli	zero,0x1
    1780:	2400                	fld	fs0,8(s0)
    1782:	0006                	c.slli	zero,0x1
    1784:	0200                	addi	s0,sp,256
    1786:	2d0c0623          	sb	a6,716(s8) # 3130c <_stack_start+0x2130c>
    178a:	0005                	c.nop	1
    178c:	2d00                	fld	fs0,24(a0)
    178e:	0005                	c.nop	1
    1790:	0200                	addi	s0,sp,256
    1792:	f20c062b          	0xf20c062b
    1796:	0002                	c.slli64	zero
    1798:	f200                	fsw	fs0,32(a2)
    179a:	0002                	c.slli64	zero
    179c:	0200                	addi	s0,sp,256
    179e:	0631                	addi	a2,a2,12
    17a0:	160c                	addi	a1,sp,800
    17a2:	0006                	c.slli	zero,0x1
    17a4:	1600                	addi	s0,sp,800
    17a6:	0006                	c.slli	zero,0x1
    17a8:	0200                	addi	s0,sp,256
    17aa:	0624                	addi	s1,sp,776
    17ac:	380c                	fld	fa1,48(s0)
    17ae:	0005                	c.nop	1
    17b0:	3800                	fld	fs0,48(s0)
    17b2:	0005                	c.nop	1
    17b4:	0200                	addi	s0,sp,256
    17b6:	0536                	slli	a0,a0,0xd
    17b8:	010c                	addi	a1,sp,128
    17ba:	0006                	c.slli	zero,0x1
    17bc:	0100                	addi	s0,sp,128
    17be:	0006                	c.slli	zero,0x1
    17c0:	0200                	addi	s0,sp,256
    17c2:	0625                	addi	a2,a2,9
    17c4:	9a0c                	0x9a0c
    17c6:	0004                	0x4
    17c8:	9a00                	0x9a00
    17ca:	0004                	0x4
    17cc:	0200                	addi	s0,sp,256
    17ce:	1e00053b          	0x1e00053b
    17d2:	0000                	unimp
    17d4:	0200                	addi	s0,sp,256
    17d6:	7400                	flw	fs0,40(s0)
    17d8:	0006                	c.slli	zero,0x1
    17da:	0400                	addi	s0,sp,512
    17dc:	e401                	bnez	s0,17e4 <_bss_end+0xee0>
    17de:	0008                	0x8
    17e0:	1000                	addi	s0,sp,32
    17e2:	0000                	unimp
    17e4:	5300                	lw	s0,32(a4)
    17e6:	0006                	c.slli	zero,0x1
    17e8:	6900                	flw	fs0,16(a0)
    17ea:	0001                	nop
    17ec:	5a00                	lw	s0,48(a2)
    17ee:	0006                	c.slli	zero,0x1
    17f0:	0100                	addi	s0,sp,128
    17f2:	80              	Address 0x00000000000017f2 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
  .endr
   0:	1101                	addi	sp,sp,-32
   2:	2501                	jal	602 <__DTOR_END__+0x10e>
   4:	130e                	slli	t1,t1,0x23
   6:	1b0e030b          	0x1b0e030b
   a:	110e                	slli	sp,sp,0x23
   c:	1201                	addi	tp,tp,-32
   e:	1006                	c.slli	zero,0x21
  10:	02000017          	auipc	zero,0x2000
  14:	0024                	addi	s1,sp,8
  16:	0b3e0b0b          	0xb3e0b0b
  1a:	00000803          	lb	a6,0(zero) # 0 <__DYNAMIC>
  1e:	0b002403          	lw	s0,176(zero) # b0 <crc32pseudo+0x24>
  22:	030b3e0b          	0x30b3e0b
  26:	000e                	c.slli	zero,0x3
  28:	0400                	addi	s0,sp,512
  2a:	0016                	c.slli	zero,0x5
  2c:	0b3a0e03          	lb	t3,179(s4) # 1e0ad <_stack_start+0xe0ad>
  30:	0b39053b          	0xb39053b
  34:	1349                	addi	t1,t1,-14
  36:	0000                	unimp
  38:	1605                	addi	a2,a2,-31
  3a:	0300                	addi	s0,sp,384
  3c:	3a0e                	fld	fs4,224(sp)
  3e:	390b3b0b          	0x390b3b0b
  42:	0013490b          	0x13490b
  46:	0600                	addi	s0,sp,768
  48:	0b0b0117          	auipc	sp,0xb0b0
  4c:	0b3a                	slli	s6,s6,0xe
  4e:	0b390b3b          	0xb390b3b
  52:	1301                	addi	t1,t1,-32
  54:	0000                	unimp
  56:	03000d07          	0x3000d07
  5a:	3a0e                	fld	fs4,224(sp)
  5c:	390b3b0b          	0x390b3b0b
  60:	0013490b          	0x13490b
  64:	0800                	addi	s0,sp,16
  66:	0101                	addi	sp,sp,0
  68:	1349                	addi	t1,t1,-14
  6a:	1301                	addi	t1,t1,-32
  6c:	0000                	unimp
  6e:	2109                	jal	470 <memset+0xa4>
  70:	4900                	lw	s0,16(a0)
  72:	000b2f13          	slti	t5,s6,0
  76:	0a00                	addi	s0,sp,272
  78:	0b0b0113          	addi	sp,s6,176
  jal x0, default_exc_handler
  7c:	0b3a                	slli	s6,s6,0xe
  7e:	0b390b3b          	0xb390b3b
  jal x0, reset_handler
  82:	1301                	addi	t1,t1,-32
  jal x0, default_exc_handler
  84:	0000                	unimp
  86:	03000d0b          	0x3000d0b
  jal x0, default_exc_handler
  8a:	3a0e                	fld	fs4,224(sp)
{
  8c:	390b3b0b          	0x390b3b0b
  90:	3813490b          	0x3813490b
  94:	0c00000b          	0xc00000b
  98:	0b0b000f          	0xb0b000f
  9c:	0000                	unimp
  9e:	130d                	addi	t1,t1,-29
  a0:	0301                	addi	t1,t1,0
  a2:	0b0e                	slli	s6,s6,0x3
  oldcrc32 = 0xFFFFFFFF;
  a4:	3b0b3a0b          	0x3b0b3a0b
      oldcrc32 = UPDC32 (rand_beebs (), oldcrc32);
  a8:	010b390b          	0x10b390b
  ac:	0e000013          	li	zero,224
  b0:	000d                	c.nop	3
  b2:	0b3a0803          	lb	a6,179(s4)
  b6:	0b390b3b          	0xb390b3b
  ba:	1349                	addi	t1,t1,-14
  bc:	0b38                	addi	a4,sp,408
  be:	0000                	unimp
  c0:	0b000f0f          	0xb000f0f
  c4:	0013490b          	0x13490b
  c8:	1000                	addi	s0,sp,32
  ca:	0e030113          	addi	sp,t1,224
  ce:	0b3a050b          	0xb3a050b
  for (i = 0; i < 1024; ++i)
  d2:	0b390b3b          	0xb390b3b
}
  d6:	1301                	addi	t1,t1,-32
  d8:	0000                	unimp
  da:	0d11                	addi	s10,s10,4
  dc:	0300                	addi	s0,sp,384
  de:	3a0e                	fld	fs4,224(sp)
  e0:	390b3b0b          	0x390b3b0b
  e4:	3813490b          	0x3813490b
  e8:	0005                	c.nop	1
  ea:	1200                	addi	s0,sp,288
  ec:	0015                	c.nop	5
  ee:	00001927          	0x1927
{
  f2:	27011513          	0x27011513
  f6:	4919                	li	s2,6
  f8:	00130113          	addi	sp,t1,1
  fc:	1400                	addi	s0,sp,544
  fe:	0005                	c.nop	1
 100:	1349                	addi	t1,t1,-14
 102:	0000                	unimp
  for (i = 0; i < rpt; i++)
 104:	2615                	jal	428 <memset+0x5c>
 106:	4900                	lw	s0,16(a0)
 108:	16000013          	li	zero,352
}
 10c:	0e030113          	addi	sp,t1,224
 110:	0b3a050b          	0xb3a050b
  return (int) (r % 32768);
 114:	0b39053b          	0xb39053b
}
 118:	1301                	addi	t1,t1,-32
 11a:	0000                	unimp
 11c:	03000d17          	auipc	s10,0x3000
 120:	3a0e                	fld	fs4,224(sp)
 122:	39053b0b          	0x39053b0b
 126:	3813490b          	0x3813490b
      srand_beebs (0);
 12a:	1800000b          	0x1800000b
 12e:	000d                	c.nop	3
      r = crc32pseudo ();
 130:	0b3a0e03          	lb	t3,179(s4)
 134:	0b39053b          	0xb39053b
  for (i = 0; i < rpt; i++)
 138:	1349                	addi	t1,t1,-14
 13a:	0538                	addi	a4,sp,648
 13c:	0000                	unimp
 13e:	1319                	addi	t1,t1,-26
}
 140:	0301                	addi	t1,t1,0
 142:	0b0e                	slli	s6,s6,0x3
  int  res = benchmark_body (heat);
 144:	3b0b3a0b          	0x3b0b3a0b
  return benchmark_body (LOCAL_SCALE_FACTOR * CPU_MHZ);
 148:	3905                	jal	fffffd78 <_stack_start+0xfffefd78>
 14a:	0013010b          	0x13010b
 14e:	1a00                	addi	s0,sp,304
  return 11433 == r;
 150:	0b0b0113          	addi	sp,s6,176
 154:	0b3a                	slli	s6,s6,0xe
 156:	0b39053b          	0xb39053b
 15a:	1301                	addi	t1,t1,-32
}
 15c:	0000                	unimp
 15e:	0b01171b          	0xb01171b
 162:	3b0b3a0b          	0x3b0b3a0b
  seed = (seed * 1103515245L + 12345) & ((1UL << 31) - 1);
 166:	3905                	jal	fffffd96 <_stack_start+0xfffefd96>
 168:	0013010b          	0x13010b
 16c:	1c00                	addi	s0,sp,560
 16e:	000d                	c.nop	3
 170:	0b3a0e03          	lb	t3,179(s4)
 174:	0b39053b          	0xb39053b
 178:	1349                	addi	t1,t1,-14
 17a:	0000                	unimp
 17c:	131d                	addi	t1,t1,-25
 17e:	0300                	addi	s0,sp,384
 180:	3c0e                	fld	fs8,224(sp)
 182:	0019                	c.nop	6
 184:	1e00                	addi	s0,sp,816
 186:	0115                	addi	sp,sp,5
 188:	13011927          	0x13011927
 18c:	0000                	unimp
 18e:	341f 0300 3a0e      	0x3a0e0300341f
}
 194:	39053b0b          	0x39053b0b
 198:	3f13490b          	0x3f13490b
  seed = (long int) new_seed;
 19c:	3c19                	jal	fffffbb2 <_stack_start+0xfffefbb2>
 19e:	0019                	c.nop	6
 1a0:	2000                	fld	fs0,0(s0)
 1a2:	0034                	addi	a3,sp,8
}
 1a4:	0b3a0e03          	lb	t3,179(s4)
  heap_end = (void *) ((char *) heap_ptr + heap_size);
 1a8:	0b390b3b          	0xb390b3b
  heap_ptr = (void *) heap;
 1ac:	1349                	addi	t1,t1,-14
 1ae:	193c193f 34210000 	0x34210000193c193f
  heap_end = (void *) ((char *) heap_ptr + heap_size);
 1b6:	0300                	addi	s0,sp,384
 1b8:	3a0e                	fld	fs4,224(sp)
 1ba:	390b3b0b          	0x390b3b0b
  heap_requested = 0;
 1be:	0213490b          	0x213490b
 1c2:	0018                	0x18
}
 1c4:	2200                	fld	fs0,0(a2)
 1c6:	012e                	slli	sp,sp,0xb
  return ((void *) ((char *) heap + heap_requested) <= heap_end);
 1c8:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 1d0:	0b39                	addi	s6,s6,14
 1d2:	13491927          	0x13491927
 1d6:	0111                	addi	sp,sp,4
 1d8:	0612                	slli	a2,a2,0x4
 1da:	1840                	addi	s0,sp,52
 1dc:	01194297          	auipc	t0,0x1194
 1e0:	23000013          	li	zero,560
 1e4:	0005                	c.nop	1
 1e6:	0b3a0803          	lb	a6,179(s4)
}
 1ea:	0b390b3b          	0xb390b3b
 1ee:	1349                	addi	t1,t1,-14
  heap_requested += size;
 1f0:	1702                	slli	a4,a4,0x20
 1f2:	0000                	unimp
 1f4:	2e24                	fld	fs1,88(a2)
 1f6:	0301                	addi	t1,t1,0
 1f8:	3a0e                	fld	fs4,224(sp)
 1fa:	390b3b0b          	0x390b3b0b
  void *new_ptr = heap_ptr;
 1fe:	4919270b          	0x4919270b
 202:	12011113          	0x12011113
 206:	4006                	0x4006
  heap_requested += size;
 208:	9718                	0x9718
 20a:	1942                	slli	s2,s2,0x30
 20c:	1301                	addi	t1,t1,-32
 20e:	0000                	unimp
 210:	3425                	jal	fffffc38 <_stack_start+0xfffefc38>
 212:	0300                	addi	s0,sp,384
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
 214:	3a08                	fld	fa0,48(a2)
 216:	390b3b0b          	0x390b3b0b
 21a:	0213490b          	0x213490b
 21e:	26000017          	auipc	zero,0x26000
 222:	8289                	srli	a3,a3,0x2
 224:	0101                	addi	sp,sp,0
 226:	0111                	addi	sp,sp,4
 228:	1331                	addi	t1,t1,-20
 22a:	1301                	addi	t1,t1,-32
      heap_ptr = (void *) ((char *) heap_ptr + size);
 22c:	0000                	unimp
 22e:	01828a27          	0x1828a27
 232:	0200                	addi	s0,sp,256
}
 234:	9118                	0x9118
 236:	1842                	slli	a6,a6,0x30
 238:	0000                	unimp
 23a:	8928                	0x8928
    return NULL;
 23c:	0182                	c.slli64	gp
 23e:	1100                	addi	s0,sp,160
 240:	3101                	jal	fffffe40 <_stack_start+0xfffefe40>
 242:	29000013          	li	zero,656
  void *new_ptr = malloc_beebs (nmemb * size);
 246:	8289                	srli	a3,a3,0x2
{
 248:	0101                	addi	sp,sp,0
 24a:	0111                	addi	sp,sp,4
 24c:	4295                	li	t0,5
 24e:	3119                	jal	fffffe54 <_stack_start+0xfffefe54>
 250:	2a000013          	li	zero,672
  void *new_ptr = malloc_beebs (nmemb * size);
 254:	012e                	slli	sp,sp,0xb
 256:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 25e:	0b39                	addi	s6,s6,14
 260:	01111927          	0x1111927
  if (NULL != new_ptr)
 264:	0612                	slli	a2,a2,0x4
 266:	1840                	addi	s0,sp,52
    memset (new_ptr, 0, nmemb * size);
 268:	01194297          	auipc	t0,0x1194
 26c:	2b000013          	li	zero,688
 270:	0005                	c.nop	1
 272:	0b3a0e03          	lb	t3,179(s4)
}
 276:	0b390b3b          	0xb390b3b
 27a:	1349                	addi	t1,t1,-14
 27c:	1702                	slli	a4,a4,0x20
 27e:	0000                	unimp
 280:	342c                	fld	fa1,104(s0)
 282:	0300                	addi	s0,sp,384
 284:	3a08                	fld	fa0,48(a2)
 286:	390b3b0b          	0x390b3b0b
  heap_requested += size;
 28a:	0013490b          	0x13490b
 28e:	2d00                	fld	fs0,24(a0)
 290:	002e                	c.slli	zero,0xb
 292:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
  void *new_ptr = heap_ptr;
 29a:	0b39                	addi	s6,s6,14
 29c:	01111927          	0x1111927
  heap_requested += size;
 2a0:	0612                	slli	a2,a2,0x4
 2a2:	1840                	addi	s0,sp,52
 2a4:	00194297          	auipc	t0,0x194
 2a8:	2e00                	fld	fs0,24(a2)
 2aa:	012e                	slli	sp,sp,0xb
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
 2ac:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 2b4:	0b39                	addi	s6,s6,14
 2b6:	1349                	addi	t1,t1,-14
 2b8:	0111                	addi	sp,sp,4
 2ba:	0612                	slli	a2,a2,0x4
 2bc:	1840                	addi	s0,sp,52
 2be:	01194297          	auipc	t0,0x1194
 2c2:	2f000013          	li	zero,752
      heap_ptr = (void *) ((char *) heap_ptr + size);
 2c6:	0034                	addi	a3,sp,8
 2c8:	0b3a0e03          	lb	t3,179(s4)
      if (NULL != ptr)
 2cc:	0b390b3b          	0xb390b3b
	  for (i = 0; i < size; i++)
 2d0:	1349                	addi	t1,t1,-14
 2d2:	1702                	slli	a4,a4,0x20
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
 2d4:	0000                	unimp
 2d6:	2e30                	fld	fa2,88(a2)
 2d8:	3f00                	fld	fs0,56(a4)
 2da:	3c19                	jal	fffffcf0 <_stack_start+0xfffefcf0>
 2dc:	6e19                	lui	t3,0x6
 2de:	030e                	slli	t1,t1,0x3
	  for (i = 0; i < size; i++)
 2e0:	3a0e                	fld	fs4,224(sp)
 2e2:	390b3b0b          	0x390b3b0b
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
 2e6:	0000000b          	0xb
	  for (i = 0; i < size; i++)
 2ea:	1101                	addi	sp,sp,-32
}
 2ec:	2501                	jal	8ec <__DTOR_END__+0x3f8>
 2ee:	130e                	slli	t1,t1,0x23
 2f0:	1b0e030b          	0x1b0e030b
    return NULL;
 2f4:	110e                	slli	sp,sp,0x23
 2f6:	1201                	addi	tp,tp,-32
 2f8:	1006                	c.slli	zero,0x21
 2fa:	02000017          	auipc	zero,0x2000
}
 2fe:	0024                	addi	s1,sp,8
  __asm__ volatile ("li a0, 0" : : : "memory");
 300:	0b3e0b0b          	0xb3e0b0b
}
 304:	00000803          	lb	a6,0(zero) # 0 <__DYNAMIC>
  __asm__ volatile ("li a0, 0" : : : "memory");
 308:	03001603          	lh	a2,48(zero) # 30 <__DYNAMIC+0x30>
}
 30c:	3a0e                	fld	fs4,224(sp)
 30e:	390b3b0b          	0x390b3b0b
  __asm__ volatile ("li a0, 0" : : : "memory");
 312:	0013490b          	0x13490b
}
 316:	0400                	addi	s0,sp,512
  jal x0, default_exc_handler
 318:	0024                	addi	s1,sp,8
 31a:	0b3e0b0b          	0xb3e0b0b
  mv  x1, x0
 31e:	00000e03          	lb	t3,0(zero) # 0 <__DYNAMIC>
  mv  x2, x1
 322:	1605                	addi	a2,a2,-31
  mv  x3, x1
 324:	0300                	addi	s0,sp,384
 326:	3a0e                	fld	fs4,224(sp)
  mv  x4, x1
 328:	39053b0b          	0x39053b0b
  mv  x5, x1
 32c:	0013490b          	0x13490b
  mv  x6, x1
 330:	0600                	addi	s0,sp,768
 332:	0b0b0117          	auipc	sp,0xb0b0
  mv  x7, x1
 336:	0b3a                	slli	s6,s6,0xe
  mv  x8, x1
 338:	0b390b3b          	0xb390b3b
  mv  x9, x1
 33c:	1301                	addi	t1,t1,-32
 33e:	0000                	unimp
  mv x10, x1
 340:	03000d07          	0x3000d07
  mv x11, x1
 344:	3a0e                	fld	fs4,224(sp)
 346:	390b3b0b          	0x390b3b0b
  mv x12, x1
 34a:	0013490b          	0x13490b
  mv x13, x1
 34e:	0800                	addi	s0,sp,16
  mv x14, x1
 350:	0101                	addi	sp,sp,0
 352:	1349                	addi	t1,t1,-14
  mv x15, x1
 354:	1301                	addi	t1,t1,-32
 356:	0000                	unimp
  mv x16, x1
 358:	2109                	jal	75a <__DTOR_END__+0x266>
 35a:	4900                	lw	s0,16(a0)
  mv x17, x1
 35c:	000b2f13          	slti	t5,s6,0
  mv x18, x1
 360:	0a00                	addi	s0,sp,272
 362:	0b0b0113          	addi	sp,s6,176
  mv x19, x1
 366:	0b3a                	slli	s6,s6,0xe
  mv x20, x1
 368:	0b390b3b          	0xb390b3b
  mv x21, x1
 36c:	1301                	addi	t1,t1,-32
 36e:	0000                	unimp
  mv x22, x1
 370:	03000d0b          	0x3000d0b
  mv x23, x1
 374:	3a0e                	fld	fs4,224(sp)
 376:	390b3b0b          	0x390b3b0b
  mv x24, x1
 37a:	3813490b          	0x3813490b
  mv x25, x1
 37e:	0c00000b          	0xc00000b
  mv x26, x1
 382:	0b0b000f          	0xb0b000f
  mv x27, x1
 386:	0000                	unimp
  mv x28, x1
 388:	130d                	addi	t1,t1,-29
 38a:	0301                	addi	t1,t1,0
  mv x29, x1
 38c:	0b0e                	slli	s6,s6,0x3
 38e:	3b0b3a0b          	0x3b0b3a0b
  mv x30, x1
 392:	010b390b          	0x10b390b
  mv x31, x1
 396:	0e000013          	li	zero,224
  la   x2, _stack_start
 39a:	000d                	c.nop	3
 39c:	0b3a0803          	lb	a6,179(s4)
  la x26, _bss_start
 3a0:	0b390b3b          	0xb390b3b
 3a4:	1349                	addi	t1,t1,-14
 3a6:	0b38                	addi	a4,sp,408
  la x27, _bss_end
 3a8:	0000                	unimp
 3aa:	0b000f0f          	0xb000f0f
 3ae:	0013490b          	0x13490b
  bge x26, x27, zero_loop_end
 3b2:	1000                	addi	s0,sp,32
  sw x0, 0(x26)
 3b4:	0e030113          	addi	sp,t1,224
  addi x26, x26, 4
 3b8:	0b3a050b          	0xb3a050b
  ble x26, x27, zero_loop
 3bc:	0b390b3b          	0xb390b3b
  addi x10, x0, 0
 3c0:	1301                	addi	t1,t1,-32
 3c2:	0000                	unimp
  addi x11, x0, 0
 3c4:	0d11                	addi	s10,s10,4
 3c6:	0300                	addi	s0,sp,384
  jal x1, main
 3c8:	3a0e                	fld	fs4,224(sp)
 3ca:	390b3b0b          	0x390b3b0b
 3ce:	3813490b          	0x3813490b
 3d2:	0005                	c.nop	1
 3d4:	1200                	addi	s0,sp,288
 3d6:	0015                	c.nop	5
 3d8:	00001927          	0x1927
 3dc:	27011513          	0x27011513
 3e0:	4919                	li	s2,6
 3e2:	00130113          	addi	sp,t1,1
 3e6:	1400                	addi	s0,sp,544
 3e8:	0005                	c.nop	1
 3ea:	1349                	addi	t1,t1,-14
 3ec:	0000                	unimp
 3ee:	2615                	jal	712 <__DTOR_END__+0x21e>
 3f0:	4900                	lw	s0,16(a0)
 3f2:	16000013          	li	zero,352
 3f6:	0e030113          	addi	sp,t1,224
 3fa:	0b3a050b          	0xb3a050b
 3fe:	0b39053b          	0xb39053b
 402:	1301                	addi	t1,t1,-32
 404:	0000                	unimp
 406:	03000d17          	auipc	s10,0x3000
 40a:	3a0e                	fld	fs4,224(sp)
 40c:	39053b0b          	0x39053b0b
 410:	3813490b          	0x3813490b
 414:	1800000b          	0x1800000b
 418:	000d                	c.nop	3
 41a:	0b3a0e03          	lb	t3,179(s4)
 41e:	0b39053b          	0xb39053b
 422:	1349                	addi	t1,t1,-14
 424:	0538                	addi	a4,sp,648
 426:	0000                	unimp
 428:	1319                	addi	t1,t1,-26
 42a:	0301                	addi	t1,t1,0
 42c:	0b0e                	slli	s6,s6,0x3
 42e:	3b0b3a0b          	0x3b0b3a0b
 432:	3905                	jal	62 <__DYNAMIC+0x62>
 434:	0013010b          	0x13010b
 438:	1a00                	addi	s0,sp,304
 43a:	0b0b0113          	addi	sp,s6,176
 43e:	0b3a                	slli	s6,s6,0xe
 440:	0b39053b          	0xb39053b
 444:	1301                	addi	t1,t1,-32
 446:	0000                	unimp
 448:	0b01171b          	0xb01171b
 44c:	3b0b3a0b          	0x3b0b3a0b
 450:	3905                	jal	80 <__DYNAMIC+0x80>
 452:	0013010b          	0x13010b
 456:	1c00                	addi	s0,sp,560
 458:	000d                	c.nop	3
 45a:	0b3a0e03          	lb	t3,179(s4)
 45e:	0b39053b          	0xb39053b
 462:	1349                	addi	t1,t1,-14
 464:	0000                	unimp
 466:	131d                	addi	t1,t1,-25
 468:	0300                	addi	s0,sp,384
 46a:	3c0e                	fld	fs8,224(sp)
 46c:	0019                	c.nop	6
 46e:	1e00                	addi	s0,sp,816
 470:	0115                	addi	sp,sp,5
 472:	13011927          	0x13011927
 476:	0000                	unimp
 478:	341f 0300 3a0e      	0x3a0e0300341f
 47e:	39053b0b          	0x39053b0b
 482:	3f13490b          	0x3f13490b
 486:	3c19                	jal	fffffe9c <_stack_start+0xfffefe9c>
 488:	0019                	c.nop	6
 48a:	2000                	fld	fs0,0(s0)
 48c:	0034                	addi	a3,sp,8
 48e:	0b3a0e03          	lb	t3,179(s4)
 492:	0b390b3b          	0xb390b3b
 496:	1349                	addi	t1,t1,-14
 498:	1802                	slli	a6,a6,0x20
 49a:	0000                	unimp
 49c:	2e21                	jal	7b4 <__DTOR_END__+0x2c0>
 49e:	3f01                	jal	3ae <_start+0xe>
 4a0:	0319                	addi	t1,t1,6
 4a2:	3a0e                	fld	fs4,224(sp)
 4a4:	390b3b0b          	0x390b3b0b
{
 4a8:	1119270b          	0x1119270b
 4ac:	1201                	addi	tp,tp,-32
 4ae:	4006                	0x4006
  initialise_board ();
 4b0:	9718                	0x9718
 4b2:	1942                	slli	s2,s2,0x30
  initialise_benchmark ();
 4b4:	1301                	addi	t1,t1,-32
 4b6:	0000                	unimp
  warm_caches (WARMUP_HEAT);
 4b8:	0522                	slli	a0,a0,0x8
 4ba:	0300                	addi	s0,sp,384
 4bc:	3a08                	fld	fa0,48(a2)
 4be:	390b3b0b          	0x390b3b0b
  start_trigger ();
 4c2:	0213490b          	0x213490b
  result = benchmark ();
 4c6:	0018                	0x18
 4c8:	2300                	fld	fs0,0(a4)
 4ca:	012e                	slli	sp,sp,0xb
  stop_trigger ();
 4cc:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
  correct = verify_benchmark (result);
 4d4:	0b39                	addi	s6,s6,14
 4d6:	13491927          	0x13491927
 4da:	0111                	addi	sp,sp,4
    asm("wfi");
 4dc:	0612                	slli	a2,a2,0x4
 4de:	1840                	addi	s0,sp,52
 4e0:	01194297          	auipc	t0,0x1194
 4e4:	24000013          	li	zero,576
 4e8:	0005                	c.nop	1
 4ea:	0b3a0803          	lb	a6,179(s4)
 4ee:	0b390b3b          	0xb390b3b
 4f2:	1349                	addi	t1,t1,-14
 4f4:	1702                	slli	a4,a4,0x20
 4f6:	0000                	unimp
 4f8:	0525                	addi	a0,a0,9
 4fa:	0300                	addi	s0,sp,384
 4fc:	3a0e                	fld	fs4,224(sp)
 4fe:	390b3b0b          	0x390b3b0b
 502:	0213490b          	0x213490b
 506:	0018                	0x18
 508:	2600                	fld	fs0,8(a2)
 50a:	0034                	addi	a3,sp,8
 50c:	0b3a0e03          	lb	t3,179(s4)
 510:	0b390b3b          	0xb390b3b
 514:	1349                	addi	t1,t1,-14
 516:	1702                	slli	a4,a4,0x20
 518:	0000                	unimp
 51a:	11010b27          	0x11010b27
 51e:	1201                	addi	tp,tp,-32
 520:	0006                	c.slli	zero,0x1
 522:	2800                	fld	fs0,16(s0)
 524:	0034                	addi	a3,sp,8
 526:	0b3a0803          	lb	a6,179(s4)
 52a:	0b390b3b          	0xb390b3b
 52e:	1349                	addi	t1,t1,-14
 530:	1702                	slli	a4,a4,0x20
 532:	0000                	unimp
 534:	0529                	addi	a0,a0,10
 536:	0300                	addi	s0,sp,384
 538:	3a0e                	fld	fs4,224(sp)
 53a:	390b3b0b          	0x390b3b0b
 53e:	0213490b          	0x213490b
 542:	2a000017          	auipc	zero,0x2a000
 546:	8289                	srli	a3,a3,0x2
 548:	0101                	addi	sp,sp,0
 54a:	0111                	addi	sp,sp,4
 54c:	1331                	addi	t1,t1,-20
 54e:	1301                	addi	t1,t1,-32
 550:	0000                	unimp
 552:	01828a2b          	0x1828a2b
 556:	0200                	addi	s0,sp,256
 558:	9118                	0x9118
 55a:	1842                	slli	a6,a6,0x30
 55c:	0000                	unimp
 55e:	892c                	0x892c
 560:	0182                	c.slli64	gp
 562:	1101                	addi	sp,sp,-32
 564:	3101                	jal	164 <rand_beebs>
 566:	2d000013          	li	zero,720
 56a:	002e                	c.slli	zero,0xb
 56c:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 574:	0b39                	addi	s6,s6,14
 576:	13491927          	0x13491927
 57a:	0111                	addi	sp,sp,4
 57c:	0612                	slli	a2,a2,0x4
 57e:	1840                	addi	s0,sp,52
 580:	00194297          	auipc	t0,0x194
 584:	2e00                	fld	fs0,24(a2)
 586:	002e                	c.slli	zero,0xb
 588:	193c193f 0e030e6e 	0xe030e6e193c193f
 590:	0b3a                	slli	s6,s6,0xe
 592:	00000b3b          	0xb3b
 596:	0100                	addi	s0,sp,128
 598:	0111                	addi	sp,sp,4
 59a:	0e25                	addi	t3,t3,9
 59c:	0e030b13          	addi	s6,t1,224
 5a0:	01110e1b          	0x1110e1b
 5a4:	0612                	slli	a2,a2,0x4
 5a6:	1710                	addi	a2,sp,928
 5a8:	0000                	unimp
 5aa:	2e02                	fld	ft8,0(sp)
 5ac:	3f00                	fld	fs0,56(a4)
 5ae:	0319                	addi	t1,t1,6
 5b0:	3a0e                	fld	fs4,224(sp)
 5b2:	390b3b0b          	0x390b3b0b
 5b6:	1201110b          	0x1201110b
 5ba:	4006                	0x4006
 5bc:	9718                	0x9718
 5be:	1942                	slli	s2,s2,0x30
 5c0:	0000                	unimp
 5c2:	0100                	addi	s0,sp,128
 5c4:	0111                	addi	sp,sp,4
 5c6:	0e25                	addi	t3,t3,9
 5c8:	0e030b13          	addi	s6,t1,224
 5cc:	17550e1b          	0x17550e1b
 5d0:	0111                	addi	sp,sp,4
 5d2:	1710                	addi	a2,sp,928
 5d4:	0000                	unimp
 5d6:	2402                	fld	fs0,0(sp)
 5d8:	0b00                	addi	s0,sp,400
 5da:	030b3e0b          	0x30b3e0b
 5de:	0008                	0x8
 5e0:	0300                	addi	s0,sp,384
 5e2:	0035                	c.nop	13
 5e4:	1349                	addi	t1,t1,-14
 5e6:	0000                	unimp
 5e8:	2404                	fld	fs1,8(s0)
 5ea:	0b00                	addi	s0,sp,400
 5ec:	030b3e0b          	0x30b3e0b
 5f0:	000e                	c.slli	zero,0x3
 5f2:	0500                	addi	s0,sp,640
 5f4:	012e                	slli	sp,sp,0xb
 5f6:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 5fe:	0b39                	addi	s6,s6,14
 600:	13491927          	0x13491927
 604:	0111                	addi	sp,sp,4
 606:	0612                	slli	a2,a2,0x4
 608:	1840                	addi	s0,sp,52
 60a:	01194297          	auipc	t0,0x1194
 60e:	06000013          	li	zero,96
 612:	0005                	c.nop	1
 614:	0b3a0e03          	lb	t3,179(s4)
 618:	0b390b3b          	0xb390b3b
 61c:	1349                	addi	t1,t1,-14
 61e:	1702                	slli	a4,a4,0x20
 620:	0000                	unimp
 622:	03003407          	fld	fs0,48(zero) # 30 <__DYNAMIC+0x30>
 626:	3a0e                	fld	fs4,224(sp)
 628:	390b3b0b          	0x390b3b0b
 62c:	0213490b          	0x213490b
 630:	0018                	0x18
 632:	0800                	addi	s0,sp,16
 634:	8289                	srli	a3,a3,0x2
 636:	0001                	nop
 638:	0111                	addi	sp,sp,4
 63a:	1331                	addi	t1,t1,-20
 63c:	0000                	unimp
 63e:	8909                	andi	a0,a0,2
 640:	0182                	c.slli64	gp
 642:	1101                	addi	sp,sp,-32
 644:	3101                	jal	244 <calloc_beebs>
 646:	00130113          	addi	sp,t1,1
 64a:	0a00                	addi	s0,sp,272
 64c:	828a                	mv	t0,sp
 64e:	0001                	nop
 650:	1802                	slli	a6,a6,0x20
 652:	4291                	li	t0,4
 654:	0018                	0x18
 656:	0b00                	addi	s0,sp,400
 658:	0b0b000f          	0xb0b000f
 65c:	1349                	addi	t1,t1,-14
 65e:	0000                	unimp
 660:	2e0c                	fld	fa1,24(a2)
 662:	3f00                	fld	fs0,56(a4)
 664:	3c19                	jal	7a <__DYNAMIC+0x7a>
 666:	6e19                	lui	t3,0x6
 668:	030e                	slli	t1,t1,0x3
 66a:	3a0e                	fld	fs4,224(sp)
 66c:	390b3b0b          	0x390b3b0b
 670:	0000000b          	0xb
 674:	1101                	addi	sp,sp,-32
 676:	1000                	addi	s0,sp,32
 678:	5506                	lw	a0,96(sp)
 67a:	0306                	slli	t1,t1,0x1
 67c:	1b0e                	slli	s6,s6,0x23
 67e:	250e                	fld	fa0,192(sp)
 680:	130e                	slli	t1,t1,0x23
 682:	0005                	c.nop	1
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
  .endr
   0:	00c4                	addi	s1,sp,68
   2:	0000                	unimp
   4:	00d0                	addi	a2,sp,68
   6:	0000                	unimp
   8:	0001                	nop
   a:	d05a                	sw	s6,32(sp)
   c:	0000                	unimp
   e:	d400                	sw	s0,40(s0)
  10:	0000                	unimp
  12:	0500                	addi	s0,sp,640
  14:	7a00                	flw	fs0,48(a2)
  16:	d9a9                	beqz	a1,ffffff68 <_stack_start+0xfffeff68>
  18:	9f00                	0x9f00
  1a:	00d4                	addi	a3,sp,68
  1c:	0000                	unimp
  1e:	00d8                	addi	a4,sp,68
  20:	0000                	unimp
  22:	0004                	0x4
  24:	9f5a01f3          	0x9f5a01f3
	...
  30:	0064                	addi	s1,sp,12
  32:	0000                	unimp
  34:	007c                	addi	a5,sp,12
  36:	0000                	unimp
  38:	0001                	nop
  3a:	7c5a                	flw	fs8,180(sp)
  3c:	0000                	unimp
  3e:	9000                	0x9000
  40:	0000                	unimp
  42:	0100                	addi	s0,sp,128
  44:	5900                	lw	s0,48(a0)
  46:	0090                	addi	a2,sp,64
  48:	0000                	unimp
  4a:	009c                	addi	a5,sp,64
  4c:	0000                	unimp
  4e:	0004                	0x4
  50:	9f5a01f3          	0x9f5a01f3
  54:	009c                	addi	a5,sp,64
  56:	0000                	unimp
  58:	00b4                	addi	a3,sp,72
  5a:	0000                	unimp
  5c:	0001                	nop
  5e:	0059                	c.nop	22
  60:	0000                	unimp
  62:	0000                	unimp
  64:	0000                	unimp
  66:	6400                	flw	fs0,8(s0)
  68:	0000                	unimp
  6a:	7c00                	flw	fs0,56(s0)
  6c:	0000                	unimp
  6e:	0200                	addi	s0,sp,256
  70:	3000                	fld	fs0,32(s0)
  72:	7c9f 0000 8800      	0x880000007c9f
  78:	0000                	unimp
  7a:	0100                	addi	s0,sp,128
  jal x0, default_exc_handler
  7c:	5800                	lw	s0,48(s0)
  7e:	009c                	addi	a5,sp,64
  jal x0, reset_handler
  80:	0000                	unimp
  82:	00b4                	addi	a3,sp,72
  jal x0, default_exc_handler
  84:	0000                	unimp
  86:	0001                	nop
  jal x0, default_exc_handler
  88:	0058                	addi	a4,sp,4
  8a:	0000                	unimp
{
  8c:	0000                	unimp
  8e:	0000                	unimp
  90:	7c00                	flw	fs0,56(s0)
  92:	0000                	unimp
  94:	a300                	fsd	fs0,0(a4)
  96:	0000                	unimp
  98:	0100                	addi	s0,sp,128
  9a:	5f00                	lw	s0,56(a4)
  9c:	00ac                	addi	a1,sp,72
  9e:	0000                	unimp
  a0:	00b4                	addi	a3,sp,72
  a2:	0000                	unimp
  oldcrc32 = 0xFFFFFFFF;
  a4:	0001                	nop
  a6:	005a                	c.slli	zero,0x16
      oldcrc32 = UPDC32 (rand_beebs (), oldcrc32);
  a8:	0000                	unimp
  aa:	0000                	unimp
  ac:	0000                	unimp
  ae:	b800                	fsd	fs0,48(s0)
  b0:	0000                	unimp
  b2:	bb00                	fsd	fs0,48(a4)
  b4:	0000                	unimp
  b6:	0100                	addi	s0,sp,128
  b8:	5a00                	lw	s0,48(a2)
  ba:	000000bb          	0xbb
  be:	00bc                	addi	a5,sp,72
  c0:	0000                	unimp
  c2:	0004                	0x4
  c4:	9f5a01f3          	0x9f5a01f3
	...
}
  d4:	0020                	addi	s0,sp,8
  d6:	0000                	unimp
  d8:	0002                	c.slli64	zero
  da:	9f30                	0x9f30
  dc:	0020                	addi	s0,sp,8
  de:	0000                	unimp
  e0:	0040                	addi	s0,sp,4
  e2:	0000                	unimp
  e4:	000a0007          	0xa0007
  e8:	7904                	flw	fs1,48(a0)
  ea:	1c00                	addi	s0,sp,560
  ec:	409f 0000 4400      	0x44000000409f
{
  f2:	0000                	unimp
  f4:	0700                	addi	s0,sp,896
  f6:	0a00                	addi	s0,sp,272
  f8:	03ff                	0x3ff
  fa:	0079                	c.nop	30
  fc:	9f1c                	0x9f1c
	...
  for (i = 0; i < rpt; i++)
 10a:	0020                	addi	s0,sp,8
}
 10c:	0000                	unimp
 10e:	ff090003          	lb	zero,-16(s2) # ff0 <_bss_end+0x6ec>
 112:	209f 0000 3c00      	0x3c000000209f
 118:	0000                	unimp
 11a:	0100                	addi	s0,sp,128
 11c:	5800                	lw	s0,48(s0)
 11e:	0044                	addi	s1,sp,4
 120:	0000                	unimp
 122:	0054                	addi	a3,sp,4
 124:	0000                	unimp
 126:	0001                	nop
      srand_beebs (0);
 128:	5458                	lw	a4,44(s0)
 12a:	0000                	unimp
 12c:	6400                	flw	fs0,8(s0)
 12e:	0000                	unimp
      r = crc32pseudo ();
 130:	0400                	addi	s0,sp,512
 132:	7a00                	flw	fs0,48(a2)
 134:	2000                	fld	fs0,0(s0)
 136:	009f 0000 0000      	0x9f
  for (i = 0; i < rpt; i++)
 13c:	0000                	unimp
 13e:	2400                	fld	fs0,8(s0)
}
 140:	0001                	nop
 142:	8c00                	0x8c00
  int  res = benchmark_body (heat);
 144:	0001                	nop
 146:	0100                	addi	s0,sp,128
  return benchmark_body (LOCAL_SCALE_FACTOR * CPU_MHZ);
 148:	5a00                	lw	s0,48(a2)
 14a:	018c                	addi	a1,sp,192
 14c:	0000                	unimp
 14e:	0190                	addi	a2,sp,192
  return 11433 == r;
 150:	0000                	unimp
 152:	0004                	0x4
 154:	9f5a01f3          	0x9f5a01f3
 158:	0190                	addi	a2,sp,192
 15a:	0000                	unimp
}
 15c:	0198                	addi	a4,sp,192
 15e:	0000                	unimp
 160:	0001                	nop
 162:	005a                	c.slli	zero,0x16
  seed = (seed * 1103515245L + 12345) & ((1UL << 31) - 1);
 164:	0000                	unimp
 166:	0000                	unimp
 168:	0000                	unimp
 16a:	3c00                	fld	fs0,56(s0)
 16c:	0001                	nop
 16e:	8800                	0x8800
 170:	0001                	nop
 172:	0100                	addi	s0,sp,128
 174:	5f00                	lw	s0,56(a4)
 176:	0190                	addi	a2,sp,192
 178:	0000                	unimp
 17a:	0194                	addi	a3,sp,192
 17c:	0000                	unimp
 17e:	0001                	nop
 180:	945f 0001 9800      	0x98000001945f
 186:	0001                	nop
 188:	0500                	addi	s0,sp,640
 18a:	0300                	addi	s0,sp,384
 18c:	08fc                	addi	a5,sp,92
	...
}
 196:	0000                	unimp
 198:	0170                	addi	a2,sp,140
 19a:	0000                	unimp
  seed = (long int) new_seed;
 19c:	0188                	addi	a0,sp,192
 19e:	0000                	unimp
 1a0:	0001                	nop
 1a2:	005e                	c.slli	zero,0x17
}
 1a4:	0000                	unimp
 1a6:	0000                	unimp
  heap_end = (void *) ((char *) heap_ptr + heap_size);
 1a8:	0000                	unimp
 1aa:	e000                	fsw	fs0,0(s0)
  heap_ptr = (void *) heap;
 1ac:	0000                	unimp
 1ae:	f400                	fsw	fs0,40(s0)
 1b0:	0000                	unimp
 1b2:	0100                	addi	s0,sp,128
  heap_end = (void *) ((char *) heap_ptr + heap_size);
 1b4:	5a00                	lw	s0,48(a2)
 1b6:	00f4                	addi	a3,sp,76
 1b8:	0000                	unimp
 1ba:	0124                	addi	s1,sp,136
  heap_requested = 0;
 1bc:	0000                	unimp
 1be:	0004                	0x4
 1c0:	9f5a01f3          	0x9f5a01f3
	...
  return ((void *) ((char *) heap + heap_requested) <= heap_end);
 1cc:	00e0                	addi	s0,sp,76
 1ce:	0000                	unimp
 1d0:	000000fb          	0xfb
 1d4:	0001                	nop
 1d6:	0000fb5b          	0xfb5b
 1da:	2400                	fld	fs0,8(s0)
 1dc:	0001                	nop
 1de:	0400                	addi	s0,sp,512
 1e0:	f300                	fsw	fs0,32(a4)
 1e2:	5b01                	li	s6,-32
 1e4:	009f 0000 0000      	0x9f
}
 1ea:	0000                	unimp
 1ec:	0000                	unimp
 1ee:	0001                	nop
  heap_requested += size;
 1f0:	1c00                	addi	s0,sp,560
 1f2:	0001                	nop
 1f4:	0100                	addi	s0,sp,128
 1f6:	5800                	lw	s0,48(s0)
 1f8:	011c                	addi	a5,sp,128
 1fa:	0000                	unimp
  void *new_ptr = heap_ptr;
 1fc:	0124                	addi	s1,sp,136
 1fe:	0000                	unimp
 200:	0001                	nop
 202:	005a                	c.slli	zero,0x16
 204:	0000                	unimp
 206:	0000                	unimp
  heap_requested += size;
 208:	0000                	unimp
 20a:	8c00                	0x8c00
 20c:	0000                	unimp
 20e:	d400                	sw	s0,40(s0)
 210:	0000                	unimp
 212:	0100                	addi	s0,sp,128
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
 214:	5a00                	lw	s0,48(a2)
 216:	00d4                	addi	a3,sp,68
 218:	0000                	unimp
 21a:	00d8                	addi	a4,sp,68
 21c:	0000                	unimp
 21e:	0004                	0x4
 220:	9f5a01f3          	0x9f5a01f3
 224:	00d8                	addi	a4,sp,68
 226:	0000                	unimp
 228:	00e0                	addi	s0,sp,76
 22a:	0000                	unimp
      heap_ptr = (void *) ((char *) heap_ptr + size);
 22c:	0001                	nop
 22e:	005a                	c.slli	zero,0x16
 230:	0000                	unimp
 232:	0000                	unimp
}
 234:	0000                	unimp
 236:	a400                	fsd	fs0,8(s0)
 238:	0000                	unimp
 23a:	d000                	sw	s0,32(s0)
    return NULL;
 23c:	0000                	unimp
 23e:	0100                	addi	s0,sp,128
 240:	5f00                	lw	s0,56(a4)
 242:	00d8                	addi	a4,sp,68
  void *new_ptr = malloc_beebs (nmemb * size);
 244:	0000                	unimp
 246:	00dc                	addi	a5,sp,68
{
 248:	0000                	unimp
 24a:	0001                	nop
 24c:	dc5f 0000 e000      	0xe0000000dc5f
 252:	0000                	unimp
  void *new_ptr = malloc_beebs (nmemb * size);
 254:	0500                	addi	s0,sp,640
 256:	0300                	addi	s0,sp,384
 258:	08fc                	addi	a5,sp,92
	...
 262:	0000                	unimp
  if (NULL != new_ptr)
 264:	0064                	addi	s1,sp,12
 266:	0000                	unimp
    memset (new_ptr, 0, nmemb * size);
 268:	0074                	addi	a3,sp,12
 26a:	0000                	unimp
 26c:	0001                	nop
 26e:	745a                	flw	fs0,180(sp)
 270:	0000                	unimp
 272:	8c00                	0x8c00
}
 274:	0000                	unimp
 276:	0400                	addi	s0,sp,512
 278:	f300                	fsw	fs0,32(a4)
 27a:	5a01                	li	s4,-32
 27c:	009f 0000 0000      	0x9f
 282:	0000                	unimp
 284:	4400                	lw	s0,8(s0)
 286:	0000                	unimp
  heap_requested += size;
 288:	4800                	lw	s0,16(s0)
 28a:	0000                	unimp
 28c:	0100                	addi	s0,sp,128
 28e:	5b00                	lw	s0,48(a4)
 290:	0048                	addi	a0,sp,4
 292:	0000                	unimp
  void *new_ptr = heap_ptr;
 294:	0064                	addi	s1,sp,12
 296:	0000                	unimp
 298:	0004                	0x4
 29a:	9f5b01f3          	0x9f5b01f3
	...
  heap_requested += size;
 2a6:	04a8                	addi	a0,sp,584
 2a8:	0000                	unimp
 2aa:	000004b3          	add	s1,zero,zero
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
 2ae:	0001                	nop
 2b0:	b35a                	fsd	fs6,416(sp)
 2b2:	0004                	0x4
 2b4:	e400                	fsw	fs0,8(s0)
 2b6:	0004                	0x4
 2b8:	0400                	addi	s0,sp,512
 2ba:	f300                	fsw	fs0,32(a4)
 2bc:	5a01                	li	s4,-32
 2be:	009f 0000 0000      	0x9f
      heap_ptr = (void *) ((char *) heap_ptr + size);
 2c4:	0000                	unimp
 2c6:	a800                	fsd	fs0,16(s0)
 2c8:	0004                	0x4
 2ca:	b300                	fsd	fs0,32(a4)
      if (NULL != ptr)
 2cc:	0004                	0x4
 2ce:	0100                	addi	s0,sp,128
	  for (i = 0; i < size; i++)
 2d0:	5b00                	lw	s0,48(a4)
 2d2:	000004b3          	add	s1,zero,zero
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
 2d6:	04e4                	addi	s1,sp,588
 2d8:	0000                	unimp
 2da:	0004                	0x4
 2dc:	9f5b01f3          	0x9f5b01f3
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
  .endr
   0:	001c                	0x1c
   2:	0000                	unimp
   4:	0002                	c.slli64	zero
   6:	0000                	unimp
   8:	0000                	unimp
   a:	0004                	0x4
   c:	0000                	unimp
   e:	0000                	unimp
  10:	008c                	addi	a1,sp,64
  12:	0000                	unimp
  14:	00d8                	addi	a4,sp,68
	...
  1e:	0000                	unimp
  20:	001c                	0x1c
  22:	0000                	unimp
  24:	0002                	c.slli64	zero
  26:	0ad8                	addi	a4,sp,340
  28:	0000                	unimp
  2a:	0004                	0x4
  2c:	0000                	unimp
  2e:	0000                	unimp
  30:	0164                	addi	s1,sp,140
  32:	0000                	unimp
  34:	019c                	addi	a5,sp,192
	...
  3e:	0000                	unimp
  40:	001c                	0x1c
  42:	0000                	unimp
  44:	0002                	c.slli64	zero
  46:	1625                	addi	a2,a2,-23
  48:	0000                	unimp
  4a:	0004                	0x4
  4c:	0000                	unimp
  4e:	0000                	unimp
  50:	0300                	addi	s0,sp,384
  52:	0000                	unimp
  54:	0018                	0x18
	...
  5e:	0000                	unimp
  60:	001c                	0x1c
  62:	0000                	unimp
  64:	0002                	c.slli64	zero
  66:	1681                	addi	a3,a3,-32
  68:	0000                	unimp
  6a:	0004                	0x4
  6c:	0000                	unimp
  6e:	0000                	unimp
  70:	04a8                	addi	a0,sp,584
  72:	0000                	unimp
  74:	003c                	addi	a5,sp,8
	...
  jal x0, default_exc_handler
  7e:	0000                	unimp
  jal x0, reset_handler
  80:	0024                	addi	s1,sp,8
  82:	0000                	unimp
  jal x0, default_exc_handler
  84:	0002                	c.slli64	zero
  86:	17d1                	addi	a5,a5,-12
  jal x0, default_exc_handler
  88:	0000                	unimp
  8a:	0004                	0x4
{
  8c:	0000                	unimp
  8e:	0000                	unimp
  90:	0318                	addi	a4,sp,384
  92:	0000                	unimp
  94:	00b4                	addi	a3,sp,72
  96:	0000                	unimp
  98:	0000                	unimp
  9a:	0000                	unimp
  9c:	008c                	addi	a1,sp,64
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
  .endr
   0:	0362                	slli	t1,t1,0x18
   2:	0000                	unimp
   4:	01de0003          	lb	zero,29(t3) # 601d <_stack_len+0x201d>
   8:	0000                	unimp
   a:	0101                	addi	sp,sp,0
   c:	000d0efb          	0xd0efb
  10:	0101                	addi	sp,sp,0
  12:	0101                	addi	sp,sp,0
  14:	0000                	unimp
  16:	0100                	addi	s0,sp,128
  18:	0000                	unimp
  1a:	2f01                	jal	72a <__DTOR_END__+0x236>
  1c:	6f68                	flw	fa0,92(a4)
  1e:	656d                	lui	a0,0x1b
  20:	2f43432f          	0x2f43432f
  24:	6262                	flw	ft4,24(sp)
  26:	7565                	lui	a0,0xffff9
  28:	72657473          	csrrci	s0,0x726,10
  2c:	7070412f          	0x7070412f
  30:	696c                	flw	fa1,84(a0)
  32:	69746163          	bltu	s0,s7,6b4 <__DTOR_END__+0x1c0>
  36:	2f736e6f          	jal	t3,36b2c <_stack_start+0x26b2c>
  3a:	6972                	flw	fs2,28(sp)
  3c:	36766373          	csrrsi	t1,0x367,12
  40:	2d34                	fld	fa3,88(a0)
  42:	6e75                	lui	t3,0x1d
  44:	776f6e6b          	0x776f6e6b
  48:	2d6e                	fld	fs10,216(sp)
  4a:	6c65                	lui	s8,0x19
  4c:	2d66                	fld	fs10,88(sp)
  4e:	2d636367          	0x2d636367
  52:	2e38                	fld	fa4,88(a2)
  54:	2d302e33          	0x2d302e33
  58:	3032                	fld	ft0,296(sp)
  5a:	3931                	jal	fffffc76 <_stack_start+0xfffefc76>
  5c:	302e                	fld	ft0,232(sp)
  5e:	2e38                	fld	fa4,88(a2)
  60:	2d30                	fld	fa2,88(a0)
  62:	3878                	fld	fa4,240(s0)
  64:	5f36                	lw	t5,108(sp)
  66:	3436                	fld	fs0,360(sp)
  68:	6c2d                	lui	s8,0xb
  6a:	6e69                	lui	t3,0x1a
  6c:	7875                	lui	a6,0xffffd
  6e:	632d                	lui	t1,0xb
  70:	6e65                	lui	t3,0x19
  72:	6f74                	flw	fa3,92(a4)
  74:	6c2f3673          	csrrc	a2,0x6c2,t5
  78:	6269                	lui	tp,0x1a
  7a:	6363672f          	0x6363672f
  jal x0, default_exc_handler
  7e:	7369722f          	0x7369722f
  jal x0, reset_handler
  82:	34367663          	bgeu	a2,gp,3ce <memset+0x2>
  jal x0, default_exc_handler
  86:	752d                	lui	a0,0xfffeb
  jal x0, default_exc_handler
  88:	6b6e                	flw	fs6,216(sp)
  8a:	6f6e                	flw	ft10,216(sp)
  8c:	652d6e77          	0x652d6e77
  90:	666c                	flw	fa1,76(a2)
  92:	332e382f          	0x332e382f
  96:	302e                	fld	ft0,232(sp)
  98:	636e692f          	0x636e692f
  9c:	756c                	flw	fa1,108(a0)
  9e:	6564                	flw	fs1,76(a0)
  a0:	2f00                	fld	fs0,24(a4)
  a2:	6f68                	flw	fa0,92(a4)
  oldcrc32 = 0xFFFFFFFF;
  a4:	656d                	lui	a0,0x1b
  a6:	2f43432f          	0x2f43432f
      oldcrc32 = UPDC32 (rand_beebs (), oldcrc32);
  aa:	6262                	flw	ft4,24(sp)
  ac:	7565                	lui	a0,0xffff9
  ae:	72657473          	csrrci	s0,0x726,10
  b2:	7070412f          	0x7070412f
  b6:	696c                	flw	fa1,84(a0)
  b8:	69746163          	bltu	s0,s7,73a <__DTOR_END__+0x246>
  bc:	2f736e6f          	jal	t3,36bb2 <_stack_start+0x26bb2>
  c0:	6972                	flw	fs2,28(sp)
  c2:	36766373          	csrrsi	t1,0x367,12
  c6:	2d34                	fld	fa3,88(a0)
  c8:	6e75                	lui	t3,0x1d
  ca:	776f6e6b          	0x776f6e6b
  ce:	2d6e                	fld	fs10,216(sp)
  for (i = 0; i < 1024; ++i)
  d0:	6c65                	lui	s8,0x19
  d2:	2d66                	fld	fs10,88(sp)
}
  d4:	2d636367          	0x2d636367
  d8:	2e38                	fld	fa4,88(a2)
  da:	2d302e33          	0x2d302e33
  de:	3032                	fld	ft0,296(sp)
  e0:	3931                	jal	fffffcfc <_stack_start+0xfffefcfc>
  e2:	302e                	fld	ft0,232(sp)
  e4:	2e38                	fld	fa4,88(a2)
  e6:	2d30                	fld	fa2,88(a0)
  e8:	3878                	fld	fa4,240(s0)
  ea:	5f36                	lw	t5,108(sp)
  ec:	3436                	fld	fs0,360(sp)
  ee:	6c2d                	lui	s8,0xb
{
  f0:	6e69                	lui	t3,0x1a
  f2:	7875                	lui	a6,0xffffd
  f4:	632d                	lui	t1,0xb
  f6:	6e65                	lui	t3,0x19
  f8:	6f74                	flw	fa3,92(a4)
  fa:	722f3673          	csrrc	a2,0x722,t5
  fe:	7369                	lui	t1,0xffffa
 100:	34367663          	bgeu	a2,gp,44c <memset+0x80>
  for (i = 0; i < rpt; i++)
 104:	752d                	lui	a0,0xfffeb
 106:	6b6e                	flw	fs6,216(sp)
 108:	6f6e                	flw	ft10,216(sp)
 10a:	652d6e77          	0x652d6e77
}
 10e:	666c                	flw	fa1,76(a2)
 110:	636e692f          	0x636e692f
  return (int) (r % 32768);
 114:	756c                	flw	fa1,108(a0)
 116:	6564                	flw	fs1,76(a0)
}
 118:	7379732f          	0x7379732f
 11c:	2f00                	fld	fs0,24(a4)
 11e:	6f68                	flw	fa0,92(a4)
 120:	656d                	lui	a0,0x1b
 122:	2f43432f          	0x2f43432f
 126:	6262                	flw	ft4,24(sp)
      srand_beebs (0);
 128:	7565                	lui	a0,0xffff9
 12a:	72657473          	csrrci	s0,0x726,10
 12e:	7070412f          	0x7070412f
      r = crc32pseudo ();
 132:	696c                	flw	fa1,84(a0)
 134:	69746163          	bltu	s0,s7,7b6 <__DTOR_END__+0x2c2>
  for (i = 0; i < rpt; i++)
 138:	2f736e6f          	jal	t3,36c2e <_stack_start+0x26c2e>
 13c:	6972                	flw	fs2,28(sp)
 13e:	36766373          	csrrsi	t1,0x367,12
}
 142:	2d34                	fld	fa3,88(a0)
  int  res = benchmark_body (heat);
 144:	6e75                	lui	t3,0x1d
 146:	776f6e6b          	0x776f6e6b
  return benchmark_body (LOCAL_SCALE_FACTOR * CPU_MHZ);
 14a:	2d6e                	fld	fs10,216(sp)
 14c:	6c65                	lui	s8,0x19
 14e:	2d66                	fld	fs10,88(sp)
  return 11433 == r;
 150:	2d636367          	0x2d636367
 154:	2e38                	fld	fa4,88(a2)
 156:	2d302e33          	0x2d302e33
 15a:	3032                	fld	ft0,296(sp)
}
 15c:	3931                	jal	fffffd78 <_stack_start+0xfffefd78>
 15e:	302e                	fld	ft0,232(sp)
 160:	2e38                	fld	fa4,88(a2)
 162:	2d30                	fld	fa2,88(a0)
  seed = (seed * 1103515245L + 12345) & ((1UL << 31) - 1);
 164:	3878                	fld	fa4,240(s0)
 166:	5f36                	lw	t5,108(sp)
 168:	3436                	fld	fs0,360(sp)
 16a:	6c2d                	lui	s8,0xb
 16c:	6e69                	lui	t3,0x1a
 16e:	7875                	lui	a6,0xffffd
 170:	632d                	lui	t1,0xb
 172:	6e65                	lui	t3,0x19
 174:	6f74                	flw	fa3,92(a4)
 176:	722f3673          	csrrc	a2,0x722,t5
 17a:	7369                	lui	t1,0xffffa
 17c:	34367663          	bgeu	a2,gp,4c8 <main+0x20>
 180:	752d                	lui	a0,0xfffeb
 182:	6b6e                	flw	fs6,216(sp)
 184:	6f6e                	flw	ft10,216(sp)
 186:	652d6e77          	0x652d6e77
 18a:	666c                	flw	fa1,76(a2)
 18c:	636e692f          	0x636e692f
 190:	756c                	flw	fa1,108(a0)
 192:	6564                	flw	fs1,76(a0)
}
 194:	0000                	unimp
 196:	5f637263          	bgeu	t1,s6,77a <__DTOR_END__+0x286>
 19a:	632e3233          	0x632e3233
  seed = (long int) new_seed;
 19e:	0000                	unimp
 1a0:	0000                	unimp
 1a2:	64647473          	csrrci	s0,0x646,8
}
 1a6:	6665                	lui	a2,0x19
  heap_end = (void *) ((char *) heap_ptr + heap_size);
 1a8:	682e                	flw	fa6,200(sp)
 1aa:	0100                	addi	s0,sp,128
  heap_ptr = (void *) heap;
 1ac:	0000                	unimp
 1ae:	745f 7079 7365      	0x73657079745f
  heap_end = (void *) ((char *) heap_ptr + heap_size);
 1b4:	682e                	flw	fa6,200(sp)
 1b6:	0200                	addi	s0,sp,256
 1b8:	0000                	unimp
 1ba:	6572                	flw	fa0,28(sp)
  heap_requested = 0;
 1bc:	6e65                	lui	t3,0x19
 1be:	2e74                	fld	fa3,216(a2)
 1c0:	0068                	addi	a0,sp,12
 1c2:	0002                	c.slli64	zero
}
 1c4:	6c00                	flw	fs0,24(s0)
 1c6:	2e6b636f          	jal	t1,b64ac <_stack_start+0xa64ac>
  return ((void *) ((char *) heap + heap_requested) <= heap_end);
 1ca:	0068                	addi	a0,sp,12
 1cc:	0002                	c.slli64	zero
 1ce:	7300                	flw	fs0,32(a4)
 1d0:	6474                	flw	fa3,76(s0)
 1d2:	696c                	flw	fa1,84(a0)
 1d4:	2e62                	fld	ft8,24(sp)
 1d6:	0068                	addi	a0,sp,12
 1d8:	62000003          	lb	zero,1568(zero) # 620 <__DTOR_END__+0x12c>
 1dc:	6565                	lui	a0,0x19
 1de:	7362                	flw	ft6,56(sp)
 1e0:	00682e63          	0x682e63
 1e4:	0000                	unimp
 1e6:	0000                	unimp
}
 1e8:	0105                	addi	sp,sp,1
 1ea:	0500                	addi	s0,sp,640
 1ec:	8c02                	jr	s8
 1ee:	0000                	unimp
  heap_requested += size;
 1f0:	0300                	addi	s0,sp,384
 1f2:	0198                	addi	a4,sp,192
 1f4:	0501                	addi	a0,a0,0
 1f6:	09010303          	lb	t1,144(sp) # b0b03c2 <_stack_start+0xb0a03c2>
 1fa:	0000                	unimp
  void *new_ptr = heap_ptr;
 1fc:	0301                	addi	t1,t1,0
 1fe:	0901                	addi	s2,s2,0
 200:	0000                	unimp
 202:	0301                	addi	t1,t1,0
 204:	0902                	c.slli64	s2
 206:	0000                	unimp
  heap_requested += size;
 208:	0301                	addi	t1,t1,0
 20a:	0902                	c.slli64	s2
 20c:	0000                	unimp
 20e:	0501                	addi	a0,a0,0
 210:	0601                	addi	a2,a2,0
 212:	00097a03          	0x97a03
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
 216:	0100                	addi	s0,sp,128
 218:	14090003          	lb	zero,320(s2)
 21c:	0100                	addi	s0,sp,128
 21e:	0c05                	addi	s8,s8,1
 220:	04090403          	lb	s0,64(s2)
 224:	0100                	addi	s0,sp,128
 226:	1205                	addi	tp,tp,-31
 228:	04090403          	lb	s0,64(s2)
      heap_ptr = (void *) ((char *) heap_ptr + size);
 22c:	0100                	addi	s0,sp,128
 22e:	0705                	addi	a4,a4,1
 230:	0200                	addi	s0,sp,256
 232:	0304                	addi	s1,sp,384
}
 234:	0306                	slli	t1,t1,0x1
 236:	0900                	addi	s0,sp,144
 238:	0004                	0x4
 23a:	0501                	addi	a0,a0,0
    return NULL;
 23c:	0012                	c.slli	zero,0x4
 23e:	0402                	c.slli64	s0
 240:	00030603          	lb	a2,0(t1) # ffffa000 <_stack_start+0xfffea000>
  void *new_ptr = malloc_beebs (nmemb * size);
 244:	0009                	c.nop	2
 246:	0100                	addi	s0,sp,128
{
 248:	1005                	c.nop	-31
 24a:	0200                	addi	s0,sp,256
 24c:	0304                	addi	s1,sp,384
 24e:	20090003          	lb	zero,512(s2)
 252:	0100                	addi	s0,sp,128
  void *new_ptr = malloc_beebs (nmemb * size);
 254:	0305                	addi	t1,t1,1
 256:	0200                	addi	s0,sp,256
 258:	0304                	addi	s1,sp,384
 25a:	04097e03          	0x4097e03
 25e:	0100                	addi	s0,sp,128
 260:	0306                	slli	t1,t1,0x1
 262:	0905                	addi	s2,s2,1
  if (NULL != new_ptr)
 264:	0004                	0x4
 266:	0501                	addi	a0,a0,0
    memset (new_ptr, 0, nmemb * size);
 268:	0601                	addi	a2,a2,0
 26a:	00090103          	lb	sp,0(s2)
 26e:	0100                	addi	s0,sp,128
 270:	0306                	slli	t1,t1,0x1
 272:	091c                	addi	a5,sp,144
}
 274:	001c                	0x1c
 276:	0501                	addi	a0,a0,0
 278:	09010303          	lb	t1,144(sp)
 27c:	0000                	unimp
 27e:	0301                	addi	t1,t1,0
 280:	0901                	addi	s2,s2,0
 282:	0000                	unimp
 284:	0301                	addi	t1,t1,0
 286:	0902                	c.slli64	s2
  heap_requested += size;
 288:	0000                	unimp
 28a:	0501                	addi	a0,a0,0
 28c:	0601                	addi	a2,a2,0
 28e:	00097c03          	0x97c03
 292:	0100                	addi	s0,sp,128
  void *new_ptr = heap_ptr;
 294:	10090003          	lb	zero,256(s2)
 298:	0100                	addi	s0,sp,128
 29a:	0a05                	addi	s4,s4,1
 29c:	04090403          	lb	s0,64(s2)
  heap_requested += size;
 2a0:	0100                	addi	s0,sp,128
 2a2:	0305                	addi	t1,t1,1
 2a4:	0200                	addi	s0,sp,256
 2a6:	0104                	addi	s1,sp,128
 2a8:	04090003          	lb	zero,64(s2)
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
 2ac:	0100                	addi	s0,sp,128
 2ae:	0306                	slli	t1,t1,0x1
 2b0:	0906                	slli	s2,s2,0x1
 2b2:	0004                	0x4
 2b4:	0501                	addi	a0,a0,0
 2b6:	0601                	addi	a2,a2,0
 2b8:	00090103          	lb	sp,0(s2)
 2bc:	0100                	addi	s0,sp,128
 2be:	0a05                	addi	s4,s4,1
 2c0:	08097f03          	0x8097f03
      heap_ptr = (void *) ((char *) heap_ptr + size);
 2c4:	0100                	addi	s0,sp,128
 2c6:	0105                	addi	sp,sp,1
 2c8:	04090103          	lb	sp,64(s2)
      if (NULL != ptr)
 2cc:	0100                	addi	s0,sp,128
 2ce:	0705                	addi	a4,a4,1
	  for (i = 0; i < size; i++)
 2d0:	0200                	addi	s0,sp,256
 2d2:	0304                	addi	s1,sp,384
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
 2d4:	0306                	slli	t1,t1,0x1
 2d6:	0010097b          	0x10097b
 2da:	0001                	nop
 2dc:	0402                	c.slli64	s0
 2de:	09010303          	lb	t1,144(sp)
	  for (i = 0; i < size; i++)
 2e2:	0008                	0x8
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
 2e4:	0501                	addi	a0,a0,0
 2e6:	0402000b          	0x402000b
	  for (i = 0; i < size; i++)
 2ea:	00030603          	lb	a2,0(t1)
}
 2ee:	0009                	c.nop	2
 2f0:	0100                	addi	s0,sp,128
 2f2:	1905                	addi	s2,s2,-31
    return NULL;
 2f4:	0200                	addi	s0,sp,256
 2f6:	0304                	addi	s1,sp,384
 2f8:	08097d03          	0x8097d03
}
 2fc:	0100                	addi	s0,sp,128
 2fe:	0105                	addi	sp,sp,1
  __asm__ volatile ("li a0, 0" : : : "memory");
 300:	0306                	slli	t1,t1,0x1
 302:	0964                	addi	s1,sp,156
}
 304:	0008                	0x8
 306:	0301                	addi	t1,t1,0
  __asm__ volatile ("li a0, 0" : : : "memory");
 308:	0901                	addi	s2,s2,0
 30a:	0000                	unimp
}
 30c:	0301                	addi	t1,t1,0
 30e:	00040907          	0x40907
  __asm__ volatile ("li a0, 0" : : : "memory");
 312:	0501                	addi	a0,a0,0
}
 314:	09010303          	lb	t1,144(sp)
  jal x0, default_exc_handler
 318:	0000                	unimp
 31a:	0501                	addi	a0,a0,0
  mv  x1, x0
 31c:	060e                	slli	a2,a2,0x3
 31e:	00090003          	lb	zero,0(s2)
  mv  x2, x1
 322:	0100                	addi	s0,sp,128
  mv  x3, x1
 324:	0105                	addi	sp,sp,1
 326:	0306                	slli	t1,t1,0x1
  mv  x4, x1
 328:	0908                	addi	a0,sp,144
 32a:	0004                	0x4
  mv  x5, x1
 32c:	0501                	addi	a0,a0,0
 32e:	09010303          	lb	t1,144(sp)
  mv  x6, x1
 332:	0000                	unimp
  mv  x7, x1
 334:	0501                	addi	a0,a0,0
 336:	060a                	slli	a2,a2,0x2
  mv  x8, x1
 338:	00090003          	lb	zero,0(s2)
  mv  x9, x1
 33c:	0100                	addi	s0,sp,128
 33e:	0105                	addi	sp,sp,1
  mv x10, x1
 340:	0306                	slli	t1,t1,0x1
 342:	0916                	slli	s2,s2,0x5
  mv x11, x1
 344:	0008                	0x8
 346:	0501                	addi	a0,a0,0
  mv x12, x1
 348:	09010303          	lb	t1,144(sp)
  mv x13, x1
 34c:	0000                	unimp
 34e:	0501                	addi	a0,a0,0
  mv x14, x1
 350:	0610                	addi	a2,sp,768
 352:	00090003          	lb	zero,0(s2)
  mv x15, x1
 356:	0100                	addi	s0,sp,128
  mv x16, x1
 358:	0105                	addi	sp,sp,1
 35a:	0c090103          	lb	sp,192(s2)
  mv x17, x1
 35e:	0100                	addi	s0,sp,128
  mv x18, x1
 360:	0809                	addi	a6,a6,2
 362:	0000                	unimp
  mv x19, x1
 364:	0101                	addi	sp,sp,0
 366:	042a                	slli	s0,s0,0xa
  mv x20, x1
 368:	0000                	unimp
 36a:	015c0003          	lb	zero,21(s8) # b015 <_stack_len+0x7015>
  mv x21, x1
 36e:	0000                	unimp
  mv x22, x1
 370:	0101                	addi	sp,sp,0
 372:	000d0efb          	0xd0efb
  mv x23, x1
 376:	0101                	addi	sp,sp,0
  mv x24, x1
 378:	0101                	addi	sp,sp,0
 37a:	0000                	unimp
  mv x25, x1
 37c:	0100                	addi	s0,sp,128
 37e:	0000                	unimp
  mv x26, x1
 380:	2f01                	jal	a90 <_bss_end+0x18c>
 382:	6f68                	flw	fa0,92(a4)
  mv x27, x1
 384:	656d                	lui	a0,0x1b
 386:	2f43432f          	0x2f43432f
  mv x28, x1
 38a:	6262                	flw	ft4,24(sp)
  mv x29, x1
 38c:	7565                	lui	a0,0xffff9
 38e:	72657473          	csrrci	s0,0x726,10
  mv x30, x1
 392:	7070412f          	0x7070412f
  mv x31, x1
 396:	696c                	flw	fa1,84(a0)
  la   x2, _stack_start
 398:	69746163          	bltu	s0,s7,a1a <_bss_end+0x116>
 39c:	2f736e6f          	jal	t3,36e92 <_stack_start+0x26e92>
  la x26, _bss_start
 3a0:	6972                	flw	fs2,28(sp)
 3a2:	36766373          	csrrsi	t1,0x367,12
 3a6:	2d34                	fld	fa3,88(a0)
  la x27, _bss_end
 3a8:	6e75                	lui	t3,0x1d
 3aa:	776f6e6b          	0x776f6e6b
 3ae:	2d6e                	fld	fs10,216(sp)
  bge x26, x27, zero_loop_end
 3b0:	6c65                	lui	s8,0x19
 3b2:	2d66                	fld	fs10,88(sp)
  sw x0, 0(x26)
 3b4:	2d636367          	0x2d636367
  addi x26, x26, 4
 3b8:	2e38                	fld	fa4,88(a2)
 3ba:	2d302e33          	0x2d302e33
  ble x26, x27, zero_loop
 3be:	3032                	fld	ft0,296(sp)
  addi x10, x0, 0
 3c0:	3931                	jal	ffffffdc <_stack_start+0xfffeffdc>
 3c2:	302e                	fld	ft0,232(sp)
  addi x11, x0, 0
 3c4:	2e38                	fld	fa4,88(a2)
 3c6:	2d30                	fld	fa2,88(a0)
  jal x1, main
 3c8:	3878                	fld	fa4,240(s0)
 3ca:	5f36                	lw	t5,108(sp)
 3cc:	3436                	fld	fs0,360(sp)
 3ce:	6c2d                	lui	s8,0xb
 3d0:	6e69                	lui	t3,0x1a
 3d2:	7875                	lui	a6,0xffffd
 3d4:	632d                	lui	t1,0xb
 3d6:	6e65                	lui	t3,0x19
 3d8:	6f74                	flw	fa3,92(a4)
 3da:	6c2f3673          	csrrc	a2,0x6c2,t5
 3de:	6269                	lui	tp,0x1a
 3e0:	6363672f          	0x6363672f
 3e4:	7369722f          	0x7369722f
 3e8:	34367663          	bgeu	a2,gp,734 <__DTOR_END__+0x240>
 3ec:	752d                	lui	a0,0xfffeb
 3ee:	6b6e                	flw	fs6,216(sp)
 3f0:	6f6e                	flw	ft10,216(sp)
 3f2:	652d6e77          	0x652d6e77
 3f6:	666c                	flw	fa1,76(a2)
 3f8:	332e382f          	0x332e382f
 3fc:	302e                	fld	ft0,232(sp)
 3fe:	636e692f          	0x636e692f
 402:	756c                	flw	fa1,108(a0)
 404:	6564                	flw	fs1,76(a0)
 406:	2f00                	fld	fs0,24(a4)
 408:	6f68                	flw	fa0,92(a4)
 40a:	656d                	lui	a0,0x1b
 40c:	2f43432f          	0x2f43432f
 410:	6262                	flw	ft4,24(sp)
 412:	7565                	lui	a0,0xffff9
 414:	72657473          	csrrci	s0,0x726,10
 418:	7070412f          	0x7070412f
 41c:	696c                	flw	fa1,84(a0)
 41e:	69746163          	bltu	s0,s7,aa0 <_bss_end+0x19c>
 422:	2f736e6f          	jal	t3,36f18 <_stack_start+0x26f18>
 426:	6972                	flw	fs2,28(sp)
 428:	36766373          	csrrsi	t1,0x367,12
 42c:	2d34                	fld	fa3,88(a0)
 42e:	6e75                	lui	t3,0x1d
 430:	776f6e6b          	0x776f6e6b
 434:	2d6e                	fld	fs10,216(sp)
 436:	6c65                	lui	s8,0x19
 438:	2d66                	fld	fs10,88(sp)
 43a:	2d636367          	0x2d636367
 43e:	2e38                	fld	fa4,88(a2)
 440:	2d302e33          	0x2d302e33
 444:	3032                	fld	ft0,296(sp)
 446:	3931                	jal	62 <__DYNAMIC+0x62>
 448:	302e                	fld	ft0,232(sp)
 44a:	2e38                	fld	fa4,88(a2)
 44c:	2d30                	fld	fa2,88(a0)
 44e:	3878                	fld	fa4,240(s0)
 450:	5f36                	lw	t5,108(sp)
 452:	3436                	fld	fs0,360(sp)
 454:	6c2d                	lui	s8,0xb
 456:	6e69                	lui	t3,0x1a
 458:	7875                	lui	a6,0xffffd
 45a:	632d                	lui	t1,0xb
 45c:	6e65                	lui	t3,0x19
 45e:	6f74                	flw	fa3,92(a4)
 460:	722f3673          	csrrc	a2,0x722,t5
 464:	7369                	lui	t1,0xffffa
 466:	34367663          	bgeu	a2,gp,7b2 <__DTOR_END__+0x2be>
 46a:	752d                	lui	a0,0xfffeb
 46c:	6b6e                	flw	fs6,216(sp)
 46e:	6f6e                	flw	ft10,216(sp)
 470:	652d6e77          	0x652d6e77
 474:	666c                	flw	fa1,76(a2)
 476:	636e692f          	0x636e692f
 47a:	756c                	flw	fa1,108(a0)
 47c:	6564                	flw	fs1,76(a0)
 47e:	7379732f          	0x7379732f
 482:	0000                	unimp
 484:	6562                	flw	fa0,24(sp)
 486:	6265                	lui	tp,0x19
 488:	632e6373          	csrrsi	t1,0x632,28
 48c:	0000                	unimp
 48e:	0000                	unimp
 490:	64647473          	csrrci	s0,0x646,8
 494:	6665                	lui	a2,0x19
 496:	682e                	flw	fa6,200(sp)
 498:	0100                	addi	s0,sp,128
 49a:	0000                	unimp
 49c:	745f 7079 7365      	0x73657079745f
 4a2:	682e                	flw	fa6,200(sp)
 4a4:	0200                	addi	s0,sp,256
 4a6:	0000                	unimp
{
 4a8:	6572                	flw	fa0,28(sp)
 4aa:	6e65                	lui	t3,0x19
 4ac:	2e74                	fld	fa3,216(a2)
 4ae:	0068                	addi	a0,sp,12
  initialise_board ();
 4b0:	0002                	c.slli64	zero
 4b2:	6c00                	flw	fs0,24(s0)
  initialise_benchmark ();
 4b4:	2e6b636f          	jal	t1,b679a <_stack_start+0xa679a>
  warm_caches (WARMUP_HEAT);
 4b8:	0068                	addi	a0,sp,12
 4ba:	0002                	c.slli64	zero
 4bc:	3c00                	fld	fs0,56(s0)
 4be:	7562                	flw	fa0,56(sp)
  start_trigger ();
 4c0:	6c69                	lui	s8,0x1a
 4c2:	2d74                	fld	fa3,216(a0)
  result = benchmark ();
 4c4:	6e69                	lui	t3,0x1a
 4c6:	003e                	c.slli	zero,0xf
 4c8:	0000                	unimp
 4ca:	0000                	unimp
  stop_trigger ();
 4cc:	0105                	addi	sp,sp,1
 4ce:	0500                	addi	s0,sp,640
  correct = verify_benchmark (result);
 4d0:	6402                	flw	fs0,0(sp)
 4d2:	0001                	nop
 4d4:	0300                	addi	s0,sp,384
 4d6:	0129                	addi	sp,sp,10
 4d8:	0305                	addi	t1,t1,1
 4da:	00090103          	lb	sp,0(s2)
    asm("wfi");
 4de:	0100                	addi	s0,sp,128
 4e0:	1005                	c.nop	-31
 4e2:	0306                	slli	t1,t1,0x1
 4e4:	0900                	addi	s0,sp,144
 4e6:	0000                	unimp
 4e8:	0501                	addi	a0,a0,0
 4ea:	031e                	slli	t1,t1,0x7
 4ec:	0900                	addi	s0,sp,144
 4ee:	0018                	0x18
 4f0:	0501                	addi	a0,a0,0
 4f2:	09000327          	0x9000327
 4f6:	000c                	0xc
 4f8:	0501                	addi	a0,a0,0
 4fa:	0308                	addi	a0,sp,384
 4fc:	0900                	addi	s0,sp,144
 4fe:	0008                	0x8
 500:	0501                	addi	a0,a0,0
 502:	01030603          	lb	a2,16(t1) # ffffa010 <_stack_start+0xfffea010>
 506:	0409                	addi	s0,s0,2
 508:	0100                	addi	s0,sp,128
 50a:	0105                	addi	sp,sp,1
 50c:	0306                	slli	t1,t1,0x1
 50e:	0901                	addi	s2,s2,0
 510:	0000                	unimp
 512:	0601                	addi	a2,a2,0
 514:	08090703          	lb	a4,128(s2)
 518:	0100                	addi	s0,sp,128
 51a:	0305                	addi	t1,t1,1
 51c:	00090103          	lb	sp,0(s2)
 520:	0100                	addi	s0,sp,128
 522:	0805                	addi	a6,a6,1
 524:	0306                	slli	t1,t1,0x1
 526:	0900                	addi	s0,sp,144
 528:	0000                	unimp
 52a:	0501                	addi	a0,a0,0
 52c:	0301                	addi	t1,t1,0
 52e:	0901                	addi	s2,s2,0
 530:	0008                	0x8
 532:	0601                	addi	a2,a2,0
 534:	04090803          	lb	a6,64(s2)
 538:	0100                	addi	s0,sp,128
 53a:	0305                	addi	t1,t1,1
 53c:	00090103          	lb	sp,0(s2)
 540:	0100                	addi	s0,sp,128
 542:	0e05                	addi	t3,t3,1
 544:	0306                	slli	t1,t1,0x1
 546:	0901                	addi	s2,s2,0
 548:	0000                	unimp
 54a:	0501                	addi	a0,a0,0
 54c:	030c                	addi	a1,sp,384
 54e:	097f                	0x97f
 550:	0004                	0x4
 552:	0501                	addi	a0,a0,0
 554:	01030603          	lb	a2,16(t1)
 558:	0809                	addi	a6,a6,2
 55a:	0100                	addi	s0,sp,128
 55c:	0c05                	addi	s8,s8,1
 55e:	0306                	slli	t1,t1,0x1
 560:	0900                	addi	s0,sp,144
 562:	0000                	unimp
 564:	0501                	addi	a0,a0,0
 566:	01030603          	lb	a2,16(t1)
 56a:	0809                	addi	a6,a6,2
 56c:	0100                	addi	s0,sp,128
 56e:	1205                	addi	tp,tp,-31
 570:	0306                	slli	t1,t1,0x1
 572:	0900                	addi	s0,sp,144
 574:	0000                	unimp
 576:	0501                	addi	a0,a0,0
 578:	0301                	addi	t1,t1,0
 57a:	0901                	addi	s2,s2,0
 57c:	0008                	0x8
 57e:	0601                	addi	a2,a2,0
 580:	04090a03          	lb	s4,64(s2)
 584:	0100                	addi	s0,sp,128
 586:	0305                	addi	t1,t1,1
 588:	00090103          	lb	sp,0(s2)
 58c:	0100                	addi	s0,sp,128
 58e:	0b05                	addi	s6,s6,1
 590:	0306                	slli	t1,t1,0x1
 592:	0900                	addi	s0,sp,144
 594:	0000                	unimp
 596:	0501                	addi	a0,a0,0
 598:	0335                	addi	t1,t1,13
 59a:	0900                	addi	s0,sp,144
 59c:	0010                	0x10
 59e:	0501                	addi	a0,a0,0
 5a0:	0301                	addi	t1,t1,0
 5a2:	0901                	addi	s2,s2,0
 5a4:	0010                	0x10
 5a6:	0601                	addi	a2,a2,0
 5a8:	08090e03          	lb	t3,128(s2)
 5ac:	0100                	addi	s0,sp,128
 5ae:	0305                	addi	t1,t1,1
 5b0:	00090103          	lb	sp,0(s2)
 5b4:	0100                	addi	s0,sp,128
 5b6:	1205                	addi	tp,tp,-31
 5b8:	0306                	slli	t1,t1,0x1
 5ba:	0902                	c.slli64	s2
 5bc:	0000                	unimp
 5be:	0501                	addi	a0,a0,0
 5c0:	0309                	addi	t1,t1,2
 5c2:	097e                	slli	s2,s2,0x1f
 5c4:	000c                	0xc
 5c6:	0501                	addi	a0,a0,0
 5c8:	02030603          	lb	a2,32(t1)
 5cc:	0c09                	addi	s8,s8,2
 5ce:	0100                	addi	s0,sp,128
 5d0:	1205                	addi	tp,tp,-31
 5d2:	0306                	slli	t1,t1,0x1
 5d4:	0900                	addi	s0,sp,144
 5d6:	0000                	unimp
 5d8:	0501                	addi	a0,a0,0
 5da:	02030603          	lb	a2,32(t1)
 5de:	0c09                	addi	s8,s8,2
 5e0:	0100                	addi	s0,sp,128
 5e2:	2c05                	jal	812 <__DTOR_END__+0x31e>
 5e4:	0306                	slli	t1,t1,0x1
 5e6:	0900                	addi	s0,sp,144
 5e8:	0000                	unimp
 5ea:	0501                	addi	a0,a0,0
 5ec:	0306                	slli	t1,t1,0x1
 5ee:	0900                	addi	s0,sp,144
 5f0:	0008                	0x8
 5f2:	0501                	addi	a0,a0,0
 5f4:	0308                	addi	a0,sp,384
 5f6:	0900                	addi	s0,sp,144
 5f8:	0004                	0x4
 5fa:	0501                	addi	a0,a0,0
 5fc:	0306                	slli	t1,t1,0x1
 5fe:	0900                	addi	s0,sp,144
 600:	0004                	0x4
 602:	0501                	addi	a0,a0,0
 604:	0038                	addi	a4,sp,8
 606:	0402                	c.slli64	s0
 608:	0301                	addi	t1,t1,0
 60a:	0900                	addi	s0,sp,144
 60c:	0004                	0x4
 60e:	0501                	addi	a0,a0,0
 610:	04030607          	0x4030607
 614:	0409                	addi	s0,s0,2
 616:	0100                	addi	s0,sp,128
 618:	1005                	c.nop	-31
 61a:	0306                	slli	t1,t1,0x1
 61c:	0900                	addi	s0,sp,144
 61e:	0000                	unimp
 620:	0501                	addi	a0,a0,0
 622:	01030607          	0x1030607
 626:	0809                	addi	a6,a6,2
 628:	0100                	addi	s0,sp,128
 62a:	0105                	addi	sp,sp,1
 62c:	0306                	slli	t1,t1,0x1
 62e:	0902                	c.slli64	s2
 630:	0000                	unimp
 632:	0501                	addi	a0,a0,0
 634:	030c                	addi	a1,sp,384
 636:	097a                	slli	s2,s2,0x1e
 638:	0008                	0x8
 63a:	0501                	addi	a0,a0,0
 63c:	0601                	addi	a2,a2,0
 63e:	08090f03          	lb	t5,128(s2)
 642:	0100                	addi	s0,sp,128
 644:	0305                	addi	t1,t1,1
 646:	00090103          	lb	sp,0(s2)
 64a:	0100                	addi	s0,sp,128
 64c:	1305                	addi	t1,t1,-31
 64e:	0306                	slli	t1,t1,0x1
 650:	0900                	addi	s0,sp,144
 652:	0000                	unimp
 654:	0501                	addi	a0,a0,0
 656:	0301                	addi	t1,t1,0
 658:	097f                	0x97f
 65a:	0004                	0x4
 65c:	0501                	addi	a0,a0,0
 65e:	09010313          	addi	t1,sp,144
 662:	000c                	0xc
 664:	0501                	addi	a0,a0,0
 666:	05030603          	lb	a2,80(t1)
 66a:	1009                	c.nop	-30
 66c:	0100                	addi	s0,sp,128
 66e:	0605                	addi	a2,a2,1
 670:	0306                	slli	t1,t1,0x1
 672:	0900                	addi	s0,sp,144
 674:	0000                	unimp
 676:	0501                	addi	a0,a0,0
 678:	0605                	addi	a2,a2,1
 67a:	04090103          	lb	sp,64(s2)
 67e:	0100                	addi	s0,sp,128
 680:	0305                	addi	t1,t1,1
 682:	0c090203          	lb	tp,192(s2)
 686:	0100                	addi	s0,sp,128
 688:	0105                	addi	sp,sp,1
 68a:	0306                	slli	t1,t1,0x1
 68c:	0901                	addi	s2,s2,0
 68e:	0000                	unimp
 690:	0601                	addi	a2,a2,0
 692:	14090a03          	lb	s4,320(s2)
 696:	0100                	addi	s0,sp,128
 698:	0305                	addi	t1,t1,1
 69a:	00090103          	lb	sp,0(s2)
 69e:	0100                	addi	s0,sp,128
 6a0:	1205                	addi	tp,tp,-31
 6a2:	0306                	slli	t1,t1,0x1
 6a4:	0902                	c.slli64	s2
 6a6:	0000                	unimp
 6a8:	0501                	addi	a0,a0,0
 6aa:	0309                	addi	t1,t1,2
 6ac:	097e                	slli	s2,s2,0x1f
 6ae:	000c                	0xc
 6b0:	0501                	addi	a0,a0,0
 6b2:	02030603          	lb	a2,32(t1)
 6b6:	0c09                	addi	s8,s8,2
 6b8:	0100                	addi	s0,sp,128
 6ba:	1205                	addi	tp,tp,-31
 6bc:	0306                	slli	t1,t1,0x1
 6be:	0900                	addi	s0,sp,144
 6c0:	0000                	unimp
 6c2:	0501                	addi	a0,a0,0
 6c4:	02030603          	lb	a2,32(t1)
 6c8:	0c09                	addi	s8,s8,2
 6ca:	0100                	addi	s0,sp,128
 6cc:	2c05                	jal	8fc <heap_ptr>
 6ce:	0306                	slli	t1,t1,0x1
 6d0:	0900                	addi	s0,sp,144
 6d2:	0000                	unimp
 6d4:	0501                	addi	a0,a0,0
 6d6:	0306                	slli	t1,t1,0x1
 6d8:	0900                	addi	s0,sp,144
 6da:	0008                	0x8
 6dc:	0501                	addi	a0,a0,0
 6de:	0308                	addi	a0,sp,384
 6e0:	0900                	addi	s0,sp,144
 6e2:	0004                	0x4
 6e4:	0501                	addi	a0,a0,0
 6e6:	0306                	slli	t1,t1,0x1
 6e8:	0900                	addi	s0,sp,144
 6ea:	0004                	0x4
 6ec:	0501                	addi	a0,a0,0
 6ee:	0038                	addi	a4,sp,8
 6f0:	0402                	c.slli64	s0
 6f2:	0301                	addi	t1,t1,0
 6f4:	0900                	addi	s0,sp,144
 6f6:	0004                	0x4
 6f8:	0501                	addi	a0,a0,0
 6fa:	04030607          	0x4030607
 6fe:	0409                	addi	s0,s0,2
 700:	0100                	addi	s0,sp,128
 702:	1005                	c.nop	-31
 704:	0306                	slli	t1,t1,0x1
 706:	0900                	addi	s0,sp,144
 708:	0000                	unimp
 70a:	0501                	addi	a0,a0,0
 70c:	07030607          	0x7030607
 710:	0809                	addi	a6,a6,2
 712:	0100                	addi	s0,sp,128
 714:	0a05                	addi	s4,s4,1
 716:	0306                	slli	t1,t1,0x1
 718:	0900                	addi	s0,sp,144
 71a:	0000                	unimp
 71c:	0501                	addi	a0,a0,0
 71e:	0904030b          	0x904030b
 722:	0004                	0x4
 724:	0501                	addi	a0,a0,0
 726:	0006                	c.slli	zero,0x1
 728:	0402                	c.slli64	s0
 72a:	01030603          	lb	a2,16(t1)
 72e:	0409                	addi	s0,s0,2
 730:	0100                	addi	s0,sp,128
 732:	2c05                	jal	962 <_bss_end+0x5e>
 734:	0200                	addi	s0,sp,256
 736:	0304                	addi	s1,sp,384
 738:	0306                	slli	t1,t1,0x1
 73a:	0900                	addi	s0,sp,144
 73c:	0000                	unimp
 73e:	0501                	addi	a0,a0,0
 740:	001c                	0x1c
 742:	0402                	c.slli64	s0
 744:	09000303          	lb	t1,144(zero) # 90 <crc32pseudo+0x4>
 748:	0008                	0x8
 74a:	0501                	addi	a0,a0,0
 74c:	0402001b          	0x402001b
 750:	097f0303          	lb	t1,151(t5) # fffe8097 <_stack_start+0xfffd8097>
 754:	0004                	0x4
 756:	0501                	addi	a0,a0,0
 758:	001c                	0x1c
 75a:	0402                	c.slli64	s0
 75c:	09010303          	lb	t1,144(sp)
 760:	0004                	0x4
 762:	0501                	addi	a0,a0,0
 764:	0004                	0x4
 766:	0402                	c.slli64	s0
 768:	097f0303          	lb	t1,151(t5)
 76c:	0004                	0x4
 76e:	0501                	addi	a0,a0,0
 770:	0301                	addi	t1,t1,0
 772:	0906                	slli	s2,s2,0x1
 774:	0004                	0x4
 776:	0501                	addi	a0,a0,0
 778:	030c                	addi	a1,sp,384
 77a:	096c                	addi	a1,sp,156
 77c:	0008                	0x8
 77e:	0501                	addi	a0,a0,0
 780:	0601                	addi	a2,a2,0
 782:	08091d03          	lh	s10,128(s2)
 786:	0100                	addi	s0,sp,128
 788:	00090103          	lb	sp,0(s2)
 78c:	0100                	addi	s0,sp,128
 78e:	0409                	addi	s0,s0,2
 790:	0000                	unimp
 792:	0101                	addi	sp,sp,0
 794:	007e                	c.slli	zero,0x1f
 796:	0000                	unimp
 798:	00250003          	lb	zero,2(a0) # fffeb002 <_stack_start+0xfffdb002>
 79c:	0000                	unimp
 79e:	0101                	addi	sp,sp,0
 7a0:	000d0efb          	0xd0efb
 7a4:	0101                	addi	sp,sp,0
 7a6:	0101                	addi	sp,sp,0
 7a8:	0000                	unimp
 7aa:	0100                	addi	s0,sp,128
 7ac:	0000                	unimp
 7ae:	0001                	nop
 7b0:	6f62                	flw	ft10,24(sp)
 7b2:	7261                	lui	tp,0xffff8
 7b4:	7364                	flw	fs1,100(a4)
 7b6:	7075                	c.lui	zero,0xffffd
 7b8:	6f70                	flw	fa2,92(a4)
 7ba:	7472                	flw	fs0,60(sp)
 7bc:	632e                	flw	ft6,200(sp)
 7be:	0000                	unimp
 7c0:	0000                	unimp
 7c2:	0500                	addi	s0,sp,640
 7c4:	0001                	nop
 7c6:	0205                	addi	tp,tp,1
 7c8:	0300                	addi	s0,sp,384
 7ca:	0000                	unimp
 7cc:	05010d03          	lb	s10,80(sp)
 7d0:	09010303          	lb	t1,144(sp)
 7d4:	0000                	unimp
 7d6:	0501                	addi	a0,a0,0
 7d8:	0601                	addi	a2,a2,0
 7da:	04090103          	lb	sp,64(s2)
 7de:	0100                	addi	s0,sp,128
 7e0:	0306                	slli	t1,t1,0x1
 7e2:	0904                	addi	s1,sp,144
 7e4:	0004                	0x4
 7e6:	0501                	addi	a0,a0,0
 7e8:	09010303          	lb	t1,144(sp)
 7ec:	0000                	unimp
 7ee:	0501                	addi	a0,a0,0
 7f0:	0601                	addi	a2,a2,0
 7f2:	04090103          	lb	sp,64(s2)
 7f6:	0100                	addi	s0,sp,128
 7f8:	0306                	slli	t1,t1,0x1
 7fa:	0904                	addi	s1,sp,144
 7fc:	0004                	0x4
 7fe:	0501                	addi	a0,a0,0
 800:	09010303          	lb	t1,144(sp)
 804:	0000                	unimp
 806:	0501                	addi	a0,a0,0
 808:	0601                	addi	a2,a2,0
 80a:	04090103          	lb	sp,64(s2)
 80e:	0100                	addi	s0,sp,128
 810:	0409                	addi	s0,s0,2
 812:	0000                	unimp
 814:	0101                	addi	sp,sp,0
 816:	00ca                	slli	ra,ra,0x12
 818:	0000                	unimp
 81a:	002a0003          	lb	zero,2(s4)
 81e:	0000                	unimp
 820:	0101                	addi	sp,sp,0
 822:	000d0efb          	0xd0efb
 826:	0101                	addi	sp,sp,0
 828:	0101                	addi	sp,sp,0
 82a:	0000                	unimp
 82c:	0100                	addi	s0,sp,128
 82e:	0000                	unimp
 830:	0001                	nop
 832:	616d                	addi	sp,sp,240
 834:	6e69                	lui	t3,0x1a
 836:	632e                	flw	ft6,200(sp)
 838:	0000                	unimp
 83a:	0000                	unimp
 83c:	70707573          	csrrci	a0,0x707,0
 840:	2e74726f          	jal	tp,48326 <_stack_start+0x38326>
 844:	0068                	addi	a0,sp,12
 846:	0000                	unimp
 848:	0000                	unimp
 84a:	0105                	addi	sp,sp,1
 84c:	0500                	addi	s0,sp,640
 84e:	a802                	fsd	ft0,16(sp)
 850:	0004                	0x4
 852:	0300                	addi	s0,sp,384
 854:	03050113          	addi	sp,a0,48
 858:	00090103          	lb	sp,0(s2)
 85c:	0100                	addi	s0,sp,128
 85e:	00090103          	lb	sp,0(s2)
 862:	0100                	addi	s0,sp,128
 864:	00090203          	lb	tp,0(s2)
 868:	0100                	addi	s0,sp,128
 86a:	0105                	addi	sp,sp,1
 86c:	0306                	slli	t1,t1,0x1
 86e:	097c                	addi	a5,sp,156
 870:	0000                	unimp
 872:	0501                	addi	a0,a0,0
 874:	09040303          	lb	t1,144(s0) # fffe7090 <_stack_start+0xfffd7090>
 878:	0008                	0x8
 87a:	0601                	addi	a2,a2,0
 87c:	04090103          	lb	sp,64(s2)
 880:	0100                	addi	s0,sp,128
 882:	04090103          	lb	sp,64(s2)
 886:	0100                	addi	s0,sp,128
 888:	08090203          	lb	tp,128(s2)
 88c:	0100                	addi	s0,sp,128
 88e:	04090103          	lb	sp,64(s2)
 892:	0100                	addi	s0,sp,128
 894:	0c05                	addi	s8,s8,1
 896:	0306                	slli	t1,t1,0x1
 898:	0900                	addi	s0,sp,144
 89a:	0000                	unimp
 89c:	0501                	addi	a0,a0,0
 89e:	030a                	slli	t1,t1,0x2
 8a0:	0900                	addi	s0,sp,144
 8a2:	0004                	0x4
 8a4:	0501                	addi	a0,a0,0
 8a6:	01030603          	lb	a2,16(t1)
 8aa:	0409                	addi	s0,s0,2
 8ac:	0100                	addi	s0,sp,128
 8ae:	04090403          	lb	s0,64(s2)
 8b2:	0100                	addi	s0,sp,128
 8b4:	0d05                	addi	s10,s10,1
 8b6:	0306                	slli	t1,t1,0x1
 8b8:	0900                	addi	s0,sp,144
 8ba:	0000                	unimp
 8bc:	0501                	addi	a0,a0,0
 8be:	0900030b          	0x900030b
 8c2:	0008                	0x8
 8c4:	0501                	addi	a0,a0,0
 8c6:	04020003          	lb	zero,64(tp) # ffff8040 <_stack_start+0xfffe8040>
 8ca:	0601                	addi	a2,a2,0
 8cc:	04090303          	lb	t1,64(s2)
 8d0:	0100                	addi	s0,sp,128
 8d2:	0505                	addi	a0,a0,1
 8d4:	0200                	addi	s0,sp,256
 8d6:	0104                	addi	s1,sp,128
 8d8:	00090103          	lb	sp,0(s2)
 8dc:	0100                	addi	s0,sp,128
 8de:	0809                	addi	a6,a6,2
 8e0:	0000                	unimp
 8e2:	0101                	addi	sp,sp,0
 8e4:	0150                	addi	a2,sp,132
 8e6:	0000                	unimp
 8e8:	001d0003          	lb	zero,1(s10) # 3000407 <_stack_start+0x2ff0407>
 8ec:	0000                	unimp
 8ee:	0101                	addi	sp,sp,0
 8f0:	000d0efb          	0xd0efb
 8f4:	0101                	addi	sp,sp,0
 8f6:	0101                	addi	sp,sp,0
 8f8:	0000                	unimp
 8fa:	0100                	addi	s0,sp,128
 8fc:	0000                	unimp
 8fe:	0001                	nop
 900:	30747263          	bgeu	s0,t2,c04 <_bss_end+0x300>
 904:	532e                	lw	t1,232(sp)
 906:	0000                	unimp
 908:	0000                	unimp
 90a:	0000                	unimp
 90c:	0205                	addi	tp,tp,1
 90e:	0318                	addi	a4,sp,384
 910:	0000                	unimp
 912:	0315                	addi	t1,t1,5
 914:	0904                	addi	s1,sp,144
 916:	0004                	0x4
 918:	0301                	addi	t1,t1,0
 91a:	0901                	addi	s2,s2,0
 91c:	0004                	0x4
 91e:	0301                	addi	t1,t1,0
 920:	0901                	addi	s2,s2,0
 922:	0004                	0x4
 924:	0301                	addi	t1,t1,0
 926:	0901                	addi	s2,s2,0
 928:	0004                	0x4
 92a:	0301                	addi	t1,t1,0
 92c:	0901                	addi	s2,s2,0
 92e:	0004                	0x4
 930:	0301                	addi	t1,t1,0
 932:	0901                	addi	s2,s2,0
 934:	0004                	0x4
 936:	0301                	addi	t1,t1,0
 938:	0901                	addi	s2,s2,0
 93a:	0004                	0x4
 93c:	0301                	addi	t1,t1,0
 93e:	0901                	addi	s2,s2,0
 940:	0004                	0x4
 942:	0301                	addi	t1,t1,0
 944:	0901                	addi	s2,s2,0
 946:	0004                	0x4
 948:	0301                	addi	t1,t1,0
 94a:	0901                	addi	s2,s2,0
 94c:	0004                	0x4
 94e:	0301                	addi	t1,t1,0
 950:	0901                	addi	s2,s2,0
 952:	0004                	0x4
 954:	0301                	addi	t1,t1,0
 956:	0901                	addi	s2,s2,0
 958:	0004                	0x4
 95a:	0301                	addi	t1,t1,0
 95c:	0901                	addi	s2,s2,0
 95e:	0004                	0x4
 960:	0301                	addi	t1,t1,0
 962:	0901                	addi	s2,s2,0
 964:	0004                	0x4
 966:	0301                	addi	t1,t1,0
 968:	0901                	addi	s2,s2,0
 96a:	0004                	0x4
 96c:	0301                	addi	t1,t1,0
 96e:	0901                	addi	s2,s2,0
 970:	0004                	0x4
 972:	0301                	addi	t1,t1,0
 974:	0901                	addi	s2,s2,0
 976:	0004                	0x4
 978:	0301                	addi	t1,t1,0
 97a:	0901                	addi	s2,s2,0
 97c:	0004                	0x4
 97e:	0301                	addi	t1,t1,0
 980:	0901                	addi	s2,s2,0
 982:	0004                	0x4
 984:	0301                	addi	t1,t1,0
 986:	0901                	addi	s2,s2,0
 988:	0004                	0x4
 98a:	0301                	addi	t1,t1,0
 98c:	0901                	addi	s2,s2,0
 98e:	0004                	0x4
 990:	0301                	addi	t1,t1,0
 992:	0901                	addi	s2,s2,0
 994:	0004                	0x4
 996:	0301                	addi	t1,t1,0
 998:	0901                	addi	s2,s2,0
 99a:	0004                	0x4
 99c:	0301                	addi	t1,t1,0
 99e:	0901                	addi	s2,s2,0
 9a0:	0004                	0x4
 9a2:	0301                	addi	t1,t1,0
 9a4:	0901                	addi	s2,s2,0
 9a6:	0004                	0x4
 9a8:	0301                	addi	t1,t1,0
 9aa:	0901                	addi	s2,s2,0
 9ac:	0004                	0x4
 9ae:	0301                	addi	t1,t1,0
 9b0:	0901                	addi	s2,s2,0
 9b2:	0004                	0x4
 9b4:	0301                	addi	t1,t1,0
 9b6:	0901                	addi	s2,s2,0
 9b8:	0004                	0x4
 9ba:	0301                	addi	t1,t1,0
 9bc:	0901                	addi	s2,s2,0
 9be:	0004                	0x4
 9c0:	0301                	addi	t1,t1,0
 9c2:	0901                	addi	s2,s2,0
 9c4:	0004                	0x4
 9c6:	0301                	addi	t1,t1,0
 9c8:	0901                	addi	s2,s2,0
 9ca:	0004                	0x4
 9cc:	0301                	addi	t1,t1,0
 9ce:	00040903          	lb	s2,0(s0)
 9d2:	0301                	addi	t1,t1,0
 9d4:	0906                	slli	s2,s2,0x1
 9d6:	0008                	0x8
 9d8:	0301                	addi	t1,t1,0
 9da:	0901                	addi	s2,s2,0
 9dc:	0008                	0x8
 9de:	0301                	addi	t1,t1,0
 9e0:	0902                	c.slli64	s2
 9e2:	0008                	0x8
 9e4:	0301                	addi	t1,t1,0
 9e6:	00040903          	lb	s2,0(s0)
 9ea:	0301                	addi	t1,t1,0
 9ec:	0901                	addi	s2,s2,0
 9ee:	0004                	0x4
 9f0:	0301                	addi	t1,t1,0
 9f2:	0901                	addi	s2,s2,0
 9f4:	0004                	0x4
 9f6:	0301                	addi	t1,t1,0
 9f8:	0906                	slli	s2,s2,0x1
 9fa:	0004                	0x4
 9fc:	0301                	addi	t1,t1,0
 9fe:	0901                	addi	s2,s2,0
 a00:	0004                	0x4
 a02:	0301                	addi	t1,t1,0
 a04:	0901                	addi	s2,s2,0
 a06:	0004                	0x4
 a08:	0901                	addi	s2,s2,0
 a0a:	0004                	0x4
 a0c:	0100                	addi	s0,sp,128
 a0e:	0001                	nop
 a10:	0205                	addi	tp,tp,1
 a12:	0000                	unimp
 a14:	0000                	unimp
 a16:	0100cb03          	lbu	s6,16(ra) # 16cc <_bss_end+0xdc8>
 a1a:	7c090103          	lb	sp,1984(s2)
 a1e:	0100                	addi	s0,sp,128
 a20:	04090403          	lb	s0,64(s2)
 a24:	0100                	addi	s0,sp,128
 a26:	04090403          	lb	s0,64(s2)
 a2a:	0100                	addi	s0,sp,128
 a2c:	04090403          	lb	s0,64(s2)
 a30:	0100                	addi	s0,sp,128
 a32:	0409                	addi	s0,s0,2
 a34:	0000                	unimp
 a36:	0101                	addi	sp,sp,0

Disassembly of section .debug_str:

00000000 <.debug_str>:
  .endr
   0:	645f 6f73 685f      	0x685f6f73645f
   6:	6e61                	lui	t3,0x18
   8:	6c64                	flw	fs1,92(s0)
   a:	0065                	c.nop	25
   c:	725f 6e61 3464      	0x34646e61725f
  12:	0038                	addi	a4,sp,8
  14:	735f 6769 006e      	0x6e6769735f
  1a:	645f 7461 0061      	0x617461645f
  20:	775f 7263 6f74      	0x6f747263775f
  26:	626d                	lui	tp,0x1b
  28:	735f 6174 6574      	0x65746174735f
  2e:	5f00                	lw	s0,56(a4)
  30:	72736377          	0x72736377
  34:	6f74                	flw	fa3,92(a4)
  36:	626d                	lui	tp,0x1b
  38:	74735f73          	csrrwi	t5,0x747,6
  3c:	7461                	lui	s0,0xffff8
  3e:	0065                	c.nop	25
  40:	6f6c                	flw	fa1,92(a4)
  42:	676e                	flw	fa4,216(sp)
  44:	6c20                	flw	fs0,88(s0)
  46:	20676e6f          	jal	t3,7624c <_stack_start+0x6624c>
  4a:	6e75                	lui	t3,0x1d
  4c:	6e676973          	csrrsi	s2,0x6e6,14
  50:	6465                	lui	s0,0x19
  52:	6920                	flw	fs0,80(a0)
  54:	746e                	flw	fs0,248(sp)
  56:	5f00                	lw	s0,56(a4)
  58:	626c                	flw	fa1,68(a2)
  5a:	7366                	flw	ft6,120(sp)
  5c:	7a69                	lui	s4,0xffffa
  5e:	0065                	c.nop	25
  60:	5f5f 6f6c 6163      	0x61636f6c5f5f
  66:	656c                	flw	fa1,76(a0)
  68:	745f 5f00 626d      	0x626d5f00745f
  6e:	7472                	flw	fs0,60(sp)
  70:	5f63776f          	jal	a4,37666 <_stack_start+0x27666>
  74:	74617473          	csrrci	s0,0x746,2
  78:	0065                	c.nop	25
  7a:	5744                	lw	s1,44(a4)
  jal x0, default_exc_handler
  7c:	0044524f          	fnmadd.s	ft4,fs0,ft4,ft0,unknown
  jal x0, reset_handler
  80:	775f 7463 6d6f      	0x6d6f7463775f
  jal x0, default_exc_handler
  86:	5f62                	lw	t5,56(sp)
  jal x0, default_exc_handler
  88:	74617473          	csrrci	s0,0x746,2
{
  8c:	0065                	c.nop	25
  8e:	5f5f 6d74 735f      	0x735f6d745f5f
  94:	6365                	lui	t1,0x19
  96:	6c00                	flw	fs0,24(s0)
  98:	20676e6f          	jal	t3,7629e <_stack_start+0x6629e>
  9c:	6f6c                	flw	fa1,92(a4)
  9e:	676e                	flw	fa4,216(sp)
  a0:	6920                	flw	fs0,80(a0)
  a2:	746e                	flw	fs0,248(sp)
  oldcrc32 = 0xFFFFFFFF;
  a4:	6300                	flw	fs0,0(a4)
  a6:	6372                	flw	ft6,28(sp)
      oldcrc32 = UPDC32 (rand_beebs (), oldcrc32);
  a8:	73703233          	0x73703233
  ac:	7565                	lui	a0,0xffff9
  ae:	6f64                	flw	fs1,92(a4)
  b0:	5f00                	lw	s0,56(a4)
  b2:	6275                	lui	tp,0x1d
  b4:	6675                	lui	a2,0x1d
  b6:	5f00                	lw	s0,56(a4)
  b8:	6162                	flw	ft2,24(sp)
  ba:	5f006573          	csrrsi	a0,0x5f0,0
  be:	745f 5f6d 6f68      	0x6f685f6d745f
  c4:	7275                	lui	tp,0xffffd
  c6:	5f00                	lw	s0,56(a4)
  c8:	735f 0066 6f5f      	0x6f5f0066735f
  ce:	5f6e                	lw	t5,248(sp)
  for (i = 0; i < 1024; ++i)
  d0:	7865                	lui	a6,0xffff9
  d2:	7469                	lui	s0,0xffffa
}
  d4:	615f 6772 0073      	0x736772615f
  da:	635f 6f6f 696b      	0x696b6f6f635f
  e0:	0065                	c.nop	25
  e2:	5f5f 6773 756c      	0x756c67735f5f
  e8:	0065                	c.nop	25
  ea:	665f 616c 7367      	0x7367616c665f
{
  f0:	5f00                	lw	s0,56(a4)
  f2:	7369                	lui	t1,0xffffa
  f4:	635f 6178 5f00      	0x5f006178635f
  fa:	69647473          	csrrci	s0,0x696,8
  fe:	006e                	c.slli	zero,0x1b
 100:	625f 6b6c 6973      	0x69736b6c625f
  for (i = 0; i < rpt; i++)
 106:	657a                	flw	fa0,156(sp)
 108:	5500                	lw	s0,40(a0)
 10a:	534e                	lw	t1,240(sp)
}
 10c:	335f 5f32 4942      	0x49425f32335f
 112:	5354                	lw	a3,36(a4)
  return (int) (r % 32768);
 114:	6200                	flw	fs0,0(a2)
 116:	6e65                	lui	t3,0x19
}
 118:	616d6863          	bltu	s10,s6,728 <__DTOR_END__+0x234>
 11c:	6b72                	flw	fs6,28(sp)
 11e:	625f 646f 0079      	0x79646f625f
 124:	635f 7476 7562      	0x75627476635f
      srand_beebs (0);
 12a:	0066                	c.slli	zero,0x19
 12c:	6f5f 6666 6573      	0x657366666f5f
      r = crc32pseudo ();
 132:	0074                	addi	a3,sp,12
 134:	6d5f 7362 7472      	0x747273626d5f
  for (i = 0; i < rpt; i++)
 13a:	7363776f          	jal	a4,37870 <_stack_start+0x27870>
 13e:	735f 6174 6574      	0x65746174735f
  int  res = benchmark_body (heat);
 144:	5f00                	lw	s0,56(a4)
 146:	626d                	lui	tp,0x1b
  return benchmark_body (LOCAL_SCALE_FACTOR * CPU_MHZ);
 148:	6c72                	flw	fs8,28(sp)
 14a:	6e65                	lui	t3,0x19
 14c:	735f 6174 6574      	0x65746174735f
  return 11433 == r;
 152:	5f00                	lw	s0,56(a4)
 154:	6e66                	flw	ft8,88(sp)
 156:	7261                	lui	tp,0xffff8
 158:	6f007367          	0x6f007367
}
 15c:	646c                	flw	fa1,76(s0)
 15e:	33637263          	bgeu	t1,s6,482 <memset+0xb6>
 162:	0032                	c.slli	zero,0xc
  seed = (seed * 1103515245L + 12345) & ((1UL << 31) - 1);
 164:	665f 736e 2f00      	0x2f00736e665f
 16a:	6f68                	flw	fa0,92(a4)
 16c:	656d                	lui	a0,0x1b
 16e:	2f43432f          	0x2f43432f
 172:	6262                	flw	ft4,24(sp)
 174:	7565                	lui	a0,0xffff9
 176:	72657473          	csrrci	s0,0x726,10
 17a:	6f72502f          	0x6f72502f
 17e:	656a                	flw	fa0,152(sp)
 180:	2f737463          	bgeu	t1,s7,468 <memset+0x9c>
 184:	68746967          	0x68746967
 188:	6275                	lui	tp,0x1d
 18a:	632e                	flw	ft6,200(sp)
 18c:	702f6d6f          	jal	s10,f688e <_stack_start+0xe688e>
 190:	6962                	flw	fs2,24(sp)
 192:	676e                	flw	fa4,216(sp)
}
 194:	6562692f          	0x6562692f
 198:	5f78                	lw	a4,124(a4)
 19a:	732f6277          	0x732f6277
  seed = (long int) new_seed;
 19e:	72632f77          	0x72632f77
 1a2:	32335f63          	bge	t1,gp,4e0 <main+0x38>
}
 1a6:	5f00                	lw	s0,56(a4)
  heap_end = (void *) ((char *) heap_ptr + heap_size);
 1a8:	6c66                	flw	fs8,88(sp)
 1aa:	5f6b636f          	jal	t1,b67a0 <_stack_start+0xa67a0>
  heap_ptr = (void *) heap;
 1ae:	0074                	addi	a3,sp,12
 1b0:	735f 6474 7265      	0x72656474735f
  heap_end = (void *) ((char *) heap_ptr + heap_size);
 1b6:	0072                	c.slli	zero,0x1c
 1b8:	425f 6769 6e69      	0x6e696769425f
  heap_requested = 0;
 1be:	0074                	addi	a3,sp,12
 1c0:	675f 6d61 616d      	0x616d6d61675f
}
 1c6:	735f 6769 676e      	0x676e6769735f
  return ((void *) ((char *) heap + heap_requested) <= heap_end);
 1cc:	6d61                	lui	s10,0x18
 1ce:	4200                	lw	s0,0(a2)
 1d0:	5459                	li	s0,-10
 1d2:	0045                	c.nop	17
 1d4:	725f 6165 0064      	0x646165725f
 1da:	725f 7365 6c75      	0x6c757365725f
 1e0:	5f74                	lw	a3,124(a4)
 1e2:	5f5f006b          	0x5f5f006b
 1e6:	6d74                	flw	fa3,92(a0)
}
 1e8:	5f00                	lw	s0,56(a4)
 1ea:	775f 6863 0062      	0x626863775f
  heap_requested += size;
 1f0:	735f 6474 756f      	0x756f6474735f
 1f6:	0074                	addi	a3,sp,12
 1f8:	635f 7476 656c      	0x656c7476635f
  void *new_ptr = heap_ptr;
 1fe:	006e                	c.slli	zero,0x1b
 200:	665f 6c69 0065      	0x656c69665f
 206:	6e5f 6f69 7362      	0x73626f696e5f
  heap_requested += size;
 20c:	7300                	flw	fs0,32(a4)
 20e:	6f68                	flw	fa0,92(a4)
 210:	7472                	flw	fs0,60(sp)
 212:	7520                	flw	fs0,104(a0)
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
 214:	736e                	flw	ft6,248(sp)
 216:	6769                	lui	a4,0x1a
 218:	656e                	flw	fa0,216(sp)
 21a:	2064                	fld	fs1,192(s0)
 21c:	6e69                	lui	t3,0x1a
 21e:	0074                	addi	a3,sp,12
 220:	615f 6574 6978      	0x69786574615f
 226:	3074                	fld	fa3,224(s0)
 228:	5f00                	lw	s0,56(a4)
 22a:	6e676973          	csrrsi	s2,0x6e6,14
      heap_ptr = (void *) ((char *) heap_ptr + size);
 22e:	6c61                	lui	s8,0x18
 230:	625f 6675 5f00      	0x5f006675625f
}
 236:	7361                	lui	t1,0xffff8
 238:	6d697463          	bgeu	s2,s6,900 <seed>
    return NULL;
 23c:	5f65                	li	t5,-7
 23e:	7562                	flw	fa0,56(sp)
 240:	0066                	c.slli	zero,0x19
 242:	725f 7365 6c75      	0x6c757365725f
{
 248:	0074                	addi	a3,sp,12
 24a:	5f5f 6377 0068      	0x6863775f5f
 250:	746e6977          	0x746e6977
  void *new_ptr = malloc_beebs (nmemb * size);
 254:	745f 5f00 6f6c      	0x6f6c5f00745f
 25a:	5f006b63          	bltu	zero,a6,850 <__DTOR_END__+0x35c>
 25e:	6c66                	flw	fs8,88(sp)
 260:	6761                	lui	a4,0x18
 262:	5f003273          	csrrc	tp,0x5f0,zero
  if (NULL != new_ptr)
 266:	74697277          	0x74697277
    memset (new_ptr, 0, nmemb * size);
 26a:	0065                	c.nop	25
 26c:	5f5f 6d74 795f      	0x795f6d745f5f
 272:	6165                	addi	sp,sp,112
}
 274:	0072                	c.slli	zero,0x1c
 276:	6e5f 616d 6c6c      	0x6c6c616d6e5f
 27c:	7300636f          	jal	t1,69ac <_stack_len+0x29ac>
 280:	6172                	flw	ft2,28(sp)
 282:	646e                	flw	fs0,216(sp)
 284:	625f 6565 7362      	0x73626565625f
  heap_requested += size;
 28a:	6c00                	flw	fs0,24(s0)
 28c:	20676e6f          	jal	t3,76492 <_stack_start+0x66492>
 290:	6f64                	flw	fs1,92(a4)
 292:	6275                	lui	tp,0x1d
  void *new_ptr = heap_ptr;
 294:	656c                	flw	fa1,76(a0)
 296:	5f00                	lw	s0,56(a4)
 298:	656e                	flw	fa0,216(sp)
 29a:	7478                	flw	fa4,108(s0)
 29c:	0066                	c.slli	zero,0x19
 29e:	5f637263          	bgeu	t1,s6,882 <__DTOR_END__+0x38e>
  heap_requested += size;
 2a2:	745f3233          	0x745f3233
 2a6:	6261                	lui	tp,0x18
 2a8:	5f00                	lw	s0,56(a4)
 2aa:	745f 5f6d 6f6d      	0x6f6d5f6d745f
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
 2b0:	006e                	c.slli	zero,0x1b
 2b2:	615f 6574 6978      	0x69786574615f
 2b8:	0074                	addi	a3,sp,12
 2ba:	6f627573          	csrrci	a0,0x6f6,4
 2be:	7470                	flw	fa2,108(s0)
 2c0:	7261                	lui	tp,0xffff8
 2c2:	5f5f0067          	jr	1525(t5)
      heap_ptr = (void *) ((char *) heap_ptr + size);
 2c6:	64696473          	csrrsi	s0,0x646,18
 2ca:	6e69                	lui	t3,0x1a
      if (NULL != ptr)
 2cc:	7469                	lui	s0,0xffffa
 2ce:	5f00                	lw	s0,56(a4)
	  for (i = 0; i < size; i++)
 2d0:	5f66666f          	jal	a2,668c6 <_stack_start+0x568c6>
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
 2d4:	0074                	addi	a3,sp,12
 2d6:	665f 6572 6c65      	0x6c656572665f
 2dc:	7369                	lui	t1,0xffffa
 2de:	0074                	addi	a3,sp,12
	  for (i = 0; i < size; i++)
 2e0:	4c5f 434f 5f4b      	0x5f4b434f4c5f
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
 2e6:	4552                	lw	a0,20(sp)
	  for (i = 0; i < size; i++)
 2e8:	53525543          	fmadd.d	fa0,ft4,fs5,fa0,unknown
}
 2ec:	5649                	li	a2,-14
 2ee:	5f45                	li	t5,-15
 2f0:	0054                	addi	a3,sp,4
 2f2:	6d726177          	0x6d726177
    return NULL;
 2f6:	635f 6361 6568      	0x65686361635f
}
 2fc:	6e750073          	0x6e750073
  __asm__ volatile ("li a0, 0" : : : "memory");
 300:	6e676973          	csrrsi	s2,0x6e6,14
}
 304:	6465                	lui	s0,0x19
 306:	6320                	flw	fs0,64(a4)
  __asm__ volatile ("li a0, 0" : : : "memory");
 308:	6168                	flw	fa0,68(a0)
 30a:	0072                	c.slli	zero,0x1c
}
 30c:	6e5f 7765 5f00      	0x5f0077656e5f
  __asm__ volatile ("li a0, 0" : : : "memory");
 312:	5f68                	lw	a0,124(a4)
}
 314:	7265                	lui	tp,0xffff9
 316:	6e72                	flw	ft8,28(sp)
  jal x0, default_exc_handler
 318:	6873006f          	j	3119e <_stack_start+0x2119e>
  mv  x1, x0
 31c:	2074726f          	jal	tp,47d22 <_stack_start+0x37d22>
  mv  x2, x1
 320:	6e69                	lui	t3,0x1a
 322:	0074                	addi	a3,sp,12
  mv  x3, x1
 324:	5f5f 6d74 795f      	0x795f6d745f5f
  mv  x4, x1
 32a:	6164                	flw	fs1,68(a0)
  mv  x5, x1
 32c:	0079                	c.nop	30
 32e:	5f5f 6273 6675      	0x667562735f5f
  mv  x7, x1
 334:	5f00                	lw	s0,56(a4)
 336:	6f69                	lui	t5,0x1a
  mv  x8, x1
 338:	7362                	flw	ft6,56(sp)
 33a:	5f00                	lw	s0,56(a4)
  mv  x9, x1
 33c:	465f 4c49 0045      	0x454c49465f
  mv x10, x1
 342:	6d5f 7362 6174      	0x617473626d5f
  mv x12, x1
 348:	6574                	flw	fa3,76(a0)
 34a:	745f 5f00 735f      	0x735f5f00745f
  mv x14, x1
 350:	4946                	lw	s2,80(sp)
 352:	454c                	lw	a1,12(a0)
  mv x15, x1
 354:	5f00                	lw	s0,56(a4)
 356:	626d                	lui	tp,0x1b
  mv x16, x1
 358:	74617473          	csrrci	s0,0x746,2
  mv x17, x1
 35c:	0065                	c.nop	25
 35e:	725f 6e61 5f64      	0x5f646e61725f
  mv x19, x1
 364:	656e                	flw	fa0,216(sp)
 366:	7478                	flw	fa4,108(s0)
  mv x20, x1
 368:	5f00                	lw	s0,56(a4)
 36a:	626d                	lui	tp,0x1b
  mv x21, x1
 36c:	656c                	flw	fa1,76(a0)
 36e:	5f6e                	lw	t5,248(sp)
  mv x22, x1
 370:	74617473          	csrrci	s0,0x746,2
  mv x23, x1
 374:	0065                	c.nop	25
 376:	695f 636e 5f00      	0x5f00636e695f
  mv x25, x1
 37c:	6e69                	lui	t3,0x1a
 37e:	0064                	addi	s1,sp,12
  mv x26, x1
 380:	6c5f 636f 6c61      	0x6c61636f6c5f
  mv x27, x1
 386:	0065                	c.nop	25
  mv x28, x1
 388:	5f5f 6c63 6165      	0x61656c635f5f
  mv x29, x1
 38e:	756e                	flw	fa0,248(sp)
  mv x30, x1
 390:	0070                	addi	a2,sp,12
 392:	755f 736e 6570      	0x6570736e755f
  la   x2, _stack_start
 398:	69666963          	bltu	a2,s6,a2a <_bss_end+0x126>
 39c:	6465                	lui	s0,0x19
 39e:	6c5f 636f 6c61      	0x6c61636f6c5f
  la x26, _bss_start
 3a4:	5f65                	li	t5,-7
 3a6:	6e69                	lui	t3,0x1a
  la x27, _bss_end
 3a8:	6f66                	flw	ft10,88(sp)
 3aa:	5f00                	lw	s0,56(a4)
 3ac:	616d                	addi	sp,sp,240
 3ae:	7778                	flw	fa4,108(a4)
  bge x26, x27, zero_loop_end
 3b0:	7364                	flw	fs1,100(a4)
 3b2:	5f00                	lw	s0,56(a4)
  sw x0, 0(x26)
 3b4:	6572                	flw	fa0,28(sp)
 3b6:	6e65                	lui	t3,0x19
  addi x26, x26, 4
 3b8:	0074                	addi	a3,sp,12
 3ba:	5f5f 6f63 6e75      	0x6e756f635f5f
  addi x10, x0, 0
 3c0:	0074                	addi	a3,sp,12
 3c2:	5f5f 6176 756c      	0x756c61765f5f
  jal x1, main
 3c8:	0065                	c.nop	25
 3ca:	735f 6565 006b      	0x6b6565735f
 3d0:	665f 6f70 5f73      	0x5f736f70665f
 3d6:	0074                	addi	a3,sp,12
 3d8:	6568                	flw	fa0,76(a0)
 3da:	7461                	lui	s0,0xffff8
 3dc:	5f00                	lw	s0,56(a4)
 3de:	745f 5f6d 696d      	0x696d5f6d745f
 3e4:	006e                	c.slli	zero,0x1b
 3e6:	655f 656d 6772      	0x6772656d655f
 3ec:	6e65                	lui	t3,0x19
 3ee:	5f007963          	bgeu	zero,a6,9e0 <_bss_end+0xdc>
 3f2:	756d                	lui	a0,0xffffb
 3f4:	746c                	flw	fa1,108(s0)
 3f6:	5f00                	lw	s0,56(a4)
 3f8:	74727473          	csrrci	s0,0x747,4
 3fc:	6c5f6b6f          	jal	s6,f72c0 <_stack_start+0xe72c0>
 400:	7361                	lui	t1,0xffff8
 402:	0074                	addi	a3,sp,12
 404:	665f 746e 7079      	0x7079746e665f
 40a:	7365                	lui	t1,0xffff9
 40c:	5f00                	lw	s0,56(a4)
 40e:	6461                	lui	s0,0x18
 410:	0064                	addi	s1,sp,12
 412:	5f5f 4c55 6e6f      	0x6e6f4c555f5f
 418:	675f0067          	jr	1653(t5) # 1a675 <_stack_start+0xa675>
 41c:	7465                	lui	s0,0xffff9
 41e:	6164                	flw	fs1,68(a0)
 420:	6574                	flw	fa3,76(a0)
 422:	655f 7272 4700      	0x47007272655f
 428:	554e                	lw	a0,240(sp)
 42a:	4320                	lw	s0,64(a4)
 42c:	3731                	jal	338 <reset_handler+0x1c>
 42e:	3820                	fld	fs0,112(s0)
 430:	332e                	fld	ft6,232(sp)
 432:	302e                	fld	ft0,232(sp)
 434:	2d20                	fld	fs0,88(a0)
 436:	616d                	addi	sp,sp,240
 438:	6372                	flw	ft6,28(sp)
 43a:	3d68                	fld	fa0,248(a0)
 43c:	7672                	flw	fa2,60(sp)
 43e:	6d693233          	0x6d693233
 442:	2d20                	fld	fs0,88(a0)
 444:	616d                	addi	sp,sp,240
 446:	6962                	flw	fs2,24(sp)
 448:	693d                	lui	s2,0xf
 44a:	706c                	flw	fa1,100(s0)
 44c:	2d203233          	0x2d203233
 450:	636d                	lui	t1,0x1b
 452:	6f6d                	lui	t5,0x1b
 454:	6564                	flw	fs1,76(a0)
 456:	3d6c                	fld	fa1,248(a0)
 458:	656d                	lui	a0,0x1b
 45a:	6164                	flw	fs1,68(a0)
 45c:	796e                	flw	fs2,248(sp)
 45e:	2d20                	fld	fs0,88(a0)
 460:	4f2d2067          	0x4f2d2067
 464:	662d2073          	csrs	0x662,s10
 468:	6976                	flw	fs2,92(sp)
 46a:	69626973          	csrrsi	s2,0x696,4
 46e:	696c                	flw	fa1,84(a0)
 470:	7974                	flw	fa3,116(a0)
 472:	683d                	lui	a6,0xf
 474:	6469                	lui	s0,0x1a
 476:	6564                	flw	fs1,76(a0)
 478:	006e                	c.slli	zero,0x1b
 47a:	675f 6f6c 6162      	0x61626f6c675f
 480:	5f6c                	lw	a1,124(a4)
 482:	6d69                	lui	s10,0x1a
 484:	7570                	flw	fa2,108(a0)
 486:	6572                	flw	fa0,28(sp)
 488:	705f 7274 5f00      	0x5f007274705f
 48e:	6e75                	lui	t3,0x1d
 490:	7375                	lui	t1,0xffffd
 492:	6465                	lui	s0,0x19
 494:	725f 6e61 0064      	0x646e61725f
 49a:	6576                	flw	fa0,92(sp)
 49c:	6972                	flw	fs2,28(sp)
 49e:	7966                	flw	fs2,120(sp)
 4a0:	625f 6e65 6863      	0x68636e65625f
 4a6:	616d                	addi	sp,sp,240
{
 4a8:	6b72                	flw	fs6,28(sp)
 4aa:	5f00                	lw	s0,56(a4)
 4ac:	00736477          	0x736477
  initialise_board ();
 4b0:	5f5f 6d74 775f      	0x775f6d745f5f
  initialise_benchmark ();
 4b6:	6164                	flw	fs1,68(a0)
  warm_caches (WARMUP_HEAT);
 4b8:	0079                	c.nop	30
 4ba:	675f 756c 0065      	0x65756c675f
  start_trigger ();
 4c0:	735f 6973 657a      	0x657a6973735f
  result = benchmark ();
 4c6:	745f 5f00 366c      	0x366c5f00745f
  stop_trigger ();
 4cc:	6134                	flw	fa3,64(a0)
 4ce:	625f 6675 5f00      	0x5f006675625f
  correct = verify_benchmark (result);
 4d4:	5f676973          	csrrsi	s2,0x5f6,14
 4d8:	7566                	flw	fa0,120(sp)
 4da:	636e                	flw	ft6,216(sp)
    asm("wfi");
 4dc:	5f00                	lw	s0,56(a4)
 4de:	626e                	flw	ft4,216(sp)
 4e0:	6675                	lui	a2,0x1d
 4e2:	5f00                	lw	s0,56(a4)
 4e4:	6e75                	lui	t3,0x1d
 4e6:	7375                	lui	t1,0xffffd
 4e8:	6465                	lui	s0,0x19
 4ea:	5f00                	lw	s0,56(a4)
 4ec:	745f 5f6d 7369      	0x73695f6d745f
 4f2:	7364                	flw	fs1,100(a4)
 4f4:	0074                	addi	a3,sp,12
 4f6:	6c5f 636f 6c61      	0x6c61636f6c5f
 4fc:	6974                	flw	fa3,84(a0)
 4fe:	656d                	lui	a0,0x1b
 500:	625f 6675 5f00      	0x5f006675625f
 506:	736f6c63          	bltu	t5,s6,c3e <_bss_end+0x33a>
 50a:	0065                	c.nop	25
 50c:	725f 3834 5f00      	0x5f003834725f
 512:	626d                	lui	tp,0x1b
 514:	6f74                	flw	fa3,92(a4)
 516:	735f6377          	0x735f6377
 51a:	6174                	flw	fa3,68(a0)
 51c:	6574                	flw	fa3,76(a0)
 51e:	5f00                	lw	s0,56(a4)
 520:	3570                	fld	fa2,232(a0)
 522:	72630073          	0x72630073
 526:	32335f63          	bge	t1,gp,864 <__DTOR_END__+0x370>
 52a:	632e                	flw	ft6,200(sp)
 52c:	6900                	flw	fs0,16(a0)
 52e:	696e                	flw	fs2,216(sp)
 530:	6974                	flw	fa3,84(a0)
 532:	6c61                	lui	s8,0x18
 534:	7369                	lui	t1,0xffffa
 536:	5f65                	li	t5,-7
 538:	6562                	flw	fa0,24(sp)
 53a:	636e                	flw	ft6,216(sp)
 53c:	6d68                	flw	fa0,92(a0)
 53e:	7261                	lui	tp,0xffff8
 540:	5f5f006b          	0x5f5f006b
 544:	6d74                	flw	fa3,92(a0)
 546:	6d5f 6164 0079      	0x7961646d5f
 54c:	5f5f 7562 6c69      	0x6c6975625f5f
 552:	6974                	flw	fa3,84(a0)
 554:	5f6e                	lw	t5,248(sp)
 556:	656d                	lui	a0,0x1b
 558:	736d                	lui	t1,0xffffb
 55a:	7465                	lui	s0,0xffff9
 55c:	6800                	flw	fs0,16(s0)
 55e:	6165                	addi	sp,sp,112
 560:	5f70                	lw	a2,124(a4)
 562:	657a6973          	csrrsi	s2,0x657,20
 566:	6e00                	flw	fs0,24(a2)
 568:	7765                	lui	a4,0xffff9
 56a:	705f 7274 6300      	0x63007274705f
 570:	6568                	flw	fa0,76(a0)
 572:	685f6b63          	bltu	t5,t0,c08 <_bss_end+0x304>
 576:	6165                	addi	sp,sp,112
 578:	5f70                	lw	a2,124(a4)
 57a:	6562                	flw	fa0,24(sp)
 57c:	6265                	lui	tp,0x19
 57e:	6e690073          	0x6e690073
 582:	7469                	lui	s0,0xffffa
 584:	685f 6165 5f70      	0x5f706165685f
 58a:	6562                	flw	fa0,24(sp)
 58c:	6265                	lui	tp,0x19
 58e:	65680073          	0x65680073
 592:	7061                	c.lui	zero,0xffff8
 594:	725f 7165 6575      	0x65757165725f
 59a:	64657473          	csrrci	s0,0x646,10
 59e:	6800                	flw	fs0,16(s0)
 5a0:	6165                	addi	sp,sp,112
 5a2:	5f70                	lw	a2,124(a4)
 5a4:	7470                	flw	fa2,108(s0)
 5a6:	0072                	c.slli	zero,0x1c
 5a8:	656e                	flw	fa0,216(sp)
 5aa:	65735f77          	0x65735f77
 5ae:	6465                	lui	s0,0x19
 5b0:	7200                	flw	fs0,32(a2)
 5b2:	6165                	addi	sp,sp,112
 5b4:	6c6c                	flw	fa1,92(s0)
 5b6:	625f636f          	jal	t1,f73da <_stack_start+0xe73da>
 5ba:	6565                	lui	a0,0x19
 5bc:	7362                	flw	ft6,56(sp)
 5be:	6300                	flw	fs0,0(a4)
 5c0:	6c61                	lui	s8,0x18
 5c2:	6f6c                	flw	fa1,92(a4)
 5c4:	65625f63          	bge	tp,s6,c22 <_bss_end+0x31e>
 5c8:	6265                	lui	tp,0x19
 5ca:	616d0073          	0x616d0073
 5ce:	6c6c                	flw	fa1,92(s0)
 5d0:	625f636f          	jal	t1,f73f4 <_stack_start+0xe73f4>
 5d4:	6565                	lui	a0,0x19
 5d6:	7362                	flw	ft6,56(sp)
 5d8:	6800                	flw	fs0,16(s0)
 5da:	6165                	addi	sp,sp,112
 5dc:	5f70                	lw	a2,124(a4)
 5de:	6e65                	lui	t3,0x19
 5e0:	0064                	addi	s1,sp,12
 5e2:	7266                	flw	ft4,120(sp)
 5e4:	6565                	lui	a0,0x19
 5e6:	625f 6565 7362      	0x73626565625f
 5ec:	6200                	flw	fs0,0(a2)
 5ee:	6565                	lui	a0,0x19
 5f0:	7362                	flw	ft6,56(sp)
 5f2:	00632e63          	0x632e63
 5f6:	6568                	flw	fa0,76(a0)
 5f8:	7061                	c.lui	zero,0xffff8
 5fa:	6e00                	flw	fs0,24(a2)
 5fc:	656d                	lui	a0,0x1b
 5fe:	626d                	lui	tp,0x1b
 600:	7300                	flw	fs0,32(a4)
 602:	6f74                	flw	fa3,92(a4)
 604:	5f70                	lw	a2,124(a4)
 606:	7274                	flw	fa3,100(a2)
 608:	6769                	lui	a4,0x1a
 60a:	00726567          	0x726567
 60e:	6f62                	flw	ft10,24(sp)
 610:	7261                	lui	tp,0xffff8
 612:	2e64                	fld	fs1,216(a2)
 614:	74730063          	beq	t1,t2,d54 <_bss_end+0x450>
 618:	7261                	lui	tp,0xffff8
 61a:	5f74                	lw	a3,124(a4)
 61c:	7274                	flw	fa3,100(a2)
 61e:	6769                	lui	a4,0x1a
 620:	00726567          	0x726567
 624:	6e69                	lui	t3,0x1a
 626:	7469                	lui	s0,0xffffa
 628:	6169                	addi	sp,sp,208
 62a:	696c                	flw	fa1,84(a0)
 62c:	625f6573          	csrrsi	a0,0x625,30
 630:	6472616f          	jal	sp,27476 <_stack_start+0x17476>
 634:	6100                	flw	fs0,0(a0)
 636:	6772                	flw	fa4,28(sp)
 638:	0076                	c.slli	zero,0x1d
 63a:	7261                	lui	tp,0xffff8
 63c:	63006367          	0x63006367
 640:	6572726f          	jal	tp,28496 <_stack_start+0x18496>
 644:	6d007463          	bgeu	zero,a6,d0c <_bss_end+0x408>
 648:	6961                	lui	s2,0x18
 64a:	2e6e                	fld	ft8,216(sp)
 64c:	616d0063          	beq	s10,s6,c4c <_bss_end+0x348>
 650:	6e69                	lui	t3,0x1a
 652:	6300                	flw	fs0,0(a4)
 654:	7472                	flw	fs0,60(sp)
 656:	2e30                	fld	fa2,88(a2)
 658:	4e470053          	0x4e470053
 65c:	2055                	jal	700 <__DTOR_END__+0x20c>
 65e:	5341                	li	t1,-16
 660:	3220                	fld	fs0,96(a2)
 662:	332e                	fld	ft6,232(sp)
 664:	0032                	c.slli	zero,0xc

Disassembly of section .comment:

00000000 <.comment>:
  .endr
   0:	3a434347          	fmsub.d	ft6,ft6,ft4,ft7,rmm
   4:	2820                	fld	fs0,80(s0)
   6:	69466953          	0x69466953
   a:	6576                	flw	fa0,92(sp)
   c:	4720                	lw	s0,72(a4)
   e:	38204343          	fmadd.s	ft6,ft0,ft2,ft7,rmm
  12:	332e                	fld	ft6,232(sp)
  14:	302e                	fld	ft0,232(sp)
  16:	322d                	jal	fffff940 <_stack_start+0xfffef940>
  18:	3130                	fld	fa2,96(a0)
  1a:	2e39                	jal	338 <reset_handler+0x1c>
  1c:	3830                	fld	fa2,112(s0)
  1e:	302e                	fld	ft0,232(sp)
  20:	2029                	jal	2a <__DYNAMIC+0x2a>
  22:	2e38                	fld	fa4,88(a2)
  24:	00302e33          	sgtz	t3,gp

Disassembly of section .riscv.attributes:

00000000 <.riscv.attributes>:
   0:	2041                	jal	80 <__DYNAMIC+0x80>
   2:	0000                	unimp
   4:	7200                	flw	fs0,32(a2)
   6:	7369                	lui	t1,0xffffa
   8:	01007663          	bgeu	zero,a6,14 <__DYNAMIC+0x14>
   c:	0016                	c.slli	zero,0x5
   e:	0000                	unimp
  10:	1004                	addi	s1,sp,32
  12:	7205                	lui	tp,0xfffe1
  14:	3376                	fld	ft6,376(sp)
  16:	6932                	flw	fs2,12(sp)
  18:	7032                	flw	ft0,44(sp)
  1a:	5f30                	lw	a2,120(a4)
  1c:	326d                	jal	fffff9c6 <_stack_start+0xfffef9c6>
  1e:	3070                	fld	fa2,224(s0)
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	000c                	0xc
   2:	0000                	unimp
   4:	ffff                	0xffff
   6:	ffff                	0xffff
   8:	0001                	nop
   a:	7c01                	lui	s8,0xfffe0
   c:	0d01                	addi	s10,s10,0
   e:	0002                	c.slli64	zero
  10:	0024                	addi	s1,sp,8
  12:	0000                	unimp
  14:	0000                	unimp
  16:	0000                	unimp
  18:	008c                	addi	a1,sp,64
  1a:	0000                	unimp
  1c:	0064                	addi	s1,sp,12
  1e:	0000                	unimp
  20:	0e44                	addi	s1,sp,788
  22:	5010                	lw	a2,32(s0)
  24:	0288                	addi	a0,sp,320
  26:	0389                	addi	t2,t2,2
  28:	0492                	slli	s1,s1,0x4
  2a:	0181                	addi	gp,gp,0
  2c:	3c02                	fld	fs8,32(sp)
  2e:	44c1                	li	s1,16
  30:	44c8                	lw	a0,12(s1)
  32:	44c9                	li	s1,18
  34:	44d2                	lw	s1,20(sp)
  36:	000e                	c.slli	zero,0x3
  38:	0024                	addi	s1,sp,8
  3a:	0000                	unimp
  3c:	0000                	unimp
  3e:	0000                	unimp
  40:	00f0                	addi	a2,sp,76
  42:	0000                	unimp
  44:	0050                	addi	a2,sp,4
  46:	0000                	unimp
  48:	0e44                	addi	s1,sp,788
  4a:	4c10                	lw	a2,24(s0)
  4c:	0288                	addi	a0,sp,320
  4e:	0389                	addi	t2,t2,2
  50:	0181                	addi	gp,gp,0
  52:	0a50                	addi	a2,sp,276
  54:	44c1                	li	s1,16
  56:	48c8                	lw	a0,20(s1)
  58:	48c9                	li	a7,18
  5a:	000e                	c.slli	zero,0x3
  5c:	0b44                	addi	s1,sp,404
  5e:	0000                	unimp
  60:	000c                	0xc
  62:	0000                	unimp
  64:	0000                	unimp
  66:	0000                	unimp
  68:	0140                	addi	s0,sp,132
  6a:	0000                	unimp
  6c:	0004                	0x4
  6e:	0000                	unimp
  70:	000c                	0xc
  72:	0000                	unimp
  74:	0000                	unimp
  76:	0000                	unimp
  78:	0144                	addi	s1,sp,132
  7a:	0000                	unimp
  jal x0, default_exc_handler
  7c:	0004                	0x4
  7e:	0000                	unimp
  jal x0, reset_handler
  80:	000c                	0xc
  82:	0000                	unimp
  jal x0, default_exc_handler
  84:	0000                	unimp
  86:	0000                	unimp
  jal x0, default_exc_handler
  88:	0148                	addi	a0,sp,132
  8a:	0000                	unimp
{
  8c:	0008                	0x8
  8e:	0000                	unimp
  90:	000c                	0xc
  92:	0000                	unimp
  94:	0000                	unimp
  96:	0000                	unimp
  98:	0150                	addi	a2,sp,132
  9a:	0000                	unimp
  9c:	0014                	0x14
  9e:	0000                	unimp
  a0:	000c                	0xc
  a2:	0000                	unimp
  oldcrc32 = 0xFFFFFFFF;
  a4:	ffff                	0xffff
  a6:	ffff                	0xffff
      oldcrc32 = UPDC32 (rand_beebs (), oldcrc32);
  a8:	0001                	nop
  aa:	7c01                	lui	s8,0xfffe0
  ac:	0d01                	addi	s10,s10,0
  ae:	0002                	c.slli64	zero
  b0:	000c                	0xc
  b2:	0000                	unimp
  b4:	00a0                	addi	s0,sp,72
  b6:	0000                	unimp
  b8:	0164                	addi	s1,sp,140
  ba:	0000                	unimp
  bc:	0038                	addi	a4,sp,8
  be:	0000                	unimp
  c0:	000c                	0xc
  c2:	0000                	unimp
  c4:	00a0                	addi	s0,sp,72
  c6:	0000                	unimp
  c8:	019c                	addi	a5,sp,192
  ca:	0000                	unimp
  cc:	000c                	0xc
  ce:	0000                	unimp
  for (i = 0; i < 1024; ++i)
  d0:	000c                	0xc
  d2:	0000                	unimp
}
  d4:	00a0                	addi	s0,sp,72
  d6:	0000                	unimp
  d8:	01a8                	addi	a0,sp,200
  da:	0000                	unimp
  dc:	0020                	addi	s0,sp,8
  de:	0000                	unimp
  e0:	000c                	0xc
  e2:	0000                	unimp
  e4:	00a0                	addi	s0,sp,72
  e6:	0000                	unimp
  e8:	01c8                	addi	a0,sp,196
  ea:	0000                	unimp
  ec:	0028                	addi	a0,sp,8
  ee:	0000                	unimp
{
  f0:	000c                	0xc
  f2:	0000                	unimp
  f4:	00a0                	addi	s0,sp,72
  f6:	0000                	unimp
  f8:	01f0                	addi	a2,sp,204
  fa:	0000                	unimp
  fc:	0054                	addi	a3,sp,4
  fe:	0000                	unimp
 100:	001c                	0x1c
 102:	0000                	unimp
  for (i = 0; i < rpt; i++)
 104:	00a0                	addi	s0,sp,72
 106:	0000                	unimp
 108:	0244                	addi	s1,sp,260
 10a:	0000                	unimp
}
 10c:	0044                	addi	s1,sp,4
 10e:	0000                	unimp
 110:	0e48                	addi	a0,sp,788
 112:	4820                	lw	s0,80(s0)
  return (int) (r % 32768);
 114:	0288                	addi	a0,sp,320
 116:	0181                	addi	gp,gp,0
}
 118:	c168                	sw	a0,68(a0)
 11a:	c844                	sw	s1,20(s0)
 11c:	0e44                	addi	s1,sp,788
 11e:	0000                	unimp
 120:	000c                	0xc
 122:	0000                	unimp
 124:	00a0                	addi	s0,sp,72
 126:	0000                	unimp
      srand_beebs (0);
 128:	0288                	addi	a0,sp,320
 12a:	0000                	unimp
 12c:	0074                	addi	a3,sp,12
 12e:	0000                	unimp
      r = crc32pseudo ();
 130:	000c                	0xc
 132:	0000                	unimp
 134:	00a0                	addi	s0,sp,72
 136:	0000                	unimp
  for (i = 0; i < rpt; i++)
 138:	02fc                	addi	a5,sp,332
 13a:	0000                	unimp
 13c:	0004                	0x4
 13e:	0000                	unimp
}
 140:	000c                	0xc
 142:	0000                	unimp
  int  res = benchmark_body (heat);
 144:	ffff                	0xffff
 146:	ffff                	0xffff
  return benchmark_body (LOCAL_SCALE_FACTOR * CPU_MHZ);
 148:	0001                	nop
 14a:	7c01                	lui	s8,0xfffe0
 14c:	0d01                	addi	s10,s10,0
 14e:	0002                	c.slli64	zero
  return 11433 == r;
 150:	000c                	0xc
 152:	0000                	unimp
 154:	0140                	addi	s0,sp,132
 156:	0000                	unimp
 158:	0300                	addi	s0,sp,384
 15a:	0000                	unimp
}
 15c:	0008                	0x8
 15e:	0000                	unimp
 160:	000c                	0xc
 162:	0000                	unimp
  seed = (seed * 1103515245L + 12345) & ((1UL << 31) - 1);
 164:	0140                	addi	s0,sp,132
 166:	0000                	unimp
 168:	0308                	addi	a0,sp,384
 16a:	0000                	unimp
 16c:	0008                	0x8
 16e:	0000                	unimp
 170:	000c                	0xc
 172:	0000                	unimp
 174:	0140                	addi	s0,sp,132
 176:	0000                	unimp
 178:	0310                	addi	a2,sp,384
 17a:	0000                	unimp
 17c:	0008                	0x8
 17e:	0000                	unimp
 180:	000c                	0xc
 182:	0000                	unimp
 184:	ffff                	0xffff
 186:	ffff                	0xffff
 188:	0001                	nop
 18a:	7c01                	lui	s8,0xfffe0
 18c:	0d01                	addi	s10,s10,0
 18e:	0002                	c.slli64	zero
 190:	0014                	0x14
 192:	0000                	unimp
}
 194:	0180                	addi	s0,sp,192
 196:	0000                	unimp
 198:	04a8                	addi	a0,sp,584
 19a:	0000                	unimp
  seed = (long int) new_seed;
 19c:	003c                	addi	a5,sp,8
 19e:	0000                	unimp
 1a0:	0e44                	addi	s1,sp,788
 1a2:	4420                	lw	s0,72(s0)
}
 1a4:	0181                	addi	gp,gp,0
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
  .endr
   0:	04a8                	addi	a0,sp,584
   2:	0000                	unimp
   4:	04e4                	addi	s1,sp,588
	...
   e:	0000                	unimp
  10:	ffff                	0xffff
  12:	ffff                	0xffff
  14:	0000                	unimp
  16:	0000                	unimp
  18:	0318                	addi	a4,sp,384
  1a:	0000                	unimp
  1c:	03cc                	addi	a1,sp,452
  1e:	0000                	unimp
  20:	0000                	unimp
  22:	0000                	unimp
  24:	008c                	addi	a1,sp,64
	...
