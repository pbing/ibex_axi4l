
nettle-aes.elf:     file format elf32-littleriscv


Disassembly of section .vectors:

00000000 <_stack_start-0x10000>:
  // external interrupts are handled by the same callback
  // until compiler supports IRQ routines
  .org 0x00
  .rept 31
  nop
  .endr
   0:	00000013          	nop
   4:	00000013          	nop
   8:	00000013          	nop
   c:	00000013          	nop
  10:	00000013          	nop
  14:	00000013          	nop
  18:	00000013          	nop
  1c:	00000013          	nop
  20:	00000013          	nop
  24:	00000013          	nop
  28:	00000013          	nop
  2c:	00000013          	nop
  30:	00000013          	nop
  34:	00000013          	nop
  38:	00000013          	nop
  3c:	00000013          	nop
  40:	00000013          	nop
  44:	00000013          	nop
  48:	00000013          	nop
  4c:	00000013          	nop
  50:	00000013          	nop
  54:	00000013          	nop
  58:	00000013          	nop
  5c:	00000013          	nop
  60:	00000013          	nop
  64:	00000013          	nop
  68:	00000013          	nop
  6c:	00000013          	nop
  70:	00000013          	nop
  74:	00000013          	nop
  78:	00000013          	nop
  jal x0, default_exc_handler
  7c:	06c0106f          	j	10e8 <default_exc_handler>

  // reset vector
  .org 0x80
  jal x0, reset_handler
  80:	06c0106f          	j	10ec <reset_handler>

  // illegal instruction exception
  .org 0x84
  jal x0, default_exc_handler
  84:	0640106f          	j	10e8 <default_exc_handler>

  // ecall handler
  .org 0x88
  jal x0, default_exc_handler
  88:	0600106f          	j	10e8 <default_exc_handler>

Disassembly of section .text:

0000008c <_aes_set_key>:
  };
  const uint8_t *rp;
  unsigned lastkey, i;
  uint32_t t;

  assert_beebs (nk != 0);
      8c:	00059a63          	bnez	a1,a0 <_aes_set_key+0x14>
{
      90:	ff010113          	addi	sp,sp,-16
  assert_beebs (nk != 0);
      94:	00100513          	li	a0,1
{
      98:	00112623          	sw	ra,12(sp)
  assert_beebs (nk != 0);
      9c:	100010ef          	jal	ra,119c <exit>
  lastkey = (AES_BLOCK_SIZE / 4) * (nr + 1);
      a0:	00150513          	addi	a0,a0,1
      a4:	00251513          	slli	a0,a0,0x2

  for (i = 0, rp = rcon; i < nk; i++)
      a8:	00000713          	li	a4,0
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
      ac:	0036c783          	lbu	a5,3(a3)
      b0:	0026c883          	lbu	a7,2(a3)
      b4:	00271813          	slli	a6,a4,0x2
      b8:	01879793          	slli	a5,a5,0x18
      bc:	01089893          	slli	a7,a7,0x10
      c0:	0117e7b3          	or	a5,a5,a7
      c4:	0006c883          	lbu	a7,0(a3)
      c8:	01060833          	add	a6,a2,a6
  for (i = 0, rp = rcon; i < nk; i++)
      cc:	00170713          	addi	a4,a4,1
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
      d0:	0117e7b3          	or	a5,a5,a7
      d4:	0016c883          	lbu	a7,1(a3)
      d8:	00468693          	addi	a3,a3,4
      dc:	00889893          	slli	a7,a7,0x8
      e0:	0117e7b3          	or	a5,a5,a7
      e4:	00f82023          	sw	a5,0(a6)
  for (i = 0, rp = rcon; i < nk; i++)
      e8:	fce592e3          	bne	a1,a4,ac <_aes_set_key+0x20>
      ec:	ffc00e13          	li	t3,-4
      f0:	03c58e33          	mul	t3,a1,t3
      f4:	00259793          	slli	a5,a1,0x2
      f8:	00f60633          	add	a2,a2,a5
      fc:	00058893          	mv	a7,a1
     100:	00001317          	auipc	t1,0x1
     104:	4a030313          	addi	t1,t1,1184 # 15a0 <__DTOR_END__>
    {
      t = subkeys[i - 1];
      if (i % nk == 0)
	t = SUBBYTE (ROTL32 (24, t), aes_sbox) ^ *rp++;

      else if (nk > 6 && (i % nk) == 4)
     108:	00600e93          	li	t4,6
     10c:	00400f13          	li	t5,4
	t = SUBBYTE (t, aes_sbox);
     110:	00003817          	auipc	a6,0x3
     114:	99c80813          	addi	a6,a6,-1636 # 2aac <_aes_encrypt_table>
  for (i = nk; i < lastkey; i++)
     118:	00a8e463          	bltu	a7,a0,120 <_aes_set_key+0x94>
     11c:	00008067          	ret
      if (i % nk == 0)
     120:	02b8f733          	remu	a4,a7,a1
      t = subkeys[i - 1];
     124:	ffc62783          	lw	a5,-4(a2)
      if (i % nk == 0)
     128:	08071463          	bnez	a4,1b0 <_aes_set_key+0x124>
	t = SUBBYTE (ROTL32 (24, t), aes_sbox) ^ *rp++;
     12c:	0087d713          	srli	a4,a5,0x8
     130:	01879793          	slli	a5,a5,0x18
     134:	00e7e7b3          	or	a5,a5,a4
     138:	0187d713          	srli	a4,a5,0x18
     13c:	0ff7f693          	andi	a3,a5,255
     140:	00e80733          	add	a4,a6,a4
     144:	00074703          	lbu	a4,0(a4)
     148:	00d806b3          	add	a3,a6,a3
     14c:	0006c683          	lbu	a3,0(a3)
     150:	01871713          	slli	a4,a4,0x18
     154:	00130313          	addi	t1,t1,1
     158:	00d76733          	or	a4,a4,a3
     15c:	0087d693          	srli	a3,a5,0x8
     160:	0ff6f693          	andi	a3,a3,255
     164:	00d806b3          	add	a3,a6,a3
     168:	0006c683          	lbu	a3,0(a3)
     16c:	0107d793          	srli	a5,a5,0x10
     170:	00869693          	slli	a3,a3,0x8
     174:	00d766b3          	or	a3,a4,a3
     178:	0ff7f713          	andi	a4,a5,255
     17c:	00e80733          	add	a4,a6,a4
     180:	00074783          	lbu	a5,0(a4)
     184:	01079793          	slli	a5,a5,0x10
     188:	00f6e733          	or	a4,a3,a5
     18c:	fff34783          	lbu	a5,-1(t1)
     190:	00f747b3          	xor	a5,a4,a5

      subkeys[i] = subkeys[i - nk] ^ t;
     194:	01c60733          	add	a4,a2,t3
     198:	00072703          	lw	a4,0(a4)
  for (i = nk; i < lastkey; i++)
     19c:	00188893          	addi	a7,a7,1
     1a0:	00460613          	addi	a2,a2,4
      subkeys[i] = subkeys[i - nk] ^ t;
     1a4:	00f747b3          	xor	a5,a4,a5
     1a8:	fef62e23          	sw	a5,-4(a2)
     1ac:	f6dff06f          	j	118 <_aes_set_key+0x8c>
      else if (nk > 6 && (i % nk) == 4)
     1b0:	febef2e3          	bgeu	t4,a1,194 <_aes_set_key+0x108>
     1b4:	ffe710e3          	bne	a4,t5,194 <_aes_set_key+0x108>
	t = SUBBYTE (t, aes_sbox);
     1b8:	0107d713          	srli	a4,a5,0x10
     1bc:	0ff77713          	andi	a4,a4,255
     1c0:	00e80733          	add	a4,a6,a4
     1c4:	00074f83          	lbu	t6,0(a4)
     1c8:	0187d713          	srli	a4,a5,0x18
     1cc:	00e80733          	add	a4,a6,a4
     1d0:	00074683          	lbu	a3,0(a4)
     1d4:	0ff7f713          	andi	a4,a5,255
     1d8:	00e80733          	add	a4,a6,a4
     1dc:	00074703          	lbu	a4,0(a4)
     1e0:	01869693          	slli	a3,a3,0x18
     1e4:	010f9f93          	slli	t6,t6,0x10
     1e8:	00e6e6b3          	or	a3,a3,a4
     1ec:	0087d713          	srli	a4,a5,0x8
     1f0:	0ff77713          	andi	a4,a4,255
     1f4:	00e80733          	add	a4,a6,a4
     1f8:	00074783          	lbu	a5,0(a4)
     1fc:	00879793          	slli	a5,a5,0x8
     200:	00f6e7b3          	or	a5,a3,a5
     204:	00ffe7b3          	or	a5,t6,a5
     208:	f8dff06f          	j	194 <_aes_set_key+0x108>

0000020c <aes_set_encrypt_key>:
void
aes_set_encrypt_key (struct aes_ctx *ctx, size_t keysize, const uint8_t * key)
{
  unsigned nk, nr;

  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
     20c:	ff058713          	addi	a4,a1,-16
     210:	01000793          	li	a5,16
     214:	00e7fa63          	bgeu	a5,a4,228 <aes_set_encrypt_key+0x1c>
{
     218:	ff010113          	addi	sp,sp,-16
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
     21c:	00100513          	li	a0,1
{
     220:	00112623          	sw	ra,12(sp)
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
     224:	779000ef          	jal	ra,119c <exit>
  assert_beebs (keysize <= AES_MAX_KEY_SIZE);

  /* Truncate keysizes to the valid key sizes provided by Rijndael */
  if (keysize == AES256_KEY_SIZE)
     228:	02000793          	li	a5,32
     22c:	00060693          	mv	a3,a2
     230:	02f58263          	beq	a1,a5,254 <aes_set_encrypt_key+0x48>
    {
      nk = 8;
      nr = _AES256_ROUNDS;
    }
  else if (keysize >= AES192_KEY_SIZE)
     234:	01700793          	li	a5,23
     238:	02b7e463          	bltu	a5,a1,260 <aes_set_encrypt_key+0x54>
      nr = _AES192_ROUNDS;
    }
  else
    {				/* must be 16 or more */
      nk = 4;
      nr = _AES128_ROUNDS;
     23c:	00a00793          	li	a5,10
      nk = 4;
     240:	00400593          	li	a1,4
    }

  ctx->rounds = nr;
     244:	00f52023          	sw	a5,0(a0)
  _aes_set_key (nr, nk, ctx->keys, key);
     248:	00450613          	addi	a2,a0,4
     24c:	00078513          	mv	a0,a5
     250:	e3dff06f          	j	8c <_aes_set_key>
      nr = _AES256_ROUNDS;
     254:	00e00793          	li	a5,14
      nk = 8;
     258:	00800593          	li	a1,8
     25c:	fe9ff06f          	j	244 <aes_set_encrypt_key+0x38>
      nr = _AES192_ROUNDS;
     260:	00c00793          	li	a5,12
      nk = 6;
     264:	00600593          	li	a1,6
     268:	fddff06f          	j	244 <aes_set_encrypt_key+0x38>

0000026c <_nettle_aes_invert>:
  unsigned i;

  /* Reverse the order of subkeys, in groups of 4. */
  /* FIXME: Instead of reordering the subkeys, change the access order
     of aes_decrypt, since it's a separate function anyway? */
  if (src == dst)
     26c:	00251813          	slli	a6,a0,0x2
     270:	04b60663          	beq	a2,a1,2bc <_nettle_aes_invert+0x50>
     274:	00451513          	slli	a0,a0,0x4
     278:	00a60633          	add	a2,a2,a0
     27c:	00058693          	mv	a3,a1
    }
  else
    {
      unsigned k;

      for (i = 0; i <= rounds * 4; i += 4)
     280:	00000713          	li	a4,0
	for (k = 0; k < 4; k++)
     284:	01000893          	li	a7,16
      for (i = 0; i <= rounds * 4; i += 4)
     288:	00060513          	mv	a0,a2
     28c:	00000793          	li	a5,0
	  dst[i + k] = src[rounds * 4 - i + k];
     290:	00052e03          	lw	t3,0(a0)
     294:	00f68333          	add	t1,a3,a5
     298:	00478793          	addi	a5,a5,4
     29c:	01c32023          	sw	t3,0(t1)
     2a0:	00450513          	addi	a0,a0,4
	for (k = 0; k < 4; k++)
     2a4:	ff1796e3          	bne	a5,a7,290 <_nettle_aes_invert+0x24>
      for (i = 0; i <= rounds * 4; i += 4)
     2a8:	00470713          	addi	a4,a4,4
     2ac:	ff060613          	addi	a2,a2,-16
     2b0:	01068693          	addi	a3,a3,16
     2b4:	fce87ae3          	bgeu	a6,a4,288 <_nettle_aes_invert+0x1c>
     2b8:	0180006f          	j	2d0 <_nettle_aes_invert+0x64>
  if (src == dst)
     2bc:	00058613          	mv	a2,a1
     2c0:	00080713          	mv	a4,a6
	for (k = 0; k < 4; k++)
     2c4:	00400893          	li	a7,4
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
     2c8:	40e807b3          	sub	a5,a6,a4
     2cc:	00e7ee63          	bltu	a5,a4,2e8 <_nettle_aes_invert+0x7c>
     2d0:	01058593          	addi	a1,a1,16
      for (i = 0; i <= rounds * 4; i += 4)
     2d4:	00400513          	li	a0,4
    }

  /* Transform all subkeys but the first and last. */
  for (i = 4; i < 4 * rounds; i++)
    MIX_COLUMN (mtable, dst[i]);
     2d8:	00001617          	auipc	a2,0x1
     2dc:	2c860613          	addi	a2,a2,712 # 15a0 <__DTOR_END__>
  for (i = 4; i < 4 * rounds; i++)
     2e0:	05056263          	bltu	a0,a6,324 <_nettle_aes_invert+0xb8>
}
     2e4:	00008067          	ret
     2e8:	00271793          	slli	a5,a4,0x2
     2ec:	00f587b3          	add	a5,a1,a5
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
     2f0:	00060693          	mv	a3,a2
	for (k = 0; k < 4; k++)
     2f4:	00000513          	li	a0,0
	  SWAP (dst[i + k], dst[j + k]);
     2f8:	0007ae03          	lw	t3,0(a5)
     2fc:	0006a303          	lw	t1,0(a3)
	for (k = 0; k < 4; k++)
     300:	00150513          	addi	a0,a0,1
	  SWAP (dst[i + k], dst[j + k]);
     304:	01c6a023          	sw	t3,0(a3)
     308:	0067a023          	sw	t1,0(a5)
     30c:	00468693          	addi	a3,a3,4
     310:	00478793          	addi	a5,a5,4
	for (k = 0; k < 4; k++)
     314:	ff1512e3          	bne	a0,a7,2f8 <_nettle_aes_invert+0x8c>
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
     318:	ffc70713          	addi	a4,a4,-4
     31c:	01060613          	addi	a2,a2,16
     320:	fa9ff06f          	j	2c8 <_nettle_aes_invert+0x5c>
    MIX_COLUMN (mtable, dst[i]);
     324:	0005a783          	lw	a5,0(a1)
  for (i = 4; i < 4 * rounds; i++)
     328:	00150513          	addi	a0,a0,1
     32c:	00458593          	addi	a1,a1,4
    MIX_COLUMN (mtable, dst[i]);
     330:	0187d713          	srli	a4,a5,0x18
     334:	00271713          	slli	a4,a4,0x2
     338:	00e60733          	add	a4,a2,a4
     33c:	00c72683          	lw	a3,12(a4)
     340:	0086d713          	srli	a4,a3,0x8
     344:	01869693          	slli	a3,a3,0x18
     348:	00d76733          	or	a4,a4,a3
     34c:	0ff7f693          	andi	a3,a5,255
     350:	00269693          	slli	a3,a3,0x2
     354:	00d606b3          	add	a3,a2,a3
     358:	00c6a683          	lw	a3,12(a3)
     35c:	00d74733          	xor	a4,a4,a3
     360:	0067d693          	srli	a3,a5,0x6
     364:	3fc6f693          	andi	a3,a3,1020
     368:	00d606b3          	add	a3,a2,a3
     36c:	00c6a683          	lw	a3,12(a3)
     370:	00e7d793          	srli	a5,a5,0xe
     374:	3fc7f793          	andi	a5,a5,1020
     378:	00869893          	slli	a7,a3,0x8
     37c:	0186d693          	srli	a3,a3,0x18
     380:	00d8e6b3          	or	a3,a7,a3
     384:	00f607b3          	add	a5,a2,a5
     388:	00d74733          	xor	a4,a4,a3
     38c:	00c7a683          	lw	a3,12(a5)
     390:	01069793          	slli	a5,a3,0x10
     394:	0106d693          	srli	a3,a3,0x10
     398:	00d7e7b3          	or	a5,a5,a3
     39c:	00e7c733          	xor	a4,a5,a4
     3a0:	fee5ae23          	sw	a4,-4(a1)
     3a4:	f3dff06f          	j	2e0 <_nettle_aes_invert+0x74>

000003a8 <aes_invert_key>:

// From nettle/aes-set-decrypt-key.c

void
aes_invert_key (struct aes_ctx *dst, const struct aes_ctx *src)
{
     3a8:	ff010113          	addi	sp,sp,-16
     3ac:	00812423          	sw	s0,8(sp)
     3b0:	00058413          	mv	s0,a1
     3b4:	00912223          	sw	s1,4(sp)
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
     3b8:	00458613          	addi	a2,a1,4
{
     3bc:	00050493          	mv	s1,a0
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
     3c0:	00450593          	addi	a1,a0,4
     3c4:	00042503          	lw	a0,0(s0)
{
     3c8:	00112623          	sw	ra,12(sp)
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
     3cc:	ea1ff0ef          	jal	ra,26c <_nettle_aes_invert>
  dst->rounds = src->rounds;
     3d0:	00042783          	lw	a5,0(s0)
}
     3d4:	00c12083          	lw	ra,12(sp)
     3d8:	00812403          	lw	s0,8(sp)
  dst->rounds = src->rounds;
     3dc:	00f4a023          	sw	a5,0(s1)
}
     3e0:	00412483          	lw	s1,4(sp)
     3e4:	01010113          	addi	sp,sp,16
     3e8:	00008067          	ret

000003ec <aes_set_decrypt_key>:

void
aes_set_decrypt_key (struct aes_ctx *ctx, size_t keysize, const uint8_t * key)
{
     3ec:	ff010113          	addi	sp,sp,-16
     3f0:	00812423          	sw	s0,8(sp)
     3f4:	00112623          	sw	ra,12(sp)
     3f8:	00050413          	mv	s0,a0
  /* We first create subkeys for encryption,
   * then modify the subkeys for decryption. */
  aes_set_encrypt_key (ctx, keysize, key);
     3fc:	e11ff0ef          	jal	ra,20c <aes_set_encrypt_key>
  aes_invert_key (ctx, ctx);
     400:	00040593          	mv	a1,s0
     404:	00040513          	mv	a0,s0
}
     408:	00812403          	lw	s0,8(sp)
     40c:	00c12083          	lw	ra,12(sp)
     410:	01010113          	addi	sp,sp,16
  aes_invert_key (ctx, ctx);
     414:	f95ff06f          	j	3a8 <aes_invert_key>

00000418 <_nettle_aes_encrypt>:

void
_nettle_aes_encrypt (unsigned rounds, const uint32_t * keys,
		     const struct aes_table *T,
		     size_t length, uint8_t * dst, const uint8_t * src)
{
     418:	fb010113          	addi	sp,sp,-80
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     41c:	00f6f813          	andi	a6,a3,15
     420:	00d706b3          	add	a3,a4,a3
{
     424:	04112623          	sw	ra,76(sp)
     428:	04812423          	sw	s0,72(sp)
     42c:	04912223          	sw	s1,68(sp)
     430:	05212023          	sw	s2,64(sp)
     434:	03312e23          	sw	s3,60(sp)
     438:	03412c23          	sw	s4,56(sp)
     43c:	03512a23          	sw	s5,52(sp)
     440:	03612823          	sw	s6,48(sp)
     444:	03712623          	sw	s7,44(sp)
     448:	03812423          	sw	s8,40(sp)
     44c:	03912223          	sw	s9,36(sp)
     450:	03a12023          	sw	s10,32(sp)
     454:	01b12e23          	sw	s11,28(sp)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     458:	00d12623          	sw	a3,12(sp)
     45c:	2c080663          	beqz	a6,728 <_nettle_aes_encrypt+0x310>
     460:	00100513          	li	a0,1
     464:	539000ef          	jal	ra,119c <exit>
    unsigned i;

    /* Get clear text, using little-endian byte order.
     * Also XOR with the first subkey. */

    w0 = LE_READ_UINT32 (src) ^ keys[0];
     468:	0017c683          	lbu	a3,1(a5)
     46c:	0007c803          	lbu	a6,0(a5)
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     470:	0057c883          	lbu	a7,5(a5)
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     474:	00869693          	slli	a3,a3,0x8
     478:	0106e6b3          	or	a3,a3,a6
     47c:	0027c803          	lbu	a6,2(a5)
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     480:	00889893          	slli	a7,a7,0x8
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     484:	0097c303          	lbu	t1,9(a5)
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     488:	01081813          	slli	a6,a6,0x10
     48c:	00d866b3          	or	a3,a6,a3
     490:	0037c803          	lbu	a6,3(a5)
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     494:	00831313          	slli	t1,t1,0x8
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     498:	00c7c383          	lbu	t2,12(a5)
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     49c:	01881813          	slli	a6,a6,0x18
     4a0:	00d86833          	or	a6,a6,a3
     4a4:	0005a683          	lw	a3,0(a1)
     4a8:	01058b93          	addi	s7,a1,16

    for (i = 1; i < rounds; i++)
     4ac:	00100c13          	li	s8,1
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     4b0:	00d84833          	xor	a6,a6,a3
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     4b4:	0047c683          	lbu	a3,4(a5)
     4b8:	00d8e8b3          	or	a7,a7,a3
     4bc:	0067c683          	lbu	a3,6(a5)
     4c0:	01069693          	slli	a3,a3,0x10
     4c4:	0116e8b3          	or	a7,a3,a7
     4c8:	0077c683          	lbu	a3,7(a5)
     4cc:	01869693          	slli	a3,a3,0x18
     4d0:	0116e6b3          	or	a3,a3,a7
     4d4:	0045a883          	lw	a7,4(a1)
     4d8:	0116c6b3          	xor	a3,a3,a7
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     4dc:	0087c883          	lbu	a7,8(a5)
     4e0:	01136333          	or	t1,t1,a7
     4e4:	00a7c883          	lbu	a7,10(a5)
     4e8:	01089893          	slli	a7,a7,0x10
     4ec:	0068e333          	or	t1,a7,t1
     4f0:	00b7c883          	lbu	a7,11(a5)
     4f4:	01889893          	slli	a7,a7,0x18
     4f8:	0068e8b3          	or	a7,a7,t1
     4fc:	0085a303          	lw	t1,8(a1)
     500:	0068c8b3          	xor	a7,a7,t1
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     504:	00d7c303          	lbu	t1,13(a5)
     508:	00831313          	slli	t1,t1,0x8
     50c:	00736333          	or	t1,t1,t2
     510:	00e7c383          	lbu	t2,14(a5)
     514:	01039393          	slli	t2,t2,0x10
     518:	0063e333          	or	t1,t2,t1
     51c:	00f7c383          	lbu	t2,15(a5)
     520:	01839393          	slli	t2,t2,0x18
     524:	0063e3b3          	or	t2,t2,t1
     528:	00c5a303          	lw	t1,12(a1)
     52c:	0063c3b3          	xor	t2,t2,t1
    for (i = 1; i < rounds; i++)
     530:	0086d293          	srli	t0,a3,0x8
     534:	0103de93          	srli	t4,t2,0x10
     538:	0083de13          	srli	t3,t2,0x8
     53c:	0183da93          	srli	s5,t2,0x18
     540:	0ff6fa13          	andi	s4,a3,255
     544:	0ff3f393          	andi	t2,t2,255
     548:	0186d493          	srli	s1,a3,0x18
     54c:	0106d693          	srli	a3,a3,0x10
     550:	000bad83          	lw	s11,0(s7)
     554:	004bad03          	lw	s10,4(s7)
     558:	008bac83          	lw	s9,8(s7)
     55c:	00712023          	sw	t2,0(sp)
     560:	010b8b93          	addi	s7,s7,16
     564:	0ff6f393          	andi	t2,a3,255
     568:	0188d693          	srli	a3,a7,0x18
     56c:	00d12223          	sw	a3,4(sp)
     570:	ffcba683          	lw	a3,-4(s7)
     574:	01085313          	srli	t1,a6,0x10
     578:	0ff87b13          	andi	s6,a6,255
     57c:	0108df93          	srli	t6,a7,0x10
     580:	0088df13          	srli	t5,a7,0x8
     584:	01885993          	srli	s3,a6,0x18
     588:	00d12423          	sw	a3,8(sp)
     58c:	00885813          	srli	a6,a6,0x8
     590:	0ff2f293          	andi	t0,t0,255
     594:	0fffff93          	andi	t6,t6,255
     598:	0fff7f13          	andi	t5,t5,255
     59c:	0ffefe93          	andi	t4,t4,255
     5a0:	0ff8f913          	andi	s2,a7,255
     5a4:	0ffe7e13          	andi	t3,t3,255
     5a8:	0ff37313          	andi	t1,t1,255
     5ac:	0ff87413          	andi	s0,a6,255
     5b0:	1aac6e63          	bltu	s8,a0,76c <_nettle_aes_encrypt+0x354>
	w3 = t3;
      }

    /* Final round */

    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     5b4:	005602b3          	add	t0,a2,t0
     5b8:	01f60fb3          	add	t6,a2,t6
     5bc:	0002c683          	lbu	a3,0(t0)
     5c0:	000fc803          	lbu	a6,0(t6)
     5c4:	01660b33          	add	s6,a2,s6
     5c8:	00869693          	slli	a3,a3,0x8
     5cc:	01081813          	slli	a6,a6,0x10
     5d0:	0106e6b3          	or	a3,a3,a6
     5d4:	000b4803          	lbu	a6,0(s6)
     5d8:	01560ab3          	add	s5,a2,s5
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     5dc:	01e60f33          	add	t5,a2,t5
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     5e0:	0106e6b3          	or	a3,a3,a6
     5e4:	000ac803          	lbu	a6,0(s5)
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     5e8:	01d60eb3          	add	t4,a2,t4
     5ec:	01460a33          	add	s4,a2,s4
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     5f0:	01881813          	slli	a6,a6,0x18
     5f4:	0106e6b3          	or	a3,a3,a6
     5f8:	01b6cdb3          	xor	s11,a3,s11
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     5fc:	000ec803          	lbu	a6,0(t4)
     600:	000f4683          	lbu	a3,0(t5)
     604:	013609b3          	add	s3,a2,s3
     608:	01081813          	slli	a6,a6,0x10
     60c:	00869693          	slli	a3,a3,0x8
     610:	0106e6b3          	or	a3,a3,a6
     614:	000a4803          	lbu	a6,0(s4)
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     618:	01c60e33          	add	t3,a2,t3
     61c:	00660333          	add	t1,a2,t1
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     620:	0106e6b3          	or	a3,a3,a6
     624:	0009c803          	lbu	a6,0(s3)
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     628:	01260933          	add	s2,a2,s2
     62c:	009604b3          	add	s1,a2,s1
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     630:	01881813          	slli	a6,a6,0x18
     634:	0106e6b3          	or	a3,a3,a6
     638:	01a6cd33          	xor	s10,a3,s10
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     63c:	00034803          	lbu	a6,0(t1)
     640:	000e4683          	lbu	a3,0(t3)
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     644:	00860433          	add	s0,a2,s0
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     648:	01081813          	slli	a6,a6,0x10
     64c:	00869693          	slli	a3,a3,0x8
     650:	0106e6b3          	or	a3,a3,a6
     654:	00094803          	lbu	a6,0(s2)
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     658:	007603b3          	add	t2,a2,t2
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     65c:	01070713          	addi	a4,a4,16
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     660:	0106e6b3          	or	a3,a3,a6
     664:	0004c803          	lbu	a6,0(s1)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     668:	01078793          	addi	a5,a5,16
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     66c:	01881813          	slli	a6,a6,0x18
     670:	0106e6b3          	or	a3,a3,a6
     674:	0196ccb3          	xor	s9,a3,s9
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     678:	0003c803          	lbu	a6,0(t2)
     67c:	00044683          	lbu	a3,0(s0)
     680:	01081813          	slli	a6,a6,0x10
     684:	00869693          	slli	a3,a3,0x8
     688:	0106e6b3          	or	a3,a3,a6
     68c:	00012803          	lw	a6,0(sp)
     690:	01060833          	add	a6,a2,a6
     694:	00084803          	lbu	a6,0(a6)
     698:	0106e6b3          	or	a3,a3,a6
     69c:	00412803          	lw	a6,4(sp)
     6a0:	01060833          	add	a6,a2,a6
     6a4:	00084803          	lbu	a6,0(a6)

    LE_WRITE_UINT32 (dst, t0);
     6a8:	ffb70823          	sb	s11,-16(a4)
    LE_WRITE_UINT32 (dst + 4, t1);
     6ac:	ffa70a23          	sb	s10,-12(a4)
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     6b0:	01881813          	slli	a6,a6,0x18
     6b4:	0106e6b3          	or	a3,a3,a6
     6b8:	00812803          	lw	a6,8(sp)
    LE_WRITE_UINT32 (dst + 8, t2);
     6bc:	ff970c23          	sb	s9,-8(a4)
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     6c0:	0106c6b3          	xor	a3,a3,a6
    LE_WRITE_UINT32 (dst, t0);
     6c4:	018dd813          	srli	a6,s11,0x18
     6c8:	ff0709a3          	sb	a6,-13(a4)
     6cc:	010dd813          	srli	a6,s11,0x10
     6d0:	ff070923          	sb	a6,-14(a4)
     6d4:	008dd813          	srli	a6,s11,0x8
     6d8:	ff0708a3          	sb	a6,-15(a4)
    LE_WRITE_UINT32 (dst + 4, t1);
     6dc:	018d5813          	srli	a6,s10,0x18
     6e0:	ff070ba3          	sb	a6,-9(a4)
     6e4:	010d5813          	srli	a6,s10,0x10
     6e8:	ff070b23          	sb	a6,-10(a4)
     6ec:	008d5813          	srli	a6,s10,0x8
     6f0:	ff070aa3          	sb	a6,-11(a4)
    LE_WRITE_UINT32 (dst + 8, t2);
     6f4:	018cd813          	srli	a6,s9,0x18
     6f8:	ff070da3          	sb	a6,-5(a4)
     6fc:	010cd813          	srli	a6,s9,0x10
     700:	ff070d23          	sb	a6,-6(a4)
     704:	008cd813          	srli	a6,s9,0x8
     708:	ff070ca3          	sb	a6,-7(a4)
    LE_WRITE_UINT32 (dst + 12, t3);
     70c:	0186d813          	srli	a6,a3,0x18
     710:	ff070fa3          	sb	a6,-1(a4)
     714:	0106d813          	srli	a6,a3,0x10
     718:	ff070f23          	sb	a6,-2(a4)
     71c:	0086d813          	srli	a6,a3,0x8
     720:	ff070ea3          	sb	a6,-3(a4)
     724:	fed70e23          	sb	a3,-4(a4)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     728:	00c12683          	lw	a3,12(sp)
     72c:	d2d71ee3          	bne	a4,a3,468 <_nettle_aes_encrypt+0x50>
  }
}
     730:	04c12083          	lw	ra,76(sp)
     734:	04812403          	lw	s0,72(sp)
     738:	04412483          	lw	s1,68(sp)
     73c:	04012903          	lw	s2,64(sp)
     740:	03c12983          	lw	s3,60(sp)
     744:	03812a03          	lw	s4,56(sp)
     748:	03412a83          	lw	s5,52(sp)
     74c:	03012b03          	lw	s6,48(sp)
     750:	02c12b83          	lw	s7,44(sp)
     754:	02812c03          	lw	s8,40(sp)
     758:	02412c83          	lw	s9,36(sp)
     75c:	02012d03          	lw	s10,32(sp)
     760:	01c12d83          	lw	s11,28(sp)
     764:	05010113          	addi	sp,sp,80
     768:	00008067          	ret
	t0 = AES_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     76c:	040b0b13          	addi	s6,s6,64
     770:	002b1b13          	slli	s6,s6,0x2
     774:	01660b33          	add	s6,a2,s6
     778:	000b2803          	lw	a6,0(s6)
     77c:	340a8a93          	addi	s5,s5,832
     780:	002a9a93          	slli	s5,s5,0x2
     784:	01560ab3          	add	s5,a2,s5
     788:	010dc833          	xor	a6,s11,a6
     78c:	14028293          	addi	t0,t0,320
     790:	000aad83          	lw	s11,0(s5)
     794:	00229293          	slli	t0,t0,0x2
     798:	240f8f93          	addi	t6,t6,576
     79c:	005602b3          	add	t0,a2,t0
     7a0:	002f9f93          	slli	t6,t6,0x2
     7a4:	01b84833          	xor	a6,a6,s11
     7a8:	01f60fb3          	add	t6,a2,t6
     7ac:	0002ad83          	lw	s11,0(t0)
     7b0:	000fa683          	lw	a3,0(t6)
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     7b4:	040a0a13          	addi	s4,s4,64
     7b8:	002a1a13          	slli	s4,s4,0x2
	t0 = AES_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     7bc:	01b84833          	xor	a6,a6,s11
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     7c0:	01460a33          	add	s4,a2,s4
	t0 = AES_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     7c4:	00d84833          	xor	a6,a6,a3
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     7c8:	34098993          	addi	s3,s3,832
     7cc:	000a2683          	lw	a3,0(s4)
     7d0:	00299993          	slli	s3,s3,0x2
     7d4:	013609b3          	add	s3,a2,s3
     7d8:	00dd46b3          	xor	a3,s10,a3
     7dc:	140f0f13          	addi	t5,t5,320
     7e0:	0009ad03          	lw	s10,0(s3)
     7e4:	002f1f13          	slli	t5,t5,0x2
     7e8:	240e8e93          	addi	t4,t4,576
     7ec:	01e60f33          	add	t5,a2,t5
     7f0:	002e9e93          	slli	t4,t4,0x2
     7f4:	01a6c6b3          	xor	a3,a3,s10
     7f8:	01d60eb3          	add	t4,a2,t4
     7fc:	000f2d03          	lw	s10,0(t5)
     800:	000ea883          	lw	a7,0(t4)
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     804:	04090913          	addi	s2,s2,64
     808:	00291913          	slli	s2,s2,0x2
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     80c:	01a6c6b3          	xor	a3,a3,s10
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     810:	01260933          	add	s2,a2,s2
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     814:	0116c6b3          	xor	a3,a3,a7
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     818:	34048493          	addi	s1,s1,832
     81c:	00092883          	lw	a7,0(s2)
     820:	00249493          	slli	s1,s1,0x2
     824:	009604b3          	add	s1,a2,s1
     828:	011cc8b3          	xor	a7,s9,a7
     82c:	140e0e13          	addi	t3,t3,320
     830:	0004ac83          	lw	s9,0(s1)
     834:	002e1e13          	slli	t3,t3,0x2
     838:	24030313          	addi	t1,t1,576
     83c:	01c60e33          	add	t3,a2,t3
     840:	00231313          	slli	t1,t1,0x2
     844:	0198c8b3          	xor	a7,a7,s9
     848:	00660333          	add	t1,a2,t1
     84c:	000e2c83          	lw	s9,0(t3)
     850:	00032303          	lw	t1,0(t1)
	t3 = AES_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     854:	00412e03          	lw	t3,4(sp)
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     858:	0198c8b3          	xor	a7,a7,s9
     85c:	0068c8b3          	xor	a7,a7,t1
	t3 = AES_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     860:	00012303          	lw	t1,0(sp)
     864:	340e0e13          	addi	t3,t3,832
     868:	002e1e13          	slli	t3,t3,0x2
     86c:	04030313          	addi	t1,t1,64
     870:	00231313          	slli	t1,t1,0x2
     874:	00660333          	add	t1,a2,t1
     878:	01c60e33          	add	t3,a2,t3
     87c:	000e2e03          	lw	t3,0(t3)
     880:	00032303          	lw	t1,0(t1)
     884:	14040413          	addi	s0,s0,320
     888:	00241413          	slli	s0,s0,0x2
     88c:	01c34333          	xor	t1,t1,t3
     890:	00812e03          	lw	t3,8(sp)
     894:	24038393          	addi	t2,t2,576
     898:	00860433          	add	s0,a2,s0
     89c:	00239393          	slli	t2,t2,0x2
     8a0:	01c34333          	xor	t1,t1,t3
     8a4:	007603b3          	add	t2,a2,t2
     8a8:	00042e03          	lw	t3,0(s0)
     8ac:	0003a383          	lw	t2,0(t2)
    for (i = 1; i < rounds; i++)
     8b0:	001c0c13          	addi	s8,s8,1
	t3 = AES_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     8b4:	01c34333          	xor	t1,t1,t3
     8b8:	007343b3          	xor	t2,t1,t2
     8bc:	c75ff06f          	j	530 <_nettle_aes_encrypt+0x118>

000008c0 <_nettle_aes_decrypt>:

void
_nettle_aes_decrypt (unsigned rounds, const uint32_t * keys,
		     const struct aes_table *T,
		     size_t length, uint8_t * dst, const uint8_t * src)
{
     8c0:	fb010113          	addi	sp,sp,-80
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     8c4:	00f6f813          	andi	a6,a3,15
     8c8:	00d706b3          	add	a3,a4,a3
{
     8cc:	04112623          	sw	ra,76(sp)
     8d0:	04812423          	sw	s0,72(sp)
     8d4:	04912223          	sw	s1,68(sp)
     8d8:	05212023          	sw	s2,64(sp)
     8dc:	03312e23          	sw	s3,60(sp)
     8e0:	03412c23          	sw	s4,56(sp)
     8e4:	03512a23          	sw	s5,52(sp)
     8e8:	03612823          	sw	s6,48(sp)
     8ec:	03712623          	sw	s7,44(sp)
     8f0:	03812423          	sw	s8,40(sp)
     8f4:	03912223          	sw	s9,36(sp)
     8f8:	03a12023          	sw	s10,32(sp)
     8fc:	01b12e23          	sw	s11,28(sp)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     900:	00d12623          	sw	a3,12(sp)
     904:	2c080663          	beqz	a6,bd0 <_nettle_aes_decrypt+0x310>
     908:	00100513          	li	a0,1
     90c:	091000ef          	jal	ra,119c <exit>
    unsigned i;

    /* Get clear text, using little-endian byte order.
     * Also XOR with the first subkey. */

    w0 = LE_READ_UINT32 (src) ^ keys[0];
     910:	0017c683          	lbu	a3,1(a5)
     914:	0007c883          	lbu	a7,0(a5)
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     918:	0057c803          	lbu	a6,5(a5)
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     91c:	00869693          	slli	a3,a3,0x8
     920:	0116e6b3          	or	a3,a3,a7
     924:	0027c883          	lbu	a7,2(a5)
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     928:	00881813          	slli	a6,a6,0x8
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     92c:	0097c303          	lbu	t1,9(a5)
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     930:	01089893          	slli	a7,a7,0x10
     934:	00d8e6b3          	or	a3,a7,a3
     938:	0037c883          	lbu	a7,3(a5)
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     93c:	00831313          	slli	t1,t1,0x8
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     940:	00c7c383          	lbu	t2,12(a5)
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     944:	01889893          	slli	a7,a7,0x18
     948:	00d8e8b3          	or	a7,a7,a3
     94c:	0005a683          	lw	a3,0(a1)
     950:	01058b93          	addi	s7,a1,16

    for (i = 1; i < rounds; i++)
     954:	00100c13          	li	s8,1
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     958:	00d8c8b3          	xor	a7,a7,a3
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     95c:	0047c683          	lbu	a3,4(a5)
     960:	00d86833          	or	a6,a6,a3
     964:	0067c683          	lbu	a3,6(a5)
     968:	01069693          	slli	a3,a3,0x10
     96c:	0106e833          	or	a6,a3,a6
     970:	0077c683          	lbu	a3,7(a5)
     974:	01869693          	slli	a3,a3,0x18
     978:	0106e6b3          	or	a3,a3,a6
     97c:	0045a803          	lw	a6,4(a1)
     980:	0106c6b3          	xor	a3,a3,a6
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     984:	0087c803          	lbu	a6,8(a5)
     988:	01036333          	or	t1,t1,a6
     98c:	00a7c803          	lbu	a6,10(a5)
     990:	01081813          	slli	a6,a6,0x10
     994:	00686333          	or	t1,a6,t1
     998:	00b7c803          	lbu	a6,11(a5)
     99c:	01881813          	slli	a6,a6,0x18
     9a0:	00686833          	or	a6,a6,t1
     9a4:	0085a303          	lw	t1,8(a1)
     9a8:	00684833          	xor	a6,a6,t1
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     9ac:	00d7c303          	lbu	t1,13(a5)
     9b0:	00831313          	slli	t1,t1,0x8
     9b4:	00736333          	or	t1,t1,t2
     9b8:	00e7c383          	lbu	t2,14(a5)
     9bc:	01039393          	slli	t2,t2,0x10
     9c0:	0063e333          	or	t1,t2,t1
     9c4:	00f7c383          	lbu	t2,15(a5)
     9c8:	01839393          	slli	t2,t2,0x18
     9cc:	0063e3b3          	or	t2,t2,t1
     9d0:	00c5a303          	lw	t1,12(a1)
     9d4:	0063c3b3          	xor	t2,t2,t1
    for (i = 1; i < rounds; i++)
     9d8:	0083d293          	srli	t0,t2,0x8
     9dc:	0103de93          	srli	t4,t2,0x10
     9e0:	0086de13          	srli	t3,a3,0x8
     9e4:	0186da93          	srli	s5,a3,0x18
     9e8:	0ff6fa13          	andi	s4,a3,255
     9ec:	0183d493          	srli	s1,t2,0x18
     9f0:	0106d693          	srli	a3,a3,0x10
     9f4:	0ff3f393          	andi	t2,t2,255
     9f8:	000bad83          	lw	s11,0(s7)
     9fc:	004bad03          	lw	s10,4(s7)
     a00:	008bac83          	lw	s9,8(s7)
     a04:	00712023          	sw	t2,0(sp)
     a08:	010b8b93          	addi	s7,s7,16
     a0c:	0ff6f393          	andi	t2,a3,255
     a10:	0188d693          	srli	a3,a7,0x18
     a14:	00d12223          	sw	a3,4(sp)
     a18:	ffcba683          	lw	a3,-4(s7)
     a1c:	01085f93          	srli	t6,a6,0x10
     a20:	0088df13          	srli	t5,a7,0x8
     a24:	01885993          	srli	s3,a6,0x18
     a28:	0ff87913          	andi	s2,a6,255
     a2c:	0108d313          	srli	t1,a7,0x10
     a30:	00885813          	srli	a6,a6,0x8
     a34:	00d12423          	sw	a3,8(sp)
     a38:	0ff8fb13          	andi	s6,a7,255
     a3c:	0ff2f293          	andi	t0,t0,255
     a40:	0fffff93          	andi	t6,t6,255
     a44:	0fff7f13          	andi	t5,t5,255
     a48:	0ffefe93          	andi	t4,t4,255
     a4c:	0ffe7e13          	andi	t3,t3,255
     a50:	0ff37313          	andi	t1,t1,255
     a54:	0ff87413          	andi	s0,a6,255
     a58:	1aac6e63          	bltu	s8,a0,c14 <_nettle_aes_decrypt+0x354>
	w3 = t3;
      }

    /* Final round */

    t0 = AES_FINAL_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     a5c:	005602b3          	add	t0,a2,t0
     a60:	01f60fb3          	add	t6,a2,t6
     a64:	0002c683          	lbu	a3,0(t0)
     a68:	000fc803          	lbu	a6,0(t6)
     a6c:	01660b33          	add	s6,a2,s6
     a70:	00869693          	slli	a3,a3,0x8
     a74:	01081813          	slli	a6,a6,0x10
     a78:	0106e6b3          	or	a3,a3,a6
     a7c:	000b4803          	lbu	a6,0(s6)
     a80:	01560ab3          	add	s5,a2,s5
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     a84:	01e60f33          	add	t5,a2,t5
    t0 = AES_FINAL_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     a88:	0106e6b3          	or	a3,a3,a6
     a8c:	000ac803          	lbu	a6,0(s5)
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     a90:	01d60eb3          	add	t4,a2,t4
     a94:	01460a33          	add	s4,a2,s4
    t0 = AES_FINAL_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     a98:	01881813          	slli	a6,a6,0x18
     a9c:	0106e6b3          	or	a3,a3,a6
     aa0:	01b6cdb3          	xor	s11,a3,s11
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     aa4:	000ec803          	lbu	a6,0(t4)
     aa8:	000f4683          	lbu	a3,0(t5)
     aac:	013609b3          	add	s3,a2,s3
     ab0:	01081813          	slli	a6,a6,0x10
     ab4:	00869693          	slli	a3,a3,0x8
     ab8:	0106e6b3          	or	a3,a3,a6
     abc:	000a4803          	lbu	a6,0(s4)
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     ac0:	01c60e33          	add	t3,a2,t3
     ac4:	00660333          	add	t1,a2,t1
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     ac8:	0106e6b3          	or	a3,a3,a6
     acc:	0009c803          	lbu	a6,0(s3)
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     ad0:	01260933          	add	s2,a2,s2
     ad4:	009604b3          	add	s1,a2,s1
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     ad8:	01881813          	slli	a6,a6,0x18
     adc:	0106e6b3          	or	a3,a3,a6
     ae0:	01a6cd33          	xor	s10,a3,s10
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     ae4:	00034803          	lbu	a6,0(t1)
     ae8:	000e4683          	lbu	a3,0(t3)
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     aec:	00860433          	add	s0,a2,s0
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     af0:	01081813          	slli	a6,a6,0x10
     af4:	00869693          	slli	a3,a3,0x8
     af8:	0106e6b3          	or	a3,a3,a6
     afc:	00094803          	lbu	a6,0(s2)
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b00:	007603b3          	add	t2,a2,t2
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     b04:	01070713          	addi	a4,a4,16
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     b08:	0106e6b3          	or	a3,a3,a6
     b0c:	0004c803          	lbu	a6,0(s1)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     b10:	01078793          	addi	a5,a5,16
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     b14:	01881813          	slli	a6,a6,0x18
     b18:	0106e6b3          	or	a3,a3,a6
     b1c:	0196ccb3          	xor	s9,a3,s9
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b20:	0003c803          	lbu	a6,0(t2)
     b24:	00044683          	lbu	a3,0(s0)
     b28:	01081813          	slli	a6,a6,0x10
     b2c:	00869693          	slli	a3,a3,0x8
     b30:	0106e6b3          	or	a3,a3,a6
     b34:	00012803          	lw	a6,0(sp)
     b38:	01060833          	add	a6,a2,a6
     b3c:	00084803          	lbu	a6,0(a6)
     b40:	0106e6b3          	or	a3,a3,a6
     b44:	00412803          	lw	a6,4(sp)
     b48:	01060833          	add	a6,a2,a6
     b4c:	00084803          	lbu	a6,0(a6)

    LE_WRITE_UINT32 (dst, t0);
     b50:	ffb70823          	sb	s11,-16(a4)
    LE_WRITE_UINT32 (dst + 4, t1);
     b54:	ffa70a23          	sb	s10,-12(a4)
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b58:	01881813          	slli	a6,a6,0x18
     b5c:	0106e6b3          	or	a3,a3,a6
     b60:	00812803          	lw	a6,8(sp)
    LE_WRITE_UINT32 (dst + 8, t2);
     b64:	ff970c23          	sb	s9,-8(a4)
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b68:	0106c6b3          	xor	a3,a3,a6
    LE_WRITE_UINT32 (dst, t0);
     b6c:	018dd813          	srli	a6,s11,0x18
     b70:	ff0709a3          	sb	a6,-13(a4)
     b74:	010dd813          	srli	a6,s11,0x10
     b78:	ff070923          	sb	a6,-14(a4)
     b7c:	008dd813          	srli	a6,s11,0x8
     b80:	ff0708a3          	sb	a6,-15(a4)
    LE_WRITE_UINT32 (dst + 4, t1);
     b84:	018d5813          	srli	a6,s10,0x18
     b88:	ff070ba3          	sb	a6,-9(a4)
     b8c:	010d5813          	srli	a6,s10,0x10
     b90:	ff070b23          	sb	a6,-10(a4)
     b94:	008d5813          	srli	a6,s10,0x8
     b98:	ff070aa3          	sb	a6,-11(a4)
    LE_WRITE_UINT32 (dst + 8, t2);
     b9c:	018cd813          	srli	a6,s9,0x18
     ba0:	ff070da3          	sb	a6,-5(a4)
     ba4:	010cd813          	srli	a6,s9,0x10
     ba8:	ff070d23          	sb	a6,-6(a4)
     bac:	008cd813          	srli	a6,s9,0x8
     bb0:	ff070ca3          	sb	a6,-7(a4)
    LE_WRITE_UINT32 (dst + 12, t3);
     bb4:	0186d813          	srli	a6,a3,0x18
     bb8:	ff070fa3          	sb	a6,-1(a4)
     bbc:	0106d813          	srli	a6,a3,0x10
     bc0:	ff070f23          	sb	a6,-2(a4)
     bc4:	0086d813          	srli	a6,a3,0x8
     bc8:	ff070ea3          	sb	a6,-3(a4)
     bcc:	fed70e23          	sb	a3,-4(a4)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     bd0:	00c12683          	lw	a3,12(sp)
     bd4:	d2d71ee3          	bne	a4,a3,910 <_nettle_aes_decrypt+0x50>
  }
}
     bd8:	04c12083          	lw	ra,76(sp)
     bdc:	04812403          	lw	s0,72(sp)
     be0:	04412483          	lw	s1,68(sp)
     be4:	04012903          	lw	s2,64(sp)
     be8:	03c12983          	lw	s3,60(sp)
     bec:	03812a03          	lw	s4,56(sp)
     bf0:	03412a83          	lw	s5,52(sp)
     bf4:	03012b03          	lw	s6,48(sp)
     bf8:	02c12b83          	lw	s7,44(sp)
     bfc:	02812c03          	lw	s8,40(sp)
     c00:	02412c83          	lw	s9,36(sp)
     c04:	02012d03          	lw	s10,32(sp)
     c08:	01c12d83          	lw	s11,28(sp)
     c0c:	05010113          	addi	sp,sp,80
     c10:	00008067          	ret
	t0 = AES_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     c14:	040b0b13          	addi	s6,s6,64
     c18:	002b1b13          	slli	s6,s6,0x2
     c1c:	01660b33          	add	s6,a2,s6
     c20:	000b2883          	lw	a7,0(s6)
     c24:	340a8a93          	addi	s5,s5,832
     c28:	002a9a93          	slli	s5,s5,0x2
     c2c:	01560ab3          	add	s5,a2,s5
     c30:	011dc8b3          	xor	a7,s11,a7
     c34:	14028293          	addi	t0,t0,320
     c38:	000aad83          	lw	s11,0(s5)
     c3c:	00229293          	slli	t0,t0,0x2
     c40:	240f8f93          	addi	t6,t6,576
     c44:	005602b3          	add	t0,a2,t0
     c48:	002f9f93          	slli	t6,t6,0x2
     c4c:	01b8c8b3          	xor	a7,a7,s11
     c50:	01f60fb3          	add	t6,a2,t6
     c54:	0002ad83          	lw	s11,0(t0)
     c58:	000fa683          	lw	a3,0(t6)
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     c5c:	040a0a13          	addi	s4,s4,64
     c60:	002a1a13          	slli	s4,s4,0x2
	t0 = AES_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     c64:	01b8c8b3          	xor	a7,a7,s11
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     c68:	01460a33          	add	s4,a2,s4
	t0 = AES_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     c6c:	00d8c8b3          	xor	a7,a7,a3
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     c70:	34098993          	addi	s3,s3,832
     c74:	000a2683          	lw	a3,0(s4)
     c78:	00299993          	slli	s3,s3,0x2
     c7c:	013609b3          	add	s3,a2,s3
     c80:	00dd46b3          	xor	a3,s10,a3
     c84:	140f0f13          	addi	t5,t5,320
     c88:	0009ad03          	lw	s10,0(s3)
     c8c:	002f1f13          	slli	t5,t5,0x2
     c90:	240e8e93          	addi	t4,t4,576
     c94:	01e60f33          	add	t5,a2,t5
     c98:	002e9e93          	slli	t4,t4,0x2
     c9c:	01a6c6b3          	xor	a3,a3,s10
     ca0:	01d60eb3          	add	t4,a2,t4
     ca4:	000f2d03          	lw	s10,0(t5)
     ca8:	000ea803          	lw	a6,0(t4)
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     cac:	04090913          	addi	s2,s2,64
     cb0:	00291913          	slli	s2,s2,0x2
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     cb4:	01a6c6b3          	xor	a3,a3,s10
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     cb8:	01260933          	add	s2,a2,s2
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     cbc:	0106c6b3          	xor	a3,a3,a6
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     cc0:	34048493          	addi	s1,s1,832
     cc4:	00092803          	lw	a6,0(s2)
     cc8:	00249493          	slli	s1,s1,0x2
     ccc:	009604b3          	add	s1,a2,s1
     cd0:	010cc833          	xor	a6,s9,a6
     cd4:	140e0e13          	addi	t3,t3,320
     cd8:	0004ac83          	lw	s9,0(s1)
     cdc:	002e1e13          	slli	t3,t3,0x2
     ce0:	24030313          	addi	t1,t1,576
     ce4:	01c60e33          	add	t3,a2,t3
     ce8:	00231313          	slli	t1,t1,0x2
     cec:	01984833          	xor	a6,a6,s9
     cf0:	00660333          	add	t1,a2,t1
     cf4:	000e2c83          	lw	s9,0(t3)
     cf8:	00032303          	lw	t1,0(t1)
	t3 = AES_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     cfc:	00412e03          	lw	t3,4(sp)
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     d00:	01984833          	xor	a6,a6,s9
     d04:	00684833          	xor	a6,a6,t1
	t3 = AES_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     d08:	00012303          	lw	t1,0(sp)
     d0c:	340e0e13          	addi	t3,t3,832
     d10:	002e1e13          	slli	t3,t3,0x2
     d14:	04030313          	addi	t1,t1,64
     d18:	00231313          	slli	t1,t1,0x2
     d1c:	00660333          	add	t1,a2,t1
     d20:	01c60e33          	add	t3,a2,t3
     d24:	000e2e03          	lw	t3,0(t3)
     d28:	00032303          	lw	t1,0(t1)
     d2c:	14040413          	addi	s0,s0,320
     d30:	00241413          	slli	s0,s0,0x2
     d34:	01c34333          	xor	t1,t1,t3
     d38:	00812e03          	lw	t3,8(sp)
     d3c:	24038393          	addi	t2,t2,576
     d40:	00860433          	add	s0,a2,s0
     d44:	00239393          	slli	t2,t2,0x2
     d48:	01c34333          	xor	t1,t1,t3
     d4c:	007603b3          	add	t2,a2,t2
     d50:	00042e03          	lw	t3,0(s0)
     d54:	0003a383          	lw	t2,0(t2)
    for (i = 1; i < rounds; i++)
     d58:	001c0c13          	addi	s8,s8,1
	t3 = AES_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     d5c:	01c34333          	xor	t1,t1,t3
     d60:	007343b3          	xor	t2,t1,t2
     d64:	c75ff06f          	j	9d8 <_nettle_aes_decrypt+0x118>

00000d68 <aes_encrypt>:
// From nettle/aes-encrypt.c

void
aes_encrypt (const struct aes_ctx *ctx,
	     size_t length, uint8_t * dst, const uint8_t * src)
{
     d68:	00068793          	mv	a5,a3
  assert_beebs (!(length % AES_BLOCK_SIZE));
     d6c:	00f5f693          	andi	a3,a1,15
     d70:	00068a63          	beqz	a3,d84 <aes_encrypt+0x1c>
{
     d74:	ff010113          	addi	sp,sp,-16
  assert_beebs (!(length % AES_BLOCK_SIZE));
     d78:	00100513          	li	a0,1
{
     d7c:	00112623          	sw	ra,12(sp)
  assert_beebs (!(length % AES_BLOCK_SIZE));
     d80:	41c000ef          	jal	ra,119c <exit>
  _nettle_aes_encrypt (ctx->rounds, ctx->keys, &_aes_encrypt_table,
     d84:	00058693          	mv	a3,a1
     d88:	00450593          	addi	a1,a0,4
     d8c:	00052503          	lw	a0,0(a0)
     d90:	00060713          	mv	a4,a2
     d94:	00002617          	auipc	a2,0x2
     d98:	d1860613          	addi	a2,a2,-744 # 2aac <_aes_encrypt_table>
     d9c:	e7cff06f          	j	418 <_nettle_aes_encrypt>

00000da0 <aes_decrypt>:
// From nettle/aes-decrypt.c

void
aes_decrypt (const struct aes_ctx *ctx,
	     size_t length, uint8_t * dst, const uint8_t * src)
{
     da0:	00068793          	mv	a5,a3
  assert_beebs (!(length % AES_BLOCK_SIZE));
     da4:	00f5f693          	andi	a3,a1,15
     da8:	00068a63          	beqz	a3,dbc <aes_decrypt+0x1c>
{
     dac:	ff010113          	addi	sp,sp,-16
  assert_beebs (!(length % AES_BLOCK_SIZE));
     db0:	00100513          	li	a0,1
{
     db4:	00112623          	sw	ra,12(sp)
  assert_beebs (!(length % AES_BLOCK_SIZE));
     db8:	3e4000ef          	jal	ra,119c <exit>
  _nettle_aes_decrypt (ctx->rounds, ctx->keys, &_aes_decrypt_table,
     dbc:	00058693          	mv	a3,a1
     dc0:	00450593          	addi	a1,a0,4
     dc4:	00052503          	lw	a0,0(a0)
     dc8:	00060713          	mv	a4,a2
     dcc:	00001617          	auipc	a2,0x1
     dd0:	be060613          	addi	a2,a2,-1056 # 19ac <_aes_decrypt_table>
     dd4:	aedff06f          	j	8c0 <_nettle_aes_decrypt>

00000dd8 <benchmark_body>:
}


static int __attribute__ ((noinline))
benchmark_body (int rpt)
{
     dd8:	fd010113          	addi	sp,sp,-48
     ddc:	02812423          	sw	s0,40(sp)
     de0:	02912223          	sw	s1,36(sp)
     de4:	03212023          	sw	s2,32(sp)
     de8:	01312e23          	sw	s3,28(sp)
     dec:	01412c23          	sw	s4,24(sp)
     df0:	01512a23          	sw	s5,20(sp)
     df4:	01612823          	sw	s6,16(sp)
     df8:	01712623          	sw	s7,12(sp)
     dfc:	02112623          	sw	ra,44(sp)
     e00:	00050a93          	mv	s5,a0
  int i;

  for (i = 0; i < rpt; i++)
     e04:	00000413          	li	s0,0
    {
      aes_set_encrypt_key (&encctx, 32, key);
     e08:	00003497          	auipc	s1,0x3
     e0c:	da848493          	addi	s1,s1,-600 # 3bb0 <key>
     e10:	00003917          	auipc	s2,0x3
     e14:	60090913          	addi	s2,s2,1536 # 4410 <encctx>
      aes_encrypt (&encctx, LEN, encrypted, plaintext);
     e18:	00003b17          	auipc	s6,0x3
     e1c:	db8b0b13          	addi	s6,s6,-584 # 3bd0 <plaintext>
     e20:	00003997          	auipc	s3,0x3
     e24:	4f098993          	addi	s3,s3,1264 # 4310 <encrypted>

      aes_set_decrypt_key (&decctx, 32, key);
     e28:	00003a17          	auipc	s4,0x3
     e2c:	6dca0a13          	addi	s4,s4,1756 # 4504 <decctx>
      aes_decrypt (&decctx, LEN, decrypted, encrypted);
     e30:	00003b97          	auipc	s7,0x3
     e34:	3e0b8b93          	addi	s7,s7,992 # 4210 <decrypted>
  for (i = 0; i < rpt; i++)
     e38:	03544a63          	blt	s0,s5,e6c <benchmark_body+0x94>
    }

  return 0;
}
     e3c:	02c12083          	lw	ra,44(sp)
     e40:	02812403          	lw	s0,40(sp)
     e44:	02412483          	lw	s1,36(sp)
     e48:	02012903          	lw	s2,32(sp)
     e4c:	01c12983          	lw	s3,28(sp)
     e50:	01812a03          	lw	s4,24(sp)
     e54:	01412a83          	lw	s5,20(sp)
     e58:	01012b03          	lw	s6,16(sp)
     e5c:	00c12b83          	lw	s7,12(sp)
     e60:	00000513          	li	a0,0
     e64:	03010113          	addi	sp,sp,48
     e68:	00008067          	ret
      aes_set_encrypt_key (&encctx, 32, key);
     e6c:	00048613          	mv	a2,s1
     e70:	02000593          	li	a1,32
     e74:	00090513          	mv	a0,s2
     e78:	b94ff0ef          	jal	ra,20c <aes_set_encrypt_key>
      aes_encrypt (&encctx, LEN, encrypted, plaintext);
     e7c:	000b0693          	mv	a3,s6
     e80:	00098613          	mv	a2,s3
     e84:	10000593          	li	a1,256
     e88:	00090513          	mv	a0,s2
     e8c:	eddff0ef          	jal	ra,d68 <aes_encrypt>
      aes_set_decrypt_key (&decctx, 32, key);
     e90:	00048613          	mv	a2,s1
     e94:	02000593          	li	a1,32
     e98:	000a0513          	mv	a0,s4
     e9c:	d50ff0ef          	jal	ra,3ec <aes_set_decrypt_key>
      aes_decrypt (&decctx, LEN, decrypted, encrypted);
     ea0:	00098693          	mv	a3,s3
     ea4:	000b8613          	mv	a2,s7
     ea8:	10000593          	li	a1,256
     eac:	000a0513          	mv	a0,s4
     eb0:	ef1ff0ef          	jal	ra,da0 <aes_decrypt>
  for (i = 0; i < rpt; i++)
     eb4:	00140413          	addi	s0,s0,1
     eb8:	f81ff06f          	j	e38 <benchmark_body+0x60>

00000ebc <verify_benchmark>:
  for (unsigned int i = 0; i < LEN; i++)
     ebc:	00000793          	li	a5,0
  bool correct = true;
     ec0:	00100513          	li	a0,1
      if (encrypted[i] != expected[i])
     ec4:	00003597          	auipc	a1,0x3
     ec8:	44c58593          	addi	a1,a1,1100 # 4310 <encrypted>
     ecc:	00003817          	auipc	a6,0x3
     ed0:	e0480813          	addi	a6,a6,-508 # 3cd0 <expected>
      if (plaintext[i] != decrypted[i])
     ed4:	00003897          	auipc	a7,0x3
     ed8:	cfc88893          	addi	a7,a7,-772 # 3bd0 <plaintext>
     edc:	00003317          	auipc	t1,0x3
     ee0:	33430313          	addi	t1,t1,820 # 4210 <decrypted>
  for (unsigned int i = 0; i < LEN; i++)
     ee4:	10000613          	li	a2,256
      if (encrypted[i] != expected[i])
     ee8:	00b786b3          	add	a3,a5,a1
     eec:	00f80733          	add	a4,a6,a5
     ef0:	0006c683          	lbu	a3,0(a3)
     ef4:	00074703          	lbu	a4,0(a4)
     ef8:	00e68463          	beq	a3,a4,f00 <verify_benchmark+0x44>
	correct = false;
     efc:	00000513          	li	a0,0
      if (plaintext[i] != decrypted[i])
     f00:	00f886b3          	add	a3,a7,a5
     f04:	00678733          	add	a4,a5,t1
     f08:	0006c683          	lbu	a3,0(a3)
     f0c:	00074703          	lbu	a4,0(a4)
     f10:	00e68463          	beq	a3,a4,f18 <verify_benchmark+0x5c>
	correct = false;
     f14:	00000513          	li	a0,0
  for (unsigned int i = 0; i < LEN; i++)
     f18:	00178793          	addi	a5,a5,1
     f1c:	fcc796e3          	bne	a5,a2,ee8 <verify_benchmark+0x2c>
}
     f20:	00008067          	ret

00000f24 <initialise_benchmark>:
}
     f24:	00008067          	ret

00000f28 <warm_caches>:
  int  res = benchmark_body (heat);
     f28:	eb1ff06f          	j	dd8 <benchmark_body>

00000f2c <benchmark>:
  return benchmark_body (LOCAL_SCALE_FACTOR * CPU_MHZ);
     f2c:	00100513          	li	a0,1
     f30:	ea9ff06f          	j	dd8 <benchmark_body>

00000f34 <rand_beebs>:
   multipliers and offsets and RAND_MAX variations. */

int
rand_beebs (void)
{
  seed = (seed * 1103515245L + 12345) & ((1UL << 31) - 1);
     f34:	00003717          	auipc	a4,0x3
     f38:	2d870713          	addi	a4,a4,728 # 420c <seed>
     f3c:	00072503          	lw	a0,0(a4)
     f40:	41c657b7          	lui	a5,0x41c65
     f44:	e6d78793          	addi	a5,a5,-403 # 41c64e6d <_stack_start+0x41c54e6d>
     f48:	02f50533          	mul	a0,a0,a5
     f4c:	000037b7          	lui	a5,0x3
     f50:	03978793          	addi	a5,a5,57 # 3039 <_aes_encrypt_table+0x58d>
     f54:	00f50533          	add	a0,a0,a5
     f58:	00151513          	slli	a0,a0,0x1
     f5c:	00155513          	srli	a0,a0,0x1
     f60:	00a72023          	sw	a0,0(a4)
  return (int) (seed >> 16);
}
     f64:	01055513          	srli	a0,a0,0x10
     f68:	00008067          	ret

00000f6c <srand_beebs>:
/* Initialize the random number generator */

void
srand_beebs (unsigned int new_seed)
{
  seed = (long int) new_seed;
     f6c:	00003797          	auipc	a5,0x3
     f70:	2aa7a023          	sw	a0,672(a5) # 420c <seed>
}
     f74:	00008067          	ret

00000f78 <init_heap_beebs>:

void
init_heap_beebs (void *heap, size_t heap_size)
{
  heap_ptr = (void *) heap;
  heap_end = (void *) ((char *) heap_ptr + heap_size);
     f78:	00b505b3          	add	a1,a0,a1
  heap_ptr = (void *) heap;
     f7c:	00003797          	auipc	a5,0x3
     f80:	28a7a623          	sw	a0,652(a5) # 4208 <heap_ptr>
  heap_end = (void *) ((char *) heap_ptr + heap_size);
     f84:	00003797          	auipc	a5,0x3
     f88:	28b7a023          	sw	a1,640(a5) # 4204 <heap_end>
  heap_requested = 0;
     f8c:	00003797          	auipc	a5,0x3
     f90:	2607aa23          	sw	zero,628(a5) # 4200 <_bss_start>
}
     f94:	00008067          	ret

00000f98 <check_heap_beebs>:
   since the last call to init_heap_beebs, zero (FALSE) otherwise. */

int
check_heap_beebs (void *heap)
{
  return ((void *) ((char *) heap + heap_requested) <= heap_end);
     f98:	00003797          	auipc	a5,0x3
     f9c:	26878793          	addi	a5,a5,616 # 4200 <_bss_start>
     fa0:	0007a783          	lw	a5,0(a5)
     fa4:	00f50533          	add	a0,a0,a5
     fa8:	00003797          	auipc	a5,0x3
     fac:	25c78793          	addi	a5,a5,604 # 4204 <heap_end>
     fb0:	0007a783          	lw	a5,0(a5)
     fb4:	00a7b533          	sltu	a0,a5,a0
}
     fb8:	00154513          	xori	a0,a0,1
     fbc:	00008067          	ret

00000fc0 <malloc_beebs>:
void *
malloc_beebs (size_t size)
{
  void *new_ptr = heap_ptr;

  heap_requested += size;
     fc0:	00003717          	auipc	a4,0x3
     fc4:	24070713          	addi	a4,a4,576 # 4200 <_bss_start>
     fc8:	00072703          	lw	a4,0(a4)
  void *new_ptr = heap_ptr;
     fcc:	00003797          	auipc	a5,0x3
     fd0:	23c78793          	addi	a5,a5,572 # 4208 <heap_ptr>
     fd4:	0007a783          	lw	a5,0(a5)
  heap_requested += size;
     fd8:	00a70733          	add	a4,a4,a0
     fdc:	00003697          	auipc	a3,0x3
     fe0:	22e6a223          	sw	a4,548(a3) # 4200 <_bss_start>

  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
     fe4:	00003697          	auipc	a3,0x3
     fe8:	22068693          	addi	a3,a3,544 # 4204 <heap_end>
     fec:	0006a683          	lw	a3,0(a3)
     ff0:	00a78733          	add	a4,a5,a0
     ff4:	00e6ec63          	bltu	a3,a4,100c <malloc_beebs+0x4c>
     ff8:	00050a63          	beqz	a0,100c <malloc_beebs+0x4c>
    return NULL;
  else
    {
      heap_ptr = (void *) ((char *) heap_ptr + size);
     ffc:	00003697          	auipc	a3,0x3
    1000:	20e6a623          	sw	a4,524(a3) # 4208 <heap_ptr>
      return new_ptr;
    }
}
    1004:	00078513          	mv	a0,a5
    1008:	00008067          	ret
    return NULL;
    100c:	00000793          	li	a5,0
    1010:	ff5ff06f          	j	1004 <malloc_beebs+0x44>

00001014 <calloc_beebs>:
   Implement as wrapper for malloc */

void *
calloc_beebs (size_t nmemb, size_t size)
{
  void *new_ptr = malloc_beebs (nmemb * size);
    1014:	02b50633          	mul	a2,a0,a1
{
    1018:	fe010113          	addi	sp,sp,-32
    101c:	00812c23          	sw	s0,24(sp)
    1020:	00112e23          	sw	ra,28(sp)
  void *new_ptr = malloc_beebs (nmemb * size);
    1024:	00060513          	mv	a0,a2
    1028:	00c12623          	sw	a2,12(sp)
    102c:	f95ff0ef          	jal	ra,fc0 <malloc_beebs>
    1030:	00050413          	mv	s0,a0

  /* Calloc is defined to zero the memory. OK to use a function here, because
     it will be handled specially by the compiler anyway. */

  if (NULL != new_ptr)
    1034:	00050863          	beqz	a0,1044 <calloc_beebs+0x30>
    memset (new_ptr, 0, nmemb * size);
    1038:	00c12603          	lw	a2,12(sp)
    103c:	00000593          	li	a1,0
    1040:	194000ef          	jal	ra,11d4 <memset>

  return new_ptr;
}
    1044:	00040513          	mv	a0,s0
    1048:	01c12083          	lw	ra,28(sp)
    104c:	01812403          	lw	s0,24(sp)
    1050:	02010113          	addi	sp,sp,32
    1054:	00008067          	ret

00001058 <realloc_beebs>:
void *
realloc_beebs (void *ptr, size_t size)
{
  void *new_ptr = heap_ptr;

  heap_requested += size;
    1058:	00003717          	auipc	a4,0x3
    105c:	1a870713          	addi	a4,a4,424 # 4200 <_bss_start>
    1060:	00072703          	lw	a4,0(a4)
  void *new_ptr = heap_ptr;
    1064:	00003797          	auipc	a5,0x3
    1068:	1a478793          	addi	a5,a5,420 # 4208 <heap_ptr>
    106c:	0007a783          	lw	a5,0(a5)
  heap_requested += size;
    1070:	00b70733          	add	a4,a4,a1
    1074:	00003697          	auipc	a3,0x3
    1078:	18e6a623          	sw	a4,396(a3) # 4200 <_bss_start>

  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
    107c:	00003697          	auipc	a3,0x3
    1080:	18868693          	addi	a3,a3,392 # 4204 <heap_end>
    1084:	0006a683          	lw	a3,0(a3)
    1088:	00b78733          	add	a4,a5,a1
    108c:	02e6ec63          	bltu	a3,a4,10c4 <realloc_beebs+0x6c>
    1090:	02058a63          	beqz	a1,10c4 <realloc_beebs+0x6c>
    return NULL;
  else
    {
      heap_ptr = (void *) ((char *) heap_ptr + size);
    1094:	00003697          	auipc	a3,0x3
    1098:	16e6aa23          	sw	a4,372(a3) # 4208 <heap_ptr>
      /* This is clunky, since we don't know the size of the original
         pointer. However it is a read only action and we know it must
         be big enough if we right off the end, or we couldn't have
         allocated here. If the size is smaller, it doesn't matter. */

      if (NULL != ptr)
    109c:	02050063          	beqz	a0,10bc <realloc_beebs+0x64>
	{
	  size_t i;

	  for (i = 0; i < size; i++)
    10a0:	00000713          	li	a4,0
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
    10a4:	00e506b3          	add	a3,a0,a4
    10a8:	0006c603          	lbu	a2,0(a3)
    10ac:	00e786b3          	add	a3,a5,a4
	  for (i = 0; i < size; i++)
    10b0:	00170713          	addi	a4,a4,1
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
    10b4:	00c68023          	sb	a2,0(a3)
	  for (i = 0; i < size; i++)
    10b8:	fee596e3          	bne	a1,a4,10a4 <realloc_beebs+0x4c>
	}

      return new_ptr;
    }
}
    10bc:	00078513          	mv	a0,a5
    10c0:	00008067          	ret
    return NULL;
    10c4:	00000793          	li	a5,0
    10c8:	ff5ff06f          	j	10bc <realloc_beebs+0x64>

000010cc <free_beebs>:
   For our simplified version of memory handling, free can just do nothing. */

void
free_beebs (void *ptr __attribute__ ((unused)))
{
}
    10cc:	00008067          	ret

000010d0 <initialise_board>:
//#include <support.h>

void
initialise_board ()
{
  __asm__ volatile ("li a0, 0" : : : "memory");
    10d0:	00000513          	li	a0,0
}
    10d4:	00008067          	ret

000010d8 <start_trigger>:

void __attribute__ ((noinline)) __attribute__ ((externally_visible))
start_trigger ()
{
  __asm__ volatile ("li a0, 0" : : : "memory");
    10d8:	00000513          	li	a0,0
}
    10dc:	00008067          	ret

000010e0 <stop_trigger>:

void __attribute__ ((noinline)) __attribute__ ((externally_visible))
stop_trigger ()
{
  __asm__ volatile ("li a0, 0" : : : "memory");
    10e0:	00000513          	li	a0,0
}
    10e4:	00008067          	ret

000010e8 <default_exc_handler>:
  jal x0, default_exc_handler
    10e8:	0000006f          	j	10e8 <default_exc_handler>

000010ec <reset_handler>:
  mv  x1, x0
    10ec:	00000093          	li	ra,0
  mv  x2, x1
    10f0:	00008113          	mv	sp,ra
  mv  x3, x1
    10f4:	00008193          	mv	gp,ra
  mv  x4, x1
    10f8:	00008213          	mv	tp,ra
  mv  x5, x1
    10fc:	00008293          	mv	t0,ra
  mv  x6, x1
    1100:	00008313          	mv	t1,ra
  mv  x7, x1
    1104:	00008393          	mv	t2,ra
  mv  x8, x1
    1108:	00008413          	mv	s0,ra
  mv  x9, x1
    110c:	00008493          	mv	s1,ra
  mv x10, x1
    1110:	00008513          	mv	a0,ra
  mv x11, x1
    1114:	00008593          	mv	a1,ra
  mv x12, x1
    1118:	00008613          	mv	a2,ra
  mv x13, x1
    111c:	00008693          	mv	a3,ra
  mv x14, x1
    1120:	00008713          	mv	a4,ra
  mv x15, x1
    1124:	00008793          	mv	a5,ra
  mv x16, x1
    1128:	00008813          	mv	a6,ra
  mv x17, x1
    112c:	00008893          	mv	a7,ra
  mv x18, x1
    1130:	00008913          	mv	s2,ra
  mv x19, x1
    1134:	00008993          	mv	s3,ra
  mv x20, x1
    1138:	00008a13          	mv	s4,ra
  mv x21, x1
    113c:	00008a93          	mv	s5,ra
  mv x22, x1
    1140:	00008b13          	mv	s6,ra
  mv x23, x1
    1144:	00008b93          	mv	s7,ra
  mv x24, x1
    1148:	00008c13          	mv	s8,ra
  mv x25, x1
    114c:	00008c93          	mv	s9,ra
  mv x26, x1
    1150:	00008d13          	mv	s10,ra
  mv x27, x1
    1154:	00008d93          	mv	s11,ra
  mv x28, x1
    1158:	00008e13          	mv	t3,ra
  mv x29, x1
    115c:	00008e93          	mv	t4,ra
  mv x30, x1
    1160:	00008f13          	mv	t5,ra
  mv x31, x1
    1164:	00008f93          	mv	t6,ra
  la   x2, _stack_start
    1168:	0000f117          	auipc	sp,0xf
    116c:	e9810113          	addi	sp,sp,-360 # 10000 <_stack_start>

00001170 <_start>:
  la x26, _bss_start
    1170:	00003d17          	auipc	s10,0x3
    1174:	090d0d13          	addi	s10,s10,144 # 4200 <_bss_start>
  la x27, _bss_end
    1178:	00003d97          	auipc	s11,0x3
    117c:	480d8d93          	addi	s11,s11,1152 # 45f8 <_bss_end>
  bge x26, x27, zero_loop_end
    1180:	01bd5863          	bge	s10,s11,1190 <main_entry>

00001184 <zero_loop>:
  sw x0, 0(x26)
    1184:	000d2023          	sw	zero,0(s10)
  addi x26, x26, 4
    1188:	004d0d13          	addi	s10,s10,4
  ble x26, x27, zero_loop
    118c:	ffaddce3          	bge	s11,s10,1184 <zero_loop>

00001190 <main_entry>:
  addi x10, x0, 0
    1190:	00000513          	li	a0,0
  addi x11, x0, 0
    1194:	00000593          	li	a1,0
  jal x1, main
    1198:	3a0000ef          	jal	ra,1538 <main>

0000119c <exit>:
    119c:	ff010113          	addi	sp,sp,-16
    11a0:	00000593          	li	a1,0
    11a4:	00812423          	sw	s0,8(sp)
    11a8:	00112623          	sw	ra,12(sp)
    11ac:	00050413          	mv	s0,a0
    11b0:	100000ef          	jal	ra,12b0 <__call_exitprocs>
    11b4:	00003797          	auipc	a5,0x3
    11b8:	9f878793          	addi	a5,a5,-1544 # 3bac <_global_impure_ptr>
    11bc:	0007a503          	lw	a0,0(a5)
    11c0:	03c52783          	lw	a5,60(a0)
    11c4:	00078463          	beqz	a5,11cc <exit+0x30>
    11c8:	000780e7          	jalr	a5
    11cc:	00040513          	mv	a0,s0
    11d0:	314000ef          	jal	ra,14e4 <_exit>

000011d4 <memset>:
    11d4:	00f00313          	li	t1,15
    11d8:	00050713          	mv	a4,a0
    11dc:	02c37e63          	bgeu	t1,a2,1218 <memset+0x44>
    11e0:	00f77793          	andi	a5,a4,15
    11e4:	0a079063          	bnez	a5,1284 <memset+0xb0>
    11e8:	08059263          	bnez	a1,126c <memset+0x98>
    11ec:	ff067693          	andi	a3,a2,-16
    11f0:	00f67613          	andi	a2,a2,15
    11f4:	00e686b3          	add	a3,a3,a4
    11f8:	00b72023          	sw	a1,0(a4)
    11fc:	00b72223          	sw	a1,4(a4)
    1200:	00b72423          	sw	a1,8(a4)
    1204:	00b72623          	sw	a1,12(a4)
    1208:	01070713          	addi	a4,a4,16
    120c:	fed766e3          	bltu	a4,a3,11f8 <memset+0x24>
    1210:	00061463          	bnez	a2,1218 <memset+0x44>
    1214:	00008067          	ret
    1218:	40c306b3          	sub	a3,t1,a2
    121c:	00269693          	slli	a3,a3,0x2
    1220:	00000297          	auipc	t0,0x0
    1224:	005686b3          	add	a3,a3,t0
    1228:	00c68067          	jr	12(a3)
    122c:	00b70723          	sb	a1,14(a4)
    1230:	00b706a3          	sb	a1,13(a4)
    1234:	00b70623          	sb	a1,12(a4)
    1238:	00b705a3          	sb	a1,11(a4)
    123c:	00b70523          	sb	a1,10(a4)
    1240:	00b704a3          	sb	a1,9(a4)
    1244:	00b70423          	sb	a1,8(a4)
    1248:	00b703a3          	sb	a1,7(a4)
    124c:	00b70323          	sb	a1,6(a4)
    1250:	00b702a3          	sb	a1,5(a4)
    1254:	00b70223          	sb	a1,4(a4)
    1258:	00b701a3          	sb	a1,3(a4)
    125c:	00b70123          	sb	a1,2(a4)
    1260:	00b700a3          	sb	a1,1(a4)
    1264:	00b70023          	sb	a1,0(a4)
    1268:	00008067          	ret
    126c:	0ff5f593          	andi	a1,a1,255
    1270:	00859693          	slli	a3,a1,0x8
    1274:	00d5e5b3          	or	a1,a1,a3
    1278:	01059693          	slli	a3,a1,0x10
    127c:	00d5e5b3          	or	a1,a1,a3
    1280:	f6dff06f          	j	11ec <memset+0x18>
    1284:	00279693          	slli	a3,a5,0x2
    1288:	00000297          	auipc	t0,0x0
    128c:	005686b3          	add	a3,a3,t0
    1290:	00008293          	mv	t0,ra
    1294:	fa0680e7          	jalr	-96(a3)
    1298:	00028093          	mv	ra,t0
    129c:	ff078793          	addi	a5,a5,-16
    12a0:	40f70733          	sub	a4,a4,a5
    12a4:	00f60633          	add	a2,a2,a5
    12a8:	f6c378e3          	bgeu	t1,a2,1218 <memset+0x44>
    12ac:	f3dff06f          	j	11e8 <memset+0x14>

000012b0 <__call_exitprocs>:
    12b0:	fd010113          	addi	sp,sp,-48
    12b4:	00003797          	auipc	a5,0x3
    12b8:	8f878793          	addi	a5,a5,-1800 # 3bac <_global_impure_ptr>
    12bc:	01812423          	sw	s8,8(sp)
    12c0:	0007ac03          	lw	s8,0(a5)
    12c4:	01312e23          	sw	s3,28(sp)
    12c8:	01412c23          	sw	s4,24(sp)
    12cc:	01512a23          	sw	s5,20(sp)
    12d0:	01612823          	sw	s6,16(sp)
    12d4:	02112623          	sw	ra,44(sp)
    12d8:	02812423          	sw	s0,40(sp)
    12dc:	02912223          	sw	s1,36(sp)
    12e0:	03212023          	sw	s2,32(sp)
    12e4:	01712623          	sw	s7,12(sp)
    12e8:	00050a93          	mv	s5,a0
    12ec:	00058b13          	mv	s6,a1
    12f0:	00100a13          	li	s4,1
    12f4:	fff00993          	li	s3,-1
    12f8:	148c2903          	lw	s2,328(s8)
    12fc:	02090863          	beqz	s2,132c <__call_exitprocs+0x7c>
    1300:	00492483          	lw	s1,4(s2)
    1304:	fff48413          	addi	s0,s1,-1
    1308:	02044263          	bltz	s0,132c <__call_exitprocs+0x7c>
    130c:	00249493          	slli	s1,s1,0x2
    1310:	009904b3          	add	s1,s2,s1
    1314:	040b0463          	beqz	s6,135c <__call_exitprocs+0xac>
    1318:	1044a783          	lw	a5,260(s1)
    131c:	05678063          	beq	a5,s6,135c <__call_exitprocs+0xac>
    1320:	fff40413          	addi	s0,s0,-1
    1324:	ffc48493          	addi	s1,s1,-4
    1328:	ff3416e3          	bne	s0,s3,1314 <__call_exitprocs+0x64>
    132c:	02c12083          	lw	ra,44(sp)
    1330:	02812403          	lw	s0,40(sp)
    1334:	02412483          	lw	s1,36(sp)
    1338:	02012903          	lw	s2,32(sp)
    133c:	01c12983          	lw	s3,28(sp)
    1340:	01812a03          	lw	s4,24(sp)
    1344:	01412a83          	lw	s5,20(sp)
    1348:	01012b03          	lw	s6,16(sp)
    134c:	00c12b83          	lw	s7,12(sp)
    1350:	00812c03          	lw	s8,8(sp)
    1354:	03010113          	addi	sp,sp,48
    1358:	00008067          	ret
    135c:	00492783          	lw	a5,4(s2)
    1360:	0044a683          	lw	a3,4(s1)
    1364:	fff78793          	addi	a5,a5,-1
    1368:	04878a63          	beq	a5,s0,13bc <__call_exitprocs+0x10c>
    136c:	0004a223          	sw	zero,4(s1)
    1370:	fa0688e3          	beqz	a3,1320 <__call_exitprocs+0x70>
    1374:	18892783          	lw	a5,392(s2)
    1378:	008a1733          	sll	a4,s4,s0
    137c:	00492b83          	lw	s7,4(s2)
    1380:	00f777b3          	and	a5,a4,a5
    1384:	00079e63          	bnez	a5,13a0 <__call_exitprocs+0xf0>
    1388:	000680e7          	jalr	a3
    138c:	00492783          	lw	a5,4(s2)
    1390:	f77794e3          	bne	a5,s7,12f8 <__call_exitprocs+0x48>
    1394:	148c2783          	lw	a5,328(s8)
    1398:	f92784e3          	beq	a5,s2,1320 <__call_exitprocs+0x70>
    139c:	f5dff06f          	j	12f8 <__call_exitprocs+0x48>
    13a0:	18c92783          	lw	a5,396(s2)
    13a4:	0844a583          	lw	a1,132(s1)
    13a8:	00f77733          	and	a4,a4,a5
    13ac:	00071c63          	bnez	a4,13c4 <__call_exitprocs+0x114>
    13b0:	000a8513          	mv	a0,s5
    13b4:	000680e7          	jalr	a3
    13b8:	fd5ff06f          	j	138c <__call_exitprocs+0xdc>
    13bc:	00892223          	sw	s0,4(s2)
    13c0:	fb1ff06f          	j	1370 <__call_exitprocs+0xc0>
    13c4:	00058513          	mv	a0,a1
    13c8:	000680e7          	jalr	a3
    13cc:	fc1ff06f          	j	138c <__call_exitprocs+0xdc>

000013d0 <__libc_fini_array>:
    13d0:	ff010113          	addi	sp,sp,-16
    13d4:	00812423          	sw	s0,8(sp)
    13d8:	fffff797          	auipc	a5,0xfffff
    13dc:	c2878793          	addi	a5,a5,-984 # 0 <__DYNAMIC>
    13e0:	fffff417          	auipc	s0,0xfffff
    13e4:	c2040413          	addi	s0,s0,-992 # 0 <__DYNAMIC>
    13e8:	40f40433          	sub	s0,s0,a5
    13ec:	00112623          	sw	ra,12(sp)
    13f0:	00912223          	sw	s1,4(sp)
    13f4:	40245413          	srai	s0,s0,0x2
    13f8:	02040263          	beqz	s0,141c <__libc_fini_array+0x4c>
    13fc:	00241493          	slli	s1,s0,0x2
    1400:	ffc48493          	addi	s1,s1,-4
    1404:	00f484b3          	add	s1,s1,a5
    1408:	0004a783          	lw	a5,0(s1)
    140c:	fff40413          	addi	s0,s0,-1
    1410:	ffc48493          	addi	s1,s1,-4
    1414:	000780e7          	jalr	a5
    1418:	fe0418e3          	bnez	s0,1408 <__libc_fini_array+0x38>
    141c:	00c12083          	lw	ra,12(sp)
    1420:	00812403          	lw	s0,8(sp)
    1424:	00412483          	lw	s1,4(sp)
    1428:	01010113          	addi	sp,sp,16
    142c:	00008067          	ret

00001430 <atexit>:
    1430:	00050593          	mv	a1,a0
    1434:	00000693          	li	a3,0
    1438:	00000613          	li	a2,0
    143c:	00000513          	li	a0,0
    1440:	0040006f          	j	1444 <__register_exitproc>

00001444 <__register_exitproc>:
    1444:	00002797          	auipc	a5,0x2
    1448:	76878793          	addi	a5,a5,1896 # 3bac <_global_impure_ptr>
    144c:	0007a703          	lw	a4,0(a5)
    1450:	14872783          	lw	a5,328(a4)
    1454:	04078c63          	beqz	a5,14ac <__register_exitproc+0x68>
    1458:	0047a703          	lw	a4,4(a5)
    145c:	01f00813          	li	a6,31
    1460:	06e84e63          	blt	a6,a4,14dc <__register_exitproc+0x98>
    1464:	00271813          	slli	a6,a4,0x2
    1468:	02050663          	beqz	a0,1494 <__register_exitproc+0x50>
    146c:	01078333          	add	t1,a5,a6
    1470:	08c32423          	sw	a2,136(t1)
    1474:	1887a883          	lw	a7,392(a5)
    1478:	00100613          	li	a2,1
    147c:	00e61633          	sll	a2,a2,a4
    1480:	00c8e8b3          	or	a7,a7,a2
    1484:	1917a423          	sw	a7,392(a5)
    1488:	10d32423          	sw	a3,264(t1)
    148c:	00200693          	li	a3,2
    1490:	02d50463          	beq	a0,a3,14b8 <__register_exitproc+0x74>
    1494:	00170713          	addi	a4,a4,1
    1498:	00e7a223          	sw	a4,4(a5)
    149c:	010787b3          	add	a5,a5,a6
    14a0:	00b7a423          	sw	a1,8(a5)
    14a4:	00000513          	li	a0,0
    14a8:	00008067          	ret
    14ac:	14c70793          	addi	a5,a4,332
    14b0:	14f72423          	sw	a5,328(a4)
    14b4:	fa5ff06f          	j	1458 <__register_exitproc+0x14>
    14b8:	18c7a683          	lw	a3,396(a5)
    14bc:	00170713          	addi	a4,a4,1
    14c0:	00e7a223          	sw	a4,4(a5)
    14c4:	00c6e633          	or	a2,a3,a2
    14c8:	18c7a623          	sw	a2,396(a5)
    14cc:	010787b3          	add	a5,a5,a6
    14d0:	00b7a423          	sw	a1,8(a5)
    14d4:	00000513          	li	a0,0
    14d8:	00008067          	ret
    14dc:	fff00513          	li	a0,-1
    14e0:	00008067          	ret

000014e4 <_exit>:
    14e4:	00000593          	li	a1,0
    14e8:	00000613          	li	a2,0
    14ec:	00000693          	li	a3,0
    14f0:	00000713          	li	a4,0
    14f4:	00000793          	li	a5,0
    14f8:	05d00893          	li	a7,93
    14fc:	00000073          	ecall
    1500:	00054463          	bltz	a0,1508 <_exit+0x24>
    1504:	0000006f          	j	1504 <_exit+0x20>
    1508:	ff010113          	addi	sp,sp,-16
    150c:	00812423          	sw	s0,8(sp)
    1510:	00050413          	mv	s0,a0
    1514:	00112623          	sw	ra,12(sp)
    1518:	40800433          	neg	s0,s0
    151c:	00c000ef          	jal	ra,1528 <__errno>
    1520:	00852023          	sw	s0,0(a0)
    1524:	0000006f          	j	1524 <_exit+0x40>

00001528 <__errno>:
    1528:	00003797          	auipc	a5,0x3
    152c:	cd078793          	addi	a5,a5,-816 # 41f8 <_edata>
    1530:	0007a503          	lw	a0,0(a5)
    1534:	00008067          	ret

00001538 <main>:


int __attribute__ ((used))
main (int argc __attribute__ ((unused)),
      char *argv[] __attribute__ ((unused)))
{
    1538:	fe010113          	addi	sp,sp,-32
    153c:	00112e23          	sw	ra,28(sp)
  volatile int result;
  volatile int correct;

  initialise_board ();
    1540:	b91ff0ef          	jal	ra,10d0 <initialise_board>
  initialise_benchmark ();
    1544:	9e1ff0ef          	jal	ra,f24 <initialise_benchmark>
  warm_caches (WARMUP_HEAT);
    1548:	00000513          	li	a0,0
    154c:	9ddff0ef          	jal	ra,f28 <warm_caches>

  start_trigger ();
    1550:	b89ff0ef          	jal	ra,10d8 <start_trigger>
  result = benchmark ();
    1554:	9d9ff0ef          	jal	ra,f2c <benchmark>
    1558:	00a12423          	sw	a0,8(sp)
  stop_trigger ();
    155c:	b85ff0ef          	jal	ra,10e0 <stop_trigger>

  /* bmarks that use arrays will check a global array rather than int result */

  correct = verify_benchmark (result);
    1560:	00812503          	lw	a0,8(sp)
    1564:	959ff0ef          	jal	ra,ebc <verify_benchmark>
    1568:	00a12623          	sw	a0,12(sp)

  //return (!correct);
  for (;;) {
    asm("wfi");
    156c:	10500073          	wfi
    1570:	ffdff06f          	j	156c <main+0x34>

00001574 <register_fini>:
    1574:	fffff797          	auipc	a5,0xfffff
    1578:	a8c78793          	addi	a5,a5,-1396 # 0 <__DYNAMIC>
    157c:	00078863          	beqz	a5,158c <register_fini+0x18>
    1580:	00000517          	auipc	a0,0x0
    1584:	e5050513          	addi	a0,a0,-432 # 13d0 <__libc_fini_array>
    1588:	ea9ff06f          	j	1430 <atexit>
    158c:	00008067          	ret

00001590 <__CTOR_LIST__>:
	...

00001598 <__CTOR_END__>:
	...

Disassembly of section .rodata:

000015a0 <rcon.2219>:
    15a0:	0201                	addi	tp,tp,0
    15a2:	0804                	addi	s1,sp,16
    15a4:	2010                	fld	fa2,0(s0)
    15a6:	8040                	0x8040
    15a8:	0000361b          	0x361b

000015ac <mtable>:
static const uint32_t mtable[0x100] = {
    15ac:	0000                	unimp
    15ae:	0000                	unimp
    15b0:	090e                	slli	s2,s2,0x3
    15b2:	0b0d                	addi	s6,s6,3
    15b4:	121c                	addi	a5,sp,288
    15b6:	161a                	slli	a2,a2,0x26
    15b8:	1b12                	slli	s6,s6,0x24
    15ba:	24381d17          	auipc	s10,0x24381
    15be:	2c34                	fld	fa3,88(s0)
    15c0:	2d36                	fld	fs10,328(sp)
    15c2:	2739                	jal	1cd0 <_aes_decrypt_table+0x324>
    15c4:	3624                	fld	fs1,104(a2)
    15c6:	3a2e                	fld	fs4,232(sp)
    15c8:	3f2a                	fld	ft10,168(sp)
    15ca:	48703123          	0x48703123
    15ce:	5868                	lw	a0,116(s0)
    15d0:	417e                	lw	sp,220(sp)
    15d2:	5365                	li	t1,-7
    15d4:	5a6c                	lw	a1,116(a2)
    15d6:	4e72                	lw	t3,28(sp)
    15d8:	5362                	lw	t1,56(sp)
    15da:	457f                	0x457f
    15dc:	6c48                	flw	fa0,28(s0)
    15de:	745c                	flw	fa5,44(s0)
    15e0:	6546                	flw	fa0,80(sp)
    15e2:	7f51                	lui	t5,0xffff4
    15e4:	7e54                	flw	fa3,60(a2)
    15e6:	6246                	flw	ft4,80(sp)
    15e8:	775a                	flw	fa4,180(sp)
    15ea:	90e0694b          	fnmsub.s	fs2,ft0,fa4,fs2,unknown
    15ee:	b0d0                	fsd	fa2,160(s1)
    15f0:	99ee                	add	s3,s3,s11
    15f2:	bbdd                	j	13e8 <__libc_fini_array+0x18>
    15f4:	82fc                	0x82fc
    15f6:	a6ca                	fsd	fs2,328(sp)
    15f8:	8bf2                	mv	s7,t3
    15fa:	b4d8adc7          	0xb4d8adc7
    15fe:	9ce4                	0x9ce4
    1600:	bdd6                	fsd	fs5,248(sp)
    1602:	97e9                	srai	a5,a5,0x3a
    1604:	a6c4                	fsd	fs1,136(a3)
    1606:	8afe                	mv	s5,t6
    1608:	afca                	fsd	fs2,472(sp)
    160a:	d89081f3          	0xd89081f3
    160e:	e8b8                	fsw	fa4,80(s1)
    1610:	d19e                	sw	t2,224(sp)
    1612:	e3b5                	bnez	a5,1676 <mtable+0xca>
    1614:	ca8c                	sw	a1,16(a3)
    1616:	fea2                	fsw	fs0,124(sp)
    1618:	c382                	sw	zero,196(sp)
    161a:	fca8f5af          	0xfca8f5af
    161e:	c48c                	sw	a1,8(s1)
    1620:	f5a6                	fsw	fs1,232(sp)
    1622:	cf81                	beqz	a5,163a <mtable+0x8e>
    1624:	eeb4                	fsw	fa3,88(a3)
    1626:	d296                	sw	t0,100(sp)
    1628:	e7ba                	fsw	fa4,204(sp)
    162a:	3bdbd99b          	0x3bdbd99b
    162e:	32d57bbb          	0x32d57bbb
    1632:	70b6                	flw	ft1,108(sp)
    1634:	6da129c7          	0x6da129c7
    1638:	20c9                	jal	16fa <mtable+0x14e>
    163a:	66ac                	flw	fa1,72(a3)
    163c:	578f1fe3          	bne	t5,s8,23ba <_min_stack+0x3ba>
    1640:	16ed                	addi	a3,a3,-5
    1642:	5c82                	lw	s9,32(sp)
    1644:	0dff                	0xdff
    1646:	4195                	li	gp,5
    1648:	04f1                	addi	s1,s1,28
    164a:	4a98                	lw	a4,16(a3)
    164c:	23d373ab          	0x23d373ab
    1650:	7aa5                	lui	s5,0xfffe9
    1652:	28de                	fld	fa7,464(sp)
    1654:	35c961b7          	lui	gp,0x35c96
    1658:	68b9                	lui	a7,0xe
    165a:	3ec4                	fld	fs1,184(a3)
    165c:	0fe75793          	0xfe75793
    1660:	5e9d                	li	t4,-25
    1662:	04ea                	slli	s1,s1,0x1a
    1664:	19fd458f          	0x19fd458f
    1668:	4c81                	li	s9,0
    166a:	12f0                	addi	a2,sp,364
    166c:	cb6bab3b          	0xcb6bab3b
    1670:	a235                	j	179c <mtable+0x1f0>
    1672:	c066                	sw	s9,0(sp)
    1674:	dd71b927          	fsd	fs7,-558(gp) # 35c95dd2 <_stack_start+0x35c85dd2>
    1678:	b029                	j	e82 <benchmark_body+0xaa>
    167a:	d67c                	sw	a5,108(a2)
    167c:	e75f8f03          	lb	t5,-395(t6)
    1680:	860d                	srai	a2,a2,0x3
    1682:	ec52                	fsw	fs4,24(sp)
    1684:	9d1f f145 9411      	0x9411f1459d1f
    168a:	fa48                	fsw	fa0,52(a2)
    168c:	9303e34b          	fnmsub.d	ft6,ft7,fa6,fs2,unknown
    1690:	ea45                	bnez	a2,1740 <mtable+0x194>
    1692:	980e                	add	a6,a6,gp
    1694:	8519f157          	0x8519f157
    1698:	f859                	bnez	s0,162e <mtable+0x82>
    169a:	8e14                	0x8e14
    169c:	bf37c773          	0xbf37c773
    16a0:	ce7d                	beqz	a2,179e <mtable+0x1f2>
    16a2:	b43a                	fsd	fa4,40(sp)
    16a4:	a92dd56f          	jal	a0,fffde936 <_stack_start+0xfffce936>
    16a8:	dc61                	beqz	s0,1680 <mtable+0xd4>
    16aa:	a220                	fsd	fs0,64(a2)
    16ac:	76ad                	lui	a3,0xfffeb
    16ae:	f66d                	bnez	a2,1698 <mtable+0xec>
    16b0:	fd607fa3          	0xfd607fa3
    16b4:	64b1                	lui	s1,0xc
    16b6:	6dbfe077          	0x6dbfe077
    16ba:	eb7a                	fsw	ft10,148(sp)
    16bc:	5295                	li	t0,-27
    16be:	da59                	beqz	a2,1654 <mtable+0xa8>
    16c0:	d1545b9b          	0xd1545b9b
    16c4:	4089                	li	ra,2
    16c6:	4987cc43          	fmadd.s	fs8,fa5,fs8,fs1,rmm
    16ca:	c74e                	sw	s3,140(sp)
    16cc:	3edd                	jal	12c2 <__call_exitprocs+0x12>
    16ce:	ae05                	j	19fe <_aes_decrypt_table+0x52>
    16d0:	a50837d3          	0xa50837d3
    16d4:	2cc1                	jal	19a4 <mtable+0x3f8>
    16d6:	b81f 25cf b312      	0xb31225cfb81f
    16dc:	1ae5                	addi	s5,s5,-7
    16de:	8231                	srli	a2,a2,0xc
    16e0:	893c13eb          	0x893c13eb
    16e4:	08f9                	addi	a7,a7,30
    16e6:	01f7942b          	0x1f7942b
    16ea:	9f26                	add	t5,t5,s1
    16ec:	e64d                	bnez	a2,1796 <mtable+0x1ea>
    16ee:	46bd                	li	a3,15
    16f0:	4db0ef43          	0x4db0ef43
    16f4:	f451                	bnez	s0,1680 <mtable+0xd4>
    16f6:	fd5f50a7          	0xfd5f50a7
    16fa:	5baa                	lw	s7,168(sp)
    16fc:	c275                	beqz	a2,17e0 <mtable+0x234>
    16fe:	6a89                	lui	s5,0x2
    1700:	6184cb7b          	0x6184cb7b
    1704:	d069                	beqz	s0,16c6 <mtable+0x11a>
    1706:	d9677c93          	andi	s9,a4,-618
    170a:	779e                	flw	fa5,228(sp)
    170c:	ae3d                	j	1a4a <_aes_decrypt_table+0x9e>
    170e:	1ed5                	addi	t4,t4,-11
    1710:	15d8a733          	0x15d8a733
    1714:	bc21                	j	112c <reset_handler+0x40>
    1716:	b52f08cf          	0xb52f08cf
    171a:	03c2                	slli	t2,t2,0x10
    171c:	8a05                	andi	a2,a2,1
    171e:	32e1                	jal	10e6 <stop_trigger+0x6>
    1720:	39ec830b          	0x39ec830b
    1724:	9819                	andi	s0,s0,-26
    1726:	911724fb          	0x911724fb
    172a:	2ff6                	fld	ft11,344(sp)
    172c:	4d76                	lw	s10,92(sp)
    172e:	8dd6                	mv	s11,s5
    1730:	4478                	lw	a4,76(s0)
    1732:	5f6a86db          	0x5f6a86db
    1736:	9bcc                	0x9bcc
    1738:	5664                	lw	s1,108(a2)
    173a:	90c1                	srli	s1,s1,0x30
    173c:	694e                	flw	fs2,208(sp)
    173e:	a1e2                	fsd	fs8,192(sp)
    1740:	6040                	flw	fs0,4(s0)
    1742:	7b52aaef          	jal	s5,2c6f6 <_stack_start+0x1c6f6>
    1746:	b7f8                	fsd	fa4,232(a5)
    1748:	725c                	flw	fa5,36(a2)
    174a:	bcf5                	j	1246 <memset+0x72>
    174c:	0506                	slli	a0,a0,0x1
    174e:	d5be                	sw	a5,232(sp)
    1750:	0c08                	addi	a0,sp,528
    1752:	171adeb3          	0x171adeb3
    1756:	c3a4                	sw	s1,64(a5)
    1758:	1e14                	addi	a3,sp,816
    175a:	c8a9                	beqz	s1,17ac <mtable+0x200>
    175c:	213e                	fld	ft2,456(sp)
    175e:	f98a                	fsw	ft2,240(sp)
    1760:	2830                	fld	fa2,80(s0)
    1762:	3322f287          	0x3322f287
    1766:	ef90                	fsw	fa2,24(a5)
    1768:	3a2c                	fld	fa1,112(a2)
    176a:	e49d                	bnez	s1,1798 <mtable+0x1ec>
    176c:	dd96                	sw	t0,248(sp)
    176e:	3d06                	fld	fs10,96(sp)
    1770:	d498                	sw	a4,40(s1)
    1772:	cf8a360b          	0xcf8a360b
    1776:	2b1c                	fld	fa5,16(a4)
    1778:	c684                	sw	s1,8(a3)
    177a:	2011                	jal	177e <mtable+0x1d2>
    177c:	f9ae                	fsw	fa1,240(sp)
    177e:	1132                	slli	sp,sp,0x2c
    1780:	f0a0                	fsw	fs0,96(s1)
    1782:	ebb21a3f e2bc0728 	0xe2bc0728ebb21a3f
    178a:	0c25                	addi	s8,s8,9
    178c:	95e6                	add	a1,a1,s9
    178e:	656e                	flw	fa0,216(sp)
    1790:	9ce8                	0x9ce8
    1792:	87fa6e63          	bltu	s4,t6,80e <_nettle_aes_encrypt+0x3f6>
    1796:	7374                	flw	fa3,100(a4)
    1798:	8ef4                	0x8ef4
    179a:	7879                	lui	a6,0xffffe
    179c:	b1de                	fsd	fs7,224(sp)
    179e:	495a                	lw	s2,148(sp)
    17a0:	b8d0                	fsd	fa2,176(s1)
    17a2:	a3c24257          	0xa3c24257
    17a6:	5f40                	lw	s0,60(a4)
    17a8:	aacc                	fsd	fa1,144(a3)
    17aa:	544d                	li	s0,-13
    17ac:	ec41                	bnez	s0,1844 <mtable+0x298>
    17ae:	f7da                	fsw	fs6,236(sp)
    17b0:	fcd7e54f          	0xfcd7e54f
    17b4:	fe5d                	bnez	a2,1772 <mtable+0x1c6>
    17b6:	e1c0                	fsw	fs0,4(a1)
    17b8:	eacdf753          	0xeacdf753
    17bc:	c879                	beqz	s0,1892 <mtable+0x2e6>
    17be:	dbee                	sw	s11,244(sp)
    17c0:	d0e3c177          	0xd0e3c177
    17c4:	da65                	beqz	a2,17b4 <mtable+0x208>
    17c6:	cdf4                	sw	a3,92(a1)
    17c8:	c6f9d36b          	0xc6f9d36b
    17cc:	a431                	j	19d8 <_aes_decrypt_table+0x2c>
    17ce:	afb2                	fsd	fa2,472(sp)
    17d0:	a4bfad3f b9a8b62d 	0xb9a8b62da4bfad3f
    17d8:	b2a5bf23          	0xb2a5bf23
    17dc:	8009                	srli	s0,s0,0x2
    17de:	8386                	mv	t2,ra
    17e0:	888b8907          	0x888b8907
    17e4:	9215                	srli	a2,a2,0x25
    17e6:	959c                	0x959c
    17e8:	9e919b1b          	0x9e919b1b
    17ec:	7ca1                	lui	s9,0xfffe8
    17ee:	470a                	lw	a4,128(sp)
    17f0:	4c0775af          	0x4c0775af
    17f4:	6ebd                	lui	t4,0xf
    17f6:	5110                	lw	a2,32(a0)
    17f8:	5a1d67b3          	0x5a1d67b3
    17fc:	5899                	li	a7,-26
    17fe:	6b3e                	flw	fs6,204(sp)
    1800:	60335197          	auipc	gp,0x60335
    1804:	4a85                	li	s5,1
    1806:	7d24                	flw	fs1,120(a0)
    1808:	7629438b          	0x7629438b
    180c:	34d1                	jal	12d0 <__call_exitprocs+0x20>
    180e:	1f62                	slli	t5,t5,0x38
    1810:	3ddf 146f 26cd      	0x26cd146f3ddf
    1816:	0978                	addi	a4,sp,156
    1818:	02752fc3          	fmadd.d	ft11,fa0,ft7,ft0,rdn
    181c:	10e9                	addi	ra,ra,-6
    181e:	3356                	fld	ft6,368(sp)
    1820:	385b19e7          	0x385b19e7
    1824:	02f5                	addi	t0,t0,29
    1826:	254c                	fld	fa1,136(a0)
    1828:	2e410bfb          	0x2e410bfb
    182c:	d79a                	sw	t1,236(sp)
    182e:	8c61                	and	s0,s0,s0
    1830:	de94                	sw	a3,56(a3)
    1832:	876c                	0x876c
    1834:	c586                	sw	ra,200(sp)
    1836:	cc889a7b          	0xcc889a7b
    183a:	9176                	add	sp,sp,t4
    183c:	f3a2                	fsw	fs0,228(sp)
    183e:	a055                	j	18e2 <mtable+0x336>
    1840:	faac                	fsw	fa1,112(a3)
    1842:	ab58                	fsd	fa4,144(a4)
    1844:	e1be                	fsw	fa5,192(sp)
    1846:	e8b0b64f          	fnmadd.s	fa2,ft1,fa1,ft9,rup
    184a:	bd42                	fsd	fa6,184(sp)
    184c:	9fea                	add	t6,t6,s10
    184e:	d409                	beqz	s0,1758 <mtable+0x1ac>
    1850:	96e4                	0x96e4
    1852:	df04                	sw	s1,56(a4)
    1854:	8df6                	mv	s11,t4
    1856:	84f8c213          	xori	tp,a7,-1969
    185a:	c91e                	sw	t2,144(sp)
    185c:	bbd2                	fsd	fs4,496(sp)
    185e:	f83d                	bnez	s0,17d4 <mtable+0x228>
    1860:	b2dc                	fsd	fa5,160(a3)
    1862:	f330                	fsw	fa2,96(a4)
    1864:	a9ce                	fsd	fs3,208(sp)
    1866:	a0c0ee27          	0xa0c0ee27
    186a:	e52a                	fsw	fa0,136(sp)
    186c:	477a                	lw	a4,156(sp)
    186e:	3cb1                	jal	12ca <__call_exitprocs+0x1a>
    1870:	4e74                	lw	a3,92(a2)
    1872:	37bc                	fld	fa5,104(a5)
    1874:	5566                	lw	a0,120(sp)
    1876:	5c682aab          	0x5c682aab
    187a:	21a6                	fld	ft3,72(sp)
    187c:	6342                	flw	ft6,16(sp)
    187e:	1085                	addi	ra,ra,-31
    1880:	6a4c                	flw	fa1,20(a2)
    1882:	1b88                	addi	a0,sp,496
    1884:	715e                	flw	ft2,244(sp)
    1886:	069f 7850 0d92      	0xd927850069f
    188c:	0f0a                	slli	t5,t5,0x2
    188e:	64d9                	lui	s1,0x16
    1890:	0604                	addi	s1,sp,768
    1892:	6fd4                	flw	fa3,28(a5)
    1894:	1d16                	slli	s10,s10,0x25
    1896:	141872c3          	0x141872c3
    189a:	79ce                	flw	fs3,240(sp)
    189c:	2b32                	fld	fs6,264(sp)
    189e:	48ed                	li	a7,27
    18a0:	223c                	fld	fa5,64(a2)
    18a2:	43e0                	lw	s0,68(a5)
    18a4:	392e                	fld	fs2,232(sp)
    18a6:	30205ef7          	0x30205ef7
    18aa:	55fa                	lw	a1,188(sp)
    18ac:	9aec                	0x9aec
    18ae:	93e201b7          	lui	gp,0x93e20
    18b2:	0aba                	slli	s5,s5,0xe
    18b4:	88f0                	0x88f0
    18b6:	17ad                	addi	a5,a5,-21
    18b8:	81fe                	mv	gp,t6
    18ba:	1ca0                	addi	s0,sp,632
    18bc:	bed4                	fsd	fa3,184(a3)
    18be:	b7da2d83          	lw	s11,-1155(s4)
    18c2:	268e                	fld	fa3,192(sp)
    18c4:	acc8                	fsd	fa0,152(s1)
    18c6:	3b99                	jal	161c <mtable+0x70>
    18c8:	a5c6                	fsd	fa7,200(sp)
    18ca:	3094                	fld	fa3,32(s1)
    18cc:	d29c                	sw	a5,32(a3)
    18ce:	59df db92 52d2      	0x52d2db9259df
    18d4:	c080                	sw	s0,0(s1)
    18d6:	4fc5                	li	t6,17
    18d8:	c98e                	sw	gp,208(sp)
    18da:	44c8                	lw	a0,12(s1)
    18dc:	f6a4                	fsw	fs1,104(a3)
    18de:	ffaa75eb          	0xffaa75eb
    18e2:	7ee6                	flw	ft9,120(sp)
    18e4:	e4b8                	fsw	fa4,72(s1)
    18e6:	63f1                	lui	t2,0x1c
    18e8:	edb6                	fsw	fa3,216(sp)
    18ea:	68fc                	flw	fa5,84(s1)
    18ec:	0a0c                	addi	a1,sp,272
    18ee:	0302b167          	0x302b167
    18f2:	ba6a                	fsd	fs10,304(sp)
    18f4:	1810                	addi	a2,sp,48
    18f6:	a77d                	j	20a4 <_min_stack+0xa4>
    18f8:	111e                	slli	sp,sp,0x27
    18fa:	ac70                	fsd	fa2,216(s0)
    18fc:	2e34                	fld	fa3,88(a2)
    18fe:	273a9d53          	fsgnjn.q	fs10,fs5,fs3
    1902:	965e                	add	a2,a2,s7
    1904:	3c28                	fld	fa0,120(s0)
    1906:	8b49                	andi	a4,a4,18
    1908:	3526                	fld	fa0,104(sp)
    190a:	8044                	0x8044
    190c:	427c                	lw	a5,68(a2)
    190e:	4b72e90f          	0x4b72e90f
    1912:	e202                	fsw	ft0,4(sp)
    1914:	5060                	lw	s0,100(s0)
    1916:	ff15                	bnez	a4,1852 <mtable+0x2a6>
    1918:	596e                	lw	s2,248(sp)
    191a:	f418                	fsw	fa4,40(s0)
    191c:	6644                	flw	fs1,12(a2)
    191e:	6f4ac53b          	0x6f4ac53b
    1922:	ce36                	sw	a3,28(sp)
    1924:	7458                	flw	fa4,44(s0)
    1926:	d321                	beqz	a4,1866 <mtable+0x2ba>
    1928:	7d56                	flw	fs10,116(sp)
    192a:	d82c                	sw	a1,112(s0)
    192c:	7a0ca137          	lui	sp,0x7a0ca
    1930:	a839                	j	194e <mtable+0x3a2>
    1932:	7101                	addi	sp,sp,-512
    1934:	6c16b32b          	0x6c16b32b
    1938:	ba25                	j	1270 <memset+0x9c>
    193a:	850f671b          	0x850f671b
    193e:	5638                	lw	a4,104(a2)
    1940:	8c01                	sub	s0,s0,s0
    1942:	5d35                	li	s10,-19
    1944:	40229713          	0x40229713
    1948:	9e1d                	0x9e1d
    194a:	e9474b2f          	0xe9474b2f
    194e:	2264                	fld	fs1,192(a2)
    1950:	e049                	bnez	s0,19d2 <_aes_decrypt_table+0x26>
    1952:	2969                	jal	1dec <_aes_decrypt_table+0x440>
    1954:	347efb5b          	0x347efb5b
    1958:	f255                	bnez	a2,18fc <mtable+0x350>
    195a:	cd7f3f73          	csrrc	t5,0xcd7,t5
    195e:	0e50                	addi	a2,sp,788
    1960:	c471                	beqz	s0,1a2c <_aes_decrypt_table+0x80>
    1962:	055d                	addi	a0,a0,23
    1964:	184adf63          	bge	s5,tp,1b02 <_aes_decrypt_table+0x156>
    1968:	d66d                	beqz	a2,1952 <mtable+0x3a6>
    196a:	31d71347          	fmsub.s	ft6,fa4,ft9,ft6,rtz
    196e:	cadc                	sw	a5,20(a3)
    1970:	38d9                	jal	1246 <memset+0x72>
    1972:	c1d1                	beqz	a1,19f6 <_aes_decrypt_table+0x4a>
    1974:	dcc623cb          	0xdcc623cb
    1978:	2ac5                	jal	1b68 <_aes_decrypt_table+0x1bc>
    197a:	15efd7cb          	0x15efd7cb
    197e:	e6e8                	fsw	fa0,76(a3)
    1980:	1ce1                	addi	s9,s9,-8
    1982:	ede5                	bnez	a1,1a7a <_aes_decrypt_table+0xce>
    1984:	f0f207f3          	0xf0f207f3
    1988:	0efd                	addi	t4,t4,31
    198a:	fbff                	0xfbff
    198c:	92b479a7          	0x92b479a7
    1990:	70a9                	lui	ra,0xfffea
    1992:	99b9                	andi	a1,a1,-18
    1994:	84ae6bbb          	0x84ae6bbb
    1998:	62b5                	lui	t0,0xd
    199a:	5d9f8fa3          	sb	s9,1503(t6)
    199e:	be80                	fsd	fs0,56(a3)
    19a0:	5491                	li	s1,-28
    19a2:	b58d                	j	1804 <mtable+0x258>
    19a4:	a89a4f83          	lbu	t6,-1399(s4)
    19a8:	468d                	li	a3,3
    19aa:	          	auipc	t2,0x952a

000019ac <_aes_decrypt_table>:
static const struct aes_table _aes_decrypt_table = {	/* isbox */
    19ac:	0952                	slli	s2,s2,0x14
    19ae:	d56a                	sw	s10,168(sp)
    19b0:	3630                	fld	fa2,104(a2)
    19b2:	38a5                	jal	122a <memset+0x56>
    19b4:	9ea340bf fbd7f381 	0xfbd7f3819ea340bf
    19bc:	e37c                	fsw	fa5,68(a4)
    19be:	8239                	srli	a2,a2,0xe
    19c0:	87ff2f9b          	0x87ff2f9b
    19c4:	8e34                	0x8e34
    19c6:	dec44443          	fmadd.q	fs0,fs0,fa2,fs11,rmm
    19ca:	cbe9                	beqz	a5,1a9c <_aes_decrypt_table+0xf0>
    19cc:	7b54                	flw	fa3,52(a4)
    19ce:	3294                	fld	fa3,32(a3)
    19d0:	c2a6                	sw	s1,68(sp)
    19d2:	4cee3d23          	0x4cee3d23
    19d6:	0b95                	addi	s7,s7,5
    19d8:	fa42                	fsw	fa6,52(sp)
    19da:	2e084ec3          	fmadd.q	ft9,fa6,ft0,ft5,rmm
    19de:	66a1                	lui	a3,0x8
    19e0:	d928                	sw	a0,112(a0)
    19e2:	b224                	fsd	fs1,96(a2)
    19e4:	5b76                	lw	s6,124(sp)
    19e6:	49a2                	lw	s3,8(sp)
    19e8:	8b6d                	andi	a4,a4,27
    19ea:	25d1                	jal	20ae <_min_stack+0xae>
    19ec:	f872                	fsw	ft8,48(sp)
    19ee:	64f6                	flw	fs1,92(sp)
    19f0:	6886                	flw	fa7,64(sp)
    19f2:	1698                	addi	a4,sp,864
    19f4:	a4d4                	fsd	fa3,136(s1)
    19f6:	cc5c                	sw	a5,28(s0)
    19f8:	655d                	lui	a0,0x17
    19fa:	92b6                	add	t0,t0,a3
    19fc:	706c                	flw	fa1,100(s0)
    19fe:	5048                	lw	a0,36(s0)
    1a00:	edfd                	bnez	a1,1afe <_aes_decrypt_table+0x152>
    1a02:	dab9                	beqz	a3,1958 <mtable+0x3ac>
    1a04:	155e                	slli	a0,a0,0x37
    1a06:	5746                	lw	a4,112(sp)
    1a08:	849d8da7          	0x849d8da7
    1a0c:	d890                	sw	a2,48(s1)
    1a0e:	bc8c00ab          	0xbc8c00ab
    1a12:	e4f70ad3          	0xe4f70ad3
    1a16:	0558                	addi	a4,sp,644
    1a18:	b3b8                	fsd	fa4,96(a5)
    1a1a:	0645                	addi	a2,a2,17
    1a1c:	2cd0                	fld	fa2,152(s1)
    1a1e:	8f1e                	mv	t5,t2
    1a20:	3fca                	fld	ft11,176(sp)
    1a22:	afc1020f          	0xafc1020f
    1a26:	03bd                	addi	t2,t2,15
    1a28:	1301                	addi	t1,t1,-32
    1a2a:	6b8a                	flw	fs7,128(sp)
    1a2c:	913a                	add	sp,sp,a4
    1a2e:	4111                	li	sp,4
    1a30:	eadc674f          	fnmadd.d	fa4,fs8,fa3,ft9,unknown
    1a34:	cecff297          	auipc	t0,0xcecff
    1a38:	b4f0                	fsd	fa2,232(s1)
    1a3a:	73e6                	flw	ft7,120(sp)
    1a3c:	ac96                	fsd	ft5,88(sp)
    1a3e:	2274                	fld	fa3,192(a2)
    1a40:	8535ade7          	0x8535ade7
    1a44:	f9e2                	fsw	fs8,240(sp)
    1a46:	751ce837          	lui	a6,0x751ce
    1a4a:	6edf f147 711a      	0x711af1476edf
    1a50:	291d                	jal	1e86 <_aes_decrypt_table+0x4da>
    1a52:	89c5                	andi	a1,a1,17
    1a54:	0e62b76f          	jal	a4,2cb3a <_stack_start+0x1cb3a>
    1a58:	18aa                	slli	a7,a7,0x2a
    1a5a:	1bbe                	slli	s7,s7,0x2f
    1a5c:	56fc                	lw	a5,108(a3)
    1a5e:	4b3e                	lw	s6,204(sp)
    1a60:	d2c6                	sw	a7,100(sp)
    1a62:	2079                	jal	1af0 <_aes_decrypt_table+0x144>
    1a64:	db9a                	sw	t1,244(sp)
    1a66:	fec0                	fsw	fs0,60(a3)
    1a68:	cd78                	sw	a4,92(a0)
    1a6a:	f45a                	fsw	fs6,40(sp)
    1a6c:	dd1f 33a8 0788      	0x78833a8dd1f
    1a72:	12b131c7          	fmsub.d	ft3,ft2,fa1,ft2,rup
    1a76:	5910                	lw	a2,48(a0)
    1a78:	5fec8027          	0x5fec8027
    1a7c:	5160                	lw	s0,100(a0)
    1a7e:	a97f                	0xa97f
    1a80:	b519                	j	1886 <mtable+0x2da>
    1a82:	0d4a                	slli	s10,s10,0x12
    1a84:	e52d                	bnez	a0,1aee <_aes_decrypt_table+0x142>
    1a86:	9f7a                	add	t5,t5,t5
    1a88:	ef9cc993          	xori	s3,s9,-263
    1a8c:	e0a0                	fsw	fs0,64(s1)
    1a8e:	2aae4d3b          	0x2aae4d3b
    1a92:	b0f5                	j	137e <__call_exitprocs+0xce>
    1a94:	ebc8                	fsw	fa0,20(a5)
    1a96:	53833cbb          	0x53833cbb
    1a9a:	6199                	lui	gp,0x6
    1a9c:	7e042b17          	auipc	s6,0x7e042
    1aa0:	77ba                	flw	fa5,172(sp)
    1aa2:	26d6                	fld	fa3,336(sp)
    1aa4:	69e1                	lui	s3,0x18
    1aa6:	6314                	flw	fa3,0(a4)
    1aa8:	2155                	jal	1f4c <_aes_decrypt_table+0x5a0>
    1aaa:	7d0c                	flw	fa1,56(a0)
    1aac:	f451                	bnez	s0,1a38 <_aes_decrypt_table+0x8c>
    1aae:	417e50a7          	0x417e50a7
    1ab2:	5365                	li	t1,-7
    1ab4:	171a                	slli	a4,a4,0x26
    1ab6:	c3a4                	sw	s1,64(a5)
    1ab8:	273a                	fld	fa4,392(sp)
    1aba:	965e                	add	a2,a2,s7
    1abc:	cb6bab3b          	0xcb6bab3b
    1ac0:	9d1f f145 faac      	0xfaacf1459d1f
    1ac6:	ab58                	fsd	fa4,144(a4)
    1ac8:	9303e34b          	fnmsub.d	ft6,ft7,fa6,fs2,unknown
    1acc:	3020                	fld	fs0,96(s0)
    1ace:	55fa                	lw	a1,188(sp)
    1ad0:	76ad                	lui	a3,0xfffeb
    1ad2:	f66d                	bnez	a2,1abc <_aes_decrypt_table+0x110>
    1ad4:	cc88                	sw	a0,24(s1)
    1ad6:	9176                	add	sp,sp,t4
    1ad8:	02f5                	addi	t0,t0,29
    1ada:	254c                	fld	fa1,136(a0)
    1adc:	fcd7e54f          	0xfcd7e54f
    1ae0:	2ac5                	jal	1cd0 <_aes_decrypt_table+0x324>
    1ae2:	3526d7cb          	0x3526d7cb
    1ae6:	8044                	0x8044
    1ae8:	62b5                	lui	t0,0xd
    1aea:	b1de8fa3          	sb	t4,-1249(t4) # eb1f <_stack+0xb1f>
    1aee:	495a                	lw	s2,148(sp)
    1af0:	ba25                	j	1428 <__libc_fini_array+0x58>
    1af2:	ea45671b          	0xea45671b
    1af6:	980e                	add	a6,a6,gp
    1af8:	fe5d                	bnez	a2,1ab6 <_aes_decrypt_table+0x10a>
    1afa:	e1c0                	fsw	fs0,4(a1)
    1afc:	02752fc3          	fmadd.d	ft11,fa0,ft7,ft0,rdn
    1b00:	4c81                	li	s9,0
    1b02:	12f0                	addi	a2,sp,364
    1b04:	468d                	li	a3,3
    1b06:	d36ba397          	auipc	t2,0xd36ba
    1b0a:	c6f9                	beqz	a3,1bd8 <_aes_decrypt_table+0x22c>
    1b0c:	e75f8f03          	lb	t5,-395(t6)
    1b10:	9215                	srli	a2,a2,0x25
    1b12:	959c                	0x959c
    1b14:	eb7a6dbf da595295 	0xda595295eb7a6dbf
    1b1c:	bed4                	fsd	fa3,184(a3)
    1b1e:	74582d83          	lw	s11,1861(a6) # 751ce745 <_stack_start+0x751be745>
    1b22:	d321                	beqz	a4,1a62 <_aes_decrypt_table+0xb6>
    1b24:	e049                	bnez	s0,1ba6 <_aes_decrypt_table+0x1fa>
    1b26:	2969                	jal	1fc0 <_aes_decrypt_table+0x614>
    1b28:	c98e                	sw	gp,208(sp)
    1b2a:	44c8                	lw	a0,12(s1)
    1b2c:	c275                	beqz	a2,1c10 <_aes_decrypt_table+0x264>
    1b2e:	6a89                	lui	s5,0x2
    1b30:	8ef4                	0x8ef4
    1b32:	7879                	lui	a6,0xffffe
    1b34:	5899                	li	a7,-26
    1b36:	6b3e                	flw	fs6,204(sp)
    1b38:	dd71b927          	fsd	fs7,-558(gp) # 5dd2 <_bss_end+0x17da>
    1b3c:	e1be                	fsw	fa5,192(sp)
    1b3e:	88f0b64f          	fnmadd.s	fa2,ft1,fa5,fa7,rup
    1b42:	17ad                	addi	a5,a5,-21
    1b44:	20c9                	jal	1c06 <_aes_decrypt_table+0x25a>
    1b46:	66ac                	flw	fa1,72(a3)
    1b48:	ce7d                	beqz	a2,1c46 <_aes_decrypt_table+0x29a>
    1b4a:	b43a                	fsd	fa4,40(sp)
    1b4c:	184adf63          	bge	s5,tp,1cea <_aes_decrypt_table+0x33e>
    1b50:	1ae5                	addi	s5,s5,-7
    1b52:	8231                	srli	a2,a2,0xc
    1b54:	60335197          	auipc	gp,0x60335
    1b58:	5362                	lw	t1,56(sp)
    1b5a:	457f                	0x457f
    1b5c:	64b1                	lui	s1,0xc
    1b5e:	6bbbe077          	0x6bbbe077
    1b62:	84ae                	mv	s1,a1
    1b64:	81fe                	mv	gp,t6
    1b66:	1ca0                	addi	s0,sp,632
    1b68:	08f9                	addi	a7,a7,30
    1b6a:	4870942b          	0x4870942b
    1b6e:	5868                	lw	a0,116(s0)
    1b70:	19fd458f          	0x19fd458f
    1b74:	de94                	sw	a3,56(a3)
    1b76:	876c                	0x876c
    1b78:	7b52                	flw	fs6,52(sp)
    1b7a:	b7f8                	fsd	fa4,232(a5)
    1b7c:	23d373ab          	0x23d373ab
    1b80:	4b72                	lw	s6,28(sp)
    1b82:	e202                	fsw	ft0,4(sp)
    1b84:	578f1fe3          	bne	t5,s8,2902 <_min_stack+0x902>
    1b88:	5566                	lw	a0,120(sp)
    1b8a:	ebb22aab          	0xebb22aab
    1b8e:	0728                	addi	a0,sp,904
    1b90:	03c2b52f          	0x3c2b52f
    1b94:	c586                	sw	ra,200(sp)
    1b96:	37d39a7b          	0x37d39a7b
    1b9a:	a508                	fsd	fa0,8(a0)
    1b9c:	2830                	fld	fa2,80(s0)
    1b9e:	bf23f287          	0xbf23f287
    1ba2:	b2a5                	j	150a <_exit+0x26>
    1ba4:	0302                	c.slli64	t1
    1ba6:	ba6a                	fsd	fs10,304(sp)
    1ba8:	16ed                	addi	a3,a3,-5
    1baa:	5c82                	lw	s9,32(sp)
    1bac:	cf8a                	sw	sp,220(sp)
    1bae:	2b1c                	fld	fa5,16(a4)
    1bb0:	92b479a7          	0x92b479a7
    1bb4:	f0f207f3          	0xf0f207f3
    1bb8:	694e                	flw	fs2,208(sp)
    1bba:	a1e2                	fsd	fs8,192(sp)
    1bbc:	da65                	beqz	a2,1bac <_aes_decrypt_table+0x200>
    1bbe:	cdf4                	sw	a3,92(a1)
    1bc0:	0506                	slli	a0,a0,0x1
    1bc2:	d5be                	sw	a5,232(sp)
    1bc4:	34d1                	jal	1688 <mtable+0xdc>
    1bc6:	1f62                	slli	t5,t5,0x38
    1bc8:	a6c4                	fsd	fs1,136(a3)
    1bca:	8afe                	mv	s5,t6
    1bcc:	2e34                	fld	fa3,88(a2)
    1bce:	f3a29d53          	0xf3a29d53
    1bd2:	a055                	j	1c76 <_aes_decrypt_table+0x2ca>
    1bd4:	8a05                	andi	a2,a2,1
    1bd6:	32e1                	jal	159e <__CTOR_END__+0x6>
    1bd8:	f6a4                	fsw	fs1,104(a3)
    1bda:	830b75eb          	0x830b75eb
    1bde:	39ec                	fld	fa1,240(a1)
    1be0:	6040                	flw	fs0,4(s0)
    1be2:	715eaaef          	jal	s5,ecaf6 <_stack_start+0xdcaf6>
    1be6:	069f 6ebd 5110      	0x51106ebd069f
    1bec:	213e                	fld	ft2,456(sp)
    1bee:	f98a                	fsw	ft2,240(sp)
    1bf0:	dd96                	sw	t0,248(sp)
    1bf2:	3d06                	fld	fs10,96(sp)
    1bf4:	3edd                	jal	17ea <mtable+0x23e>
    1bf6:	ae05                	j	1f26 <_aes_decrypt_table+0x57a>
    1bf8:	e64d                	bnez	a2,1ca2 <_aes_decrypt_table+0x2f6>
    1bfa:	46bd                	li	a3,15
    1bfc:	5491                	li	s1,-28
    1bfe:	b58d                	j	1a60 <_aes_decrypt_table+0xb4>
    1c00:	c471                	beqz	s0,1ccc <_aes_decrypt_table+0x320>
    1c02:	055d                	addi	a0,a0,23
    1c04:	0604                	addi	s1,sp,768
    1c06:	6fd4                	flw	fa3,28(a5)
    1c08:	5060                	lw	s0,100(s0)
    1c0a:	ff15                	bnez	a4,1b46 <_aes_decrypt_table+0x19a>
    1c0c:	9819                	andi	s0,s0,-26
    1c0e:	bdd624fb          	0xbdd624fb
    1c12:	97e9                	srai	a5,a5,0x3a
    1c14:	4089                	li	ra,2
    1c16:	d967cc43          	fmadd.s	fs8,fa5,fs6,fs11,rmm
    1c1a:	779e                	flw	fa5,228(sp)
    1c1c:	e8b0                	fsw	fa2,80(s1)
    1c1e:	bd42                	fsd	fa6,184(sp)
    1c20:	888b8907          	0x888b8907
    1c24:	385b19e7          	0x385b19e7
    1c28:	c879                	beqz	s0,1cfe <_aes_decrypt_table+0x352>
    1c2a:	dbee                	sw	s11,244(sp)
    1c2c:	7ca1                	lui	s9,0xfffe8
    1c2e:	470a                	lw	a4,128(sp)
    1c30:	427c                	lw	a5,68(a2)
    1c32:	84f8e90f          	0x84f8e90f
    1c36:	c91e                	sw	t2,144(sp)
    1c38:	0000                	unimp
    1c3a:	0000                	unimp
    1c3c:	8009                	srli	s0,s0,0x2
    1c3e:	8386                	mv	t2,ra
    1c40:	2b32                	fld	fs6,264(sp)
    1c42:	48ed                	li	a7,27
    1c44:	111e                	slli	sp,sp,0x27
    1c46:	ac70                	fsd	fa2,216(s0)
    1c48:	5a6c                	lw	a1,116(a2)
    1c4a:	4e72                	lw	t3,28(sp)
    1c4c:	0efd                	addi	t4,t4,31
    1c4e:	fbff                	0xfbff
    1c50:	5638850f          	0x5638850f
    1c54:	ae3d                	j	1f92 <_aes_decrypt_table+0x5e6>
    1c56:	1ed5                	addi	t4,t4,-11
    1c58:	2d36                	fld	fs10,328(sp)
    1c5a:	2739                	jal	2368 <_min_stack+0x368>
    1c5c:	0f0a                	slli	t5,t5,0x2
    1c5e:	64d9                	lui	s1,0x16
    1c60:	5c68                	lw	a0,124(s0)
    1c62:	21a6                	fld	ft3,72(sp)
    1c64:	d1545b9b          	0xd1545b9b
    1c68:	3624                	fld	fs1,104(a2)
    1c6a:	3a2e                	fld	fs4,232(sp)
    1c6c:	0a0c                	addi	a1,sp,272
    1c6e:	5793b167          	0x5793b167
    1c72:	eeb40fe7          	jalr	t6,-277(s0)
    1c76:	d296                	sw	t0,100(sp)
    1c78:	9e919b1b          	0x9e919b1b
    1c7c:	c080                	sw	s0,0(s1)
    1c7e:	4fc5                	li	t6,17
    1c80:	dc61                	beqz	s0,1c58 <_aes_decrypt_table+0x2ac>
    1c82:	a220                	fsd	fs0,64(a2)
    1c84:	775a                	flw	fa4,180(sp)
    1c86:	121c694b          	fnmsub.d	fs2,fs8,ft1,ft2,unknown
    1c8a:	161a                	slli	a2,a2,0x26
    1c8c:	93e2                	add	t2,t2,s8
    1c8e:	0aba                	slli	s5,s5,0xe
    1c90:	a0c0                	fsd	fs0,128(s1)
    1c92:	e52a                	fsw	fa0,136(sp)
    1c94:	223c                	fld	fa5,64(a2)
    1c96:	43e0                	lw	s0,68(a5)
    1c98:	1b12                	slli	s6,s6,0x24
    1c9a:	090e1d17          	auipc	s10,0x90e1
    1c9e:	0b0d                	addi	s6,s6,3
    1ca0:	8bf2                	mv	s7,t3
    1ca2:	b62dadc7          	fmsub.q	fs11,fs11,ft2,fs6,rdn
    1ca6:	b9a8                	fsd	fa0,112(a1)
    1ca8:	1e14                	addi	a3,sp,816
    1caa:	c8a9                	beqz	s1,1cfc <_aes_decrypt_table+0x350>
    1cac:	8519f157          	0x8519f157
    1cb0:	4c0775af          	0x4c0775af
    1cb4:	99ee                	add	s3,s3,s11
    1cb6:	bbdd                	j	1aac <_aes_decrypt_table+0x100>
    1cb8:	fd607fa3          	0xfd607fa3
    1cbc:	9f2601f7          	0x9f2601f7
    1cc0:	725c                	flw	fa5,36(a2)
    1cc2:	bcf5                	j	17be <mtable+0x212>
    1cc4:	6644                	flw	fs1,12(a2)
    1cc6:	fb5bc53b          	0xfb5bc53b
    1cca:	347e                	fld	fs0,504(sp)
    1ccc:	7629438b          	0x7629438b
    1cd0:	dcc623cb          	0xdcc623cb
    1cd4:	edb6                	fsw	fa3,216(sp)
    1cd6:	68fc                	flw	fa5,84(s1)
    1cd8:	e4b8                	fsw	fa4,72(s1)
    1cda:	63f1                	lui	t2,0x1c
    1cdc:	cadc31d7          	0xcadc31d7
    1ce0:	6342                	flw	ft6,16(sp)
    1ce2:	1085                	addi	ra,ra,-31
    1ce4:	40229713          	0x40229713
    1ce8:	c684                	sw	s1,8(a3)
    1cea:	2011                	jal	1cee <_aes_decrypt_table+0x342>
    1cec:	4a85                	li	s5,1
    1cee:	7d24                	flw	fs1,120(a0)
    1cf0:	bbd2                	fsd	fs4,496(sp)
    1cf2:	f83d                	bnez	s0,1c68 <_aes_decrypt_table+0x2bc>
    1cf4:	f9ae                	fsw	fa1,240(sp)
    1cf6:	1132                	slli	sp,sp,0x2c
    1cf8:	6da129c7          	0x6da129c7
    1cfc:	9e1d                	0x9e1d
    1cfe:	b2dc4b2f          	0xb2dc4b2f
    1d02:	f330                	fsw	fa2,96(a4)
    1d04:	860d                	srai	a2,a2,0x3
    1d06:	ec52                	fsw	fs4,24(sp)
    1d08:	d0e3c177          	0xd0e3c177
    1d0c:	6c16b32b          	0x6c16b32b
    1d10:	70a9                	lui	ra,0xfffea
    1d12:	99b9                	andi	a1,a1,-18
    1d14:	9411                	srai	s0,s0,0x24
    1d16:	fa48                	fsw	fa0,52(a2)
    1d18:	2264e947          	fmsub.d	fs2,fs1,ft6,ft4,unknown
    1d1c:	fca8                	fsw	fa0,120(s1)
    1d1e:	c48c                	sw	a1,8(s1)
    1d20:	f0a0                	fsw	fs0,96(s1)
    1d22:	7d561a3f 3322d82c 	0x3322d82c7d561a3f
    1d2a:	ef90                	fsw	fa2,24(a5)
    1d2c:	c74e4987          	flq	fs3,-908(t3)
    1d30:	38d9                	jal	1606 <mtable+0x5a>
    1d32:	c1d1                	beqz	a1,1db6 <_aes_decrypt_table+0x40a>
    1d34:	ca8c                	sw	a1,16(a3)
    1d36:	fea2                	fsw	fs0,124(sp)
    1d38:	d498                	sw	a4,40(s1)
    1d3a:	f5a6360b          	0xf5a6360b
    1d3e:	cf81                	beqz	a5,1d56 <_aes_decrypt_table+0x3aa>
    1d40:	7aa5                	lui	s5,0xfffe9
    1d42:	28de                	fld	fa7,464(sp)
    1d44:	b7da                	fsd	fs6,488(sp)
    1d46:	268e                	fld	fa3,192(sp)
    1d48:	a4bfad3f e49d3a2c 	0xe49d3a2ca4bfad3f
    1d50:	7850                	flw	fa2,52(s0)
    1d52:	0d92                	slli	s11,s11,0x4
    1d54:	5f6a                	lw	t5,184(sp)
    1d56:	9bcc                	0x9bcc
    1d58:	7e54                	flw	fa3,60(a2)
    1d5a:	6246                	flw	ft4,80(sp)
    1d5c:	8df6                	mv	s11,t4
    1d5e:	d890c213          	xori	tp,ra,-631
    1d62:	e8b8                	fsw	fa4,80(s1)
    1d64:	392e                	fld	fs2,232(sp)
    1d66:	c3825ef7          	0xc3825ef7
    1d6a:	5d9ff5af          	0x5d9ff5af
    1d6e:	be80                	fsd	fs0,56(a3)
    1d70:	d069                	beqz	s0,1d32 <_aes_decrypt_table+0x386>
    1d72:	d56f7c93          	andi	s9,t5,-682
    1d76:	a92d                	j	21b0 <_min_stack+0x1b0>
    1d78:	b31225cf          	fnmadd.d	fa1,ft4,fa7,fs6,rdn
    1d7c:	acc8                	fsd	fa0,152(s1)
    1d7e:	3b99                	jal	1ad4 <_aes_decrypt_table+0x128>
    1d80:	1810                	addi	a2,sp,48
    1d82:	a77d                	j	2530 <_min_stack+0x530>
    1d84:	9ce8                	0x9ce8
    1d86:	3bdb6e63          	bltu	s6,t4,2142 <_min_stack+0x142>
    1d8a:	26cd7bbb          	0x26cd7bbb
    1d8e:	0978                	addi	a4,sp,156
    1d90:	596e                	lw	s2,248(sp)
    1d92:	f418                	fsw	fa4,40(s0)
    1d94:	9aec                	0x9aec
    1d96:	4f8301b7          	lui	gp,0x4f830
    1d9a:	a89a                	fsd	ft6,80(sp)
    1d9c:	95e6                	add	a1,a1,s9
    1d9e:	656e                	flw	fa0,216(sp)
    1da0:	ffaa                	fsw	fa0,252(sp)
    1da2:	7ee6                	flw	ft9,120(sp)
    1da4:	bc21                	j	17bc <mtable+0x210>
    1da6:	15ef08cf          	0x15ef08cf
    1daa:	e6e8                	fsw	fa0,76(a3)
    1dac:	e7ba                	fsw	fa4,204(sp)
    1dae:	6f4ad99b          	0x6f4ad99b
    1db2:	ce36                	sw	a3,28(sp)
    1db4:	9fea                	add	t6,t6,s10
    1db6:	d409                	beqz	s0,1cc0 <_aes_decrypt_table+0x314>
    1db8:	b029                	j	15c2 <mtable+0x16>
    1dba:	d67c                	sw	a5,108(a2)
    1dbc:	a431                	j	1fc8 <_aes_decrypt_table+0x61c>
    1dbe:	afb2                	fsd	fa2,472(sp)
    1dc0:	3f2a                	fld	ft10,168(sp)
    1dc2:	a5c63123          	0xa5c63123
    1dc6:	3094                	fld	fa3,32(s1)
    1dc8:	a235                	j	1ef4 <_aes_decrypt_table+0x548>
    1dca:	c066                	sw	s9,0(sp)
    1dcc:	4e74                	lw	a3,92(a2)
    1dce:	37bc                	fld	fa5,104(a5)
    1dd0:	82fc                	0x82fc
    1dd2:	a6ca                	fsd	fs2,328(sp)
    1dd4:	90e0                	0x90e0
    1dd6:	b0d0                	fsd	fa2,160(s1)
    1dd8:	15d8a733          	0x15d8a733
    1ddc:	04f1                	addi	s1,s1,28
    1dde:	4a98                	lw	a4,16(a3)
    1de0:	ec41                	bnez	s0,1e78 <_aes_decrypt_table+0x4cc>
    1de2:	f7da                	fsw	fs6,236(sp)
    1de4:	cd7f                	0xcd7f
    1de6:	0e50                	addi	a2,sp,788
    1de8:	2ff69117          	auipc	sp,0x2ff69
    1dec:	4d76                	lw	s10,92(sp)
    1dee:	8dd6                	mv	s11,s5
    1df0:	4db0ef43          	0x4db0ef43
    1df4:	aacc                	fsd	fa1,144(a3)
    1df6:	544d                	li	s0,-13
    1df8:	96e4                	0x96e4
    1dfa:	df04                	sw	s1,56(a4)
    1dfc:	d19e                	sw	t2,224(sp)
    1dfe:	e3b5                	bnez	a5,1e62 <_aes_decrypt_table+0x4b6>
    1e00:	6a4c                	flw	fa1,20(a2)
    1e02:	1b88                	addi	a0,sp,496
    1e04:	2cc1                	jal	20d4 <_min_stack+0xd4>
    1e06:	b81f 6546 7f51      	0x7f516546b81f
    1e0c:	5e9d                	li	t4,-25
    1e0e:	04ea                	slli	s1,s1,0x1a
    1e10:	8c01                	sub	s0,s0,s0
    1e12:	5d35                	li	s10,-19
    1e14:	87fa                	mv	a5,t5
    1e16:	7374                	flw	fa3,100(a4)
    1e18:	2e410bfb          	0x2e410bfb
    1e1c:	5a1d67b3          	0x5a1d67b3
    1e20:	db92                	sw	tp,244(sp)
    1e22:	52d2                	lw	t0,52(sp)
    1e24:	10e9                	addi	ra,ra,-6
    1e26:	3356                	fld	ft6,368(sp)
    1e28:	d66d                	beqz	a2,1e12 <_aes_decrypt_table+0x466>
    1e2a:	d79a1347          	fmsub.q	ft6,fs4,fs9,fs10,rtz
    1e2e:	8c61                	and	s0,s0,s0
    1e30:	7a0ca137          	lui	sp,0x7a0ca
    1e34:	f859                	bnez	s0,1dca <_aes_decrypt_table+0x41e>
    1e36:	8e14                	0x8e14
    1e38:	893c13eb          	0x893c13eb
    1e3c:	a9ce                	fsd	fs3,208(sp)
    1e3e:	61b7ee27          	0x61b7ee27
    1e42:	35c9                	jal	1d04 <_aes_decrypt_table+0x358>
    1e44:	1ce1                	addi	s9,s9,-8
    1e46:	ede5                	bnez	a1,1f3e <_aes_decrypt_table+0x592>
    1e48:	477a                	lw	a4,156(sp)
    1e4a:	3cb1                	jal	18a6 <mtable+0x2fa>
    1e4c:	d29c                	sw	a5,32(a3)
    1e4e:	59df f255 3f73      	0x3f73f25559df
    1e54:	1418                	addi	a4,sp,544
    1e56:	79ce                	flw	fs3,240(sp)
    1e58:	bf37c773          	0xbf37c773
    1e5c:	eacdf753          	0xeacdf753
    1e60:	fd5f 5baa 3ddf      	0x3ddf5baafd5f
    1e66:	4478146f          	jal	s0,83aac <_stack_start+0x73aac>
    1e6a:	afca86db          	0xafca86db
    1e6e:	68b981f3          	0x68b981f3
    1e72:	3ec4                	fld	fs1,184(a3)
    1e74:	2438                	fld	fa4,72(s0)
    1e76:	2c34                	fld	fa3,88(s0)
    1e78:	a3c2                	fsd	fa6,448(sp)
    1e7a:	5f40                	lw	s0,60(a4)
    1e7c:	1d16                	slli	s10,s10,0x25
    1e7e:	e2bc72c3          	fmadd.d	ft5,fs8,fa1,ft8
    1e82:	0c25                	addi	s8,s8,9
    1e84:	3c28                	fld	fa0,120(s0)
    1e86:	8b49                	andi	a4,a4,18
    1e88:	0dff                	0xdff
    1e8a:	4195                	li	gp,5
    1e8c:	a839                	j	1eaa <_aes_decrypt_table+0x4fe>
    1e8e:	7101                	addi	sp,sp,-512
    1e90:	0c08                	addi	a0,sp,528
    1e92:	b4d8deb3          	0xb4d8deb3
    1e96:	9ce4                	0x9ce4
    1e98:	5664                	lw	s1,108(a2)
    1e9a:	90c1                	srli	s1,s1,0x30
    1e9c:	6184cb7b          	0x6184cb7b
    1ea0:	32d5                	jal	1884 <mtable+0x2d8>
    1ea2:	70b6                	flw	ft1,108(sp)
    1ea4:	6c48                	flw	fa0,28(s0)
    1ea6:	745c                	flw	fa5,44(s0)
    1ea8:	b8d0                	fsd	fa2,176(s1)
    1eaa:	51504257          	0x51504257
    1eae:	a7f4                	fsd	fa3,200(a5)
    1eb0:	65417e53          	0x65417e53
    1eb4:	a4171ac3          	0xa4171ac3
    1eb8:	3a96                	fld	fs5,352(sp)
    1eba:	3bcb5e27          	0x3bcb5e27
    1ebe:	1ff16bab          	0x1ff16bab
    1ec2:	459d                	li	a1,7
    1ec4:	58faacab          	0x58faacab
    1ec8:	03e34b93          	xori	s7,t1,62
    1ecc:	2055                	jal	1f70 <_aes_decrypt_table+0x5c4>
    1ece:	fa30                	fsw	fa2,112(a2)
    1ed0:	adf6                	fsd	ft9,216(sp)
    1ed2:	6d76                	flw	fs10,92(sp)
    1ed4:	8891                	andi	s1,s1,4
    1ed6:	76cc                	flw	fa1,44(a3)
    1ed8:	f525                	bnez	a0,1e40 <_aes_decrypt_table+0x494>
    1eda:	4c02                	lw	s8,0(sp)
    1edc:	4ffc                	lw	a5,92(a5)
    1ede:	d7e5                	beqz	a5,1ec6 <_aes_decrypt_table+0x51a>
    1ee0:	cb2ac5d7          	0xcb2ac5d7
    1ee4:	2680                	fld	fs0,8(a3)
    1ee6:	4435                	li	s0,13
    1ee8:	a362b58f          	0xa362b58f
    1eec:	de49                	beqz	a2,1e86 <_aes_decrypt_table+0x4da>
    1eee:	5ab1                	li	s5,-20
    1ef0:	1bba2567          	0x1bba2567
    1ef4:	4598                	lw	a4,8(a1)
    1ef6:	0eea                	slli	t4,t4,0x1a
    1ef8:	5de1                	li	s11,-8
    1efa:	c0fe                	sw	t6,64(sp)
    1efc:	c302                	sw	zero,132(sp)
    1efe:	8112752f          	0x8112752f
    1f02:	f04c                	fsw	fa1,36(s0)
    1f04:	97468da3          	sb	s4,-1669(a3) # fffea97b <_stack_start+0xfffda97b>
    1f08:	6bc6                	flw	fs7,80(sp)
    1f0a:	03e7f9d3          	fadd.d	fs3,fa5,ft10
    1f0e:	15955f8f          	0x15955f8f
    1f12:	9c92                	add	s9,s9,tp
    1f14:	7a6dbfeb          	0x7a6dbfeb
    1f18:	95da                	add	a1,a1,s6
    1f1a:	5952                	lw	s2,52(sp)
    1f1c:	d42d                	beqz	s0,1e86 <_aes_decrypt_table+0x4da>
    1f1e:	83be                	mv	t2,a5
    1f20:	217458d3          	0x217458d3
    1f24:	4929                	li	s2,10
    1f26:	69e0                	flw	fs0,84(a1)
    1f28:	8e44                	0x8e44
    1f2a:	c8c9                	beqz	s1,1fbc <_aes_decrypt_table+0x610>
    1f2c:	756a                	flw	fa0,184(sp)
    1f2e:	89c2                	mv	s3,a6
    1f30:	f478                	fsw	fa4,108(s0)
    1f32:	798e                	flw	fs3,224(sp)
    1f34:	3e58996b          	0x3e58996b
    1f38:	27dd                	jal	271e <_min_stack+0x71e>
    1f3a:	71b9                	lui	gp,0xfffee
    1f3c:	beb6                	fsd	fa3,376(sp)
    1f3e:	4fe1                	li	t6,24
    1f40:	ad88f017          	auipc	zero,0xad88f
    1f44:	c966                	sw	s9,144(sp)
    1f46:	ac20                	fsd	fs0,88(s0)
    1f48:	7db4                	flw	fa3,120(a1)
    1f4a:	3ace                	fld	fs5,240(sp)
    1f4c:	6318                	flw	fa4,0(a4)
    1f4e:	4adf e582 311a      	0x311ae5824adf
    1f54:	9760                	0x9760
    1f56:	3351                	jal	1cda <_aes_decrypt_table+0x32e>
    1f58:	6245                	lui	tp,0x11
    1f5a:	b1e07f53          	0xb1e07f53
    1f5e:	7764                	flw	fs1,108(a4)
    1f60:	bb84                	fsd	fs1,48(a5)
    1f62:	fe1cae6b          	0xfe1cae6b
    1f66:	a081                	j	1fa6 <_aes_decrypt_table+0x5fa>
    1f68:	f994                	fsw	fa3,48(a1)
    1f6a:	2b08                	fld	fa0,16(a4)
    1f6c:	7058                	flw	fa4,36(s0)
    1f6e:	6848                	flw	fa0,20(s0)
    1f70:	8f19                	sub	a4,a4,a4
    1f72:	fd45                	bnez	a0,1f2a <_aes_decrypt_table+0x57e>
    1f74:	6cde9487          	0x6cde9487
    1f78:	f87b52b7          	lui	t0,0xf87b5
    1f7c:	d373ab23          	sw	s7,-714(t2) # 1bd36 <_stack_start+0xbd36>
    1f80:	72e2                	flw	ft5,56(sp)
    1f82:	e357024b          	fnmsub.d	ft4,fa4,fs5,ft8,rne
    1f86:	8f1f 662a ab55      	0xab55662a8f1f
    1f8c:	28ebb207          	fld	ft4,654(s7)
    1f90:	c2b52f03          	lw	t5,-981(a0) # 16c2b <_stack_start+0x6c2b>
    1f94:	869a                	mv	a3,t1
    1f96:	7bc5                	lui	s7,0xffff1
    1f98:	d3a5                	beqz	a5,1ef8 <_aes_decrypt_table+0x54c>
    1f9a:	30f20837          	lui	a6,0x30f20
    1f9e:	8728                	0x8728
    1fa0:	23b2                	fld	ft7,264(sp)
    1fa2:	02baa5bf ed5c6a03 	0xed5c6a0302baa5bf
    1faa:	8216                	mv	tp,t0
    1fac:	1ccf8a2b          	0x1ccf8a2b
    1fb0:	a792                	fsd	ft4,456(sp)
    1fb2:	b479                	j	1a40 <_aes_decrypt_table+0x94>
    1fb4:	f3f0                	fsw	fa2,100(a5)
    1fb6:	4ea1f207          	0x4ea1f207
    1fba:	e269                	bnez	a2,207c <_min_stack+0x7c>
    1fbc:	65cd                	lui	a1,0x13
    1fbe:	f4da                	fsw	fs6,104(sp)
    1fc0:	06d5                	addi	a3,a3,21
    1fc2:	be05                	j	1af2 <_aes_decrypt_table+0x146>
    1fc4:	d11f 6234 c48a      	0xc48a6234d11f
    1fca:	fea6                	fsw	fs1,124(sp)
    1fcc:	349d                	jal	1a32 <_aes_decrypt_table+0x86>
    1fce:	532e                	lw	t1,232(sp)
    1fd0:	a2a0                	fsd	fs0,64(a3)
    1fd2:	053255f3          	csrrwi	a1,0x53,4
    1fd6:	e18a                	fsw	ft2,192(sp)
    1fd8:	a475                	j	2284 <_min_stack+0x284>
    1fda:	ebf6                	fsw	ft9,212(sp)
    1fdc:	0b39                	addi	s6,s6,14
    1fde:	40aaec83          	0x40aaec83
    1fe2:	ef60                	fsw	fs0,92(a4)
    1fe4:	5e06                	lw	t3,96(sp)
    1fe6:	9f71                	0x9f71
    1fe8:	bd51                	j	1e7c <_aes_decrypt_table+0x4d0>
    1fea:	106e                	c.slli	zero,0x3b
    1fec:	3ef9                	jal	1bca <_aes_decrypt_table+0x21e>
    1fee:	8a21                	andi	a2,a2,8
    1ff0:	963d                	srai	a2,a2,0x2f
    1ff2:	06dd                	addi	a3,a3,23
    1ff4:	ddae                	sw	a1,248(sp)
    1ff6:	053e                	slli	a0,a0,0xf
    1ff8:	4d46                	lw	s10,80(sp)
    1ffa:	bde6                	fsd	fs9,248(sp)
    1ffc:	91b5                	srli	a1,a1,0x2d
    1ffe:	8d54                	0x8d54
    2000:	7105                	addi	sp,sp,-480
    2002:	5dc4                	lw	s1,60(a1)
    2004:	d406046f          	jal	s0,fff62544 <_stack_start+0xfff52544>
    2008:	60ff                	0x60ff
    200a:	1550                	addi	a2,sp,676
    200c:	1924                	addi	s1,sp,184
    200e:	fb98                	fsw	fa4,48(a5)
    2010:	e9bdd697          	auipc	a3,0xe9bdd
    2014:	89cc                	0x89cc
    2016:	4340                	lw	s0,4(a4)
    2018:	9ed96777          	0x9ed96777
    201c:	b0bd                	j	188a <mtable+0x2de>
    201e:	42e8                	lw	a0,68(a3)
    2020:	0788                	addi	a0,sp,960
    2022:	8b89                	andi	a5,a5,2
    2024:	e738                	fsw	fa4,72(a4)
    2026:	5b19                	li	s6,-26
    2028:	eec879db          	0xeec879db
    202c:	0a7ca147          	fmsub.d	ft2,fs9,ft7,ft1,rdn
    2030:	7ce9                	lui	s9,0xffffa
    2032:	0f42                	slli	t5,t5,0x10
    2034:	f8c9                	bnez	s1,1fc6 <_aes_decrypt_table+0x61a>
    2036:	1e84                	addi	s1,sp,880
    2038:	0000                	unimp
    203a:	0000                	unimp
    203c:	86800983          	lb	s3,-1944(zero) # fffff868 <_stack_start+0xfffef868>
    2040:	3248                	fld	fa0,160(a2)
    2042:	1eaced2b          	0x1eaced2b
    2046:	7011                	c.lui	zero,0xfffe4
    2048:	6c4e                	flw	fs8,208(sp)
    204a:	725a                	flw	ft4,180(sp)
    204c:	ff0efdfb          	0xff0efdfb
    2050:	0f56                	slli	t5,t5,0x15
    2052:	3885                	jal	18c2 <mtable+0x316>
    2054:	3d1e                	fld	fs10,480(sp)
    2056:	d5ae                	sw	a1,232(sp)
    2058:	392d3627          	fsd	fs2,908(s10) # 90e3026 <_stack_start+0x90d3026>
    205c:	0a64                	addi	s1,sp,284
    205e:	6821d90f          	0x6821d90f
    2062:	a65c                	fsd	fa5,136(a2)
    2064:	9bd1                	andi	a5,a5,-12
    2066:	243a545b          	0x243a545b
    206a:	2e36                	fld	ft8,328(sp)
    206c:	0cb1                	addi	s9,s9,12
    206e:	670a                	flw	fa4,128(sp)
    2070:	e757930f          	0xe757930f
    2074:	b4d2                	fsd	fs4,104(sp)
    2076:	96ee                	add	a3,a3,s11
    2078:	1b9e                	slli	s7,s7,0x27
    207a:	804f919b          	0x804f919b
    207e:	c5c0                	sw	s0,12(a1)
    2080:	61a2                	flw	ft3,8(sp)
    2082:	20dc                	fld	fa5,128(s1)
    2084:	5a69                	li	s4,-6
    2086:	1c164b77          	0x1c164b77
    208a:	1a12                	slli	s4,s4,0x24
    208c:	e20a                	fsw	ft2,4(sp)
    208e:	c0e5ba93          	sltiu	s5,a1,-1010
    2092:	2aa0                	fld	fs0,80(a3)
    2094:	e0223c43          	fmadd.s	fs8,ft4,ft2,ft8,rup
    2098:	121d                	addi	tp,tp,-25
    209a:	0e0b171b          	0xe0b171b
    209e:	0d09                	addi	s10,s10,2
    20a0:	f2ad                	bnez	a3,2002 <_min_stack+0x2>
    20a2:	2db9c78b          	0x2db9c78b
    20a6:	a8b6                	fsd	fa3,80(sp)
    20a8:	14c8                	addi	a0,sp,612
    20aa:	a91e                	fsd	ft7,144(sp)
    20ac:	5785                	li	a5,-31
    20ae:	19f1                	addi	s3,s3,-4
    20b0:	af4c                	fsd	fa1,152(a4)
    20b2:	0775                	addi	a4,a4,29
    20b4:	dd99eebb          	0xdd99eebb
    20b8:	a3fd                	j	26a6 <_min_stack+0x6a6>
    20ba:	607f                	0x607f
    20bc:	f79f 2601 5cbc      	0x5cbc2601f79f
    20c2:	f572                	fsw	ft8,168(sp)
    20c4:	44c5                	li	s1,17
    20c6:	3b66                	fld	fs6,120(sp)
    20c8:	5b34                	lw	a3,112(a4)
    20ca:	8b767efb          	0x8b767efb
    20ce:	cbdc2943          	fmadd.d	fs2,fs8,ft9,fs9,rdn
    20d2:	b668c623          	0xb668c623
    20d6:	fced                	bnez	s1,20d0 <_min_stack+0xd0>
    20d8:	f1e4b863          	0xf1e4b863
    20dc:	d7ca                	sw	s2,236(sp)
    20de:	dc31                	beqz	s0,203a <_min_stack+0x3a>
    20e0:	4210                	lw	a2,0(a2)
    20e2:	13408563          	beq	ra,s4,220c <_min_stack+0x20c>
    20e6:	84202297          	auipc	t0,0x84202
    20ea:	11c6                	slli	gp,gp,0x31
    20ec:	857d                	srai	a0,a0,0x1f
    20ee:	244a                	fld	fs0,144(sp)
    20f0:	d2f8                	sw	a4,100(a3)
    20f2:	ae113dbb          	0xae113dbb
    20f6:	32f9                	jal	1ac4 <_aes_decrypt_table+0x118>
    20f8:	c76d                	beqz	a4,21e2 <_min_stack+0x1e2>
    20fa:	a129                	j	2504 <_min_stack+0x504>
    20fc:	2f9e1d4b          	fnmsub.q	fs10,ft8,fs9,ft5,rtz
    2100:	30b2dcf3          	csrrwi	s9,0x30b,5
    2104:	0dec                	addi	a1,sp,732
    2106:	5286                	lw	t0,96(sp)
    2108:	77d0                	flw	fa2,44(a5)
    210a:	e3c1                	bnez	a5,218a <_min_stack+0x18a>
    210c:	2b6c                	fld	fa1,208(a4)
    210e:	a99916b3          	0xa99916b3
    2112:	b970                	fsd	fa2,240(a0)
    2114:	11fa                	slli	gp,gp,0x3e
    2116:	4894                	lw	a3,16(s1)
    2118:	4722                	lw	a4,8(sp)
    211a:	64e9                	lui	s1,0x1a
    211c:	a8c4                	fsd	fs1,144(s1)
    211e:	8cfc                	0x8cfc
    2120:	a01a                	fsd	ft6,0(sp)
    2122:	3ff0                	fld	fa2,248(a5)
    2124:	56d8                	lw	a4,44(a3)
    2126:	2c7d                	jal	23e4 <_min_stack+0x3e4>
    2128:	903322ef          	jal	t0,fff34a2a <_stack_start+0xfff24a2a>
    212c:	4e4987c7          	fmsub.q	fa5,fs3,ft4,fs1,rne
    2130:	d9c1                	beqz	a1,20c0 <_min_stack+0xc0>
    2132:	d138                	sw	a4,96(a0)
    2134:	8cfe                	mv	s9,t6
    2136:	a2ca                	fsd	fs2,320(sp)
    2138:	9836                	add	a6,a6,a3
    213a:	0bd4                	addi	a3,sp,468
    213c:	81f5a6cf          	fnmadd.s	fa3,fa1,ft11,fa6,rdn
    2140:	a528                	fsd	fa0,72(a0)
    2142:	de7a                	sw	t5,60(sp)
    2144:	da26                	sw	s1,52(sp)
    2146:	3fa48eb7          	lui	t4,0x3fa48
    214a:	bfad                	j	20c4 <_min_stack+0xc4>
    214c:	2ce4                	fld	fs1,216(s1)
    214e:	9d3a                	add	s10,s10,a4
    2150:	500d                	c.li	zero,-29
    2152:	9278                	0x9278
    2154:	cc5f6a9b          	0xcc5f6a9b
    2158:	5462                	lw	s0,56(sp)
    215a:	467e                	lw	a2,220(sp)
    215c:	f6c2                	fsw	fa6,108(sp)
    215e:	138d                	addi	t2,t2,-29
    2160:	90e8                	0x90e8
    2162:	b8d8                	fsd	fa4,176(s1)
    2164:	2e5e                	fld	ft8,464(sp)
    2166:	f739                	bnez	a4,20b4 <_min_stack+0xb4>
    2168:	82f5                	srli	a3,a3,0x1d
    216a:	9fbeafc3          	fmadd.q	ft11,ft9,fs11,fs3,rdn
    216e:	805d                	srli	s0,s0,0x17
    2170:	697c                	flw	fa5,84(a0)
    2172:	93d0                	0x93d0
    2174:	6fa9                	lui	t6,0xa
    2176:	2dd5                	jal	286a <_min_stack+0x86a>
    2178:	1225cfb3          	0x1225cfb3
    217c:	99acc83b          	0x99acc83b
    2180:	7d1810a7          	0x7d1810a7
    2184:	e86e                	fsw	fs11,16(sp)
    2186:	639c                	flw	fa5,0(a5)
    2188:	bb3bdb7b          	0xbb3bdb7b
    218c:	cd09                	beqz	a0,21a6 <_min_stack+0x1a6>
    218e:	7826                	flw	fa6,104(sp)
    2190:	6ef4                	flw	fa3,92(a3)
    2192:	1859                	addi	a6,a6,-10
    2194:	ec01                	bnez	s0,21ac <_min_stack+0x1ac>
    2196:	b79a                	fsd	ft6,488(sp)
    2198:	83a8                	0x83a8
    219a:	e6659a4f          	fnmadd.q	fs4,fa1,ft6,ft8,rtz
    219e:	6e95                	lui	t4,0x5
    21a0:	aa7e                	fsd	ft11,272(sp)
    21a2:	e6ff                	0xe6ff
    21a4:	2108                	fld	fa0,0(a0)
    21a6:	cfbc                	sw	a5,88(a5)
    21a8:	efe6                	fsw	fs9,220(sp)
    21aa:	e815                	bnez	s0,21de <_min_stack+0x1de>
    21ac:	bad9                	j	1b82 <_aes_decrypt_table+0x1d6>
    21ae:	4ace9be7          	0x4ace9be7
    21b2:	ead4366f          	jal	a2,fff4605e <_stack_start+0xfff3605e>
    21b6:	099f 29d6 7cb0      	0x7cb029d6099f
    21bc:	b2a431af          	0xb2a431af
    21c0:	2a31                	jal	22dc <_min_stack+0x2dc>
    21c2:	c630233f 35c094a5 	0x35c094a5c630233f
    21ca:	66a2                	flw	fa3,8(sp)
    21cc:	bc4e7437          	lui	s0,0xbc4e7
    21d0:	fca6                	fsw	fs1,120(sp)
    21d2:	ca82                	sw	zero,84(sp)
    21d4:	e0b0                	fsw	fa2,64(s1)
    21d6:	d090                	sw	a2,32(s1)
    21d8:	3315                	jal	1efc <_aes_decrypt_table+0x550>
    21da:	f14ad8a7          	0xf14ad8a7
    21de:	9804                	0x9804
    21e0:	daec41f7          	0xdaec41f7
    21e4:	7f0e                	flw	ft10,224(sp)
    21e6:	50cd                	li	ra,-13
    21e8:	f691172f          	0xf691172f
    21ec:	768d                	lui	a3,0xfffe3
    21ee:	d64d                	beqz	a2,2198 <_min_stack+0x198>
    21f0:	434d                	li	t1,19
    21f2:	cc54b0ef          	jal	ra,fff4deb6 <_stack_start+0xfff3deb6>
    21f6:	4daa                	lw	s11,136(sp)
    21f8:	e4df 0496 9ee3      	0x9ee30496e4df
    21fe:	b5d1                	j	20c2 <_min_stack+0xc2>
    2200:	886a4c1b          	0x886a4c1b
    2204:	c1b8                	sw	a4,64(a1)
    2206:	1f2c                	addi	a1,sp,952
    2208:	467f                	0x467f
    220a:	5165                	li	sp,-7
    220c:	9d04                	0x9d04
    220e:	ea5e                	fsw	fs7,20(sp)
    2210:	015d                	addi	sp,sp,23
    2212:	358c                	fld	fa1,40(a1)
    2214:	7487fa73          	csrrci	s4,0x748,15
    2218:	fb2e                	fsw	fa1,180(sp)
    221a:	b35a410b          	0xb35a410b
    221e:	92521d67          	0x92521d67
    2222:	e933d2db          	0xe933d2db
    2226:	5610                	lw	a2,40(a2)
    2228:	47d66d13          	ori	s10,a2,1149
    222c:	9a8c                	0x9a8c
    222e:	377a61d7          	0x377a61d7
    2232:	0ca1                	addi	s9,s9,8
    2234:	598e                	lw	s3,224(sp)
    2236:	14f8                	addi	a4,sp,620
    2238:	eb89                	bnez	a5,224a <_min_stack+0x24a>
    223a:	ceee3c13          	sltiu	s8,t3,-786
    223e:	27a9                	jal	2988 <_min_stack+0x988>
    2240:	b735                	j	216c <_min_stack+0x16c>
    2242:	c961                	beqz	a0,2312 <_min_stack+0x312>
    2244:	e1ed                	bnez	a1,2326 <_min_stack+0x326>
    2246:	e51c                	fsw	fa5,8(a0)
    2248:	7a3c                	flw	fa5,112(a2)
    224a:	9c59b147          	0x9c59b147
    224e:	dfd2                	sw	s4,252(sp)
    2250:	73f2553f ce141879 	0xce14187973f2553f
    2258:	37c773bf cdf753ea 	0xcdf753ea37c773bf
    2260:	aafd5f5b          	0xaafd5f5b
    2264:	df14                	sw	a3,56(a4)
    2266:	6f3d                	lui	t5,0xf
    2268:	7886                	flw	fa7,96(sp)
    226a:	db44                	sw	s1,52(a4)
    226c:	ca81                	beqz	a3,227c <_min_stack+0x27c>
    226e:	b93ef3af          	0xb93ef3af
    2272:	c468                	sw	a0,76(s0)
    2274:	382c                	fld	fa1,112(s0)
    2276:	3424                	fld	fs1,104(s0)
    2278:	c25f 40a3 1672      	0x167240a3c25f
    227e:	c31d                	beqz	a4,22a4 <_min_stack+0x2a4>
    2280:	bc0c                	fsd	fa1,56(s0)
    2282:	25e2                	fld	fa1,24(sp)
    2284:	493c288b          	0x493c288b
    2288:	ff41                	bnez	a4,2220 <_min_stack+0x220>
    228a:	950d                	srai	a0,a0,0x23
    228c:	3971                	jal	1f28 <_aes_decrypt_table+0x57c>
    228e:	01a8                	addi	a0,sp,200
    2290:	08de                	slli	a7,a7,0x17
    2292:	b30c                	fsd	fa1,32(a4)
    2294:	d89c                	sw	a5,48(s1)
    2296:	e4b4                	fsw	fa3,72(s1)
    2298:	6490                	flw	fa2,8(s1)
    229a:	c156                	sw	s5,128(sp)
    229c:	7b61                	lui	s6,0xffff8
    229e:	d57084cb          	0xd57084cb
    22a2:	b632                	fsd	fa2,296(sp)
    22a4:	4874                	lw	a3,84(s0)
    22a6:	5c6c                	lw	a1,124(s0)
    22a8:	d042                	sw	a6,32(sp)
    22aa:	57b8                	lw	a4,104(a5)
    22ac:	f45150a7          	0xf45150a7
    22b0:	5365                	li	t1,-7
    22b2:	417e                	lw	sp,220(sp)
    22b4:	c3a4                	sw	s1,64(a5)
    22b6:	171a                	slli	a4,a4,0x26
    22b8:	965e                	add	a2,a2,s7
    22ba:	273a                	fld	fa4,392(sp)
    22bc:	ab3bcb6b          	0xab3bcb6b
    22c0:	f145                	bnez	a0,2260 <_min_stack+0x260>
    22c2:	9d1f ab58 faac      	0xfaacab589d1f
    22c8:	e34b9303          	lh	t1,-460(s7) # ffff0e34 <_stack_start+0xfffe0e34>
    22cc:	55fa                	lw	a1,188(sp)
    22ce:	3020                	fld	fs0,96(s0)
    22d0:	f66d                	bnez	a2,22ba <_min_stack+0x2ba>
    22d2:	76ad                	lui	a3,0xfffeb
    22d4:	9176                	add	sp,sp,t4
    22d6:	cc88                	sw	a0,24(s1)
    22d8:	254c                	fld	fa1,136(a0)
    22da:	02f5                	addi	t0,t0,29
    22dc:	e54ffcd7          	0xe54ffcd7
    22e0:	2ac5d7cb          	fnmsub.d	fa5,fa1,fa2,ft5,unknown
    22e4:	8044                	0x8044
    22e6:	3526                	fld	fa0,104(sp)
    22e8:	62b58fa3          	sb	a1,1599(a1) # 1363f <_stack_start+0x363f>
    22ec:	495a                	lw	s2,148(sp)
    22ee:	b1de                	fsd	fs7,224(sp)
    22f0:	ba25671b          	0xba25671b
    22f4:	980e                	add	a6,a6,gp
    22f6:	ea45                	bnez	a2,23a6 <_min_stack+0x3a6>
    22f8:	e1c0                	fsw	fs0,4(a1)
    22fa:	fe5d                	bnez	a2,22b8 <_min_stack+0x2b8>
    22fc:	0275                	addi	tp,tp,29
    22fe:	12f02fc3          	fmadd.d	ft11,ft0,fa5,ft2,rdn
    2302:	4c81                	li	s9,0
    2304:	468da397          	auipc	t2,0x468da
    2308:	c6f9                	beqz	a3,23d6 <_min_stack+0x3d6>
    230a:	e75fd36b          	0xe75fd36b
    230e:	959c8f03          	lb	t5,-1703(s9) # ffff9959 <_stack_start+0xfffe9959>
    2312:	9215                	srli	a2,a2,0x25
    2314:	eb7a                	fsw	ft10,148(sp)
    2316:	da596dbf 2d835295 	0x2d835295da596dbf
    231e:	bed4                	fsd	fa3,184(a3)
    2320:	d321                	beqz	a4,2260 <_min_stack+0x260>
    2322:	7458                	flw	fa4,44(s0)
    2324:	2969                	jal	27be <_min_stack+0x7be>
    2326:	e049                	bnez	s0,23a8 <_min_stack+0x3a8>
    2328:	44c8                	lw	a0,12(s1)
    232a:	c98e                	sw	gp,208(sp)
    232c:	6a89                	lui	s5,0x2
    232e:	c275                	beqz	a2,2412 <_min_stack+0x412>
    2330:	7879                	lui	a6,0xffffe
    2332:	8ef4                	0x8ef4
    2334:	6b3e                	flw	fs6,204(sp)
    2336:	5899                	li	a7,-26
    2338:	dd71                	beqz	a0,2314 <_min_stack+0x314>
    233a:	b64fb927          	fsd	ft4,-1166(t6) # 9b72 <_bss_end+0x557a>
    233e:	e1be                	fsw	fa5,192(sp)
    2340:	17ad                	addi	a5,a5,-21
    2342:	88f0                	0x88f0
    2344:	66ac                	flw	fa1,72(a3)
    2346:	20c9                	jal	2408 <_min_stack+0x408>
    2348:	b43a                	fsd	fa4,40(sp)
    234a:	ce7d                	beqz	a2,2448 <_min_stack+0x448>
    234c:	184a                	slli	a6,a6,0x32
    234e:	8231df63          	bge	gp,gp,138c <__call_exitprocs+0xdc>
    2352:	1ae5                	addi	s5,s5,-7
    2354:	51976033          	0x51976033
    2358:	457f                	0x457f
    235a:	5362                	lw	t1,56(sp)
    235c:	64b1e077          	0x64b1e077
    2360:	84ae                	mv	s1,a1
    2362:	1ca06bbb          	0x1ca06bbb
    2366:	81fe                	mv	gp,t6
    2368:	08f9942b          	0x8f9942b
    236c:	5868                	lw	a0,116(s0)
    236e:	4870                	lw	a2,84(s0)
    2370:	19fd                	addi	s3,s3,-1
    2372:	876c458f          	0x876c458f
    2376:	de94                	sw	a3,56(a3)
    2378:	b7f8                	fsd	fa4,232(a5)
    237a:	7b52                	flw	fs6,52(sp)
    237c:	73ab23d3          	0x73ab23d3
    2380:	e202                	fsw	ft0,4(sp)
    2382:	4b72                	lw	s6,28(sp)
    2384:	1fe3578f          	0x1fe3578f
    2388:	55662aab          	0x55662aab
    238c:	0728                	addi	a0,sp,904
    238e:	ebb2                	fsw	fa2,212(sp)
    2390:	03c2                	slli	t2,t2,0x10
    2392:	9a7bb52f          	0x9a7bb52f
    2396:	c586                	sw	ra,200(sp)
    2398:	a508                	fsd	fa0,8(a0)
    239a:	f28737d3          	0xf28737d3
    239e:	2830                	fld	fa2,80(s0)
    23a0:	b2a5                	j	1d08 <_aes_decrypt_table+0x35c>
    23a2:	ba6abf23          	0xba6abf23
    23a6:	0302                	c.slli64	t1
    23a8:	5c82                	lw	s9,32(sp)
    23aa:	16ed                	addi	a3,a3,-5
    23ac:	2b1c                	fld	fa5,16(a4)
    23ae:	cf8a                	sw	sp,220(sp)
    23b0:	92b4                	0x92b4
    23b2:	f0f279a7          	0xf0f279a7
    23b6:	a1e207f3          	0xa1e207f3
    23ba:	694e                	flw	fs2,208(sp)
    23bc:	cdf4                	sw	a3,92(a1)
    23be:	da65                	beqz	a2,23ae <_min_stack+0x3ae>
    23c0:	d5be                	sw	a5,232(sp)
    23c2:	0506                	slli	a0,a0,0x1
    23c4:	1f62                	slli	t5,t5,0x38
    23c6:	34d1                	jal	1e8a <_aes_decrypt_table+0x4de>
    23c8:	8afe                	mv	s5,t6
    23ca:	a6c4                	fsd	fs1,136(a3)
    23cc:	2e349d53          	fmax.q	fs10,fs1,ft3
    23d0:	a055                	j	2474 <_min_stack+0x474>
    23d2:	f3a2                	fsw	fs0,228(sp)
    23d4:	32e1                	jal	1d9c <_aes_decrypt_table+0x3f0>
    23d6:	8a05                	andi	a2,a2,1
    23d8:	f6a475eb          	0xf6a475eb
    23dc:	39ec                	fld	fa1,240(a1)
    23de:	aaef830b          	0xaaef830b
    23e2:	6040                	flw	fs0,4(s0)
    23e4:	069f 715e 5110      	0x5110715e069f
    23ea:	6ebd                	lui	t4,0xf
    23ec:	f98a                	fsw	ft2,240(sp)
    23ee:	213e                	fld	ft2,456(sp)
    23f0:	3d06                	fld	fs10,96(sp)
    23f2:	dd96                	sw	t0,248(sp)
    23f4:	ae05                	j	2724 <_min_stack+0x724>
    23f6:	3edd                	jal	1fec <_aes_decrypt_table+0x640>
    23f8:	46bd                	li	a3,15
    23fa:	e64d                	bnez	a2,24a4 <_min_stack+0x4a4>
    23fc:	b58d                	j	225e <_min_stack+0x25e>
    23fe:	5491                	li	s1,-28
    2400:	055d                	addi	a0,a0,23
    2402:	c471                	beqz	s0,24ce <_min_stack+0x4ce>
    2404:	6fd4                	flw	fa3,28(a5)
    2406:	0604                	addi	s1,sp,768
    2408:	ff15                	bnez	a4,2344 <_min_stack+0x344>
    240a:	5060                	lw	s0,100(s0)
    240c:	981924fb          	0x981924fb
    2410:	97e9                	srai	a5,a5,0x3a
    2412:	bdd6                	fsd	fs5,248(sp)
    2414:	4089cc43          	fmadd.s	fs8,fs3,fs0,fs0,rmm
    2418:	779e                	flw	fa5,228(sp)
    241a:	bd42d967          	0xbd42d967
    241e:	e8b0                	fsw	fa2,80(s1)
    2420:	8907888b          	0x8907888b
    2424:	19e7385b          	0x19e7385b
    2428:	dbee                	sw	s11,244(sp)
    242a:	c879                	beqz	s0,2500 <_min_stack+0x500>
    242c:	470a                	lw	a4,128(sp)
    242e:	7ca1                	lui	s9,0xfffe8
    2430:	427ce90f          	0x427ce90f
    2434:	c91e                	sw	t2,144(sp)
    2436:	84f8                	0x84f8
    2438:	0000                	unimp
    243a:	0000                	unimp
    243c:	8386                	mv	t2,ra
    243e:	8009                	srli	s0,s0,0x2
    2440:	48ed                	li	a7,27
    2442:	2b32                	fld	fs6,264(sp)
    2444:	ac70                	fsd	fa2,216(s0)
    2446:	111e                	slli	sp,sp,0x27
    2448:	4e72                	lw	t3,28(sp)
    244a:	5a6c                	lw	a1,116(a2)
    244c:	fbff                	0xfbff
    244e:	0efd                	addi	t4,t4,31
    2450:	5638                	lw	a4,104(a2)
    2452:	1ed5850f          	0x1ed5850f
    2456:	ae3d                	j	2794 <_min_stack+0x794>
    2458:	2739                	jal	2b66 <_aes_encrypt_table+0xba>
    245a:	2d36                	fld	fs10,328(sp)
    245c:	64d9                	lui	s1,0x16
    245e:	0f0a                	slli	t5,t5,0x2
    2460:	21a6                	fld	ft3,72(sp)
    2462:	5c68                	lw	a0,124(s0)
    2464:	d154                	sw	a3,36(a0)
    2466:	3a2e5b9b          	0x3a2e5b9b
    246a:	3624                	fld	fs1,104(a2)
    246c:	0a0cb167          	0xa0cb167
    2470:	57930fe7          	jalr	t6,1401(t1)
    2474:	d296                	sw	t0,100(sp)
    2476:	eeb4                	fsw	fa3,88(a3)
    2478:	9e91                	0x9e91
    247a:	4fc59b1b          	0x4fc59b1b
    247e:	c080                	sw	s0,0(s1)
    2480:	a220                	fsd	fs0,64(a2)
    2482:	dc61                	beqz	s0,245a <_min_stack+0x45a>
    2484:	775a694b          	fnmsub.q	fs2,fs4,fs5,fa4,unknown
    2488:	161a                	slli	a2,a2,0x26
    248a:	121c                	addi	a5,sp,288
    248c:	0aba                	slli	s5,s5,0xe
    248e:	93e2                	add	t2,t2,s8
    2490:	e52a                	fsw	fa0,136(sp)
    2492:	a0c0                	fsd	fs0,128(s1)
    2494:	43e0                	lw	s0,68(a5)
    2496:	223c                	fld	fa5,64(a2)
    2498:	1b121d17          	auipc	s10,0x1b121
    249c:	0b0d                	addi	s6,s6,3
    249e:	090e                	slli	s2,s2,0x3
    24a0:	8bf2adc7          	fmsub.d	fs11,ft5,ft11,fa7,rdn
    24a4:	b9a8                	fsd	fa0,112(a1)
    24a6:	b62d                	j	1fd0 <_aes_decrypt_table+0x624>
    24a8:	c8a9                	beqz	s1,24fa <_min_stack+0x4fa>
    24aa:	1e14                	addi	a3,sp,816
    24ac:	8519                	srai	a0,a0,0x6
    24ae:	4c07f157          	0x4c07f157
    24b2:	bbdd75af          	0xbbdd75af
    24b6:	99ee                	add	s3,s3,s11
    24b8:	fd60                	fsw	fs0,124(a0)
    24ba:	9f267fa3          	0x9f267fa3
    24be:	bcf501f7          	0xbcf501f7
    24c2:	725c                	flw	fa5,36(a2)
    24c4:	6644c53b          	0x6644c53b
    24c8:	347e                	fld	fs0,504(sp)
    24ca:	7629fb5b          	0x7629fb5b
    24ce:	dcc6438b          	0xdcc6438b
    24d2:	68fc23cb          	fnmsub.s	ft7,fs8,fa5,fa3,rdn
    24d6:	edb6                	fsw	fa3,216(sp)
    24d8:	63f1                	lui	t2,0x1c
    24da:	e4b8                	fsw	fa4,72(s1)
    24dc:	cadc                	sw	a5,20(a3)
    24de:	108531d7          	0x108531d7
    24e2:	6342                	flw	ft6,16(sp)
    24e4:	4022                	0x4022
    24e6:	20119713          	0x20119713
    24ea:	c684                	sw	s1,8(a3)
    24ec:	7d24                	flw	fs1,120(a0)
    24ee:	4a85                	li	s5,1
    24f0:	f83d                	bnez	s0,2466 <_min_stack+0x466>
    24f2:	bbd2                	fsd	fs4,496(sp)
    24f4:	1132                	slli	sp,sp,0x2c
    24f6:	f9ae                	fsw	fa1,240(sp)
    24f8:	6da1                	lui	s11,0x8
    24fa:	4b2f29c7          	fmsub.d	fs3,ft10,fs2,fs1,rdn
    24fe:	9e1d                	0x9e1d
    2500:	f330                	fsw	fa2,96(a4)
    2502:	b2dc                	fsd	fa5,160(a3)
    2504:	ec52                	fsw	fs4,24(sp)
    2506:	860d                	srai	a2,a2,0x3
    2508:	c177d0e3          	bge	a5,s7,2108 <_min_stack+0x108>
    250c:	6c16                	flw	fs8,68(sp)
    250e:	99b9b32b          	0x99b9b32b
    2512:	70a9                	lui	ra,0xfffea
    2514:	fa48                	fsw	fa0,52(a2)
    2516:	9411                	srai	s0,s0,0x24
    2518:	2264                	fld	fs1,192(a2)
    251a:	c48ce947          	0xc48ce947
    251e:	fca8                	fsw	fa0,120(s1)
    2520:	f0a01a3f 7d56d82c 	0x7d56d82cf0a01a3f
    2528:	ef90                	fsw	fa2,24(a5)
    252a:	3322                	fld	ft6,40(sp)
    252c:	c74e                	sw	s3,140(sp)
    252e:	c1d14987          	flq	fs3,-995(sp) # 7a0c9c1d <_stack_start+0x7a0b9c1d>
    2532:	38d9                	jal	1e08 <_aes_decrypt_table+0x45c>
    2534:	fea2                	fsw	fs0,124(sp)
    2536:	ca8c                	sw	a1,16(a3)
    2538:	d498360b          	0xd498360b
    253c:	cf81                	beqz	a5,2554 <_min_stack+0x554>
    253e:	f5a6                	fsw	fs1,232(sp)
    2540:	28de                	fld	fa7,464(sp)
    2542:	7aa5                	lui	s5,0xfffe9
    2544:	268e                	fld	fa3,192(sp)
    2546:	b7da                	fsd	fs6,488(sp)
    2548:	ad3fa4bf 3a2ce49d 	0x3a2ce49dad3fa4bf
    2550:	0d92                	slli	s11,s11,0x4
    2552:	7850                	flw	fa2,52(s0)
    2554:	9bcc                	0x9bcc
    2556:	5f6a                	lw	t5,184(sp)
    2558:	6246                	flw	ft4,80(sp)
    255a:	7e54                	flw	fa3,60(a2)
    255c:	8df6c213          	xori	tp,a3,-1825
    2560:	e8b8                	fsw	fa4,80(s1)
    2562:	d890                	sw	a2,48(s1)
    2564:	392e5ef7          	0x392e5ef7
    2568:	c382f5af          	0xc382f5af
    256c:	be80                	fsd	fs0,56(a3)
    256e:	5d9f 7c93 d069      	0xd0697c935d9f
    2574:	a92d                	j	29ae <_min_stack+0x9ae>
    2576:	b312d56f          	jal	a0,fff300a6 <_stack_start+0xfff200a6>
    257a:	3b9925cf          	fnmadd.d	fa1,fs2,fs9,ft7,rdn
    257e:	acc8                	fsd	fa0,152(s1)
    2580:	a77d                	j	2d2e <_aes_encrypt_table+0x282>
    2582:	1810                	addi	a2,sp,48
    2584:	9ce86e63          	bltu	a6,a4,1760 <mtable+0x1b4>
    2588:	3bdb7bbb          	0x3bdb7bbb
    258c:	0978                	addi	a4,sp,156
    258e:	26cd                	jal	2970 <_min_stack+0x970>
    2590:	f418                	fsw	fa4,40(s0)
    2592:	596e                	lw	s2,248(sp)
    2594:	9aec01b7          	lui	gp,0x9aec0
    2598:	a89a                	fsd	ft6,80(sp)
    259a:	656e4f83          	lbu	t6,1622(t3)
    259e:	95e6                	add	a1,a1,s9
    25a0:	7ee6                	flw	ft9,120(sp)
    25a2:	ffaa                	fsw	fa0,252(sp)
    25a4:	bc2108cf          	0xbc2108cf
    25a8:	e6e8                	fsw	fa0,76(a3)
    25aa:	d99b15ef          	jal	a1,fffb4342 <_stack_start+0xfffa4342>
    25ae:	e7ba                	fsw	fa4,204(sp)
    25b0:	ce36                	sw	a3,28(sp)
    25b2:	6f4a                	flw	ft10,144(sp)
    25b4:	d409                	beqz	s0,24be <_min_stack+0x4be>
    25b6:	9fea                	add	t6,t6,s10
    25b8:	d67c                	sw	a5,108(a2)
    25ba:	b029                	j	1dc4 <_aes_decrypt_table+0x418>
    25bc:	afb2                	fsd	fa2,472(sp)
    25be:	a431                	j	27ca <_min_stack+0x7ca>
    25c0:	3f2a3123          	0x3f2a3123
    25c4:	3094                	fld	fa3,32(s1)
    25c6:	a5c6                	fsd	fa7,200(sp)
    25c8:	c066                	sw	s9,0(sp)
    25ca:	a235                	j	26f6 <_min_stack+0x6f6>
    25cc:	37bc                	fld	fa5,104(a5)
    25ce:	4e74                	lw	a3,92(a2)
    25d0:	a6ca                	fsd	fs2,328(sp)
    25d2:	82fc                	0x82fc
    25d4:	b0d0                	fsd	fa2,160(s1)
    25d6:	90e0                	0x90e0
    25d8:	15d8                	addi	a4,sp,740
    25da:	4a98a733          	0x4a98a733
    25de:	04f1                	addi	s1,s1,28
    25e0:	f7da                	fsw	fs6,236(sp)
    25e2:	ec41                	bnez	s0,267a <_min_stack+0x67a>
    25e4:	0e50                	addi	a2,sp,788
    25e6:	cd7f                	0xcd7f
    25e8:	2ff6                	fld	ft11,344(sp)
    25ea:	8dd69117          	auipc	sp,0x8dd69
    25ee:	4d76                	lw	s10,92(sp)
    25f0:	4db0                	lw	a2,88(a1)
    25f2:	544def43          	0x544def43
    25f6:	aacc                	fsd	fa1,144(a3)
    25f8:	df04                	sw	s1,56(a4)
    25fa:	96e4                	0x96e4
    25fc:	e3b5                	bnez	a5,2660 <_min_stack+0x660>
    25fe:	d19e                	sw	t2,224(sp)
    2600:	1b88                	addi	a0,sp,496
    2602:	6a4c                	flw	fa1,20(a2)
    2604:	b81f 2cc1 7f51      	0x7f512cc1b81f
    260a:	6546                	flw	fa0,80(sp)
    260c:	04ea                	slli	s1,s1,0x1a
    260e:	5e9d                	li	t4,-25
    2610:	5d35                	li	s10,-19
    2612:	8c01                	sub	s0,s0,s0
    2614:	7374                	flw	fa3,100(a4)
    2616:	87fa                	mv	a5,t5
    2618:	2e41                	jal	29a8 <_min_stack+0x9a8>
    261a:	5a1d0bfb          	0x5a1d0bfb
    261e:	52d267b3          	0x52d267b3
    2622:	db92                	sw	tp,244(sp)
    2624:	3356                	fld	ft6,368(sp)
    2626:	10e9                	addi	ra,ra,-6
    2628:	d66d1347          	fmsub.q	ft6,fs10,ft6,fs10,rtz
    262c:	8c61                	and	s0,s0,s0
    262e:	d79a                	sw	t1,236(sp)
    2630:	7a0c                	flw	fa1,48(a2)
    2632:	8e14a137          	lui	sp,0x8e14a
    2636:	f859                	bnez	s0,25cc <_min_stack+0x5cc>
    2638:	893c                	0x893c
    263a:	ee2713eb          	0xee2713eb
    263e:	a9ce                	fsd	fs3,208(sp)
    2640:	35c9                	jal	2502 <_min_stack+0x502>
    2642:	ede561b7          	lui	gp,0xede56
    2646:	1ce1                	addi	s9,s9,-8
    2648:	3cb1                	jal	20a4 <_min_stack+0xa4>
    264a:	477a                	lw	a4,156(sp)
    264c:	59df d29c 3f73      	0x3f73d29c59df
    2652:	f255                	bnez	a2,25f6 <_min_stack+0x5f6>
    2654:	79ce                	flw	fs3,240(sp)
    2656:	1418                	addi	a4,sp,544
    2658:	c773bf37          	lui	t5,0xc773b
    265c:	eacd                	bnez	a3,270e <_min_stack+0x70e>
    265e:	5baaf753          	0x5baaf753
    2662:	fd5f 146f 3ddf      	0x3ddf146ffd5f
    2668:	447886db          	0x447886db
    266c:	afca81f3          	0xafca81f3
    2670:	3ec4                	fld	fs1,184(a3)
    2672:	68b9                	lui	a7,0xe
    2674:	2c34                	fld	fa3,88(s0)
    2676:	2438                	fld	fa4,72(s0)
    2678:	5f40                	lw	s0,60(a4)
    267a:	a3c2                	fsd	fa6,448(sp)
    267c:	1d1672c3          	0x1d1672c3
    2680:	0c25                	addi	s8,s8,9
    2682:	e2bc                	fsw	fa5,64(a3)
    2684:	8b49                	andi	a4,a4,18
    2686:	3c28                	fld	fa0,120(s0)
    2688:	4195                	li	gp,5
    268a:	0dff                	0xdff
    268c:	7101                	addi	sp,sp,-512
    268e:	a839                	j	26ac <_min_stack+0x6ac>
    2690:	0c08deb3          	0xc08deb3
    2694:	9ce4                	0x9ce4
    2696:	b4d8                	fsd	fa4,168(s1)
    2698:	90c1                	srli	s1,s1,0x30
    269a:	5664                	lw	s1,108(a2)
    269c:	6184                	flw	fs1,0(a1)
    269e:	70b6cb7b          	0x70b6cb7b
    26a2:	32d5                	jal	2086 <_min_stack+0x86>
    26a4:	745c                	flw	fa5,44(s0)
    26a6:	6c48                	flw	fa0,28(s0)
    26a8:	b8d04257          	0xb8d04257
    26ac:	a7f4                	fsd	fa3,200(a5)
    26ae:	5150                	lw	a2,36(a0)
    26b0:	6541                	lui	a0,0x10
    26b2:	a4177e53          	0xa4177e53
    26b6:	5e271ac3          	fmadd.q	fs5,fa4,ft2,fa1,rtz
    26ba:	3a96                	fld	fs5,352(sp)
    26bc:	3bcb6bab          	0x3bcb6bab
    26c0:	459d                	li	a1,7
    26c2:	1ff1                	addi	t6,t6,-4
    26c4:	58fa                	lw	a7,188(sp)
    26c6:	03e3acab          	0x3e3acab
    26ca:	fa304b93          	xori	s7,zero,-93
    26ce:	2055                	jal	2772 <_min_stack+0x772>
    26d0:	6d76                	flw	fs10,92(sp)
    26d2:	adf6                	fsd	ft9,216(sp)
    26d4:	76cc                	flw	fa1,44(a3)
    26d6:	8891                	andi	s1,s1,4
    26d8:	4c02                	lw	s8,0(sp)
    26da:	f525                	bnez	a0,2642 <_min_stack+0x642>
    26dc:	d7e5                	beqz	a5,26c4 <_min_stack+0x6c4>
    26de:	4ffc                	lw	a5,92(a5)
    26e0:	cb2a                	sw	a0,148(sp)
    26e2:	4435c5d7          	0x4435c5d7
    26e6:	2680                	fld	fs0,8(a3)
    26e8:	a362                	fsd	fs8,384(sp)
    26ea:	5ab1b58f          	0x5ab1b58f
    26ee:	de49                	beqz	a2,2688 <_min_stack+0x688>
    26f0:	1bba                	slli	s7,s7,0x2e
    26f2:	0eea2567          	0xeea2567
    26f6:	4598                	lw	a4,8(a1)
    26f8:	c0fe                	sw	t6,64(sp)
    26fa:	5de1                	li	s11,-8
    26fc:	c302752f          	0xc302752f
    2700:	f04c                	fsw	fa1,36(s0)
    2702:	8112                	mv	sp,tp
    2704:	9746                	add	a4,a4,a7
    2706:	f9d38da3          	sb	t4,-101(t2) # 1bf9b <_stack_start+0xbf9b>
    270a:	6bc6                	flw	fs7,80(sp)
    270c:	03e75f8f          	0x3e75f8f
    2710:	9c92                	add	s9,s9,tp
    2712:	1595                	addi	a1,a1,-27
    2714:	7a6d                	lui	s4,0xffffb
    2716:	5952bfeb          	0x5952bfeb
    271a:	95da                	add	a1,a1,s6
    271c:	83be                	mv	t2,a5
    271e:	d42d                	beqz	s0,2688 <_min_stack+0x688>
    2720:	2174                	fld	fa3,192(a0)
    2722:	69e058d3          	0x69e058d3
    2726:	4929                	li	s2,10
    2728:	c8c9                	beqz	s1,27ba <_min_stack+0x7ba>
    272a:	8e44                	0x8e44
    272c:	89c2                	mv	s3,a6
    272e:	756a                	flw	fa0,184(sp)
    2730:	798e                	flw	fs3,224(sp)
    2732:	f478                	fsw	fa4,108(s0)
    2734:	3e58                	fld	fa4,184(a2)
    2736:	71b9996b          	0x71b9996b
    273a:	27dd                	jal	2f20 <_aes_encrypt_table+0x474>
    273c:	4fe1                	li	t6,24
    273e:	beb6                	fsd	fa3,376(sp)
    2740:	ad88                	fsd	fa0,24(a1)
    2742:	ac20f017          	auipc	zero,0xac20f
    2746:	c966                	sw	s9,144(sp)
    2748:	3ace                	fld	fs5,240(sp)
    274a:	7db4                	flw	fa3,120(a1)
    274c:	4adf 6318 311a      	0x311a63184adf
    2752:	e582                	fsw	ft0,200(sp)
    2754:	3351                	jal	24d8 <_min_stack+0x4d8>
    2756:	9760                	0x9760
    2758:	62457f53          	0x62457f53
    275c:	7764                	flw	fs1,108(a4)
    275e:	b1e0                	fsd	fs0,224(a1)
    2760:	bb84ae6b          	0xbb84ae6b
    2764:	a081                	j	27a4 <_min_stack+0x7a4>
    2766:	fe1c                	fsw	fa5,56(a2)
    2768:	2b08                	fld	fa0,16(a4)
    276a:	f994                	fsw	fa3,48(a1)
    276c:	6848                	flw	fa0,20(s0)
    276e:	7058                	flw	fa4,36(s0)
    2770:	fd45                	bnez	a0,2728 <_min_stack+0x728>
    2772:	8f19                	sub	a4,a4,a4
    2774:	6cde                	flw	fs9,212(sp)
    2776:	f87b9487          	0xf87b9487
    277a:	d37352b7          	lui	t0,0xd3735
    277e:	024bab23          	sw	tp,54(s7)
    2782:	72e2                	flw	ft5,56(sp)
    2784:	8f1f e357 ab55      	0xab55e3578f1f
    278a:	662a                	flw	fa2,136(sp)
    278c:	b20728eb          	0xb20728eb
    2790:	c2b5                	beqz	a3,27f4 <_min_stack+0x7f4>
    2792:	7bc52f03          	lw	t5,1980(a0) # 107bc <_stack_start+0x7bc>
    2796:	869a                	mv	a3,t1
    2798:	d3a50837          	lui	a6,0xd3a50
    279c:	8728                	0x8728
    279e:	30f2                	fld	ft1,312(sp)
    27a0:	23b2a5bf 02ba6a03 	0x2ba6a0323b2a5bf
    27a8:	8216                	mv	tp,t0
    27aa:	ed5c                	fsw	fa5,28(a0)
    27ac:	8a2b1ccf          	fnmadd.d	fs9,fs6,ft2,fa7,rtz
    27b0:	b479                	j	223e <_min_stack+0x23e>
    27b2:	a792                	fsd	ft4,456(sp)
    27b4:	f3f0f207          	0xf3f0f207
    27b8:	e269                	bnez	a2,287a <_min_stack+0x87a>
    27ba:	4ea1                	li	t4,8
    27bc:	f4da                	fsw	fs6,104(sp)
    27be:	65cd                	lui	a1,0x13
    27c0:	be05                	j	22f0 <_min_stack+0x2f0>
    27c2:	06d5                	addi	a3,a3,21
    27c4:	6234                	flw	fa3,64(a2)
    27c6:	d11f fea6 c48a      	0xc48afea6d11f
    27cc:	532e                	lw	t1,232(sp)
    27ce:	349d                	jal	2234 <_min_stack+0x234>
    27d0:	a2a055f3          	csrrwi	a1,0xa2a,0
    27d4:	e18a                	fsw	ft2,192(sp)
    27d6:	0532                	slli	a0,a0,0xc
    27d8:	ebf6                	fsw	ft9,212(sp)
    27da:	a475                	j	2a86 <_min_stack+0xa86>
    27dc:	0b39ec83          	0xb39ec83
    27e0:	ef60                	fsw	fs0,92(a4)
    27e2:	40aa                	lw	ra,136(sp)
    27e4:	9f71                	0x9f71
    27e6:	5e06                	lw	t3,96(sp)
    27e8:	106e                	c.slli	zero,0x3b
    27ea:	bd51                	j	267e <_min_stack+0x67e>
    27ec:	8a21                	andi	a2,a2,8
    27ee:	3ef9                	jal	23cc <_min_stack+0x3cc>
    27f0:	06dd                	addi	a3,a3,23
    27f2:	963d                	srai	a2,a2,0x2f
    27f4:	053e                	slli	a0,a0,0xf
    27f6:	ddae                	sw	a1,248(sp)
    27f8:	bde6                	fsd	fs9,248(sp)
    27fa:	4d46                	lw	s10,80(sp)
    27fc:	8d54                	0x8d54
    27fe:	91b5                	srli	a1,a1,0x2d
    2800:	5dc4                	lw	s1,60(a1)
    2802:	7105                	addi	sp,sp,-480
    2804:	d406                	sw	ra,40(sp)
    2806:	1550046f          	jal	s0,315a <_aes_encrypt_table+0x6ae>
    280a:	60ff                	0x60ff
    280c:	fb98                	fsw	fa4,48(a5)
    280e:	1924                	addi	s1,sp,184
    2810:	e9bd                	bnez	a1,2886 <_min_stack+0x886>
    2812:	4340d697          	auipc	a3,0x4340d
    2816:	89cc                	0x89cc
    2818:	9ed9                	0x9ed9
    281a:	42e86777          	0x42e86777
    281e:	b0bd                	j	208c <_min_stack+0x8c>
    2820:	8b89                	andi	a5,a5,2
    2822:	0788                	addi	a0,sp,960
    2824:	5b19                	li	s6,-26
    2826:	e738                	fsw	fa4,72(a4)
    2828:	eec8                	fsw	fa0,28(a3)
    282a:	0a7c79db          	0xa7c79db
    282e:	0f42a147          	fmsub.q	ft2,ft5,fs4,ft1,rdn
    2832:	7ce9                	lui	s9,0xffffa
    2834:	1e84                	addi	s1,sp,880
    2836:	f8c9                	bnez	s1,27c8 <_min_stack+0x7c8>
    2838:	0000                	unimp
    283a:	0000                	unimp
    283c:	8680                	0x8680
    283e:	ed2b0983          	lb	s3,-302(s6) # ffff7ed2 <_stack_start+0xfffe7ed2>
    2842:	3248                	fld	fa0,160(a2)
    2844:	7011                	c.lui	zero,0xfffe4
    2846:	1eac                	addi	a1,sp,888
    2848:	725a                	flw	ft4,180(sp)
    284a:	6c4e                	flw	fs8,208(sp)
    284c:	ff0e                	fsw	ft3,188(sp)
    284e:	3885fdfb          	0x3885fdfb
    2852:	0f56                	slli	t5,t5,0x15
    2854:	d5ae                	sw	a1,232(sp)
    2856:	3d1e                	fld	fs10,480(sp)
    2858:	392d                	jal	2492 <_min_stack+0x492>
    285a:	d90f3627          	fsd	fa6,-628(t5) # c773ad8c <_stack_start+0xc772ad8c>
    285e:	0a64                	addi	s1,sp,284
    2860:	a65c                	fsd	fa5,136(a2)
    2862:	6821                	lui	a6,0x8
    2864:	9bd1545b          	0x9bd1545b
    2868:	2e36                	fld	ft8,328(sp)
    286a:	243a                	fld	fs0,392(sp)
    286c:	670a                	flw	fa4,128(sp)
    286e:	0cb1                	addi	s9,s9,12
    2870:	930fe757          	0x930fe757
    2874:	96ee                	add	a3,a3,s11
    2876:	b4d2                	fsd	fs4,104(sp)
    2878:	1b9e919b          	0x1b9e919b
    287c:	c5c0                	sw	s0,12(a1)
    287e:	20dc804f          	fnmadd.s	ft0,fs9,fa3,ft4,rne
    2882:	61a2                	flw	ft3,8(sp)
    2884:	5a694b77          	0x5a694b77
    2888:	1a12                	slli	s4,s4,0x24
    288a:	1c16                	slli	s8,s8,0x25
    288c:	e20aba93          	sltiu	s5,s5,-480
    2890:	2aa0                	fld	fs0,80(a3)
    2892:	c0e5                	beqz	s1,2972 <_min_stack+0x972>
    2894:	e022                	fsw	fs0,0(sp)
    2896:	171b3c43          	fmadd.q	fs8,fs6,fa7,ft2,rup
    289a:	121d                	addi	tp,tp,-25
    289c:	0d09                	addi	s10,s10,2
    289e:	c78b0e0b          	0xc78b0e0b
    28a2:	f2ad                	bnez	a3,2804 <_min_stack+0x804>
    28a4:	a8b6                	fsd	fa3,80(sp)
    28a6:	2db9                	jal	2f04 <_aes_encrypt_table+0x458>
    28a8:	a91e                	fsd	ft7,144(sp)
    28aa:	14c8                	addi	a0,sp,612
    28ac:	19f1                	addi	s3,s3,-4
    28ae:	5785                	li	a5,-31
    28b0:	0775                	addi	a4,a4,29
    28b2:	af4c                	fsd	fa1,152(a4)
    28b4:	dd99                	beqz	a1,27d2 <_min_stack+0x7d2>
    28b6:	607feebb          	0x607feebb
    28ba:	a3fd                	j	2ea8 <_aes_encrypt_table+0x3fc>
    28bc:	2601                	jal	2bbc <_aes_encrypt_table+0x110>
    28be:	f79f f572 5cbc      	0x5cbcf572f79f
    28c4:	3b66                	fld	fs6,120(sp)
    28c6:	44c5                	li	s1,17
    28c8:	5b347efb          	0x5b347efb
    28cc:	8b762943          	fmadd.d	fs2,fa2,fs7,fa7,rdn
    28d0:	cbdcc623          	0xcbdcc623
    28d4:	fced                	bnez	s1,28ce <_min_stack+0x8ce>
    28d6:	b668                	fsd	fa0,232(a2)
    28d8:	f1e4                	fsw	fs1,100(a1)
    28da:	dc31b863          	0xdc31b863
    28de:	d7ca                	sw	s2,236(sp)
    28e0:	42108563          	beq	ra,ra,2d0a <_aes_encrypt_table+0x25e>
    28e4:	13402297          	auipc	t0,0x13402
    28e8:	11c6                	slli	gp,gp,0x31
    28ea:	8420                	0x8420
    28ec:	244a                	fld	fs0,144(sp)
    28ee:	857d                	srai	a0,a0,0x1f
    28f0:	d2f83dbb          	0xd2f83dbb
    28f4:	32f9                	jal	22c2 <_min_stack+0x2c2>
    28f6:	ae11                	j	2c0a <_aes_encrypt_table+0x15e>
    28f8:	a129                	j	2d02 <_aes_encrypt_table+0x256>
    28fa:	c76d                	beqz	a4,29e4 <_min_stack+0x9e4>
    28fc:	2f9e                	fld	ft11,448(sp)
    28fe:	30b21d4b          	fnmsub.s	fs10,ft4,fa1,ft6,rtz
    2902:	5286dcf3          	csrrwi	s9,0x528,13
    2906:	0dec                	addi	a1,sp,732
    2908:	e3c1                	bnez	a5,2988 <_min_stack+0x988>
    290a:	77d0                	flw	fa2,44(a5)
    290c:	2b6c16b3          	0x2b6c16b3
    2910:	b970                	fsd	fa2,240(a0)
    2912:	a999                	j	2d68 <_aes_encrypt_table+0x2bc>
    2914:	4894                	lw	a3,16(s1)
    2916:	11fa                	slli	gp,gp,0x3e
    2918:	64e9                	lui	s1,0x1a
    291a:	4722                	lw	a4,8(sp)
    291c:	8cfc                	0x8cfc
    291e:	a8c4                	fsd	fs1,144(s1)
    2920:	3ff0                	fld	fa2,248(a5)
    2922:	a01a                	fsd	ft6,0(sp)
    2924:	2c7d                	jal	2be2 <_aes_encrypt_table+0x136>
    2926:	56d8                	lw	a4,44(a3)
    2928:	22ef9033          	0x22ef9033
    292c:	4e49                	li	t3,18
    292e:	d13887c7          	fmsub.s	fa5,fa7,fs3,fs10,rne
    2932:	d9c1                	beqz	a1,28c2 <_min_stack+0x8c2>
    2934:	a2ca                	fsd	fs2,320(sp)
    2936:	8cfe                	mv	s9,t6
    2938:	0bd4                	addi	a3,sp,468
    293a:	9836                	add	a6,a6,a3
    293c:	81f5                	srli	a1,a1,0x1d
    293e:	de7aa6cf          	fnmadd.q	fa3,fs5,ft7,fs11,rdn
    2942:	a528                	fsd	fa0,72(a0)
    2944:	da268eb7          	lui	t4,0xda268
    2948:	bfad                	j	28c2 <_min_stack+0x8c2>
    294a:	3fa4                	fld	fs1,120(a5)
    294c:	9d3a                	add	s10,s10,a4
    294e:	2ce4                	fld	fs1,216(s1)
    2950:	9278                	0x9278
    2952:	500d                	c.li	zero,-29
    2954:	cc5f 6a9b 467e      	0x467e6a9bcc5f
    295a:	5462                	lw	s0,56(sp)
    295c:	138d                	addi	t2,t2,-29
    295e:	f6c2                	fsw	fa6,108(sp)
    2960:	b8d8                	fsd	fa4,176(s1)
    2962:	90e8                	0x90e8
    2964:	f739                	bnez	a4,28b2 <_min_stack+0x8b2>
    2966:	2e5e                	fld	ft8,464(sp)
    2968:	82f5afc3          	fmadd.d	ft11,fa1,fa5,fa6,rdn
    296c:	805d                	srli	s0,s0,0x17
    296e:	9fbe                	add	t6,t6,a5
    2970:	93d0                	0x93d0
    2972:	697c                	flw	fa5,84(a0)
    2974:	2dd5                	jal	3068 <_aes_encrypt_table+0x5bc>
    2976:	6fa9                	lui	t6,0xa
    2978:	1225                	addi	tp,tp,-23
    297a:	99accfb3          	0x99accfb3
    297e:	7d18c83b          	0x7d18c83b
    2982:	639c10a7          	0x639c10a7
    2986:	e86e                	fsw	fs11,16(sp)
    2988:	db7bbb3b          	0xdb7bbb3b
    298c:	7826                	flw	fa6,104(sp)
    298e:	cd09                	beqz	a0,29a8 <_min_stack+0x9a8>
    2990:	1859                	addi	a6,a6,-10
    2992:	6ef4                	flw	fa3,92(a3)
    2994:	b79a                	fsd	ft6,488(sp)
    2996:	ec01                	bnez	s0,29ae <_min_stack+0x9ae>
    2998:	83a89a4f          	fnmadd.d	fs4,fa7,fs10,fa6,rtz
    299c:	6e95                	lui	t4,0x5
    299e:	e665                	bnez	a2,2a86 <_min_stack+0xa86>
    29a0:	e6ff                	0xe6ff
    29a2:	aa7e                	fsd	ft11,272(sp)
    29a4:	cfbc                	sw	a5,88(a5)
    29a6:	2108                	fld	fa0,0(a0)
    29a8:	e815                	bnez	s0,29dc <_min_stack+0x9dc>
    29aa:	efe6                	fsw	fs9,220(sp)
    29ac:	bad99be7          	0xbad99be7
    29b0:	4ace366f          	jal	a2,e5e5c <_stack_start+0xd5e5c>
    29b4:	099f ead4 7cb0      	0x7cb0ead4099f
    29ba:	29d6                	fld	fs3,336(sp)
    29bc:	b2a4                	fsd	fs1,96(a3)
    29be:	233f31af          	0x233f31af
    29c2:	2a31                	jal	2ade <_aes_encrypt_table+0x32>
    29c4:	94a5                	srai	s1,s1,0x29
    29c6:	c630                	sw	a2,72(a2)
    29c8:	66a2                	flw	fa3,8(sp)
    29ca:	35c0                	fld	fs0,168(a1)
    29cc:	bc4e                	fsd	fs3,56(sp)
    29ce:	ca827437          	lui	s0,0xca827
    29d2:	fca6                	fsw	fs1,120(sp)
    29d4:	d090                	sw	a2,32(s1)
    29d6:	e0b0                	fsw	fa2,64(s1)
    29d8:	3315d8a7          	0x3315d8a7
    29dc:	9804                	0x9804
    29de:	f14a                	fsw	fs2,160(sp)
    29e0:	daec                	sw	a1,116(a3)
    29e2:	50cd41f7          	0x50cd41f7
    29e6:	7f0e                	flw	ft10,224(sp)
    29e8:	f691                	bnez	a3,28f4 <_min_stack+0x8f4>
    29ea:	d64d172f          	0xd64d172f
    29ee:	768d                	lui	a3,0xfffe3
    29f0:	434db0ef          	jal	ra,dde24 <_stack_start+0xcde24>
    29f4:	4daa                	lw	s11,136(sp)
    29f6:	cc54                	sw	a3,28(s0)
    29f8:	0496                	slli	s1,s1,0x5
    29fa:	e4df b5d1 9ee3      	0x9ee3b5d1e4df
    2a00:	886a                	mv	a6,s10
    2a02:	1f2c4c1b          	0x1f2c4c1b
    2a06:	c1b8                	sw	a4,64(a1)
    2a08:	5165                	li	sp,-7
    2a0a:	467f                	0x467f
    2a0c:	ea5e                	fsw	fs7,20(sp)
    2a0e:	9d04                	0x9d04
    2a10:	358c                	fld	fa1,40(a1)
    2a12:	015d                	addi	sp,sp,23
    2a14:	fa737487          	0xfa737487
    2a18:	fb2e410b          	0xfb2e410b
    2a1c:	b35a1d67          	0xb35a1d67
    2a20:	9252d2db          	0x9252d2db
    2a24:	5610                	lw	a2,40(a2)
    2a26:	47d6e933          	0x47d6e933
    2a2a:	61d76d13          	ori	s10,a4,1565
    2a2e:	9a8c                	0x9a8c
    2a30:	0ca1                	addi	s9,s9,8
    2a32:	377a                	fld	fa4,440(sp)
    2a34:	14f8                	addi	a4,sp,620
    2a36:	598e                	lw	s3,224(sp)
    2a38:	eb893c13          	sltiu	s8,s2,-328
    2a3c:	27a9                	jal	3186 <_aes_encrypt_table+0x6da>
    2a3e:	ceee                	sw	s11,92(sp)
    2a40:	c961                	beqz	a0,2b10 <_aes_encrypt_table+0x64>
    2a42:	b735                	j	296e <_min_stack+0x96e>
    2a44:	e51c                	fsw	fa5,8(a0)
    2a46:	e1ed                	bnez	a1,2b28 <_aes_encrypt_table+0x7c>
    2a48:	7a3cb147          	fmsub.d	ft2,fs9,ft3,fa5,rup
    2a4c:	dfd2                	sw	s4,252(sp)
    2a4e:	9c59                	0x9c59
    2a50:	73f2                	flw	ft7,60(sp)
    2a52:	ce14553f 37c71879 	0x37c71879ce14553f
    2a5a:	cdf773bf aafd53ea 	0xaafd53eacdf773bf
    2a62:	6f3d5f5b          	0x6f3d5f5b
    2a66:	df14                	sw	a3,56(a4)
    2a68:	db44                	sw	s1,52(a4)
    2a6a:	7886                	flw	fa7,96(sp)
    2a6c:	ca81f3af          	0xca81f3af
    2a70:	c468                	sw	a0,76(s0)
    2a72:	b93e                	fsd	fa5,176(sp)
    2a74:	3424                	fld	fs1,104(s0)
    2a76:	382c                	fld	fa1,112(s0)
    2a78:	c25f40a3          	0xc25f40a3
    2a7c:	c31d                	beqz	a4,2aa2 <_min_stack+0xaa2>
    2a7e:	1672                	slli	a2,a2,0x3c
    2a80:	25e2                	fld	fa1,24(sp)
    2a82:	bc0c                	fsd	fa1,56(s0)
    2a84:	493c                	lw	a5,80(a0)
    2a86:	950d288b          	0x950d288b
    2a8a:	ff41                	bnez	a4,2a22 <_min_stack+0xa22>
    2a8c:	01a8                	addi	a0,sp,200
    2a8e:	3971                	jal	272a <_min_stack+0x72a>
    2a90:	b30c                	fsd	fa1,32(a4)
    2a92:	08de                	slli	a7,a7,0x17
    2a94:	e4b4                	fsw	fa3,72(s1)
    2a96:	d89c                	sw	a5,48(s1)
    2a98:	c156                	sw	s5,128(sp)
    2a9a:	6490                	flw	fa2,8(s1)
    2a9c:	7b6184cb          	fnmsub.d	fs1,ft3,fs6,fa5,rne
    2aa0:	b632                	fsd	fa2,296(sp)
    2aa2:	d570                	sw	a2,108(a0)
    2aa4:	5c6c                	lw	a1,124(s0)
    2aa6:	4874                	lw	a3,84(s0)
    2aa8:	57b8                	lw	a4,104(a5)
    2aaa:	d042                	sw	a6,32(sp)

00002aac <_aes_encrypt_table>:
const struct aes_table _aes_encrypt_table = {	/* sbox */
    2aac:	7b777c63          	bgeu	a4,s7,3264 <_aes_encrypt_table+0x7b8>
    2ab0:	6bf2                	flw	fs7,28(sp)
    2ab2:	0130c56f          	jal	a0,f2c4 <_stack+0x12c4>
    2ab6:	d7fe2b67          	0xd7fe2b67
    2aba:	82ca76ab          	0x82ca76ab
    2abe:	7dc9                	lui	s11,0xffff2
    2ac0:	59fa                	lw	s3,188(sp)
    2ac2:	d4adf047          	0xd4adf047
    2ac6:	afa2                	fsd	fs0,472(sp)
    2ac8:	a49c                	fsd	fa5,8(s1)
    2aca:	c072                	sw	t3,0(sp)
    2acc:	2693fdb7          	lui	s11,0x2693f
    2ad0:	3f36                	fld	ft10,360(sp)
    2ad2:	a534ccf7          	0xa534ccf7
    2ad6:	f1e5                	bnez	a1,2ab6 <_aes_encrypt_table+0xa>
    2ad8:	d871                	beqz	s0,2aac <_aes_encrypt_table>
    2ada:	1531                	addi	a0,a0,-20
    2adc:	c704                	sw	s1,8(a4)
    2ade:	9618c323          	0x9618c323
    2ae2:	9a05                	andi	a2,a2,-31
    2ae4:	e2801207          	0xe2801207
    2ae8:	75b227eb          	0x75b227eb
    2aec:	8309                	srli	a4,a4,0x2
    2aee:	1a2c                	addi	a1,sp,312
    2af0:	a05a6e1b          	0xa05a6e1b
    2af4:	3b52                	fld	fs6,304(sp)
    2af6:	b3d6                	fsd	fs5,480(sp)
    2af8:	e329                	bnez	a4,2b3a <_aes_encrypt_table+0x8e>
    2afa:	d153842f          	0xd153842f
    2afe:	ed00                	fsw	fs0,24(a0)
    2b00:	fc20                	fsw	fs0,120(s0)
    2b02:	5bb1                	li	s7,-20
    2b04:	cb6a                	sw	s10,148(sp)
    2b06:	39be                	fld	fs3,488(sp)
    2b08:	4c4a                	lw	s8,144(sp)
    2b0a:	cf58                	sw	a4,28(a4)
    2b0c:	efd0                	fsw	fa2,28(a5)
    2b0e:	fbaa                	fsw	fa0,244(sp)
    2b10:	85334d43          	0x85334d43
    2b14:	f945                	bnez	a0,2ac4 <_aes_encrypt_table+0x18>
    2b16:	7f02                	flw	ft10,32(sp)
    2b18:	3c50                	fld	fa2,184(s0)
    2b1a:	a89f a351 8f40      	0x8f40a351a89f
    2b20:	9d92                	add	s11,s11,tp
    2b22:	f538                	fsw	fa4,104(a0)
    2b24:	b6bc                	fsd	fa5,104(a3)
    2b26:	21da                	fld	ft3,400(sp)
    2b28:	ff10                	fsw	fa2,56(a4)
    2b2a:	0ccdd2f3          	csrrwi	t0,0xcc,27
    2b2e:	975fec13          	ori	s8,t6,-1675
    2b32:	1744                	addi	s1,sp,932
    2b34:	a7c4                	fsd	fs1,136(a5)
    2b36:	3d7e                	fld	fs10,504(sp)
    2b38:	5d64                	lw	s1,124(a0)
    2b3a:	7319                	lui	t1,0xfffe6
    2b3c:	8160                	0x8160
    2b3e:	2a22dc4f          	fnmadd.d	fs8,ft5,ft2,ft5,unknown
    2b42:	8890                	0x8890
    2b44:	ee46                	fsw	fa7,28(sp)
    2b46:	14b8                	addi	a4,sp,616
    2b48:	5ede                	lw	t4,244(sp)
    2b4a:	32e0db0b          	0x32e0db0b
    2b4e:	0a3a                	slli	s4,s4,0xe
    2b50:	0649                	addi	a2,a2,18
    2b52:	5c24                	lw	s1,120(s0)
    2b54:	d3c2                	sw	a6,228(sp)
    2b56:	62ac                	flw	fa1,64(a3)
    2b58:	9591                	srai	a1,a1,0x24
    2b5a:	79e4                	flw	fs1,116(a1)
    2b5c:	6d37c8e7          	0x6d37c8e7
    2b60:	d58d                	beqz	a1,2a8a <_min_stack+0xa8a>
    2b62:	a94e                	fsd	fs3,144(sp)
    2b64:	566c                	lw	a1,108(a2)
    2b66:	eaf4                	fsw	fa3,84(a3)
    2b68:	7a65                	lui	s4,0xffff9
    2b6a:	08ae                	slli	a7,a7,0xb
    2b6c:	78ba                	flw	fa7,172(sp)
    2b6e:	2e25                	jal	2ea6 <_aes_encrypt_table+0x3fa>
    2b70:	a61c                	fsd	fa5,8(a2)
    2b72:	c6b4                	sw	a3,72(a3)
    2b74:	dde8                	sw	a0,124(a1)
    2b76:	1f74                	addi	a3,sp,956
    2b78:	8a8bbd4b          	fnmsub.d	fs10,fs7,fs0,fa7,rup
    2b7c:	3e70                	fld	fa2,248(a2)
    2b7e:	66b5                	lui	a3,0xd
    2b80:	0348                	addi	a0,sp,388
    2b82:	0ef6                	slli	t4,t4,0x1d
    2b84:	3561                	jal	2a0c <_min_stack+0xa0c>
    2b86:	c186b957          	0xc186b957
    2b8a:	9e1d                	0x9e1d
    2b8c:	f8e1                	bnez	s1,2b5c <_aes_encrypt_table+0xb0>
    2b8e:	1198                	addi	a4,sp,224
    2b90:	d969                	beqz	a0,2b62 <_aes_encrypt_table+0xb6>
    2b92:	948e                	add	s1,s1,gp
    2b94:	e9871e9b          	0xe9871e9b
    2b98:	55ce                	lw	a1,240(sp)
    2b9a:	df28                	sw	a0,120(a4)
    2b9c:	a18c                	fsd	fa1,0(a1)
    2b9e:	0d89                	addi	s11,s11,2
    2ba0:	6842e6bf 0f2d9941 	0xf2d99416842e6bf
    2ba8:	54b0                	lw	a2,104(s1)
    2baa:	63c616bb          	0x63c616bb
    2bae:	7cf8a563          	0x7cf8a563
    2bb2:	847c                	0x847c
    2bb4:	77ee                	flw	fa5,248(sp)
    2bb6:	7bf69977          	0x7bf69977
    2bba:	f2ff8d7b          	0xf2ff8d7b
    2bbe:	0df2                	slli	s11,s11,0x1c
    2bc0:	6bd6                	flw	fs7,84(sp)
    2bc2:	6fdebd6b          	0x6fdebd6b
    2bc6:	c591b16f          	jal	sp,fff1e81e <_stack_start+0xfff0e81e>
    2bca:	54c5                	li	s1,-15
    2bcc:	3060                	fld	fs0,224(s0)
    2bce:	5030                	lw	a2,96(s0)
    2bd0:	0102                	c.slli64	sp
    2bd2:	0301                	addi	t1,t1,0
    2bd4:	67ce                	flw	fa5,208(sp)
    2bd6:	2b56a967          	0x2b56a967
    2bda:	fee77d2b          	0xfee77d2b
    2bde:	19fe                	slli	s3,s3,0x3f
    2be0:	d7b5                	beqz	a5,2b4c <_aes_encrypt_table+0xa0>
    2be2:	ab4d62d7          	0xab4d62d7
    2be6:	76ece6ab          	0x76ece6ab
    2bea:	9a76                	add	s4,s4,t4
    2bec:	45caca8f          	0x45caca8f
    2bf0:	821f 9d82 c989      	0xc9899d82821f
    2bf6:	40c9                	li	ra,18
    2bf8:	7dfa                	flw	fs11,188(sp)
    2bfa:	877d                	srai	a4,a4,0x1f
    2bfc:	15fafaef          	jal	s5,b255a <_stack_start+0xa255a>
    2c00:	59b2                	lw	s3,44(sp)
    2c02:	eb59                	bnez	a4,2c98 <_aes_encrypt_table+0x1ec>
    2c04:	478e                	lw	a5,192(sp)
    2c06:	f0fbc947          	fmsub.s	fs2,fs7,fa5,ft10,rmm
    2c0a:	0bf0                	addi	a2,sp,476
    2c0c:	ad41                	j	329c <_aes_encrypt_table+0x7f0>
    2c0e:	ecad                	bnez	s1,2c88 <_aes_encrypt_table+0x1dc>
    2c10:	67d4d4b3          	0x67d4d4b3
    2c14:	a25f fda2 af45      	0xaf45fda2a25f
    2c1a:	9c23eaaf          	0x9c23eaaf
    2c1e:	bf9c                	fsd	fa5,56(a5)
    2c20:	f7a4a453          	0xf7a4a453
    2c24:	72e4                	flw	fs1,100(a3)
    2c26:	9672                	add	a2,a2,t3
    2c28:	5bc0c09b          	0x5bc0c09b
    2c2c:	b775                	j	2bd8 <_aes_encrypt_table+0x12c>
    2c2e:	fde1c2b7          	lui	t0,0xfde1c
    2c32:	1cfd                	addi	s9,s9,-1
    2c34:	933d                	srli	a4,a4,0x2f
    2c36:	264cae93          	slti	t4,s9,612
    2c3a:	6a26                	flw	fs4,72(sp)
    2c3c:	366c                	fld	fa1,232(a2)
    2c3e:	5a36                	lw	s4,108(sp)
    2c40:	3f7e                	fld	ft10,504(sp)
    2c42:	f7f5413f cc8302f7 	0xcc8302f7f7f5413f
    2c4a:	4fcc                	lw	a1,28(a5)
    2c4c:	3468                	fld	fa0,232(s0)
    2c4e:	5c34                	lw	a3,120(s0)
    2c50:	a551                	j	32d4 <_aes_encrypt_table+0x828>
    2c52:	f4a5                	bnez	s1,2bba <_aes_encrypt_table+0x10e>
    2c54:	e5d1                	bnez	a1,2ce0 <_aes_encrypt_table+0x234>
    2c56:	34e5                	jal	273e <_min_stack+0x73e>
    2c58:	f1f9                	bnez	a1,2c1e <_aes_encrypt_table+0x172>
    2c5a:	08f1                	addi	a7,a7,28
    2c5c:	71e2                	flw	ft3,56(sp)
    2c5e:	9371                	srli	a4,a4,0x3c
    2c60:	73d8d8ab          	0x73d8d8ab
    2c64:	3162                	fld	ft2,56(sp)
    2c66:	5331                	li	t1,-20
    2c68:	152a                	slli	a0,a0,0x2a
    2c6a:	3f15                	jal	2b9e <_aes_encrypt_table+0xf2>
    2c6c:	0408                	addi	a0,sp,512
    2c6e:	0c04                	addi	s1,sp,528
    2c70:	c795                	beqz	a5,2c9c <_aes_encrypt_table+0x1f0>
    2c72:	234652c7          	fmsub.d	ft5,fa2,fs4,ft4,unknown
    2c76:	c39d6523          	0xc39d6523
    2c7a:	18305ec3          	fmadd.s	ft9,ft0,ft3,ft3,unknown
    2c7e:	2818                	fld	fa4,16(s0)
    2c80:	a1969637          	lui	a2,0xa1969
    2c84:	050a                	slli	a0,a0,0x2
    2c86:	0f05                	addi	t5,t5,1
    2c88:	b59a9a2f          	0xb59a9a2f
    2c8c:	070e                	slli	a4,a4,0x3
    2c8e:	12240907          	0x12240907
    2c92:	3612                	fld	fa2,288(sp)
    2c94:	9b80801b          	0x9b80801b
    2c98:	e2df 3de2 ebcd      	0xebcd3de2e2df
    2c9e:	274e26eb          	0x274e26eb
    2ca2:	b27f6927          	0xb27f6927
    2ca6:	cdb2                	sw	a2,216(sp)
    2ca8:	75ea                	flw	fa1,184(sp)
    2caa:	9f75                	0x9f75
    2cac:	0912                	slli	s2,s2,0x4
    2cae:	1b09                	addi	s6,s6,-30
    2cb0:	831d                	srli	a4,a4,0x7
    2cb2:	2c589e83          	lh	t4,709(a7) # e2c5 <_stack+0x2c5>
    2cb6:	742c                	flw	fa1,104(s0)
    2cb8:	1a34                	addi	a3,sp,312
    2cba:	2e1a                	fld	ft8,384(sp)
    2cbc:	1b36                	slli	s6,s6,0x2d
    2cbe:	6edc2d1b          	0x6edc2d1b
    2cc2:	b26e                	fsd	fs11,288(sp)
    2cc4:	5ab4                	lw	a3,112(a3)
    2cc6:	ee5a                	fsw	fs6,28(sp)
    2cc8:	fba0a05b          	0xfba0a05b
    2ccc:	52a4                	lw	s1,96(a3)
    2cce:	f652                	fsw	fs4,44(sp)
    2cd0:	3b76                	fld	fs6,376(sp)
    2cd2:	d6b74d3b          	0xd6b74d3b
    2cd6:	61d6                	flw	ft3,84(sp)
    2cd8:	b37d                	j	2a86 <_min_stack+0xa86>
    2cda:	2952ceb3          	0x2952ceb3
    2cde:	7b29                	lui	s6,0xfffea
    2ce0:	e3dd                	bnez	a5,2d86 <_aes_encrypt_table+0x2da>
    2ce2:	2f5e3ee3          	0x2f5e3ee3
    2ce6:	8413712f          	0x8413712f
    2cea:	9784                	0x9784
    2cec:	53a6                	lw	t2,104(sp)
    2cee:	d1b9f553          	0xd1b9f553
    2cf2:	68d1                	lui	a7,0x14
    2cf4:	0000                	unimp
    2cf6:	0000                	unimp
    2cf8:	edc1                	bnez	a1,2d90 <_aes_encrypt_table+0x2e4>
    2cfa:	2ced                	jal	2ff4 <_aes_encrypt_table+0x548>
    2cfc:	2040                	fld	fs0,128(s0)
    2cfe:	6020                	flw	fs0,64(s0)
    2d00:	1ffcfce3          	bgeu	s9,t6,36f8 <_aes_encrypt_table+0xc4c>
    2d04:	b179                	j	2992 <_min_stack+0x992>
    2d06:	c8b1                	beqz	s1,2d5a <_aes_encrypt_table+0x2ae>
    2d08:	5bb6                	lw	s7,108(sp)
    2d0a:	6ad4ed5b          	0x6ad4ed5b
    2d0e:	be6a                	fsd	fs10,312(sp)
    2d10:	cb8d                	beqz	a5,2d42 <_aes_encrypt_table+0x296>
    2d12:	be6746cb          	fnmsub.q	fa3,fa4,ft6,fs7,rmm
    2d16:	d9be                	sw	a5,240(sp)
    2d18:	3972                	fld	fs2,312(sp)
    2d1a:	4b39                	li	s6,14
    2d1c:	4a94                	lw	a3,16(a3)
    2d1e:	de4a                	sw	s2,60(sp)
    2d20:	4c98                	lw	a4,24(s1)
    2d22:	d44c                	sw	a1,44(s0)
    2d24:	58b0                	lw	a2,112(s1)
    2d26:	e858                	fsw	fa4,20(s0)
    2d28:	cf85                	beqz	a5,2d60 <_aes_encrypt_table+0x2b4>
    2d2a:	d0bb4acf          	fnmadd.s	fs5,fs6,fa1,fs10,rmm
    2d2e:	6bd0                	flw	fa2,20(a5)
    2d30:	efc5                	bnez	a5,2de8 <_aes_encrypt_table+0x33c>
    2d32:	aa4f2aef          	jal	s5,ffff4fd6 <_stack_start+0xfffe4fd6>
    2d36:	e5aa                	fsw	fa0,200(sp)
    2d38:	fbed                	bnez	a5,2d2a <_aes_encrypt_table+0x27e>
    2d3a:	438616fb          	0x438616fb
    2d3e:	4d9ac543          	0x4d9ac543
    2d42:	d74d                	beqz	a4,2cec <_aes_encrypt_table+0x240>
    2d44:	3366                	fld	ft6,120(sp)
    2d46:	85115533          	0x85115533
    2d4a:	9485                	srai	s1,s1,0x21
    2d4c:	458a                	lw	a1,128(sp)
    2d4e:	cf45                	beqz	a4,2e06 <_aes_encrypt_table+0x35a>
    2d50:	f9e9                	bnez	a1,2d22 <_aes_encrypt_table+0x276>
    2d52:	10f9                	addi	ra,ra,-2
    2d54:	0204                	addi	s1,sp,256
    2d56:	0602                	c.slli64	a2
    2d58:	7ffe                	flw	ft11,252(sp)
    2d5a:	817f                	0x817f
    2d5c:	50a0                	lw	s0,96(s1)
    2d5e:	f050                	fsw	fa2,36(s0)
    2d60:	3c78                	fld	fa4,248(s0)
    2d62:	443c                	lw	a5,72(s0)
    2d64:	9f25                	0x9f25
    2d66:	ba9f a84b e3a8      	0xe3a8a84bba9f
    2d6c:	51a2                	lw	gp,40(sp)
    2d6e:	f351                	bnez	a4,2cf2 <_aes_encrypt_table+0x246>
    2d70:	a35d                	j	3316 <_aes_encrypt_table+0x86a>
    2d72:	4080fea3          	0x4080fea3
    2d76:	c040                	sw	s0,4(s0)
    2d78:	8f05                	sub	a4,a4,s1
    2d7a:	923f8a8f          	0x923f8a8f
    2d7e:	ad92                	fsd	ft4,216(sp)
    2d80:	9d21                	0x9d21
    2d82:	bc9d                	j	27f8 <_min_stack+0x7f8>
    2d84:	3870                	fld	fa2,240(s0)
    2d86:	4838                	lw	a4,80(s0)
    2d88:	f5f1                	bnez	a1,2d54 <_aes_encrypt_table+0x2a8>
    2d8a:	04f5                	addi	s1,s1,29
    2d8c:	dfbcbc63          	0xdfbcbc63
    2d90:	c1b6b677          	0xc1b6b677
    2d94:	75dadaaf          	0x75dadaaf
    2d98:	2142                	fld	ft2,16(sp)
    2d9a:	6321                	lui	t1,0x8
    2d9c:	1020                	addi	s0,sp,40
    2d9e:	3010                	fld	fa2,32(s0)
    2da0:	ffe5                	bnez	a5,2d98 <_aes_encrypt_table+0x2ec>
    2da2:	1aff                	0x1aff
    2da4:	f3fd                	bnez	a5,2d8a <_aes_encrypt_table+0x2de>
    2da6:	d2bf0ef3          	0xd2bf0ef3
    2daa:	6dd2                	flw	fs11,20(sp)
    2dac:	cd81                	beqz	a1,2dc4 <_aes_encrypt_table+0x318>
    2dae:	4ccd                	li	s9,19
    2db0:	0c18                	addi	a4,sp,528
    2db2:	140c                	addi	a1,sp,544
    2db4:	1326                	slli	t1,t1,0x29
    2db6:	ecc33513          	sltiu	a0,t1,-308
    2dba:	2fec                	fld	fa1,216(a5)
    2dbc:	5fbe                	lw	t6,236(sp)
    2dbe:	e15f 9735 a297      	0xa2979735e15f
    2dc4:	4488                	lw	a0,8(s1)
    2dc6:	cc44                	sw	s1,28(s0)
    2dc8:	172e                	slli	a4,a4,0x2b
    2dca:	c4933917          	auipc	s2,0xc4933
    2dce:	57c4                	lw	s1,44(a5)
    2dd0:	a755                	j	3574 <_aes_encrypt_table+0xac8>
    2dd2:	7efcf2a7          	0x7efcf2a7
    2dd6:	827e                	mv	tp,t6
    2dd8:	3d7a                	fld	fs10,440(sp)
    2dda:	473d                	li	a4,15
    2ddc:	64c8                	flw	fa0,12(s1)
    2dde:	ac64                	fsd	fs1,216(s0)
    2de0:	5dba                	lw	s11,172(sp)
    2de2:	e75d                	bnez	a4,2e90 <_aes_encrypt_table+0x3e4>
    2de4:	1932                	slli	s2,s2,0x2c
    2de6:	2b19                	jal	32fc <_aes_encrypt_table+0x850>
    2de8:	73e6                	flw	ft7,120(sp)
    2dea:	60c09573          	csrrw	a0,0x60c,ra
    2dee:	a060                	fsd	fs0,192(s0)
    2df0:	8119                	srli	a0,a0,0x6
    2df2:	9881                	andi	s1,s1,-32
    2df4:	4f9e                	lw	t6,196(sp)
    2df6:	dca3d14f          	0xdca3d14f
    2dfa:	7fdc                	flw	fa5,60(a5)
    2dfc:	2244                	fld	fs1,128(a2)
    2dfe:	6622                	flw	fa2,8(sp)
    2e00:	2a54                	fld	fa3,144(a2)
    2e02:	7e2a                	flw	ft8,168(sp)
    2e04:	ab90903b          	0xab90903b
    2e08:	8388880b          	0x8388880b
    2e0c:	468c                	lw	a1,8(a3)
    2e0e:	ca46                	sw	a7,20(sp)
    2e10:	29eeeec7          	fmsub.s	ft9,ft9,ft10,ft5,unknown
    2e14:	d3b8b86b          	0xd3b8b86b
    2e18:	1428                	addi	a0,sp,552
    2e1a:	3c14                	fld	fa3,56(s0)
    2e1c:	79dedea7          	0x79dedea7
    2e20:	5ebc                	lw	a5,120(a3)
    2e22:	e25e                	fsw	fs7,4(sp)
    2e24:	0b16                	slli	s6,s6,0x5
    2e26:	dbad1d0b          	0xdbad1d0b
    2e2a:	e0db76db          	0xe0db76db
    2e2e:	3be0                	fld	fs0,240(a5)
    2e30:	3264                	fld	fs1,224(a2)
    2e32:	5632                	lw	a2,44(sp)
    2e34:	3a74                	fld	fa3,240(a2)
    2e36:	4e3a                	lw	t3,140(sp)
    2e38:	0a14                	addi	a3,sp,272
    2e3a:	1e0a                	slli	t3,t3,0x22
    2e3c:	4992                	lw	s3,4(sp)
    2e3e:	db49                	beqz	a4,2dd0 <_aes_encrypt_table+0x324>
    2e40:	060c                	addi	a1,sp,768
    2e42:	0a06                	slli	s4,s4,0x1
    2e44:	2448                	fld	fa0,136(s0)
    2e46:	6c24                	flw	fs1,88(s0)
    2e48:	5cb8                	lw	a4,120(s1)
    2e4a:	e45c                	fsw	fa5,12(s0)
    2e4c:	c29f 5dc2 d3bd      	0xd3bd5dc2c29f
    2e52:	ac436ed3          	0xac436ed3
    2e56:	efac                	fsw	fa1,88(a5)
    2e58:	62c4                	flw	fs1,4(a3)
    2e5a:	a662                	fsd	fs8,264(sp)
    2e5c:	9139                	srli	a0,a0,0x2e
    2e5e:	a891                	j	2eb2 <_aes_encrypt_table+0x406>
    2e60:	9531                	srai	a0,a0,0x2c
    2e62:	a495                	j	30c6 <_aes_encrypt_table+0x61a>
    2e64:	37e4e4d3          	0x37e4e4d3
    2e68:	79f2                	flw	fs3,60(sp)
    2e6a:	8b79                	andi	a4,a4,30
    2e6c:	e7d5                	bnez	a5,2f18 <_aes_encrypt_table+0x46c>
    2e6e:	c88b32e7          	0xc88b32e7
    2e72:	43c8                	lw	a0,4(a5)
    2e74:	376e                	fld	fa4,248(sp)
    2e76:	6dda5937          	lui	s2,0x6dda5
    2e7a:	b76d                	j	2e24 <_aes_encrypt_table+0x378>
    2e7c:	8d01                	sub	a0,a0,s0
    2e7e:	8c8d                	sub	s1,s1,a1
    2e80:	d5b1                	beqz	a1,2dcc <_aes_encrypt_table+0x320>
    2e82:	64d5                	lui	s1,0x15
    2e84:	4e9c                	lw	a5,24(a3)
    2e86:	d24e                	sw	s3,36(sp)
    2e88:	a949                	j	331a <_aes_encrypt_table+0x86e>
    2e8a:	e0a9                	bnez	s1,2ecc <_aes_encrypt_table+0x420>
    2e8c:	6cd8                	flw	fa4,28(s1)
    2e8e:	b46c                	fsd	fa1,232(s0)
    2e90:	56ac                	lw	a1,104(a3)
    2e92:	fa56                	fsw	fs5,52(sp)
    2e94:	07f4f4f3          	csrrci	s1,0x7f,9
    2e98:	25eaeacf          	0x25eaeacf
    2e9c:	65ca                	flw	fa1,144(sp)
    2e9e:	af65                	j	3656 <_aes_encrypt_table+0xbaa>
    2ea0:	7af4                	flw	fa3,116(a3)
    2ea2:	8e7a                	mv	t3,t5
    2ea4:	e9aeae47          	fmsub.s	ft8,ft9,fs10,ft9,rdn
    2ea8:	0810                	addi	a2,sp,16
    2eaa:	1808                	addi	a0,sp,48
    2eac:	d5baba6f          	jal	s4,fffaec06 <_stack_start+0xfff9ec06>
    2eb0:	78f0                	flw	fa2,116(s1)
    2eb2:	8878                	0x8878
    2eb4:	254a                	fld	fa0,144(sp)
    2eb6:	6f25                	lui	t5,0x9
    2eb8:	2e5c                	fld	fa5,152(a2)
    2eba:	722e                	flw	ft4,232(sp)
    2ebc:	1c38                	addi	a4,sp,568
    2ebe:	241c                	fld	fa5,8(s0)
    2ec0:	f1a6a657          	0xf1a6a657
    2ec4:	c7b4b473          	csrrc	s0,0xc7b,s1
    2ec8:	51c6c697          	auipc	a3,0x51c6c
    2ecc:	23e8e8cb          	fnmsub.d	fa7,fa7,ft10,ft4,unknown
    2ed0:	dda1                	beqz	a1,2e28 <_aes_encrypt_table+0x37c>
    2ed2:	7cdd                	lui	s9,0xffff7
    2ed4:	74e8                	flw	fa0,108(s1)
    2ed6:	9c74                	0x9c74
    2ed8:	1f3e                	slli	t5,t5,0x2f
    2eda:	211f 4b96 dd4b      	0xdd4b4b96211f
    2ee0:	bd61                	j	2d78 <_aes_encrypt_table+0x2cc>
    2ee2:	dcbd                	beqz	s1,2e60 <_aes_encrypt_table+0x3b4>
    2ee4:	8b0d                	andi	a4,a4,3
    2ee6:	8a0f868b          	0x8a0f868b
    2eea:	858a                	mv	a1,sp
    2eec:	70e0                	flw	fs0,100(s1)
    2eee:	9070                	0x9070
    2ef0:	3e7c                	fld	fa5,248(a2)
    2ef2:	423e                	lw	tp,204(sp)
    2ef4:	b571                	j	2d80 <_aes_encrypt_table+0x2d4>
    2ef6:	c4b5                	beqz	s1,2f62 <_aes_encrypt_table+0x4b6>
    2ef8:	66cc                	flw	fa1,12(a3)
    2efa:	aa66                	fsd	fs9,272(sp)
    2efc:	4890                	lw	a2,16(s1)
    2efe:	d848                	sw	a0,52(s0)
    2f00:	0306                	slli	t1,t1,0x1
    2f02:	f6f70503          	lb	a0,-145(a4)
    2f06:	01f6                	slli	gp,gp,0x1d
    2f08:	0e1c                	addi	a5,sp,784
    2f0a:	120e                	slli	tp,tp,0x23
    2f0c:	61c2                	flw	ft3,16(sp)
    2f0e:	a361                	j	3496 <_aes_encrypt_table+0x9ea>
    2f10:	356a                	fld	fa0,184(sp)
    2f12:	5f35                	li	t5,-19
    2f14:	57ae                	lw	a5,232(sp)
    2f16:	b969f957          	0xb969f957
    2f1a:	d0b9                	beqz	s1,2e60 <_aes_encrypt_table+0x3b4>
    2f1c:	91868617          	auipc	a2,0x91868
    2f20:	c199                	beqz	a1,2f26 <_aes_encrypt_table+0x47a>
    2f22:	58c1                	li	a7,-16
    2f24:	1d3a                	slli	s10,s10,0x2e
    2f26:	271d                	jal	364c <_aes_encrypt_table+0xba0>
    2f28:	b99e9e27          	0xb99e9e27
    2f2c:	e1d9                	bnez	a1,2fb2 <_aes_encrypt_table+0x506>
    2f2e:	38e1                	jal	2806 <_min_stack+0x806>
    2f30:	13f8f8eb          	0x13f8f8eb
    2f34:	b398982b          	0xb398982b
    2f38:	1122                	slli	sp,sp,0x28
    2f3a:	3311                	jal	2c3e <_aes_encrypt_table+0x192>
    2f3c:	69d2                	flw	fs3,20(sp)
    2f3e:	bb69                	j	2cd8 <_aes_encrypt_table+0x22c>
    2f40:	d9a9                	beqz	a1,2e92 <_aes_encrypt_table+0x3e6>
    2f42:	70d9                	lui	ra,0xffff6
    2f44:	898e8e07          	0x898e8e07
    2f48:	a7949433          	0xa7949433
    2f4c:	9b2d                	andi	a4,a4,-21
    2f4e:	1e3cb69b          	0x1e3cb69b
    2f52:	221e                	fld	ft4,448(sp)
    2f54:	8715                	srai	a4,a4,0x5
    2f56:	e9c99287          	0xe9c99287
    2f5a:	20e9                	jal	3024 <_aes_encrypt_table+0x578>
    2f5c:	49cece87          	flq	ft9,1180(t4) # 549c <_bss_end+0xea4>
    2f60:	55aa                	lw	a1,168(sp)
    2f62:	ff55                	bnez	a4,2f1e <_aes_encrypt_table+0x472>
    2f64:	2850                	fld	fa2,144(s0)
    2f66:	7828                	flw	fa0,112(s0)
    2f68:	dfa5                	beqz	a5,2ee0 <_aes_encrypt_table+0x434>
    2f6a:	7adf 8c03 8f8c      	0x8f8c8c037adf
    2f70:	a159                	j	33f6 <_aes_encrypt_table+0x94a>
    2f72:	f8a1                	bnez	s1,2ec2 <_aes_encrypt_table+0x416>
    2f74:	8909                	andi	a0,a0,2
    2f76:	8089                	srli	s1,s1,0x2
    2f78:	0d1a                	slli	s10,s10,0x6
    2f7a:	170d                	addi	a4,a4,-29
    2f7c:	bf65                	j	2f34 <_aes_encrypt_table+0x488>
    2f7e:	e6d7dabf 428431e6 	0x428431e6e6d7dabf
    2f86:	c642                	sw	a6,12(sp)
    2f88:	68d0                	flw	fa2,20(s1)
    2f8a:	b868                	fsd	fa0,240(s0)
    2f8c:	4182                	lw	gp,0(sp)
    2f8e:	c341                	beqz	a4,300e <_aes_encrypt_table+0x562>
    2f90:	9929                	andi	a0,a0,-22
    2f92:	b099                	j	27d8 <_min_stack+0x7d8>
    2f94:	2d5a                	fld	fs10,400(sp)
    2f96:	772d                	lui	a4,0xfffeb
    2f98:	0f1e                	slli	t5,t5,0x7
    2f9a:	b07b110f          	0xb07b110f
    2f9e:	cbb0                	sw	a2,80(a5)
    2fa0:	54a8                	lw	a0,104(s1)
    2fa2:	fc54                	fsw	fa3,60(s0)
    2fa4:	bb6d                	j	2d5e <_aes_encrypt_table+0x2b2>
    2fa6:	162cd6bb          	0x162cd6bb
    2faa:	3a16                	fld	fs4,352(sp)
    2fac:	c6a5                	beqz	a3,3014 <_aes_encrypt_table+0x568>
    2fae:	f8846363          	bltu	s0,s0,2734 <_min_stack+0x734>
    2fb2:	7c7c                	flw	fa5,124(s0)
    2fb4:	ee99                	bnez	a3,2fd2 <_aes_encrypt_table+0x526>
    2fb6:	f68d7777          	0xf68d7777
    2fba:	ff0d7b7b          	0xff0d7b7b
    2fbe:	f2f2                	fsw	ft8,100(sp)
    2fc0:	d6bd                	beqz	a3,2f2e <_aes_encrypt_table+0x482>
    2fc2:	deb16b6b          	0xdeb16b6b
    2fc6:	91546f6f          	jal	t5,fff498da <_stack_start+0xfff398da>
    2fca:	c5c5                	beqz	a1,3072 <_aes_encrypt_table+0x5c6>
    2fcc:	6050                	flw	fa2,4(s0)
    2fce:	3030                	fld	fa2,96(s0)
    2fd0:	01010203          	lb	tp,16(sp) # 8e14a010 <_stack_start+0x8e13a010>
    2fd4:	cea9                	beqz	a3,302e <_aes_encrypt_table+0x582>
    2fd6:	567d6767          	0x567d6767
    2fda:	e7192b2b          	0xe7192b2b
    2fde:	fefe                	fsw	ft11,124(sp)
    2fe0:	b562                	fsd	fs8,168(sp)
    2fe2:	4de6d7d7          	0x4de6d7d7
    2fe6:	ec9aabab          	0xec9aabab
    2fea:	7676                	flw	fa2,124(sp)
    2fec:	8f45                	or	a4,a4,s1
    2fee:	caca                	sw	s2,84(sp)
    2ff0:	1f9d                	addi	t6,t6,-25
    2ff2:	8282                	jr	t0
    2ff4:	8940                	0x8940
    2ff6:	c9c9                	beqz	a1,3088 <_aes_encrypt_table+0x5dc>
    2ff8:	7d7dfa87          	0x7d7dfa87
    2ffc:	ef15                	bnez	a4,3038 <_aes_encrypt_table+0x58c>
    2ffe:	fafa                	fsw	ft10,116(sp)
    3000:	5959b2eb          	0x5959b2eb
    3004:	8ec9                	or	a3,a3,a0
    3006:	fb0b4747          	fmsub.d	fa4,fs6,fa6,ft11,rmm
    300a:	f0f0                	fsw	fa2,100(s1)
    300c:	41ec                	lw	a1,68(a1)
    300e:	adad                	j	3688 <_aes_encrypt_table+0xbdc>
    3010:	d4d4b367          	0xd4d4b367
    3014:	5ffd                	li	t6,-1
    3016:	a2a2                	fsd	fs0,320(sp)
    3018:	45ea                	lw	a1,152(sp)
    301a:	23bfafaf          	amoxor.w.rl	t6,s11,(t6)
    301e:	9c9c                	0x9c9c
    3020:	a4a453f7          	0xa4a453f7
    3024:	e496                	fsw	ft5,72(sp)
    3026:	7272                	flw	ft4,60(sp)
    3028:	c0c09b5b          	0xc0c09b5b
    302c:	75c2                	flw	fa1,48(sp)
    302e:	e11cb7b7          	lui	a5,0xe11cb
    3032:	fdfd                	bnez	a1,3030 <_aes_encrypt_table+0x584>
    3034:	3dae                	fld	fs11,232(sp)
    3036:	4c6a9393          	0x4c6a9393
    303a:	2626                	fld	fa2,72(sp)
    303c:	6c5a                	flw	fs8,148(sp)
    303e:	3636                	fld	fa2,360(sp)
    3040:	7e41                	lui	t3,0xffff0
    3042:	f5023f3f 834ff7f7 	0x834ff7f7f5023f3f
    304a:	cccc                	sw	a1,28(s1)
    304c:	685c                	flw	fa5,20(s0)
    304e:	3434                	fld	fa3,104(s0)
    3050:	51f4                	lw	a3,100(a1)
    3052:	a5a5                	j	36ba <_aes_encrypt_table+0xc0e>
    3054:	d134                	sw	a3,96(a0)
    3056:	e5e5                	bnez	a1,313e <_aes_encrypt_table+0x692>
    3058:	f908                	fsw	fa0,48(a0)
    305a:	f1f1                	bnez	a1,301e <_aes_encrypt_table+0x572>
    305c:	7171e293          	ori	t0,gp,1815
    3060:	d8d8ab73          	csrrs	s6,0xd8d,a7
    3064:	31316253          	0x31316253
    3068:	15152a3f 0404080c 	0x404080c15152a3f
    3070:	9552                	add	a0,a0,s4
    3072:	4665c7c7          	fmsub.q	fa5,fa1,ft6,fs0,rmm
    3076:	9d5e2323          	sw	s5,-1594(t3) # fffef9c6 <_stack_start+0xfffdf9c6>
    307a:	3028c3c3          	fmadd.s	ft7,fa7,ft2,ft6,rmm
    307e:	1818                	addi	a4,sp,48
    3080:	37a1                	jal	2fc8 <_aes_encrypt_table+0x51c>
    3082:	9696                	add	a3,a3,t0
    3084:	05050a0f          	0x5050a0f
    3088:	2fb5                	jal	3804 <_aes_encrypt_table+0xd58>
    308a:	9a9a                	add	s5,s5,t1
    308c:	0e09                	addi	t3,t3,2
    308e:	24360707          	0x24360707
    3092:	1212                	slli	tp,tp,0x24
    3094:	80801b9b          	0x80801b9b
    3098:	df3d                	beqz	a4,3016 <_aes_encrypt_table+0x56a>
    309a:	e2e2                	fsw	fs8,68(sp)
    309c:	cd26                	sw	s1,152(sp)
    309e:	4e69ebeb          	0x4e69ebeb
    30a2:	7fcd2727          	fsw	ft8,2030(s10) # 1b123c86 <_stack_start+0x1b113c86>
    30a6:	b2b2                	fsd	fa2,352(sp)
    30a8:	ea9f 7575 121b      	0x121b7575ea9f
    30ae:	0909                	addi	s2,s2,2
    30b0:	1d9e                	slli	s11,s11,0x27
    30b2:	58748383          	lb	t2,1415(s1) # 15587 <_stack_start+0x5587>
    30b6:	2c2c                	fld	fa1,88(s0)
    30b8:	342e                	fld	fs0,232(sp)
    30ba:	1a1a                	slli	s4,s4,0x26
    30bc:	362d                	jal	2be6 <_aes_encrypt_table+0x13a>
    30be:	dcb21b1b          	0xdcb21b1b
    30c2:	6e6e                	flw	ft8,216(sp)
    30c4:	b4ee                	fsd	fs11,104(sp)
    30c6:	5a5a                	lw	s4,180(sp)
    30c8:	a0a05bfb          	0xa0a05bfb
    30cc:	a4f6                	fsd	ft9,72(sp)
    30ce:	5252                	lw	tp,52(sp)
    30d0:	764d                	lui	a2,0xffff3
    30d2:	b7613b3b          	0xb7613b3b
    30d6:	d6d6                	sw	s5,108(sp)
    30d8:	7dce                	flw	fs11,240(sp)
    30da:	527bb3b3          	0x527bb3b3
    30de:	2929                	jal	34f8 <_aes_encrypt_table+0xa4c>
    30e0:	dd3e                	sw	a5,184(sp)
    30e2:	5e71e3e3          	bltu	gp,t2,3ec8 <impure_data+0xf8>
    30e6:	13972f2f          	0x13972f2f
    30ea:	8484                	0x8484
    30ec:	a6f5                	j	34d8 <_aes_encrypt_table+0xa2c>
    30ee:	b9685353          	0xb9685353
    30f2:	d1d1                	beqz	a1,3076 <_aes_encrypt_table+0x5ca>
    30f4:	0000                	unimp
    30f6:	0000                	unimp
    30f8:	c12c                	sw	a1,64(a0)
    30fa:	eded                	bnez	a1,31f4 <_aes_encrypt_table+0x748>
    30fc:	4060                	lw	s0,68(s0)
    30fe:	2020                	fld	fs0,64(s0)
    3100:	e31f fcfc 79c8      	0x79c8fcfce31f
    3106:	b1b1                	j	2d52 <_aes_encrypt_table+0x2a6>
    3108:	b6ed                	j	2cf2 <_aes_encrypt_table+0x246>
    310a:	d4be5b5b          	0xd4be5b5b
    310e:	6a6a                	flw	fs4,152(sp)
    3110:	8d46                	mv	s10,a7
    3112:	67d9cbcb          	fnmsub.q	fs7,fs3,ft9,fa2,rmm
    3116:	bebe                	fsd	fa5,376(sp)
    3118:	3939724b          	fnmsub.s	ft4,fs2,fs3,ft7
    311c:	94de                	add	s1,s1,s7
    311e:	4a4a                	lw	s4,144(sp)
    3120:	98d4                	0x98d4
    3122:	4c4c                	lw	a1,28(s0)
    3124:	b0e8                	fsd	fa0,224(s1)
    3126:	5858                	lw	a4,52(s0)
    3128:	854a                	mv	a0,s2
    312a:	bb6bcfcf          	fnmadd.d	ft11,fs7,fs6,fs7,rmm
    312e:	d0d0                	sw	a2,36(s1)
    3130:	c52a                	sw	a0,136(sp)
    3132:	4fe5efef          	jal	t6,61630 <_stack_start+0x51630>
    3136:	aaaa                	fsd	fa0,336(sp)
    3138:	ed16                	fsw	ft5,152(sp)
    313a:	86c5fbfb          	0x86c5fbfb
    313e:	9ad74343          	fmadd.d	ft6,fa4,fa3,fs3,rmm
    3142:	4d4d                	li	s10,19
    3144:	6655                	lui	a2,0x15
    3146:	11943333          	0x11943333
    314a:	8585                	srai	a1,a1,0x1
    314c:	45458acf          	0x45458acf
    3150:	e910                	fsw	fa2,16(a0)
    3152:	f9f9                	bnez	a1,3128 <_aes_encrypt_table+0x67c>
    3154:	0406                	slli	s0,s0,0x1
    3156:	0202                	c.slli64	tp
    3158:	fe81                	bnez	a3,3070 <_aes_encrypt_table+0x5c4>
    315a:	7f7f                	0x7f7f
    315c:	a0f0                	fsd	fa2,192(s1)
    315e:	5050                	lw	a2,36(s0)
    3160:	7844                	flw	fs1,52(s0)
    3162:	3c3c                	fld	fa5,120(s0)
    3164:	25ba                	fld	fa1,392(sp)
    3166:	9f9f 4be3 a8a8      	0xa8a84be39f9f
    316c:	5151a2f3          	csrrs	t0,0x515,gp
    3170:	5dfe                	lw	s11,252(sp)
    3172:	80c0a3a3          	sw	a2,-2041(ra) # ffff5807 <_stack_start+0xfffe5807>
    3176:	4040                	lw	s0,4(s0)
    3178:	058a                	slli	a1,a1,0x2
    317a:	3fad8f8f          	0x3fad8f8f
    317e:	9292                	add	t0,t0,tp
    3180:	21bc                	fld	fa5,64(a1)
    3182:	9d9d                	0x9d9d
    3184:	7048                	flw	fa0,36(s0)
    3186:	3838                	fld	fa4,112(s0)
    3188:	f104                	fsw	fs1,32(a0)
    318a:	f5f5                	bnez	a1,3176 <_aes_encrypt_table+0x6ca>
    318c:	63df bcbc 77c1      	0x77c1bcbc63df
    3192:	b6b6                	fsd	fa3,360(sp)
    3194:	af75                	j	3950 <_aes_encrypt_table+0xea4>
    3196:	dada                	sw	s6,116(sp)
    3198:	21214263          	blt	sp,s2,339c <_aes_encrypt_table+0x8f0>
    319c:	2030                	fld	fa2,64(s0)
    319e:	1010                	addi	a2,sp,32
    31a0:	e51a                	fsw	ft6,136(sp)
    31a2:	ffff                	0xffff
    31a4:	fd0e                	fsw	ft3,184(sp)
    31a6:	bf6df3f3          	csrrci	t2,0xbf6,27
    31aa:	d2d2                	sw	s4,100(sp)
    31ac:	814c                	0x814c
    31ae:	cdcd                	beqz	a1,3268 <_aes_encrypt_table+0x7bc>
    31b0:	1814                	addi	a3,sp,48
    31b2:	0c0c                	addi	a1,sp,528
    31b4:	2635                	jal	34e0 <_aes_encrypt_table+0xa34>
    31b6:	c32f1313          	0xc32f1313
    31ba:	ecec                	fsw	fa1,92(s1)
    31bc:	bee1                	j	2d94 <_aes_encrypt_table+0x2e8>
    31be:	5f5f 35a2 9797      	0x979735a25f5f
    31c4:	88cc                	0x88cc
    31c6:	4444                	lw	s1,12(s0)
    31c8:	2e39                	jal	34e6 <_aes_encrypt_table+0xa3a>
    31ca:	93571717          	auipc	a4,0x93571
    31ce:	c4c4                	sw	s1,12(s1)
    31d0:	55f2                	lw	a1,60(sp)
    31d2:	fc82a7a7          	fsw	fs0,-49(t0) # fde1bfcf <_stack_start+0xfde0bfcf>
    31d6:	7e7e                	flw	ft8,252(sp)
    31d8:	3d3d7a47          	0x3d3d7a47
    31dc:	c8ac                	sw	a1,80(s1)
    31de:	6464                	flw	fs1,76(s0)
    31e0:	5d5dbae7          	0x5d5dbae7
    31e4:	1919322b          	0x1919322b
    31e8:	e695                	bnez	a3,3214 <_aes_encrypt_table+0x768>
    31ea:	c0a07373          	csrrci	t1,hpmcounter10,0
    31ee:	6060                	flw	fs0,68(s0)
    31f0:	1998                	addi	a4,sp,240
    31f2:	8181                	c.srli64	a1
    31f4:	9ed1                	0x9ed1
    31f6:	a37f4f4f          	fnmadd.d	ft10,ft10,fs7,fs4,rmm
    31fa:	dcdc                	sw	a5,60(s1)
    31fc:	4466                	lw	s0,88(sp)
    31fe:	2222                	fld	ft4,8(sp)
    3200:	547e                	lw	s0,252(sp)
    3202:	2a2a                	fld	fs4,136(sp)
    3204:	90903bab          	0x90903bab
    3208:	88880b83          	lb	s7,-1912(a6) # 7888 <_bss_end+0x3290>
    320c:	8cca                	mv	s9,s2
    320e:	4646                	lw	a2,80(sp)
    3210:	c729                	beqz	a4,325a <_aes_encrypt_table+0x7ae>
    3212:	eeee                	fsw	fs11,92(sp)
    3214:	b8b86bd3          	0xb8b86bd3
    3218:	283c                	fld	fa5,80(s0)
    321a:	1414                	addi	a3,sp,544
    321c:	a779                	j	39aa <_aes_encrypt_table+0xefe>
    321e:	dede                	sw	s7,124(sp)
    3220:	bce2                	fsd	fs8,120(sp)
    3222:	5e5e                	lw	t3,244(sp)
    3224:	161d                	addi	a2,a2,-25
    3226:	ad760b0b          	0xad760b0b
    322a:	db3bdbdb          	0xdb3bdbdb
    322e:	e0e0                	fsw	fs0,68(s1)
    3230:	6456                	flw	fs0,84(sp)
    3232:	3232                	fld	ft4,296(sp)
    3234:	744e                	flw	fs0,240(sp)
    3236:	3a3a                	fld	fs4,424(sp)
    3238:	141e                	slli	s0,s0,0x27
    323a:	0a0a                	slli	s4,s4,0x2
    323c:	494992db          	0x494992db
    3240:	0c0a                	slli	s8,s8,0x2
    3242:	0606                	slli	a2,a2,0x1
    3244:	486c                	lw	a1,84(s0)
    3246:	2424                	fld	fs1,72(s0)
    3248:	b8e4                	fsd	fs1,240(s1)
    324a:	5c5c                	lw	a5,60(s0)
    324c:	9f5d                	0x9f5d
    324e:	c2c2                	sw	a6,68(sp)
    3250:	bd6e                	fsd	fs11,184(sp)
    3252:	43efd3d3          	0x43efd3d3
    3256:	acac                	fsd	fa1,88(s1)
    3258:	c4a6                	sw	s1,72(sp)
    325a:	6262                	flw	ft4,24(sp)
    325c:	39a8                	fld	fa0,112(a1)
    325e:	9191                	srli	a1,a1,0x24
    3260:	31a4                	fld	fs1,96(a1)
    3262:	9595                	srai	a1,a1,0x25
    3264:	e4e4d337          	lui	t1,0xe4e4d
    3268:	7979f28b          	0x7979f28b
    326c:	d532                	sw	a2,168(sp)
    326e:	8b43e7e7          	0x8b43e7e7
    3272:	c8c8                	sw	a0,20(s1)
    3274:	6e59                	lui	t3,0x16
    3276:	dab73737          	lui	a4,0xdab73
    327a:	6d6d                	lui	s10,0x1b
    327c:	018c                	addi	a1,sp,192
    327e:	8d8d                	sub	a1,a1,a1
    3280:	b164                	fsd	fs1,224(a0)
    3282:	d5d5                	beqz	a1,322e <_aes_encrypt_table+0x782>
    3284:	9cd2                	add	s9,s9,s4
    3286:	4e4e                	lw	t3,208(sp)
    3288:	49e0                	lw	s0,84(a1)
    328a:	a9a9                	j	36e4 <_aes_encrypt_table+0xc38>
    328c:	d8b4                	sw	a3,112(s1)
    328e:	6c6c                	flw	fa1,92(s0)
    3290:	acfa                	fsd	ft10,88(sp)
    3292:	5656                	lw	a2,116(sp)
    3294:	f4f4f307          	0xf4f4f307
    3298:	cf25                	beqz	a4,3310 <_aes_encrypt_table+0x864>
    329a:	eaea                	fsw	fs10,84(sp)
    329c:	6565caaf          	0x6565caaf
    32a0:	f48e                	fsw	ft3,104(sp)
    32a2:	7a7a                	flw	fs4,188(sp)
    32a4:	47e9                	li	a5,26
    32a6:	aeae                	fsd	fa1,344(sp)
    32a8:	1018                	addi	a4,sp,32
    32aa:	0808                	addi	a0,sp,16
    32ac:	6fd5                	lui	t6,0x15
    32ae:	baba                	fsd	fa4,368(sp)
    32b0:	f088                	fsw	fa0,32(s1)
    32b2:	7878                	flw	fa4,116(s0)
    32b4:	25254a6f          	jal	s4,57506 <_stack_start+0x47506>
    32b8:	5c72                	lw	s8,60(sp)
    32ba:	2e2e                	fld	ft8,200(sp)
    32bc:	3824                	fld	fs1,112(s0)
    32be:	1c1c                	addi	a5,sp,560
    32c0:	57f1                	li	a5,-4
    32c2:	a6a6                	fsd	fs1,328(sp)
    32c4:	b4b473c7          	0xb4b473c7
    32c8:	9751                	srai	a4,a4,0x34
    32ca:	c6c6                	sw	a7,76(sp)
    32cc:	e8e8cb23          	0xe8e8cb23
    32d0:	a17c                	fsd	fa5,192(a0)
    32d2:	dddd                	beqz	a1,3290 <_aes_encrypt_table+0x7e4>
    32d4:	e89c                	fsw	fa5,16(s1)
    32d6:	7474                	flw	fa3,108(s0)
    32d8:	3e21                	jal	2df0 <_aes_encrypt_table+0x344>
    32da:	1f1f 96dd 4b4b      	0x4b4b96dd1f1f
    32e0:	61dc                	flw	fa5,4(a1)
    32e2:	bdbd                	j	3160 <_aes_encrypt_table+0x6b4>
    32e4:	0d86                	slli	s11,s11,0x1
    32e6:	0f858b8b          	0xf858b8b
    32ea:	8a8a                	mv	s5,sp
    32ec:	e090                	fsw	fa2,0(s1)
    32ee:	7070                	flw	fa2,100(s0)
    32f0:	7c42                	flw	fs8,48(sp)
    32f2:	3e3e                	fld	ft8,488(sp)
    32f4:	71c4                	flw	fs1,36(a1)
    32f6:	b5b5                	j	3162 <_aes_encrypt_table+0x6b6>
    32f8:	ccaa                	sw	a0,88(sp)
    32fa:	6666                	flw	fa2,88(sp)
    32fc:	90d8                	0x90d8
    32fe:	4848                	lw	a0,20(s0)
    3300:	0605                	addi	a2,a2,1
    3302:	f7010303          	lb	t1,-144(sp)
    3306:	f6f6                	fsw	ft9,108(sp)
    3308:	1c12                	slli	s8,s8,0x24
    330a:	0e0e                	slli	t3,t3,0x3
    330c:	6161c2a3          	0x6161c2a3
    3310:	6a5f 3535 aef9      	0xaef935356a5f
    3316:	69d05757          	0x69d05757
    331a:	b9b9                	j	2f78 <_aes_encrypt_table+0x4cc>
    331c:	1791                	addi	a5,a5,-28
    331e:	8686                	mv	a3,ra
    3320:	9958                	0x9958
    3322:	c1c1                	beqz	a1,33a2 <_aes_encrypt_table+0x8f6>
    3324:	1d1d3a27          	fsd	fa7,468(s10) # 1b1d4 <_stack_start+0xb1d4>
    3328:	27b9                	jal	3a76 <_aes_encrypt_table+0xfca>
    332a:	9e9e                	add	t4,t4,t2
    332c:	d938                	sw	a4,112(a0)
    332e:	e1e1                	bnez	a1,33ee <_aes_encrypt_table+0x942>
    3330:	f8f8eb13          	ori	s6,a7,-113
    3334:	98982bb3          	0x98982bb3
    3338:	11112233          	0x11112233
    333c:	6969d2bb          	0x6969d2bb
    3340:	a970                	fsd	fa2,208(a0)
    3342:	d9d9                	beqz	a1,32d8 <_aes_encrypt_table+0x82c>
    3344:	0789                	addi	a5,a5,2
    3346:	8e8e                	mv	t4,gp
    3348:	949433a7          	fsd	fs1,-1721(s0) # ca826947 <_stack_start+0xca816947>
    334c:	2db6                	fld	fs11,328(sp)
    334e:	3c229b9b          	0x3c229b9b
    3352:	1e1e                	slli	t3,t3,0x27
    3354:	1592                	slli	a1,a1,0x24
    3356:	c9208787          	0xc9208787
    335a:	e9e9                	bnez	a1,342c <_aes_encrypt_table+0x980>
    335c:	8749                	srai	a4,a4,0x12
    335e:	cece                	sw	s3,92(sp)
    3360:	aaff                	0xaaff
    3362:	5555                	li	a0,-11
    3364:	5078                	lw	a4,100(s0)
    3366:	2828                	fld	fa0,80(s0)
    3368:	a57a                	fsd	ft10,136(sp)
    336a:	dfdf 038f 8c8c      	0x8c8c038fdfdf
    3370:	59f8                	lw	a4,116(a1)
    3372:	a1a1                	j	37ba <_aes_encrypt_table+0xd0e>
    3374:	0980                	addi	s0,sp,208
    3376:	8989                	andi	a1,a1,2
    3378:	0d0d1a17          	auipc	s4,0xd0d1
    337c:	65da                	flw	fa1,148(sp)
    337e:	d731bfbf 84c6e6e6 	0x84c6e6e6d731bfbf
    3386:	4242                	lw	tp,16(sp)
    3388:	d0b8                	sw	a4,96(s1)
    338a:	6868                	flw	fa0,84(s0)
    338c:	414182c3          	fmadd.s	ft5,ft3,fs4,fs0,rne
    3390:	29b0                	fld	fa2,80(a1)
    3392:	9999                	andi	a1,a1,-26
    3394:	2d2d5a77          	0x2d2d5a77
    3398:	1e11                	addi	t3,t3,-28
    339a:	7bcb0f0f          	0x7bcb0f0f
    339e:	b0b0                	fsd	fa2,96(s1)
    33a0:	a8fc                	fsd	fa5,208(s1)
    33a2:	5454                	lw	a3,44(s0)
    33a4:	6dd6                	flw	fs11,84(sp)
    33a6:	2c3abbbb          	0x2c3abbbb
    33aa:	1616                	slli	a2,a2,0x25
    33ac:	63c6a563          	0x63c6a563
    33b0:	847c                	0x847c
    33b2:	7cf8                	flw	fa4,124(s1)
    33b4:	77ee9977          	0x77ee9977
    33b8:	7bf68d7b          	0x7bf68d7b
    33bc:	0df2                	slli	s11,s11,0x1c
    33be:	f2ff                	0xf2ff
    33c0:	6bd6bd6b          	0x6bd6bd6b
    33c4:	6fdeb16f          	jal	sp,ef2c0 <_stack_start+0xdf2c0>
    33c8:	54c5                	li	s1,-15
    33ca:	c591                	beqz	a1,33d6 <_aes_encrypt_table+0x92a>
    33cc:	5030                	lw	a2,96(s0)
    33ce:	3060                	fld	fs0,224(s0)
    33d0:	0301                	addi	t1,t1,0
    33d2:	0102                	c.slli64	sp
    33d4:	67cea967          	0x67cea967
    33d8:	2b567d2b          	0x2b567d2b
    33dc:	19fe                	slli	s3,s3,0x3f
    33de:	62d7fee7          	0x62d7fee7
    33e2:	d7b5                	beqz	a5,334e <_aes_encrypt_table+0x8a2>
    33e4:	ab4de6ab          	0xab4de6ab
    33e8:	9a76                	add	s4,s4,t4
    33ea:	76ec                	flw	fa1,108(a3)
    33ec:	45ca                	lw	a1,144(sp)
    33ee:	9d82ca8f          	0x9d82ca8f
    33f2:	821f 40c9 c989      	0xc98940c9821f
    33f8:	877d                	srai	a4,a4,0x1f
    33fa:	7dfa                	flw	fs11,188(sp)
    33fc:	15fa                	slli	a1,a1,0x3e
    33fe:	eb59faef          	jal	s5,fffa32b2 <_stack_start+0xfff932b2>
    3402:	59b2                	lw	s3,44(sp)
    3404:	478ec947          	fmsub.q	fs2,ft9,fs8,fs0,rmm
    3408:	0bf0                	addi	a2,sp,476
    340a:	ecadf0fb          	0xecadf0fb
    340e:	ad41                	j	3a9e <_aes_encrypt_table+0xff2>
    3410:	67d4                	flw	fa3,12(a5)
    3412:	fda2d4b3          	0xfda2d4b3
    3416:	a25f eaaf af45      	0xaf45eaafa25f
    341c:	bf9c                	fsd	fa5,56(a5)
    341e:	f7a49c23          	sh	s10,-136(s1)
    3422:	9672a453          	0x9672a453
    3426:	72e4                	flw	fs1,100(a3)
    3428:	5bc0                	lw	s0,52(a5)
    342a:	c2b7c09b          	0xc2b7c09b
    342e:	b775                	j	33da <_aes_encrypt_table+0x92e>
    3430:	1cfd                	addi	s9,s9,-1
    3432:	fde1                	bnez	a1,340a <_aes_encrypt_table+0x95e>
    3434:	933dae93          	slti	t4,s11,-1741
    3438:	6a26                	flw	fs4,72(sp)
    343a:	264c                	fld	fa1,136(a2)
    343c:	5a36                	lw	s4,108(sp)
    343e:	366c                	fld	fa1,232(a2)
    3440:	3f7e413f f7f502f7 	0xf7f502f73f7e413f
    3448:	4fcc                	lw	a1,28(a5)
    344a:	5c34cc83          	lbu	s9,1475(s1)
    344e:	3468                	fld	fa0,232(s0)
    3450:	f4a5                	bnez	s1,33b8 <_aes_encrypt_table+0x90c>
    3452:	a551                	j	3ad6 <_aes_encrypt_table+0x102a>
    3454:	34e5                	jal	2f3c <_aes_encrypt_table+0x490>
    3456:	e5d1                	bnez	a1,34e2 <_aes_encrypt_table+0xa36>
    3458:	08f1                	addi	a7,a7,28
    345a:	f1f9                	bnez	a1,3420 <_aes_encrypt_table+0x974>
    345c:	9371                	srli	a4,a4,0x3c
    345e:	71e2                	flw	ft3,56(sp)
    3460:	73d8                	flw	fa4,36(a5)
    3462:	5331d8ab          	0x5331d8ab
    3466:	3162                	fld	ft2,56(sp)
    3468:	3f15                	jal	339c <_aes_encrypt_table+0x8f0>
    346a:	152a                	slli	a0,a0,0x2a
    346c:	0c04                	addi	s1,sp,528
    346e:	0408                	addi	a0,sp,512
    3470:	c79552c7          	fmsub.q	ft5,fa0,fs9,fs8,unknown
    3474:	23466523          	0x23466523
    3478:	c39d5ec3          	fmadd.d	ft9,fs10,fs9,fs8,unknown
    347c:	2818                	fld	fa4,16(s0)
    347e:	1830                	addi	a2,sp,56
    3480:	a196                	fsd	ft5,192(sp)
    3482:	0f059637          	lui	a2,0xf059
    3486:	050a                	slli	a0,a0,0x2
    3488:	b59a                	fsd	ft6,232(sp)
    348a:	09079a2f          	0x9079a2f
    348e:	070e                	slli	a4,a4,0x3
    3490:	3612                	fld	fa2,288(sp)
    3492:	1224                	addi	s1,sp,296
    3494:	9b80                	0x9b80
    3496:	3de2801b          	0x3de2801b
    349a:	e2df 26eb ebcd      	0xebcd26ebe2df
    34a0:	274e6927          	0x274e6927
    34a4:	cdb2                	sw	a2,216(sp)
    34a6:	b27f                	0xb27f
    34a8:	9f75                	0x9f75
    34aa:	75ea                	flw	fa1,184(sp)
    34ac:	1b09                	addi	s6,s6,-30
    34ae:	0912                	slli	s2,s2,0x4
    34b0:	831d9e83          	lh	t4,-1999(s11) # 2693e831 <_stack_start+0x2692e831>
    34b4:	742c                	flw	fa1,104(s0)
    34b6:	2c58                	fld	fa4,152(s0)
    34b8:	2e1a                	fld	ft8,384(sp)
    34ba:	1a34                	addi	a3,sp,312
    34bc:	1b362d1b          	0x1b362d1b
    34c0:	b26e                	fsd	fs11,288(sp)
    34c2:	6edc                	flw	fa5,28(a3)
    34c4:	ee5a                	fsw	fs6,28(sp)
    34c6:	5ab4                	lw	a3,112(a3)
    34c8:	fba0                	fsw	fs0,112(a5)
    34ca:	f652a05b          	0xf652a05b
    34ce:	52a4                	lw	s1,96(a3)
    34d0:	3b764d3b          	0x3b764d3b
    34d4:	61d6                	flw	ft3,84(sp)
    34d6:	ceb3d6b7          	lui	a3,0xceb3d
    34da:	b37d                	j	3288 <_aes_encrypt_table+0x7dc>
    34dc:	7b29                	lui	s6,0xfffea
    34de:	2952                	fld	fs2,272(sp)
    34e0:	e3dd3ee3          	0xe3dd3ee3
    34e4:	2f5e712f          	0x2f5e712f
    34e8:	9784                	0x9784
    34ea:	f5538413          	addi	s0,t2,-171
    34ee:	53a6                	lw	t2,104(sp)
    34f0:	68d1                	lui	a7,0x14
    34f2:	d1b9                	beqz	a1,3438 <_aes_encrypt_table+0x98c>
    34f4:	0000                	unimp
    34f6:	0000                	unimp
    34f8:	2ced                	jal	37f2 <_aes_encrypt_table+0xd46>
    34fa:	edc1                	bnez	a1,3592 <_aes_encrypt_table+0xae6>
    34fc:	6020                	flw	fs0,64(s0)
    34fe:	2040                	fld	fs0,128(s0)
    3500:	1ffc                	addi	a5,sp,1020
    3502:	c8b1fce3          	bgeu	gp,a1,319a <_aes_encrypt_table+0x6ee>
    3506:	b179                	j	3194 <_aes_encrypt_table+0x6e8>
    3508:	5bb6ed5b          	0x5bb6ed5b
    350c:	be6a                	fsd	fs10,312(sp)
    350e:	6ad4                	flw	fa3,20(a3)
    3510:	cb8d46cb          	fnmsub.d	fa3,fs10,fs8,fs9,rmm
    3514:	d9be                	sw	a5,240(sp)
    3516:	4b39be67          	0x4b39be67
    351a:	3972                	fld	fs2,312(sp)
    351c:	de4a                	sw	s2,60(sp)
    351e:	4a94                	lw	a3,16(a3)
    3520:	d44c                	sw	a1,44(s0)
    3522:	4c98                	lw	a4,24(s1)
    3524:	e858                	fsw	fa4,20(s0)
    3526:	58b0                	lw	a2,112(s1)
    3528:	cf854acf          	fnmadd.q	fs5,fa0,fs8,fs9,rmm
    352c:	6bd0                	flw	fa2,20(a5)
    352e:	2aefd0bb          	0x2aefd0bb
    3532:	efc5                	bnez	a5,35ea <_aes_encrypt_table+0xb3e>
    3534:	e5aa                	fsw	fa0,200(sp)
    3536:	16fbaa4f          	fnmadd.q	fs4,fs7,fa5,ft2,rdn
    353a:	fbed                	bnez	a5,352c <_aes_encrypt_table+0xa80>
    353c:	4386c543          	fmadd.d	fa0,fa3,fs8,fs0,rmm
    3540:	d74d                	beqz	a4,34ea <_aes_encrypt_table+0xa3e>
    3542:	4d9a                	lw	s11,132(sp)
    3544:	33665533          	0x33665533
    3548:	9485                	srai	s1,s1,0x21
    354a:	8511                	srai	a0,a0,0x4
    354c:	cf45                	beqz	a4,3604 <_aes_encrypt_table+0xb58>
    354e:	458a                	lw	a1,128(sp)
    3550:	10f9                	addi	ra,ra,-2
    3552:	f9e9                	bnez	a1,3524 <_aes_encrypt_table+0xa78>
    3554:	0602                	c.slli64	a2
    3556:	0204                	addi	s1,sp,256
    3558:	817f                	0x817f
    355a:	7ffe                	flw	ft11,252(sp)
    355c:	f050                	fsw	fa2,36(s0)
    355e:	50a0                	lw	s0,96(s1)
    3560:	443c                	lw	a5,72(s0)
    3562:	3c78                	fld	fa4,248(s0)
    3564:	ba9f 9f25 e3a8      	0xe3a89f25ba9f
    356a:	f351a84b          	fnmsub.d	fa6,ft3,fs5,ft10,rdn
    356e:	51a2                	lw	gp,40(sp)
    3570:	a35dfea3          	0xa35dfea3
    3574:	c040                	sw	s0,4(s0)
    3576:	4080                	lw	s0,0(s1)
    3578:	8f058a8f          	0x8f058a8f
    357c:	ad92                	fsd	ft4,216(sp)
    357e:	bc9d923f 48389d21 	0x48389d21bc9d923f
    3586:	3870                	fld	fa2,240(s0)
    3588:	04f5                	addi	s1,s1,29
    358a:	f5f1                	bnez	a1,3556 <_aes_encrypt_table+0xaaa>
    358c:	dfbc                	sw	a5,120(a5)
    358e:	c1b6bc63          	0xc1b6bc63
    3592:	75dab677          	0x75dab677
    3596:	6321daaf          	0x6321daaf
    359a:	2142                	fld	ft2,16(sp)
    359c:	3010                	fld	fa2,32(s0)
    359e:	1020                	addi	s0,sp,40
    35a0:	1aff                	0x1aff
    35a2:	ffe5                	bnez	a5,359a <_aes_encrypt_table+0xaee>
    35a4:	f3fd0ef3          	0xf3fd0ef3
    35a8:	6dd2                	flw	fs11,20(sp)
    35aa:	4ccdd2bf 140ccd81 	0x140ccd814ccdd2bf
    35b2:	0c18                	addi	a4,sp,528
    35b4:	13263513          	sltiu	a0,a2,306
    35b8:	2fec                	fld	fa1,216(a5)
    35ba:	e15fecc3          	fmadd.s	fs9,ft11,fs5,ft8,unknown
    35be:	5fbe                	lw	t6,236(sp)
    35c0:	9735a297          	auipc	t0,0x9735a
    35c4:	cc44                	sw	s1,28(s0)
    35c6:	4488                	lw	a0,8(s1)
    35c8:	172e3917          	auipc	s2,0x172e3
    35cc:	57c4                	lw	s1,44(a5)
    35ce:	f2a7c493          	xori	s1,a5,-214
    35d2:	a755                	j	3d76 <expected+0xa6>
    35d4:	827e                	mv	tp,t6
    35d6:	7efc                	flw	fa5,124(a3)
    35d8:	473d                	li	a4,15
    35da:	3d7a                	fld	fs10,440(sp)
    35dc:	ac64                	fsd	fs1,216(s0)
    35de:	64c8                	flw	fa0,12(s1)
    35e0:	e75d                	bnez	a4,368e <_aes_encrypt_table+0xbe2>
    35e2:	5dba                	lw	s11,172(sp)
    35e4:	2b19                	jal	3afa <_aes_encrypt_table+0x104e>
    35e6:	1932                	slli	s2,s2,0x2c
    35e8:	73e69573          	csrrw	a0,0x73e,a3
    35ec:	a060                	fsd	fs0,192(s0)
    35ee:	60c0                	flw	fs0,4(s1)
    35f0:	9881                	andi	s1,s1,-32
    35f2:	8119                	srli	a0,a0,0x6
    35f4:	4f9ed14f          	fnmadd.q	ft2,ft9,fs9,fs1,unknown
    35f8:	7fdc                	flw	fa5,60(a5)
    35fa:	6622dca3          	0x6622dca3
    35fe:	2244                	fld	fs1,128(a2)
    3600:	7e2a                	flw	ft8,168(sp)
    3602:	2a54                	fld	fa3,144(a2)
    3604:	ab90                	fsd	fa2,16(a5)
    3606:	8388903b          	0x8388903b
    360a:	ca46880b          	0xca46880b
    360e:	468c                	lw	a1,8(a3)
    3610:	29ee                	fld	fs3,216(sp)
    3612:	d3b8eec7          	fmsub.d	ft9,fa7,fs11,fs10,unknown
    3616:	3c14b86b          	0x3c14b86b
    361a:	1428                	addi	a0,sp,552
    361c:	79de                	flw	fs3,244(sp)
    361e:	e25edea7          	0xe25edea7
    3622:	5ebc                	lw	a5,120(a3)
    3624:	0b161d0b          	0xb161d0b
    3628:	dbad76db          	0xdbad76db
    362c:	3be0                	fld	fs0,240(a5)
    362e:	5632e0db          	0x5632e0db
    3632:	3264                	fld	fs1,224(a2)
    3634:	4e3a                	lw	t3,140(sp)
    3636:	3a74                	fld	fa3,240(a2)
    3638:	1e0a                	slli	t3,t3,0x22
    363a:	0a14                	addi	a3,sp,272
    363c:	db49                	beqz	a4,35ce <_aes_encrypt_table+0xb22>
    363e:	4992                	lw	s3,4(sp)
    3640:	0a06                	slli	s4,s4,0x1
    3642:	060c                	addi	a1,sp,768
    3644:	6c24                	flw	fs1,88(s0)
    3646:	2448                	fld	fa0,136(s0)
    3648:	e45c                	fsw	fa5,12(s0)
    364a:	5cb8                	lw	a4,120(s1)
    364c:	5dc2                	lw	s11,48(sp)
    364e:	c29f 6ed3 d3bd      	0xd3bd6ed3c29f
    3654:	efac                	fsw	fa1,88(a5)
    3656:	a662ac43          	fmadd.q	fs8,ft5,ft6,fs4,rdn
    365a:	62c4                	flw	fs1,4(a3)
    365c:	a891                	j	36b0 <_aes_encrypt_table+0xc04>
    365e:	9139                	srli	a0,a0,0x2e
    3660:	a495                	j	38c4 <_aes_encrypt_table+0xe18>
    3662:	9531                	srai	a0,a0,0x2c
    3664:	37e4                	fld	fs1,232(a5)
    3666:	8b79e4d3          	0x8b79e4d3
    366a:	79f2                	flw	fs3,60(sp)
    366c:	e7d532e7          	0xe7d532e7
    3670:	43c8                	lw	a0,4(a5)
    3672:	5937c88b          	0x5937c88b
    3676:	376e                	fld	fa4,248(sp)
    3678:	b76d                	j	3622 <_aes_encrypt_table+0xb76>
    367a:	6dda                	flw	fs11,148(sp)
    367c:	8c8d                	sub	s1,s1,a1
    367e:	8d01                	sub	a0,a0,s0
    3680:	64d5                	lui	s1,0x15
    3682:	d5b1                	beqz	a1,35ce <_aes_encrypt_table+0xb22>
    3684:	d24e                	sw	s3,36(sp)
    3686:	4e9c                	lw	a5,24(a3)
    3688:	e0a9                	bnez	s1,36ca <_aes_encrypt_table+0xc1e>
    368a:	a949                	j	3b1c <_aes_encrypt_table+0x1070>
    368c:	b46c                	fsd	fa1,232(s0)
    368e:	6cd8                	flw	fa4,28(s1)
    3690:	fa56                	fsw	fs5,52(sp)
    3692:	56ac                	lw	a1,104(a3)
    3694:	07f4                	addi	a3,sp,972
    3696:	25eaf4f3          	csrrci	s1,0x25e,21
    369a:	af65eacf          	fnmadd.q	fs5,fa1,fs6,fs5,unknown
    369e:	65ca                	flw	fa1,144(sp)
    36a0:	8e7a                	mv	t3,t5
    36a2:	7af4                	flw	fa3,116(a3)
    36a4:	e9ae                	fsw	fa1,208(sp)
    36a6:	1808ae47          	fmsub.s	ft8,fa7,ft0,ft3,rdn
    36aa:	0810                	addi	a2,sp,16
    36ac:	d5ba                	sw	a4,232(sp)
    36ae:	8878ba6f          	jal	s4,fff8ef34 <_stack_start+0xfff7ef34>
    36b2:	78f0                	flw	fa2,116(s1)
    36b4:	6f25                	lui	t5,0x9
    36b6:	254a                	fld	fa0,144(sp)
    36b8:	722e                	flw	ft4,232(sp)
    36ba:	2e5c                	fld	fa5,152(a2)
    36bc:	241c                	fld	fa5,8(s0)
    36be:	1c38                	addi	a4,sp,568
    36c0:	f1a6                	fsw	fs1,224(sp)
    36c2:	c7b4a657          	0xc7b4a657
    36c6:	51c6b473          	csrrc	s0,0x51c,a3
    36ca:	23e8c697          	auipc	a3,0x23e8c
    36ce:	7cdde8cb          	0x7cdde8cb
    36d2:	dda1                	beqz	a1,362a <_aes_encrypt_table+0xb7e>
    36d4:	9c74                	0x9c74
    36d6:	74e8                	flw	fa0,108(s1)
    36d8:	211f 1f3e dd4b      	0xdd4b1f3e211f
    36de:	4b96                	lw	s7,68(sp)
    36e0:	dcbd                	beqz	s1,365e <_aes_encrypt_table+0xbb2>
    36e2:	bd61                	j	357a <_aes_encrypt_table+0xace>
    36e4:	8b0d868b          	0x8b0d868b
    36e8:	858a                	mv	a1,sp
    36ea:	90708a0f          	0x90708a0f
    36ee:	70e0                	flw	fs0,100(s1)
    36f0:	423e                	lw	tp,204(sp)
    36f2:	3e7c                	fld	fa5,248(a2)
    36f4:	c4b5                	beqz	s1,3760 <_aes_encrypt_table+0xcb4>
    36f6:	b571                	j	3582 <_aes_encrypt_table+0xad6>
    36f8:	aa66                	fsd	fs9,272(sp)
    36fa:	66cc                	flw	fa1,12(a3)
    36fc:	d848                	sw	a0,52(s0)
    36fe:	4890                	lw	a2,16(s1)
    3700:	03060503          	lb	a0,48(a2) # f059030 <_stack_start+0xf049030>
    3704:	01f6                	slli	gp,gp,0x1d
    3706:	120ef6f7          	0x120ef6f7
    370a:	0e1c                	addi	a5,sp,784
    370c:	a361                	j	3c94 <plaintext+0xc4>
    370e:	61c2                	flw	ft3,16(sp)
    3710:	5f35                	li	t5,-19
    3712:	356a                	fld	fa0,184(sp)
    3714:	57aef957          	0x57aef957
    3718:	d0b9                	beqz	s1,365e <_aes_encrypt_table+0xbb2>
    371a:	b969                	j	33b4 <_aes_encrypt_table+0x908>
    371c:	9186                	add	gp,gp,ra
    371e:	58c18617          	auipc	a2,0x58c18
    3722:	c199                	beqz	a1,3728 <_aes_encrypt_table+0xc7c>
    3724:	271d                	jal	3e4a <impure_data+0x7a>
    3726:	1d3a                	slli	s10,s10,0x2e
    3728:	b99e                	fsd	ft7,240(sp)
    372a:	38e19e27          	0x38e19e27
    372e:	e1d9                	bnez	a1,37b4 <_aes_encrypt_table+0xd08>
    3730:	13f8                	addi	a4,sp,492
    3732:	b398f8eb          	0xb398f8eb
    3736:	3311982b          	0x3311982b
    373a:	1122                	slli	sp,sp,0x28
    373c:	bb69                	j	34d6 <_aes_encrypt_table+0xa2a>
    373e:	69d2                	flw	fs3,20(sp)
    3740:	70d9                	lui	ra,0xffff6
    3742:	d9a9                	beqz	a1,3694 <_aes_encrypt_table+0xbe8>
    3744:	898e                	mv	s3,gp
    3746:	a7948e07          	0xa7948e07
    374a:	b69b9433          	0xb69b9433
    374e:	9b2d                	andi	a4,a4,-21
    3750:	221e                	fld	ft4,448(sp)
    3752:	1e3c                	addi	a5,sp,824
    3754:	87159287          	0x87159287
    3758:	20e9                	jal	3822 <_aes_encrypt_table+0xd76>
    375a:	e9c9                	bnez	a1,37ec <_aes_encrypt_table+0xd40>
    375c:	49ce                	lw	s3,208(sp)
    375e:	ff55ce87          	flq	ft9,-11(a1) # 12ff5 <_stack_start+0x2ff5>
    3762:	55aa                	lw	a1,168(sp)
    3764:	7828                	flw	fa0,112(s0)
    3766:	2850                	fld	fa2,144(s0)
    3768:	7adf dfa5 8f8c      	0x8f8cdfa57adf
    376e:	f8a18c03          	lb	s8,-118(gp) # ede55f8a <_stack_start+0xede45f8a>
    3772:	a159                	j	3bf8 <plaintext+0x28>
    3774:	8089                	srli	s1,s1,0x2
    3776:	8909                	andi	a0,a0,2
    3778:	170d                	addi	a4,a4,-29
    377a:	0d1a                	slli	s10,s10,0x6
    377c:	bf65dabf e6d731e6 	0xe6d731e6bf65dabf
    3784:	c642                	sw	a6,12(sp)
    3786:	4284                	lw	s1,0(a3)
    3788:	b868                	fsd	fa0,240(s0)
    378a:	68d0                	flw	fa2,20(s1)
    378c:	c341                	beqz	a4,380c <_aes_encrypt_table+0xd60>
    378e:	4182                	lw	gp,0(sp)
    3790:	b099                	j	2fd6 <_aes_encrypt_table+0x52a>
    3792:	9929                	andi	a0,a0,-22
    3794:	772d                	lui	a4,0xfffeb
    3796:	2d5a                	fld	fs10,400(sp)
    3798:	0f1e110f          	0xf1e110f
    379c:	cbb0                	sw	a2,80(a5)
    379e:	fc54b07b          	0xfc54b07b
    37a2:	54a8                	lw	a0,104(s1)
    37a4:	bb6dd6bb          	0xbb6dd6bb
    37a8:	3a16                	fld	fs4,352(sp)
    37aa:	162c                	addi	a1,sp,808
    37ac:	c6a56363          	bltu	a0,a0,2c12 <_aes_encrypt_table+0x166>
    37b0:	7c7c                	flw	fa5,124(s0)
    37b2:	f884                	fsw	fs1,48(s1)
    37b4:	ee997777          	0xee997777
    37b8:	f68d7b7b          	0xf68d7b7b
    37bc:	f2f2                	fsw	ft8,100(sp)
    37be:	ff0d                	bnez	a4,36f8 <_aes_encrypt_table+0xc4c>
    37c0:	d6bd6b6b          	0xd6bd6b6b
    37c4:	deb16f6f          	jal	t5,fff1a5ae <_stack_start+0xfff0a5ae>
    37c8:	c5c5                	beqz	a1,3870 <_aes_encrypt_table+0xdc4>
    37ca:	9154                	0x9154
    37cc:	3030                	fld	fa2,96(s0)
    37ce:	6050                	flw	fa2,4(s0)
    37d0:	0101                	addi	sp,sp,0
    37d2:	67670203          	lb	tp,1654(a4) # fffeb676 <_stack_start+0xfffdb676>
    37d6:	cea9                	beqz	a3,3830 <_aes_encrypt_table+0xd84>
    37d8:	567d2b2b          	0x567d2b2b
    37dc:	fefe                	fsw	ft11,124(sp)
    37de:	e719                	bnez	a4,37ec <_aes_encrypt_table+0xd40>
    37e0:	b562d7d7          	0xb562d7d7
    37e4:	4de6abab          	0x4de6abab
    37e8:	7676                	flw	fa2,124(sp)
    37ea:	ec9a                	fsw	ft6,88(sp)
    37ec:	caca                	sw	s2,84(sp)
    37ee:	8f45                	or	a4,a4,s1
    37f0:	8282                	jr	t0
    37f2:	1f9d                	addi	t6,t6,-25
    37f4:	c9c9                	beqz	a1,3886 <_aes_encrypt_table+0xdda>
    37f6:	8940                	0x8940
    37f8:	7d7d                	lui	s10,0xfffff
    37fa:	fafafa87          	0xfafafa87
    37fe:	ef15                	bnez	a4,383a <_aes_encrypt_table+0xd8e>
    3800:	5959                	li	s2,-10
    3802:	4747b2eb          	0x4747b2eb
    3806:	8ec9                	or	a3,a3,a0
    3808:	f0f0                	fsw	fa2,100(s1)
    380a:	adadfb0b          	0xadadfb0b
    380e:	41ec                	lw	a1,68(a1)
    3810:	d4d4                	sw	a3,44(s1)
    3812:	a2a2b367          	0xa2a2b367
    3816:	5ffd                	li	t6,-1
    3818:	45eaafaf          	amoor.w.aq	t6,t5,(s5)
    381c:	9c9c                	0x9c9c
    381e:	a4a423bf 727253f7 	0x727253f7a4a423bf
    3826:	e496                	fsw	ft5,72(sp)
    3828:	c0c0                	sw	s0,4(s1)
    382a:	b7b79b5b          	0xb7b79b5b
    382e:	75c2                	flw	fa1,48(sp)
    3830:	fdfd                	bnez	a1,382e <_aes_encrypt_table+0xd82>
    3832:	e11c                	fsw	fa5,0(a0)
    3834:	3dae9393          	0x3dae9393
    3838:	2626                	fld	fa2,72(sp)
    383a:	4c6a                	lw	s8,152(sp)
    383c:	3636                	fld	fa2,360(sp)
    383e:	6c5a                	flw	fs8,148(sp)
    3840:	7e413f3f f502f7f7 	0xf502f7f77e413f3f
    3848:	cccc                	sw	a1,28(s1)
    384a:	3434834f          	0x3434834f
    384e:	685c                	flw	fa5,20(s0)
    3850:	a5a5                	j	3eb8 <impure_data+0xe8>
    3852:	51f4                	lw	a3,100(a1)
    3854:	e5e5                	bnez	a1,393c <_aes_encrypt_table+0xe90>
    3856:	d134                	sw	a3,96(a0)
    3858:	f1f1                	bnez	a1,381c <_aes_encrypt_table+0xd70>
    385a:	f908                	fsw	fa0,48(a0)
    385c:	7171                	addi	sp,sp,-176
    385e:	d8d8e293          	ori	t0,a7,-627
    3862:	3131ab73          	csrrs	s6,0x313,gp
    3866:	15156253          	0x15156253
    386a:	04042a3f c7c7080c 	0xc7c7080c04042a3f
    3872:	9552                	add	a0,a0,s4
    3874:	46652323          	sw	t1,1126(a0)
    3878:	9d5ec3c3          	0x9d5ec3c3
    387c:	1818                	addi	a4,sp,48
    387e:	3028                	fld	fa0,96(s0)
    3880:	9696                	add	a3,a3,t0
    3882:	37a1                	jal	37ca <_aes_encrypt_table+0xd1e>
    3884:	0505                	addi	a0,a0,1
    3886:	9a9a0a0f          	0x9a9a0a0f
    388a:	2fb5                	jal	4006 <_stack_len+0x6>
    388c:	0e090707          	0xe090707
    3890:	1212                	slli	tp,tp,0x24
    3892:	2436                	fld	fs0,328(sp)
    3894:	8080                	0x8080
    3896:	e2e21b9b          	0xe2e21b9b
    389a:	df3d                	beqz	a4,3818 <_aes_encrypt_table+0xd6c>
    389c:	cd26ebeb          	0xcd26ebeb
    38a0:	4e692727          	fsw	ft6,1262(s2) # 172e6ab6 <_stack_start+0x172d6ab6>
    38a4:	b2b2                	fsd	fa2,352(sp)
    38a6:	7fcd                	lui	t6,0xffff3
    38a8:	7575                	lui	a0,0xffffd
    38aa:	ea9f 0909 121b      	0x121b0909ea9f
    38b0:	1d9e8383          	lb	t2,473(t4)
    38b4:	2c2c                	fld	fa1,88(s0)
    38b6:	5874                	lw	a3,116(s0)
    38b8:	1a1a                	slli	s4,s4,0x26
    38ba:	342e                	fld	fs0,232(sp)
    38bc:	362d1b1b          	0x362d1b1b
    38c0:	6e6e                	flw	ft8,216(sp)
    38c2:	dcb2                	sw	a2,120(sp)
    38c4:	5a5a                	lw	s4,180(sp)
    38c6:	b4ee                	fsd	fs11,104(sp)
    38c8:	a0a0                	fsd	fs0,64(s1)
    38ca:	52525bfb          	0x52525bfb
    38ce:	a4f6                	fsd	ft9,72(sp)
    38d0:	764d3b3b          	0x764d3b3b
    38d4:	d6d6                	sw	s5,108(sp)
    38d6:	b761                	j	385e <_aes_encrypt_table+0xdb2>
    38d8:	7dceb3b3          	0x7dceb3b3
    38dc:	2929                	jal	3cf6 <expected+0x26>
    38de:	e3e3527b          	0xe3e3527b
    38e2:	dd3e                	sw	a5,184(sp)
    38e4:	5e712f2f          	0x5e712f2f
    38e8:	8484                	0x8484
    38ea:	53531397          	auipc	t2,0x53531
    38ee:	a6f5                	j	3cda <expected+0xa>
    38f0:	d1d1                	beqz	a1,3874 <_aes_encrypt_table+0xdc8>
    38f2:	b968                	fsd	fa0,240(a0)
    38f4:	0000                	unimp
    38f6:	0000                	unimp
    38f8:	eded                	bnez	a1,39f2 <_aes_encrypt_table+0xf46>
    38fa:	c12c                	sw	a1,64(a0)
    38fc:	2020                	fld	fs0,64(s0)
    38fe:	4060                	lw	s0,68(s0)
    3900:	fcfc                	fsw	fa5,124(s1)
    3902:	e31f b1b1 79c8      	0x79c8b1b1e31f
    3908:	b6ed5b5b          	0xb6ed5b5b
    390c:	6a6a                	flw	fs4,152(sp)
    390e:	d4be                	sw	a5,104(sp)
    3910:	8d46cbcb          	0x8d46cbcb
    3914:	bebe                	fsd	fa5,376(sp)
    3916:	67d9                	lui	a5,0x16
    3918:	3939                	jal	3536 <_aes_encrypt_table+0xa8a>
    391a:	4a4a724b          	fnmsub.d	ft4,fs4,ft4,fs1
    391e:	94de                	add	s1,s1,s7
    3920:	4c4c                	lw	a1,28(s0)
    3922:	98d4                	0x98d4
    3924:	5858                	lw	a4,52(s0)
    3926:	b0e8                	fsd	fa0,224(s1)
    3928:	854acfcf          	0x854acfcf
    392c:	d0d0                	sw	a2,36(s1)
    392e:	efefbb6b          	0xefefbb6b
    3932:	c52a                	sw	a0,136(sp)
    3934:	aaaa                	fsd	fa0,336(sp)
    3936:	4fe5                	li	t6,25
    3938:	ed16fbfb          	0xed16fbfb
    393c:	86c54343          	fmadd.q	ft6,fa0,fa2,fa6,rmm
    3940:	4d4d                	li	s10,19
    3942:	33339ad7          	0x33339ad7
    3946:	6655                	lui	a2,0x15
    3948:	8585                	srai	a1,a1,0x1
    394a:	1194                	addi	a3,sp,224
    394c:	4545                	li	a0,17
    394e:	f9f98acf          	fnmadd.s	fs5,fs3,ft11,ft11,rne
    3952:	e910                	fsw	fa2,16(a0)
    3954:	0202                	c.slli64	tp
    3956:	0406                	slli	s0,s0,0x1
    3958:	7f7f                	0x7f7f
    395a:	fe81                	bnez	a3,3872 <_aes_encrypt_table+0xdc6>
    395c:	5050                	lw	a2,36(s0)
    395e:	a0f0                	fsd	fa2,192(s1)
    3960:	3c3c                	fld	fa5,120(s0)
    3962:	7844                	flw	fs1,52(s0)
    3964:	9f9f 25ba a8a8      	0xa8a825ba9f9f
    396a:	51514be3          	blt	sp,s5,4680 <_bss_end+0x88>
    396e:	a3a3a2f3          	csrrs	t0,0xa3a,t2
    3972:	5dfe                	lw	s11,252(sp)
    3974:	4040                	lw	s0,4(s0)
    3976:	80c0                	0x80c0
    3978:	058a8f8f          	0x58a8f8f
    397c:	9292                	add	t0,t0,tp
    397e:	3fad                	jal	38f8 <_aes_encrypt_table+0xe4c>
    3980:	9d9d                	0x9d9d
    3982:	21bc                	fld	fa5,64(a1)
    3984:	3838                	fld	fa4,112(s0)
    3986:	7048                	flw	fa0,36(s0)
    3988:	f5f5                	bnez	a1,3974 <_aes_encrypt_table+0xec8>
    398a:	f104                	fsw	fs1,32(a0)
    398c:	bcbc                	fsd	fa5,120(s1)
    398e:	63df b6b6 77c1      	0x77c1b6b663df
    3994:	dada                	sw	s6,116(sp)
    3996:	af75                	j	4152 <_stack_len+0x152>
    3998:	2121                	jal	3da0 <expected+0xd0>
    399a:	10104263          	bgtz	ra,3a9e <_aes_encrypt_table+0xff2>
    399e:	2030                	fld	fa2,64(s0)
    39a0:	ffff                	0xffff
    39a2:	e51a                	fsw	ft6,136(sp)
    39a4:	fd0ef3f3          	csrrci	t2,0xfd0,29
    39a8:	d2d2                	sw	s4,100(sp)
    39aa:	bf6d                	j	3964 <_aes_encrypt_table+0xeb8>
    39ac:	cdcd                	beqz	a1,3a66 <_aes_encrypt_table+0xfba>
    39ae:	814c                	0x814c
    39b0:	0c0c                	addi	a1,sp,528
    39b2:	1814                	addi	a3,sp,48
    39b4:	26351313          	0x26351313
    39b8:	ecec                	fsw	fa1,92(s1)
    39ba:	5f5fc32f          	0x5f5fc32f
    39be:	bee1                	j	3596 <_aes_encrypt_table+0xaea>
    39c0:	35a29797          	auipc	a5,0x35a29
    39c4:	4444                	lw	s1,12(s0)
    39c6:	88cc                	0x88cc
    39c8:	2e391717          	auipc	a4,0x2e391
    39cc:	c4c4                	sw	s1,12(s1)
    39ce:	a7a79357          	0xa7a79357
    39d2:	55f2                	lw	a1,60(sp)
    39d4:	7e7e                	flw	ft8,252(sp)
    39d6:	fc82                	fsw	ft0,120(sp)
    39d8:	3d3d                	jal	3816 <_aes_encrypt_table+0xd6a>
    39da:	64647a47          	0x64647a47
    39de:	c8ac                	sw	a1,80(s1)
    39e0:	5d5d                	li	s10,-9
    39e2:	1919bae7          	0x1919bae7
    39e6:	7373322b          	0x7373322b
    39ea:	e695                	bnez	a3,3a16 <_aes_encrypt_table+0xf6a>
    39ec:	6060                	flw	fs0,68(s0)
    39ee:	c0a0                	sw	s0,64(s1)
    39f0:	8181                	c.srli64	a1
    39f2:	1998                	addi	a4,sp,240
    39f4:	9ed14f4f          	fnmadd.q	ft10,ft2,fa3,fs3,rmm
    39f8:	dcdc                	sw	a5,60(s1)
    39fa:	a37f                	0xa37f
    39fc:	2222                	fld	ft4,8(sp)
    39fe:	4466                	lw	s0,88(sp)
    3a00:	2a2a                	fld	fs4,136(sp)
    3a02:	547e                	lw	s0,252(sp)
    3a04:	9090                	0x9090
    3a06:	88883bab          	0x88883bab
    3a0a:	46460b83          	lb	s7,1124(a2) # 15464 <_stack_start+0x5464>
    3a0e:	8cca                	mv	s9,s2
    3a10:	eeee                	fsw	fs11,92(sp)
    3a12:	c729                	beqz	a4,3a5c <_aes_encrypt_table+0xfb0>
    3a14:	b8b8                	fsd	fa4,112(s1)
    3a16:	14146bd3          	0x14146bd3
    3a1a:	283c                	fld	fa5,80(s0)
    3a1c:	dede                	sw	s7,124(sp)
    3a1e:	a779                	j	41ac <_stack_len+0x1ac>
    3a20:	5e5e                	lw	t3,244(sp)
    3a22:	bce2                	fsd	fs8,120(sp)
    3a24:	161d0b0b          	0x161d0b0b
    3a28:	ad76dbdb          	0xad76dbdb
    3a2c:	e0e0                	fsw	fs0,68(s1)
    3a2e:	3232db3b          	0x3232db3b
    3a32:	6456                	flw	fs0,84(sp)
    3a34:	3a3a                	fld	fs4,424(sp)
    3a36:	744e                	flw	fs0,240(sp)
    3a38:	0a0a                	slli	s4,s4,0x2
    3a3a:	141e                	slli	s0,s0,0x27
    3a3c:	4949                	li	s2,18
    3a3e:	060692db          	0x60692db
    3a42:	0c0a                	slli	s8,s8,0x2
    3a44:	2424                	fld	fs1,72(s0)
    3a46:	486c                	lw	a1,84(s0)
    3a48:	5c5c                	lw	a5,60(s0)
    3a4a:	b8e4                	fsd	fs1,240(s1)
    3a4c:	c2c2                	sw	a6,68(sp)
    3a4e:	9f5d                	0x9f5d
    3a50:	bd6ed3d3          	0xbd6ed3d3
    3a54:	acac                	fsd	fa1,88(s1)
    3a56:	626243ef          	jal	t2,2807c <_stack_start+0x1807c>
    3a5a:	c4a6                	sw	s1,72(sp)
    3a5c:	9191                	srli	a1,a1,0x24
    3a5e:	39a8                	fld	fa0,112(a1)
    3a60:	9595                	srai	a1,a1,0x25
    3a62:	31a4                	fld	fs1,96(a1)
    3a64:	e4e4                	fsw	fs1,76(s1)
    3a66:	7979d337          	lui	t1,0x7979d
    3a6a:	e7e7f28b          	0xe7e7f28b
    3a6e:	d532                	sw	a2,168(sp)
    3a70:	c8c8                	sw	a0,20(s1)
    3a72:	37378b43          	fmadd.q	fs6,fa5,fs3,ft6,rne
    3a76:	6e59                	lui	t3,0x16
    3a78:	6d6d                	lui	s10,0x1b
    3a7a:	8d8ddab7          	lui	s5,0x8d8dd
    3a7e:	018c                	addi	a1,sp,192
    3a80:	d5d5                	beqz	a1,3a2c <_aes_encrypt_table+0xf80>
    3a82:	b164                	fsd	fs1,224(a0)
    3a84:	4e4e                	lw	t3,208(sp)
    3a86:	9cd2                	add	s9,s9,s4
    3a88:	a9a9                	j	3ee2 <impure_data+0x112>
    3a8a:	49e0                	lw	s0,84(a1)
    3a8c:	6c6c                	flw	fa1,92(s0)
    3a8e:	d8b4                	sw	a3,112(s1)
    3a90:	5656                	lw	a2,116(sp)
    3a92:	acfa                	fsd	ft10,88(sp)
    3a94:	f4f4                	fsw	fa3,108(s1)
    3a96:	eaeaf307          	0xeaeaf307
    3a9a:	cf25                	beqz	a4,3b12 <_aes_encrypt_table+0x1066>
    3a9c:	6565                	lui	a0,0x19
    3a9e:	7a7acaaf          	0x7a7acaaf
    3aa2:	f48e                	fsw	ft3,104(sp)
    3aa4:	aeae                	fsd	fa1,344(sp)
    3aa6:	47e9                	li	a5,26
    3aa8:	0808                	addi	a0,sp,16
    3aaa:	1018                	addi	a4,sp,32
    3aac:	baba                	fsd	fa4,368(sp)
    3aae:	6fd5                	lui	t6,0x15
    3ab0:	7878                	flw	fa4,116(s0)
    3ab2:	f088                	fsw	fa0,32(s1)
    3ab4:	2525                	jal	40dc <_stack_len+0xdc>
    3ab6:	2e2e4a6f          	jal	s4,e7d98 <_stack_start+0xd7d98>
    3aba:	5c72                	lw	s8,60(sp)
    3abc:	1c1c                	addi	a5,sp,560
    3abe:	3824                	fld	fs1,112(s0)
    3ac0:	a6a6                	fsd	fs1,328(sp)
    3ac2:	57f1                	li	a5,-4
    3ac4:	b4b4                	fsd	fa3,104(s1)
    3ac6:	c6c673c7          	fmsub.q	ft7,fa2,fa2,fs8
    3aca:	9751                	srai	a4,a4,0x34
    3acc:	e8e8                	fsw	fa0,84(s1)
    3ace:	ddddcb23          	0xddddcb23
    3ad2:	a17c                	fsd	fa5,192(a0)
    3ad4:	7474                	flw	fa3,108(s0)
    3ad6:	e89c                	fsw	fa5,16(s1)
    3ad8:	1f1f 3e21 4b4b      	0x4b4b3e211f1f
    3ade:	96dd                	srai	a3,a3,0x37
    3ae0:	bdbd                	j	395e <_aes_encrypt_table+0xeb2>
    3ae2:	61dc                	flw	fa5,4(a1)
    3ae4:	0d868b8b          	0xd868b8b
    3ae8:	8a8a                	mv	s5,sp
    3aea:	0f85                	addi	t6,t6,1
    3aec:	7070                	flw	fa2,100(s0)
    3aee:	e090                	fsw	fa2,0(s1)
    3af0:	3e3e                	fld	ft8,488(sp)
    3af2:	7c42                	flw	fs8,48(sp)
    3af4:	b5b5                	j	3960 <_aes_encrypt_table+0xeb4>
    3af6:	71c4                	flw	fs1,36(a1)
    3af8:	6666                	flw	fa2,88(sp)
    3afa:	ccaa                	sw	a0,88(sp)
    3afc:	4848                	lw	a0,20(s0)
    3afe:	90d8                	0x90d8
    3b00:	06050303          	lb	t1,96(a0) # 19060 <_stack_start+0x9060>
    3b04:	f6f6                	fsw	ft9,108(sp)
    3b06:	f701                	bnez	a4,3a0e <_aes_encrypt_table+0xf62>
    3b08:	0e0e                	slli	t3,t3,0x3
    3b0a:	1c12                	slli	s8,s8,0x24
    3b0c:	6161                	addi	sp,sp,80
    3b0e:	3535c2a3          	0x3535c2a3
    3b12:	6a5f 5757 aef9      	0xaef957576a5f
    3b18:	b9b9                	j	3776 <_aes_encrypt_table+0xcca>
    3b1a:	69d0                	flw	fa2,20(a1)
    3b1c:	8686                	mv	a3,ra
    3b1e:	1791                	addi	a5,a5,-28
    3b20:	c1c1                	beqz	a1,3ba0 <_aes_encrypt_table+0x10f4>
    3b22:	9958                	0x9958
    3b24:	1d1d                	addi	s10,s10,-25
    3b26:	9e9e3a27          	fsd	fs1,-1548(t3) # 159f4 <_stack_start+0x59f4>
    3b2a:	27b9                	jal	4278 <decrypted+0x68>
    3b2c:	e1e1                	bnez	a1,3bec <plaintext+0x1c>
    3b2e:	d938                	sw	a4,112(a0)
    3b30:	f8f8                	fsw	fa4,116(s1)
    3b32:	9898eb13          	ori	s6,a7,-1655
    3b36:	11112bb3          	0x11112bb3
    3b3a:	69692233          	0x69692233
    3b3e:	d9d9d2bb          	0xd9d9d2bb
    3b42:	a970                	fsd	fa2,208(a0)
    3b44:	8e8e                	mv	t4,gp
    3b46:	0789                	addi	a5,a5,2
    3b48:	9494                	0x9494
    3b4a:	9b9b33a7          	fsd	fs9,-1625(s6) # fffe99a7 <_stack_start+0xfffd99a7>
    3b4e:	2db6                	fld	fs11,328(sp)
    3b50:	1e1e                	slli	t3,t3,0x27
    3b52:	3c22                	fld	fs8,40(sp)
    3b54:	15928787          	0x15928787
    3b58:	e9e9                	bnez	a1,3c2a <plaintext+0x5a>
    3b5a:	c920                	sw	s0,80(a0)
    3b5c:	cece                	sw	s3,92(sp)
    3b5e:	8749                	srai	a4,a4,0x12
    3b60:	5555                	li	a0,-11
    3b62:	aaff                	0xaaff
    3b64:	2828                	fld	fa0,80(s0)
    3b66:	5078                	lw	a4,100(s0)
    3b68:	dfdf a57a 8c8c      	0x8c8ca57adfdf
    3b6e:	a1a1038f          	0xa1a1038f
    3b72:	59f8                	lw	a4,116(a1)
    3b74:	8989                	andi	a1,a1,2
    3b76:	0980                	addi	s0,sp,208
    3b78:	0d0d                	addi	s10,s10,3
    3b7a:	bfbf1a17          	auipc	s4,0xbfbf1
    3b7e:	65da                	flw	fa1,148(sp)
    3b80:	e6e6                	fsw	fs9,76(sp)
    3b82:	d731                	beqz	a4,3ace <_aes_encrypt_table+0x1022>
    3b84:	4242                	lw	tp,16(sp)
    3b86:	84c6                	mv	s1,a7
    3b88:	6868                	flw	fa0,84(s0)
    3b8a:	d0b8                	sw	a4,96(s1)
    3b8c:	4141                	li	sp,16
    3b8e:	999982c3          	fmadd.s	ft5,fs3,fs9,fs3,rne
    3b92:	29b0                	fld	fa2,80(a1)
    3b94:	2d2d                	jal	41ce <_stack_len+0x1ce>
    3b96:	0f0f5a77          	0xf0f5a77
    3b9a:	1e11                	addi	t3,t3,-28
    3b9c:	b0b0                	fsd	fa2,96(s1)
    3b9e:	54547bcb          	0x54547bcb
    3ba2:	a8fc                	fsd	fa5,208(s1)
    3ba4:	6dd6bbbb          	0x6dd6bbbb
    3ba8:	1616                	slli	a2,a2,0x25
    3baa:	2c3a                	fld	fs8,392(sp)

Disassembly of section .srodata:

00003bac <_global_impure_ptr>:
    3bac:	3dd0                	fld	fa2,184(a1)
	...

Disassembly of section .data:

00003bb0 <key>:
    3bb0:	95c9                	srai	a1,a1,0x32
    3bb2:	3155                	jal	3856 <_aes_encrypt_table+0xdaa>
    3bb4:	50a6                	lw	ra,104(sp)
    3bb6:	54d1                	li	s1,-12
    3bb8:	aac5d87b          	0xaac5d87b
    3bbc:	a4a4                	fsd	fs1,72(s1)
    3bbe:	acbd                	j	3e3c <impure_data+0x6c>
    3bc0:	ea5c                	fsw	fa5,20(a2)
    3bc2:	c712                	sw	tp,140(sp)
    3bc4:	83f8                	0x83f8
    3bc6:	b8d6                	fsd	fs5,112(sp)
    3bc8:	d65d                	beqz	a2,3b76 <_aes_encrypt_table+0x10ca>
    3bca:	c8602dcf          	fnmadd.s	fs11,ft0,ft6,fs9,rdn
    3bce:	f0a5                	bnez	s1,3b2e <_aes_encrypt_table+0x1082>

00003bd0 <plaintext>:
unsigned char plaintext[LEN] =
    3bd0:	8cb37fd7          	0x8cb37fd7
    3bd4:	2522                	fld	fa0,8(sp)
    3bd6:	6fc4                	flw	fs1,28(a5)
    3bd8:	d5b9                	beqz	a1,3b26 <_aes_encrypt_table+0x107a>
    3bda:	18c9                	addi	a7,a7,-14
    3bdc:	92c0                	0x92c0
    3bde:	08d0                	addi	a2,sp,84
    3be0:	2a85                	jal	3d50 <expected+0x80>
    3be2:	84bd68f3          	csrrsi	a7,0x84b,26
    3be6:	8b0cf2af          	0x8b0cf2af
    3bea:	1ef5                	addi	t4,t4,-3
    3bec:	7051                	c.lui	zero,0xffff4
    3bee:	7046                	flw	ft0,112(sp)
    3bf0:	8b9e                	mv	s7,t2
    3bf2:	e1de                	fsw	fs7,192(sp)
    3bf4:	a186                	fsd	ft1,192(sp)
    3bf6:	cdf8                	sw	a4,92(a1)
    3bf8:	0271                	addi	tp,tp,28
    3bfa:	a19f 447b 82b0      	0x82b0447ba19f
    3c00:	7f40                	flw	fs0,60(a4)
    3c02:	b4ce                	fsd	fs3,104(sp)
    3c04:	5dbe                	lw	s11,236(sp)
    3c06:	8ebc                	0x8ebc
    3c08:	4319                	li	t1,6
    3c0a:	69463a0b          	0x69463a0b
    3c0e:	cca0                	sw	s0,88(s1)
    3c10:	4fed                	li	t6,27
    3c12:	af61                	j	43aa <encrypted+0x9a>
    3c14:	a9a6                	fsd	fs1,208(sp)
    3c16:	5169475b          	0x5169475b
    3c1a:	00d5                	addi	ra,ra,21
    3c1c:	2ede7e77          	0x2ede7e77
    3c20:	a67e                	fsd	ft11,264(sp)
    3c22:	e03c                	fsw	fa5,64(s0)
    3c24:	40eddf33          	sra	t5,s11,a4
    3c28:	e0c71a3f 3be346c7 	0x3be346c7e0c71a3f
    3c30:	4e90                	lw	a2,24(a3)
    3c32:	5564                	lw	s1,108(a0)
    3c34:	8d2e                	mv	s10,a1
    3c36:	3b36                	fld	fs6,360(sp)
    3c38:	9b92                	add	s7,s7,tp
    3c3a:	94ae6f87          	0x94ae6f87
    3c3e:	0a3d                	addi	s4,s4,15
    3c40:	a2c8                	fsd	fa0,128(a3)
    3c42:	7f4e                	flw	ft10,240(sp)
    3c44:	835a                	mv	t1,s6
    3c46:	18ec                	addi	a1,sp,124
    3c48:	82fd                	srli	a3,a3,0x1f
    3c4a:	c854                	sw	a3,20(s0)
    3c4c:	edd8                	fsw	fa4,28(a1)
    3c4e:	521e                	lw	tp,228(sp)
    3c50:	ca7d                	beqz	a2,3d46 <expected+0x76>
    3c52:	31ba4bcf          	fnmadd.s	fs7,fs4,fs11,ft6,rmm
    3c56:	b968                	fsd	fa0,240(a0)
    3c58:	a378                	fsd	fa4,192(a4)
    3c5a:	4eca                	lw	t4,144(sp)
    3c5c:	8672                	mv	a2,t3
    3c5e:	33b2                	fld	ft7,296(sp)
    3c60:	cb79                	beqz	a4,3d36 <expected+0x66>
    3c62:	a6cd                	j	4044 <_stack_len+0x44>
    3c64:	fa9ca343          	fmadd.d	ft6,fs9,fs1,ft11,rdn
    3c68:	2aee                	fld	fs5,216(sp)
    3c6a:	3bae                	fld	fs7,232(sp)
    3c6c:	c672                	sw	t3,12(sp)
    3c6e:	3246                	fld	ft4,112(sp)
    3c70:	99a5                	andi	a1,a1,-23
    3c72:	9245                	srli	a2,a2,0x31
    3c74:	7946                	flw	fs2,112(sp)
    3c76:	e3dc                	fsw	fa5,4(a5)
    3c78:	a93e                	fsd	fa5,144(sp)
    3c7a:	118a                	slli	gp,gp,0x22
    3c7c:	e4854937          	lui	s2,0xe4854
    3c80:	1a58                	addi	a4,sp,308
    3c82:	6e1f aad7 0ae6      	0xae6aad76e1f
    3c88:	27c4                	fld	fs1,136(a5)
    3c8a:	46fd                	li	a3,31
    3c8c:	6c5c                	flw	fa5,28(s0)
    3c8e:	28b0                	fld	fa2,80(s1)
    3c90:	6b2e                	flw	fs6,200(sp)
    3c92:	3584                	fld	fs1,40(a1)
    3c94:	1a90                	addi	a2,sp,368
    3c96:	386d                	jal	3550 <_aes_encrypt_table+0xaa4>
    3c98:	69f2                	flw	fs3,28(sp)
    3c9a:	bc4a                	fsd	fs2,56(sp)
    3c9c:	ec96                	fsw	ft5,88(sp)
    3c9e:	276556d7          	0x276556d7
    3ca2:	a6ee                	fsd	fs11,328(sp)
    3ca4:	5fb0                	lw	a2,120(a5)
    3ca6:	709c                	flw	fa5,32(s1)
    3ca8:	a571                	j	4334 <encrypted+0x24>
    3caa:	6793ec2b          	0x6793ec2b
    3cae:	c116                	sw	t0,128(sp)
    3cb0:	b3c4                	fsd	fs1,160(a5)
    3cb2:	6db57043          	0x6db57043
    3cb6:	95ad                	srai	a1,a1,0x2b
    3cb8:	f041                	bnez	s0,3c38 <plaintext+0x68>
    3cba:	fc02                	fsw	ft0,56(sp)
    3cbc:	588d                	li	a7,-29
    3cbe:	a18e                	fsd	ft3,192(sp)
    3cc0:	3246                	fld	ft4,112(sp)
    3cc2:	6834                	flw	fa3,80(s0)
    3cc4:	8c11                	sub	s0,s0,a2
    3cc6:	54db3ab3          	0x54db3ab3
    3cca:	3abe                	fld	fs5,488(sp)
    3ccc:	7c2e38b3          	0x7c2e38b3

00003cd0 <expected>:
unsigned char expected[LEN] =
    3cd0:	1000170f          	0x1000170f
    3cd4:	f97f8207          	0xf97f8207
    3cd8:	da45                	beqz	a2,3c88 <plaintext+0xb8>
    3cda:	0e15                	addi	t3,t3,5
    3cdc:	9454                	0x9454
    3cde:	9f74228f          	0x9f74228f
    3ce2:	1a58cd03          	lbu	s10,421(a7) # 141a5 <_stack_start+0x41a5>
    3ce6:	6bb2                	flw	fs7,12(sp)
    3ce8:	689a                	flw	fa7,132(sp)
    3cea:	e705                	bnez	a4,3d12 <expected+0x42>
    3cec:	ad751fcb          	0xad751fcb
    3cf0:	8551                	srai	a0,a0,0x14
    3cf2:	a156                	fsd	fs5,128(sp)
    3cf4:	d8f6                	sw	t4,112(sp)
    3cf6:	0d9eecb7          	lui	s9,0xd9ee
    3cfa:	aa7d48c3          	fmadd.d	fa7,fs10,ft7,fs5,rmm
    3cfe:	1dc299f7          	0x1dc299f7
    3d02:	3fea                	fld	ft11,184(sp)
    3d04:	84a8db53          	0x84a8db53
    3d08:	61ed                	lui	gp,0x1b
    3d0a:	e7c0                	fsw	fs0,12(a5)
    3d0c:	ad38                	fsd	fa4,88(a0)
    3d0e:	b7dc                	fsd	fa5,168(a5)
    3d10:	b6c0fa9b          	0xb6c0fa9b
    3d14:	7c88                	flw	fa0,56(s1)
    3d16:	87f0                	0x87f0
    3d18:	2025                	jal	3d40 <expected+0x70>
    3d1a:	0bbc                	addi	a5,sp,472
    3d1c:	9bb86d03          	0x9bb86d03
    3d20:	d310                	sw	a2,32(a4)
    3d22:	87a8                	0x87a8
    3d24:	ba38                	fsd	fa4,112(a2)
    3d26:	024043db          	0x24043db
    3d2a:	116e890f          	0x116e890f
    3d2e:	7e69                	lui	t3,0xffffa
    3d30:	4a15                	li	s4,5
    3d32:	e3c5                	bnez	a5,3dd2 <impure_data+0x2>
    3d34:	7ab1                	lui	s5,0xfffec
    3d36:	3b9d                	jal	3aac <_aes_encrypt_table+0x1000>
    3d38:	be74                	fsd	fa3,248(a2)
    3d3a:	5805                	li	a6,-31
    3d3c:	401e                	0x401e
    3d3e:	a0831d73          	csrrw	s10,0xa08,t1
    3d42:	8945                	andi	a0,a0,17
    3d44:	cffc                	sw	a5,92(a5)
    3d46:	52a24ec3          	fmadd.d	ft9,ft4,fa0,fa0,rmm
    3d4a:	2c5e7eef          	jal	t4,eb80e <_stack_start+0xdb80e>
    3d4e:	3898                	fld	fa4,48(s1)
    3d50:	5726                	lw	a4,104(sp)
    3d52:	12b4                	addi	a3,sp,360
    3d54:	244e                	fld	fs0,208(sp)
    3d56:	ac10                	fsd	fa2,24(s0)
    3d58:	897c                	0x897c
    3d5a:	0d42                	slli	s10,s10,0x10
    3d5c:	af9d                	j	44d2 <encctx+0xc2>
    3d5e:	2f49                	jal	44f0 <encctx+0xe0>
    3d60:	60c0                	flw	fs0,4(s1)
    3d62:	4375                	li	t1,29
    3d64:	d1c5                	beqz	a1,3d04 <expected+0x34>
    3d66:	fdcc                	fsw	fa1,60(a1)
    3d68:	ae46                	fsd	fa7,280(sp)
    3d6a:	384e                	fld	fa6,240(sp)
    3d6c:	f3a9                	bnez	a5,3cae <plaintext+0xde>
    3d6e:	fa9f9883          	lh	a7,-87(t6) # 14fa9 <_stack_start+0x4fa9>
    3d72:	150a                	slli	a0,a0,0x22
    3d74:	4605                	li	a2,1
    3d76:	0e2a                	slli	t3,t3,0xa
    3d78:	a8be                	fsd	fa5,80(sp)
    3d7a:	2dac                	fld	fa1,88(a1)
    3d7c:	2759                	jal	4502 <encctx+0xf2>
    3d7e:	542e                	lw	s0,232(sp)
    3d80:	7705                	lui	a4,0xfffe1
    3d82:	6452                	flw	fs0,20(sp)
    3d84:	6039                	c.lui	zero,0xe
    3d86:	7cc4                	flw	fs1,60(s1)
    3d88:	13b930a7          	fsd	fs11,289(s2) # e4854121 <_stack_start+0xe4844121>
    3d8c:	37fe1f3b          	0x37fe1f3b
    3d90:	eab0                	fsw	fa2,80(a3)
    3d92:	3dfd                	jal	3c90 <plaintext+0xc0>
    3d94:	f27eed83          	0xf27eed83
    3d98:	f2b0                	fsw	fa2,96(a3)
    3d9a:	860a                	mv	a2,sp
    3d9c:	b978                	fsd	fa4,240(a0)
    3d9e:	1f08                	addi	a0,sp,944
    3da0:	c0ff                	0xc0ff
    3da2:	ad50                	fsd	fa2,152(a0)
    3da4:	92b8                	0x92b8
    3da6:	1968                	addi	a0,sp,188
    3da8:	9c30                	0x9c30
    3daa:	e57e                	fsw	ft11,136(sp)
    3dac:	574c                	lw	a1,44(a4)
    3dae:	a65e                	fsd	fs7,264(sp)
    3db0:	3a58                	fld	fa4,176(a2)
    3db2:	1a807087          	0x1a807087
    3db6:	3be81ecf          	fnmadd.d	ft9,fa6,ft10,ft7,rtz
    3dba:	27e9c643          	fmadd.q	fa2,fs3,ft10,ft4,rmm
    3dbe:	589eba47          	fmsub.s	fs4,ft9,fs1,fa1,rup
    3dc2:	1452                	slli	s0,s0,0x34
    3dc4:	b7c0                	fsd	fs0,168(a5)
    3dc6:	77f1                	lui	a5,0xffffc
    3dc8:	43238f77          	0x43238f77
    3dcc:	0e49                	addi	t3,t3,18
    3dce:	ce24                	sw	s1,88(a2)

00003dd0 <impure_data>:
    3dd0:	0000                	unimp
    3dd2:	0000                	unimp
    3dd4:	40bc                	lw	a5,64(s1)
    3dd6:	0000                	unimp
    3dd8:	4124                	lw	s1,64(a0)
    3dda:	0000                	unimp
    3ddc:	418c                	lw	a1,0(a1)
	...
    3e76:	0000                	unimp
    3e78:	0001                	nop
    3e7a:	0000                	unimp
    3e7c:	0000                	unimp
    3e7e:	0000                	unimp
    3e80:	330e                	fld	ft6,224(sp)
    3e82:	abcd                	j	4474 <encctx+0x64>
    3e84:	1234                	addi	a3,sp,296
    3e86:	e66d                	bnez	a2,3f70 <impure_data+0x1a0>
    3e88:	deec                	sw	a1,124(a3)
    3e8a:	0005                	c.nop	1
    3e8c:	0000000b          	0xb
	...

Disassembly of section .sdata:

000041f8 <_impure_ptr>:
    41f8:	3dd0                	fld	fa2,184(a1)
	...

Disassembly of section .init_array.00000:

000041fc <.init_array.00000>:
    41fc:	1574                	addi	a3,sp,684
	...

Disassembly of section .bss:

00004200 <_bss_start>:
    4200:	0000                	unimp
	...

00004204 <heap_end>:
static void *heap_end = NULL;
    4204:	0000                	unimp
	...

00004208 <heap_ptr>:
static void *heap_ptr = NULL;
    4208:	0000                	unimp
	...

0000420c <seed>:
static long int seed = 0;
    420c:	0000                	unimp
	...

00004210 <decrypted>:
	...

00004310 <encrypted>:
	...

00004410 <encctx>:
	...

00004504 <decctx>:
	...

Disassembly of section .stack:

0000c000 <_stack-0x2000>:
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
  .endr
       0:	1489                	addi	s1,s1,-30
       2:	0000                	unimp
       4:	0004                	0x4
       6:	0000                	unimp
       8:	0000                	unimp
       a:	0104                	addi	s1,sp,128
       c:	050a                	slli	a0,a0,0x2
       e:	0000                	unimp
      10:	d90c                	sw	a1,48(a0)
      12:	0005                	c.nop	1
      14:	6700                	flw	fs0,8(a4)
      16:	0004                	0x4
      18:	8c00                	0x8c00
      1a:	0000                	unimp
      1c:	a800                	fsd	fs0,16(s0)
      1e:	000e                	c.slli	zero,0x3
      20:	0000                	unimp
      22:	0000                	unimp
      24:	0200                	addi	s0,sp,256
      26:	0504                	addi	s1,sp,640
      28:	6e69                	lui	t3,0x1a
      2a:	0074                	addi	a3,sp,12
      2c:	00023703          	0x23703
      30:	0200                	addi	s0,sp,256
      32:	17d8                	addi	a4,sp,996
      34:	0038                	addi	a4,sp,8
      36:	0000                	unimp
      38:	0404                	addi	s1,sp,512
      3a:	00007307          	0x7307
      3e:	0400                	addi	s0,sp,512
      40:	0508                	addi	a0,sp,640
      42:	00c9                	addi	ra,ra,18
      44:	0000                	unimp
      46:	1004                	addi	s1,sp,32
      48:	c104                	sw	s1,0(a0)
      4a:	0002                	c.slli64	zero
      4c:	0400                	addi	s0,sp,512
      4e:	0601                	addi	a2,a2,0
      50:	00000367          	jalr	t1,zero # 0 <__DYNAMIC>
      54:	00003903          	0x3903
      58:	0300                	addi	s0,sp,384
      5a:	0060182b          	0x60182b
      5e:	0000                	unimp
      60:	0104                	addi	s1,sp,128
      62:	6508                	flw	fa0,8(a0)
      64:	04000003          	lb	zero,64(zero) # 40 <__DYNAMIC+0x40>
      68:	0502                	c.slli64	a0
      6a:	0395                	addi	t2,t2,5
      6c:	0000                	unimp
      6e:	0204                	addi	s1,sp,256
      70:	00024507          	flq	fa0,0(tp) # 11000 <_stack_start+0x1000>
      74:	0400                	addi	s0,sp,512
      76:	0504                	addi	s1,sp,640
      78:	00ce                	slli	ra,ra,0x13
      7a:	0000                	unimp
  jal x0, default_exc_handler
      7c:	00019f03          	lh	t5,0(gp) # 1b000 <_stack_start+0xb000>
  jal x0, reset_handler
      80:	0300                	addi	s0,sp,384
      82:	0088194f          	fnmadd.s	fs2,fa6,fs0,ft0,rtz
  jal x0, default_exc_handler
      86:	0000                	unimp
  jal x0, default_exc_handler
      88:	0404                	addi	s1,sp,512
      8a:	00006e07          	0x6e07
  assert_beebs (nk != 0);
      8e:	0400                	addi	s0,sp,512
{
      90:	0708                	addi	a0,sp,896
      92:	0069                	c.nop	26
  assert_beebs (nk != 0);
      94:	0000                	unimp
      96:	00003b03          	0x3b03
{
      9a:	0400                	addi	s0,sp,512
  assert_beebs (nk != 0);
      9c:	1318                	addi	a4,sp,416
      9e:	0054                	addi	a3,sp,4
  lastkey = (AES_BLOCK_SIZE / 4) * (nr + 1);
      a0:	0000                	unimp
      a2:	9605                	srai	a2,a2,0x21
      a4:	0000                	unimp
      a6:	0300                	addi	s0,sp,384
  for (i = 0, rp = rcon; i < nk; i++)
      a8:	01a1                	addi	gp,gp,8
      aa:	0000                	unimp
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
      ac:	3004                	fld	fs1,32(s0)
      ae:	7c14                	flw	fa3,56(s0)
      b0:	0000                	unimp
      b2:	0500                	addi	s0,sp,640
      b4:	000000a7          	0xa7
      b8:	9206                	add	tp,tp,ra
      ba:	0002                	c.slli64	zero
      bc:	0200                	addi	s0,sp,256
      be:	0165                	addi	sp,sp,25
      c0:	00003817          	auipc	a6,0x3
      c4:	0300                	addi	s0,sp,384
      c6:	0000030b          	0x30b
      ca:	2e05                	jal	3fa <aes_set_decrypt_key+0xe>
  for (i = 0, rp = rcon; i < nk; i++)
      cc:	750e                	flw	fa0,224(sp)
      ce:	0000                	unimp
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
      d0:	0300                	addi	s0,sp,384
      d2:	045f 0000 7405      	0x74050000045f
      d8:	750e                	flw	fa0,224(sp)
      da:	0000                	unimp
      dc:	0300                	addi	s0,sp,384
      de:	0235                	addi	tp,tp,13
      e0:	0000                	unimp
      e2:	9305                	srli	a4,a4,0x21
      e4:	00002517          	auipc	a0,0x2
  for (i = 0, rp = rcon; i < nk; i++)
      e8:	0700                	addi	s0,sp,896
      ea:	0504                	addi	s1,sp,640
      ec:	03a5                	addi	t2,t2,9
      ee:	0000010b          	0x10b
      f2:	8c08                	0x8c08
      f4:	0002                	c.slli64	zero
      f6:	0500                	addi	s0,sp,640
      f8:	00b80ca7          	0xb80ca7
      fc:	0000                	unimp
      fe:	ed08                	fsw	fa0,24(a0)
     100:	0001                	nop
     102:	0500                	addi	s0,sp,640
     104:	13a8                	addi	a0,sp,488
     106:	0000010b          	0x10b
      else if (nk > 6 && (i % nk) == 4)
     10a:	0900                	addi	s0,sp,144
     10c:	0060                	addi	s0,sp,12
     10e:	0000                	unimp
	t = SUBBYTE (t, aes_sbox);
     110:	0000011b          	0x11b
     114:	380a                	fld	fa6,160(sp)
     116:	0000                	unimp
  for (i = nk; i < lastkey; i++)
     118:	0300                	addi	s0,sp,384
     11a:	0b00                	addi	s0,sp,400
     11c:	0508                	addi	a0,sp,640
     11e:	09a2                	slli	s3,s3,0x8
      if (i % nk == 0)
     120:	0000013f 0004510c 	0x4510c0000013f
     128:	0500                	addi	s0,sp,640
     12a:	07a4                	addi	s1,sp,968
	t = SUBBYTE (ROTL32 (24, t), aes_sbox) ^ *rp++;
     12c:	0025                	c.nop	9
     12e:	0000                	unimp
     130:	0c00                	addi	s0,sp,528
     132:	04df 0000 a905      	0xa905000004df
     138:	e905                	bnez	a0,168 <_aes_set_key+0xdc>
     13a:	0000                	unimp
     13c:	0400                	addi	s0,sp,512
     13e:	0300                	addi	s0,sp,384
     140:	03bd                	addi	t2,t2,15
     142:	0000                	unimp
     144:	aa05                	j	274 <_nettle_aes_invert+0x8>
     146:	00011b03          	lh	s6,0(sp)
     14a:	0d00                	addi	s0,sp,656
     14c:	0304                	addi	s1,sp,384
     14e:	04f5                	addi	s1,s1,29
     150:	0000                	unimp
     152:	1606                	slli	a2,a2,0x21
     154:	8819                	andi	s0,s0,6
     156:	0000                	unimp
     158:	0300                	addi	s0,sp,384
     15a:	0330                	addi	a2,sp,392
     15c:	0000                	unimp
     15e:	250d0c07          	0x250d0c07
     162:	0000                	unimp
     164:	0300                	addi	s0,sp,384
     166:	01b0                	addi	a2,sp,200
     168:	0000                	unimp
     16a:	2306                	fld	ft6,64(sp)
     16c:	0001591b          	0x1591b
     170:	0e00                	addi	s0,sp,784
     172:	01c1                	addi	gp,gp,16
     174:	0000                	unimp
     176:	0618                	addi	a4,sp,768
     178:	0834                	addi	a3,sp,24
     17a:	000001cb          	fnmsub.s	ft3,ft0,ft0,ft0,rne
     17e:	de0c                	sw	a1,56(a2)
     180:	06000003          	lb	zero,96(zero) # 60 <__DYNAMIC+0x60>
     184:	1336                	slli	t1,t1,0x2d
     186:	000001cb          	fnmsub.s	ft3,ft0,ft0,ft0,rne
     18a:	0f00                	addi	s0,sp,912
     18c:	6b5f 0600 0737      	0x73706006b5f
     192:	0025                	c.nop	9
      subkeys[i] = subkeys[i - nk] ^ t;
     194:	0000                	unimp
     196:	0c04                	addi	s1,sp,528
     198:	0000042f          	0x42f
  for (i = nk; i < lastkey; i++)
     19c:	3706                	fld	fa4,96(sp)
     19e:	0000250b          	0x250b
     1a2:	0800                	addi	s0,sp,16
      subkeys[i] = subkeys[i - nk] ^ t;
     1a4:	aa0c                	fsd	fa1,16(a2)
     1a6:	0001                	nop
     1a8:	0600                	addi	s0,sp,768
     1aa:	00251437          	lui	s0,0x251
     1ae:	0000                	unimp
      else if (nk > 6 && (i % nk) == 4)
     1b0:	0c0c                	addi	a1,sp,528
     1b2:	058e                	slli	a1,a1,0x3
     1b4:	0000                	unimp
     1b6:	3706                	fld	fa4,96(sp)
	t = SUBBYTE (t, aes_sbox);
     1b8:	0000251b          	0x251b
     1bc:	1000                	addi	s0,sp,32
     1be:	00785f0f          	0x785f0f
     1c2:	3806                	fld	fa6,96(sp)
     1c4:	0001d10b          	0x1d10b
     1c8:	1400                	addi	s0,sp,544
     1ca:	1000                	addi	s0,sp,32
     1cc:	7104                	flw	fs1,32(a0)
     1ce:	0001                	nop
     1d0:	0900                	addi	s0,sp,144
     1d2:	014d                	addi	sp,sp,19
     1d4:	0000                	unimp
     1d6:	01e1                	addi	gp,gp,24
     1d8:	0000                	unimp
     1da:	380a                	fld	fa6,160(sp)
     1dc:	0000                	unimp
     1de:	0000                	unimp
     1e0:	0e00                	addi	s0,sp,784
     1e2:	01e8                	addi	a0,sp,204
     1e4:	0000                	unimp
     1e6:	0624                	addi	s1,sp,776
     1e8:	083c                	addi	a5,sp,24
     1ea:	0264                	addi	s1,sp,268
     1ec:	0000                	unimp
     1ee:	c00c                	sw	a1,0(s0)
     1f0:	0000                	unimp
     1f2:	0600                	addi	s0,sp,768
     1f4:	093e                	slli	s2,s2,0xf
     1f6:	0025                	c.nop	9
     1f8:	0000                	unimp
     1fa:	0c00                	addi	s0,sp,528
     1fc:	04ae                	slli	s1,s1,0xb
     1fe:	0000                	unimp
     200:	3f06                	fld	ft10,96(sp)
     202:	2509                	jal	804 <_nettle_aes_encrypt+0x3ec>
     204:	0000                	unimp
     206:	0400                	addi	s0,sp,512
     208:	e80c                	fsw	fa1,16(s0)
     20a:	0000                	unimp
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
     20c:	0600                	addi	s0,sp,768
     20e:	0940                	addi	s0,sp,148
     210:	0025                	c.nop	9
     212:	0000                	unimp
     214:	0c08                	addi	a0,sp,528
     216:	064a                	slli	a2,a2,0x12
{
     218:	0000                	unimp
     21a:	4106                	lw	sp,64(sp)
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
     21c:	2509                	jal	81e <_nettle_aes_encrypt+0x406>
     21e:	0000                	unimp
{
     220:	0c00                	addi	s0,sp,528
     222:	e50c                	fsw	fa1,8(a0)
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
     224:	0002                	c.slli64	zero
     226:	0600                	addi	s0,sp,768
  if (keysize == AES256_KEY_SIZE)
     228:	0942                	slli	s2,s2,0x10
     22a:	0025                	c.nop	9
     22c:	0000                	unimp
     22e:	0c10                	addi	a2,sp,528
     230:	02ae                	slli	t0,t0,0xb
     232:	0000                	unimp
  else if (keysize >= AES192_KEY_SIZE)
     234:	4306                	lw	t1,64(sp)
     236:	2509                	jal	838 <_nettle_aes_encrypt+0x420>
     238:	0000                	unimp
     23a:	1400                	addi	s0,sp,544
      nr = _AES128_ROUNDS;
     23c:	930c                	0x930c
     23e:	0005                	c.nop	1
      nk = 4;
     240:	0600                	addi	s0,sp,768
     242:	0944                	addi	s1,sp,148
  ctx->rounds = nr;
     244:	0025                	c.nop	9
     246:	0000                	unimp
  _aes_set_key (nr, nk, ctx->keys, key);
     248:	0c18                	addi	a4,sp,528
     24a:	039f 0000 4506      	0x45060000039f
     250:	2509                	jal	852 <_nettle_aes_encrypt+0x43a>
     252:	0000                	unimp
      nr = _AES256_ROUNDS;
     254:	1c00                	addi	s0,sp,560
     256:	f40c                	fsw	fa1,40(s0)
      nk = 8;
     258:	0005                	c.nop	1
     25a:	0600                	addi	s0,sp,768
     25c:	0946                	slli	s2,s2,0x11
     25e:	0025                	c.nop	9
      nr = _AES192_ROUNDS;
     260:	0000                	unimp
     262:	0020                	addi	s0,sp,8
      nk = 6;
     264:	f711                	bnez	a4,170 <_aes_set_key+0xe4>
     266:	0000                	unimp
     268:	0800                	addi	s0,sp,16
     26a:	0601                	addi	a2,a2,0
  if (src == dst)
     26c:	02a9084f          	fnmadd.d	fa6,fs2,fa0,ft0,rne
     270:	0000                	unimp
     272:	920c                	0x920c
     274:	0001                	nop
     276:	0600                	addi	s0,sp,768
     278:	0a50                	addi	a2,sp,276
     27a:	02a9                	addi	t0,t0,10
     27c:	0000                	unimp
     27e:	0c00                	addi	s0,sp,528
      for (i = 0; i <= rounds * 4; i += 4)
     280:	0000                	unimp
     282:	0000                	unimp
	for (k = 0; k < 4; k++)
     284:	5106                	lw	sp,96(sp)
     286:	a909                	j	698 <_nettle_aes_encrypt+0x280>
      for (i = 0; i <= rounds * 4; i += 4)
     288:	0002                	c.slli64	zero
     28a:	8000                	0x8000
     28c:	e712                	fsw	ft4,140(sp)
     28e:	0004                	0x4
	  dst[i + k] = src[rounds * 4 - i + k];
     290:	0600                	addi	s0,sp,768
     292:	014d0a53          	fadd.s	fs4,fs10,fs4,rne
     296:	0000                	unimp
     298:	0100                	addi	s0,sp,128
     29a:	1c12                	slli	s8,s8,0x24
     29c:	0001                	nop
     29e:	0600                	addi	s0,sp,768
     2a0:	0a56                	slli	s4,s4,0x15
     2a2:	014d                	addi	sp,sp,19
	for (k = 0; k < 4; k++)
     2a4:	0000                	unimp
     2a6:	0104                	addi	s1,sp,128
      for (i = 0; i <= rounds * 4; i += 4)
     2a8:	0900                	addi	s0,sp,144
     2aa:	0000014b          	fnmsub.s	ft2,ft0,ft0,ft0,rne
     2ae:	02b9                	addi	t0,t0,14
     2b0:	0000                	unimp
     2b2:	380a                	fld	fa6,160(sp)
     2b4:	0000                	unimp
     2b6:	1f00                	addi	s0,sp,944
     2b8:	1100                	addi	s0,sp,160
     2ba:	02ee                	slli	t0,t0,0x1b
  if (src == dst)
     2bc:	0000                	unimp
     2be:	0190                	addi	a2,sp,192
     2c0:	6206                	flw	ft4,64(sp)
     2c2:	fc08                	fsw	fa0,56(s0)
	for (k = 0; k < 4; k++)
     2c4:	0002                	c.slli64	zero
     2c6:	0c00                	addi	s0,sp,528
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
     2c8:	03de                	slli	t2,t2,0x17
     2ca:	0000                	unimp
     2cc:	6306                	flw	ft6,64(sp)
     2ce:	fc12                	fsw	ft4,56(sp)
     2d0:	0002                	c.slli64	zero
     2d2:	0000                	unimp
      for (i = 0; i <= rounds * 4; i += 4)
     2d4:	ff0c                	fsw	fa1,56(a4)
     2d6:	06000003          	lb	zero,96(zero) # 60 <__DYNAMIC+0x60>
    MIX_COLUMN (mtable, dst[i]);
     2da:	0664                	addi	s1,sp,780
     2dc:	0025                	c.nop	9
     2de:	0000                	unimp
  for (i = 4; i < 4 * rounds; i++)
     2e0:	0c04                	addi	s1,sp,528
     2e2:	019a                	slli	gp,gp,0x6
}
     2e4:	0000                	unimp
     2e6:	6606                	flw	fa2,64(sp)
     2e8:	0209                	addi	tp,tp,2
     2ea:	08000003          	lb	zero,128(zero) # 80 <__DYNAMIC+0x80>
     2ee:	f70c                	fsw	fa1,40(a4)
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
     2f0:	0000                	unimp
     2f2:	0600                	addi	s0,sp,768
	for (k = 0; k < 4; k++)
     2f4:	02641e67          	0x2641e67
	  SWAP (dst[i + k], dst[j + k]);
     2f8:	0000                	unimp
     2fa:	0088                	addi	a0,sp,64
     2fc:	0410                	addi	a2,sp,512
     2fe:	02b9                	addi	t0,t0,14
	for (k = 0; k < 4; k++)
     300:	0000                	unimp
     302:	1209                	addi	tp,tp,-30
	  SWAP (dst[i + k], dst[j + k]);
     304:	12000003          	lb	zero,288(zero) # 120 <_aes_set_key+0x94>
     308:	0a000003          	lb	zero,160(zero) # a0 <_aes_set_key+0x14>
     30c:	0038                	addi	a4,sp,8
     30e:	0000                	unimp
     310:	001f 0410 0318      	0x3180410001f
	for (k = 0; k < 4; k++)
     316:	0000                	unimp
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
     318:	03a90e13          	addi	t3,s2,58
     31c:	0000                	unimp
     31e:	0608                	addi	a0,sp,768
     320:	087a                	slli	a6,a6,0x1e
     322:	0341                	addi	t1,t1,16
    MIX_COLUMN (mtable, dst[i]);
     324:	0000                	unimp
     326:	e20c                	fsw	fa1,0(a2)
  for (i = 4; i < 4 * rounds; i++)
     328:	0000                	unimp
     32a:	0600                	addi	s0,sp,768
     32c:	0341117b          	0x341117b
    MIX_COLUMN (mtable, dst[i]);
     330:	0000                	unimp
     332:	0c00                	addi	s0,sp,528
     334:	00000673          	0x673
     338:	7c06                	flw	fs8,96(sp)
     33a:	2506                	fld	fa0,64(sp)
     33c:	0000                	unimp
     33e:	0400                	addi	s0,sp,512
     340:	1000                	addi	s0,sp,32
     342:	6004                	flw	fs1,0(s0)
     344:	0000                	unimp
     346:	0e00                	addi	s0,sp,784
     348:	03c8                	addi	a0,sp,452
     34a:	0000                	unimp
     34c:	0668                	addi	a0,sp,780
     34e:	08ba                	slli	a7,a7,0xe
     350:	048a                	slli	s1,s1,0x2
     352:	0000                	unimp
     354:	00705f0f          	0x705f0f
     358:	bb06                	fsd	ft1,432(sp)
     35a:	4112                	lw	sp,4(sp)
     35c:	00000003          	lb	zero,0(zero) # 0 <__DYNAMIC>
     360:	00725f0f          	0x725f0f
     364:	bc06                	fsd	ft1,56(sp)
     366:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     36a:	0400                	addi	s0,sp,512
     36c:	00775f0f          	0x775f0f
     370:	bd06                	fsd	ft1,184(sp)
     372:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     376:	0800                	addi	s0,sp,16
     378:	150c                	addi	a1,sp,672
     37a:	0001                	nop
     37c:	0600                	addi	s0,sp,768
     37e:	09be                	slli	s3,s3,0xf
     380:	00000067          	jr	zero # 0 <__DYNAMIC>
     384:	0c0c                	addi	a1,sp,528
     386:	0220                	addi	s0,sp,264
     388:	0000                	unimp
     38a:	bf06                	fsd	ft1,440(sp)
     38c:	6709                	lui	a4,0x2
     38e:	0000                	unimp
     390:	0e00                	addi	s0,sp,784
     392:	66625f0f          	0x66625f0f
     396:	0600                	addi	s0,sp,768
     398:	11c0                	addi	s0,sp,228
     39a:	0319                	addi	t1,t1,6
     39c:	0000                	unimp
     39e:	0c10                	addi	a2,sp,528
     3a0:	0080                	addi	s0,sp,64
     3a2:	0000                	unimp
     3a4:	c106                	sw	ra,128(sp)
     3a6:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
{
     3aa:	1800                	addi	s0,sp,48
     3ac:	050c                	addi	a1,sp,640
     3ae:	0001                	nop
     3b0:	0600                	addi	s0,sp,768
     3b2:	0ac8                	addi	a0,sp,340
     3b4:	0000014b          	fnmsub.s	ft2,ft0,ft0,ft0,rne
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
     3b8:	0c1c                	addi	a5,sp,528
     3ba:	01d8                	addi	a4,sp,196
{
     3bc:	0000                	unimp
     3be:	ca06                	sw	ra,20(sp)
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
     3c0:	0e1d                	addi	t3,t3,7
     3c2:	0006                	c.slli	zero,0x1
     3c4:	2000                	fld	fs0,0(s0)
     3c6:	a70c                	fsd	fa1,8(a4)
{
     3c8:	0002                	c.slli64	zero
     3ca:	0600                	addi	s0,sp,768
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
     3cc:	1dcc                	addi	a1,sp,756
     3ce:	0638                	addi	a4,sp,776
  dst->rounds = src->rounds;
     3d0:	0000                	unimp
     3d2:	0c24                	addi	s1,sp,536
}
     3d4:	0459                	addi	s0,s0,22
     3d6:	0000                	unimp
     3d8:	cf06                	sw	ra,156(sp)
     3da:	5c0d                	li	s8,-29
  dst->rounds = src->rounds;
     3dc:	0006                	c.slli	zero,0x1
     3de:	2800                	fld	fs0,16(s0)
}
     3e0:	0e0c                	addi	a1,sp,784
     3e2:	0006                	c.slli	zero,0x1
     3e4:	0600                	addi	s0,sp,768
     3e6:	09d0                	addi	a2,sp,212
     3e8:	0676                	slli	a2,a2,0x1d
     3ea:	0000                	unimp
{
     3ec:	0f2c                	addi	a1,sp,920
     3ee:	755f 0062 d306      	0xd3060062755f
     3f4:	1911                	addi	s2,s2,-28
     3f6:	30000003          	lb	zero,768(zero) # 300 <_nettle_aes_invert+0x94>
     3fa:	70755f0f          	0x70755f0f
  aes_set_encrypt_key (ctx, keysize, key);
     3fe:	0600                	addi	s0,sp,768
  aes_invert_key (ctx, ctx);
     400:	12d4                	addi	a3,sp,356
     402:	0341                	addi	t1,t1,16
     404:	0000                	unimp
     406:	0f38                	addi	a4,sp,920
}
     408:	755f 0072 d506      	0xd5060072755f
     40e:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     412:	3c00                	fld	fs0,56(s0)
  aes_invert_key (ctx, ctx);
     414:	dc0c                	sw	a1,56(s0)
     416:	0000                	unimp
{
     418:	0600                	addi	s0,sp,768
     41a:	11d8                	addi	a4,sp,228
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     41c:	067c                	addi	a5,sp,780
     41e:	0000                	unimp
     420:	0c40                	addi	s0,sp,532
     422:	05e6                	slli	a1,a1,0x19
{
     424:	0000                	unimp
     426:	d906                	sw	ra,176(sp)
     428:	8c11                	sub	s0,s0,a2
     42a:	0006                	c.slli	zero,0x1
     42c:	4300                	lw	s0,0(a4)
     42e:	626c5f0f          	0x626c5f0f
     432:	0600                	addi	s0,sp,768
     434:	11dc                	addi	a5,sp,228
     436:	0319                	addi	t1,t1,6
     438:	0000                	unimp
     43a:	0c44                	addi	s1,sp,532
     43c:	013e                	slli	sp,sp,0xf
     43e:	0000                	unimp
     440:	df06                	sw	ra,188(sp)
     442:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     446:	4c00                	lw	s0,24(s0)
     448:	6b0c                	flw	fa1,16(a4)
     44a:	0001                	nop
     44c:	0600                	addi	s0,sp,768
     44e:	0ae0                	addi	s0,sp,348
     450:	00c5                	addi	ra,ra,17
     452:	0000                	unimp
     454:	0c50                	addi	a2,sp,532
     456:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     45a:	e306                	fsw	ft1,132(sp)
     45c:	a812                	fsd	ft4,16(sp)
     45e:	0004                	0x4
     460:	5400                	lw	s0,40(s0)
     462:	990c                	0x990c
     464:	0002                	c.slli64	zero
     466:	0600                	addi	s0,sp,768
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     468:	01650ce7          	jalr	s9,22(a0) # 20fa <_min_stack+0xfa>
     46c:	0000                	unimp
     46e:	0c58                	addi	a4,sp,532
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     470:	03d0                	addi	a2,sp,452
     472:	0000                	unimp
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     474:	e906                	fsw	ft1,144(sp)
     476:	3f0e                	fld	ft10,224(sp)
     478:	0001                	nop
     47a:	5c00                	lw	s0,56(s0)
     47c:	9f0c                	0x9f0c
     47e:	0002                	c.slli64	zero
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     480:	0600                	addi	s0,sp,768
     482:	09ea                	slli	s3,s3,0x1a
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     484:	0025                	c.nop	9
     486:	0000                	unimp
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     488:	0064                	addi	s1,sp,12
     48a:	dd14                	sw	a3,56(a0)
     48c:	0000                	unimp
     48e:	a800                	fsd	fs0,16(s0)
     490:	0004                	0x4
     492:	1500                	addi	s0,sp,672
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     494:	04a8                	addi	a0,sp,584
     496:	0000                	unimp
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     498:	4b15                	li	s6,5
     49a:	0001                	nop
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     49c:	1500                	addi	s0,sp,672
     49e:	05fc                	addi	a5,sp,716
     4a0:	0000                	unimp
     4a2:	2515                	jal	ac6 <_nettle_aes_decrypt+0x206>
     4a4:	0000                	unimp
     4a6:	0000                	unimp
     4a8:	0410                	addi	a2,sp,512
     4aa:	000004b3          	add	s1,zero,zero
    for (i = 1; i < rounds; i++)
     4ae:	a805                	j	4de <_nettle_aes_encrypt+0xc6>
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     4b0:	0004                	0x4
     4b2:	1600                	addi	s0,sp,800
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     4b4:	00000437          	lui	s0,0x0
     4b8:	0428                	addi	a0,sp,520
     4ba:	6506                	flw	fa0,64(sp)
     4bc:	0802                	c.slli64	a6
     4be:	05fc                	addi	a5,sp,716
     4c0:	0000                	unimp
     4c2:	00038e17          	auipc	t3,0x38
     4c6:	0600                	addi	s0,sp,768
     4c8:	25070267          	jalr	tp,592(a4) # 2250 <_min_stack+0x250>
     4cc:	0000                	unimp
     4ce:	0000                	unimp
     4d0:	00012417          	auipc	s0,0x12
     4d4:	0600                	addi	s0,sp,768
     4d6:	026c                	addi	a1,sp,268
     4d8:	0006e80b          	0x6e80b
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     4dc:	0400                	addi	s0,sp,512
     4de:	0001f417          	auipc	s0,0x1f
     4e2:	0600                	addi	s0,sp,768
     4e4:	026c                	addi	a1,sp,268
     4e6:	e814                	fsw	fa3,16(s0)
     4e8:	0006                	c.slli	zero,0x1
     4ea:	0800                	addi	s0,sp,16
     4ec:	0001b917          	auipc	s2,0x1b
     4f0:	0600                	addi	s0,sp,768
     4f2:	026c                	addi	a1,sp,268
     4f4:	e81e                	fsw	ft7,16(sp)
     4f6:	0006                	c.slli	zero,0x1
     4f8:	0c00                	addi	s0,sp,528
     4fa:	0003fa17          	auipc	s4,0x3f
     4fe:	0600                	addi	s0,sp,768
     500:	026e                	slli	tp,tp,0x1b
     502:	2508                	fld	fa0,8(a0)
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     504:	0000                	unimp
     506:	1000                	addi	s0,sp,32
     508:	00001b17          	auipc	s6,0x1
     50c:	0600                	addi	s0,sp,768
     50e:	e808026f          	jal	tp,fff80b8e <_stack_start+0xfff70b8e>
     512:	0008                	0x8
     514:	1400                	addi	s0,sp,544
     516:	00041617          	auipc	a2,0x41
     51a:	0600                	addi	s0,sp,768
     51c:	0272                	slli	tp,tp,0x1c
     51e:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     522:	3000                	fld	fs0,32(s0)
     524:	00040417          	auipc	s0,0x40
     528:	0600                	addi	s0,sp,768
     52a:	fd160273          	0xfd160273
     52e:	0008                	0x8
    for (i = 1; i < rounds; i++)
     530:	3400                	fld	fs0,40(s0)
     532:	00030017          	auipc	zero,0x30
     536:	0600                	addi	s0,sp,768
     538:	0275                	addi	tp,tp,29
     53a:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     53e:	3800                	fld	fs0,48(s0)
     540:	00040c17          	auipc	s8,0x40
     544:	0600                	addi	s0,sp,768
     546:	0e0a0277          	0xe0a0277
     54a:	0009                	c.nop	2
     54c:	3c00                	fld	fs0,56(s0)
     54e:	00028417          	auipc	s0,0x28
     552:	0600                	addi	s0,sp,768
     554:	027a                	slli	tp,tp,0x1e
     556:	0001cb13          	xori	s6,gp,0
     55a:	4000                	lw	s0,0(s0)
     55c:	0001de17          	auipc	t3,0x1d
     560:	0600                	addi	s0,sp,768
     562:	2507027b          	0x2507027b
     566:	0000                	unimp
     568:	4400                	lw	s0,8(s0)
     56a:	00062817          	auipc	a6,0x62
     56e:	0600                	addi	s0,sp,768
     570:	027c                	addi	a5,sp,268
     572:	0001cb13          	xori	s6,gp,0
     576:	4800                	lw	s0,16(s0)
     578:	00032617          	auipc	a2,0x32
     57c:	0600                	addi	s0,sp,768
     57e:	027d                	addi	tp,tp,31
     580:	1414                	addi	a3,sp,544
     582:	0009                	c.nop	2
     584:	4c00                	lw	s0,24(s0)
     586:	0001fc17          	auipc	s8,0x1f
     58a:	0600                	addi	s0,sp,768
     58c:	0280                	addi	s0,sp,320
     58e:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     592:	5000                	lw	s0,32(s0)
     594:	00016317          	auipc	t1,0x16
     598:	0600                	addi	s0,sp,768
     59a:	0281                	addi	t0,t0,0
     59c:	fc09                	bnez	s0,4b6 <_nettle_aes_encrypt+0x9e>
     59e:	0005                	c.nop	1
     5a0:	5400                	lw	s0,40(s0)
     5a2:	00037317          	auipc	t1,0x37
     5a6:	0600                	addi	s0,sp,768
     5a8:	02a4                	addi	s1,sp,328
     5aa:	0008c307          	flq	ft6,0(a7)
     5ae:	5800                	lw	s0,48(s0)
     5b0:	ee18                	fsw	fa4,24(a2)
     5b2:	0002                	c.slli64	zero
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     5b4:	0600                	addi	s0,sp,768
     5b6:	02a8                	addi	a0,sp,328
     5b8:	0002fc13          	andi	s8,t0,0
     5bc:	4800                	lw	s0,16(s0)
     5be:	1801                	addi	a6,a6,-32
     5c0:	0258                	addi	a4,sp,260
     5c2:	0000                	unimp
     5c4:	a906                	fsd	ft1,144(sp)
     5c6:	1202                	slli	tp,tp,0x20
     5c8:	02b9                	addi	t0,t0,14
     5ca:	0000                	unimp
     5cc:	014c                	addi	a1,sp,132
     5ce:	ad18                	fsd	fa4,24(a0)
     5d0:	0005                	c.nop	1
     5d2:	0600                	addi	s0,sp,768
     5d4:	02ad                	addi	t0,t0,11
     5d6:	250c                	fld	fa1,8(a0)
     5d8:	0009                	c.nop	2
     5da:	dc00                	sw	s0,56(s0)
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     5dc:	1802                	slli	a6,a6,0x20
     5de:	010d                	addi	sp,sp,3
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     5e0:	0000                	unimp
     5e2:	b206                	fsd	ft1,288(sp)
     5e4:	1002                	c.slli	zero,0x20
     5e6:	06a9                	addi	a3,a3,10
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     5e8:	0000                	unimp
     5ea:	02e0                	addi	s0,sp,332
     5ec:	f218                	fsw	fa4,32(a2)
     5ee:	0000                	unimp
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     5f0:	0600                	addi	s0,sp,768
     5f2:	02b4                	addi	a3,sp,328
     5f4:	310a                	fld	ft2,160(sp)
     5f6:	0009                	c.nop	2
     5f8:	ec00                	fsw	fs0,24(s0)
     5fa:	0002                	c.slli64	zero
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     5fc:	0410                	addi	a2,sp,512
     5fe:	0602                	c.slli64	a2
     600:	0000                	unimp
     602:	0104                	addi	s1,sp,128
     604:	6e08                	flw	fa0,24(a2)
     606:	05000003          	lb	zero,80(zero) # 50 <__DYNAMIC+0x50>
     60a:	0602                	c.slli64	a2
     60c:	0000                	unimp
     60e:	0410                	addi	a2,sp,512
     610:	048a                	slli	s1,s1,0x2
     612:	0000                	unimp
     614:	dd14                	sw	a3,56(a0)
     616:	0000                	unimp
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     618:	3200                	fld	fs0,32(a2)
     61a:	0006                	c.slli	zero,0x1
     61c:	1500                	addi	s0,sp,672
     61e:	04a8                	addi	a0,sp,584
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     620:	0000                	unimp
     622:	4b15                	li	s6,5
     624:	0001                	nop
     626:	1500                	addi	s0,sp,672
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     628:	0632                	slli	a2,a2,0xc
     62a:	0000                	unimp
     62c:	2515                	jal	c50 <_nettle_aes_decrypt+0x390>
     62e:	0000                	unimp
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     630:	0000                	unimp
     632:	0410                	addi	a2,sp,512
     634:	0609                	addi	a2,a2,2
     636:	0000                	unimp
     638:	0410                	addi	a2,sp,512
     63a:	0614                	addi	a3,sp,768
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     63c:	0000                	unimp
     63e:	d114                	sw	a3,32(a0)
     640:	0000                	unimp
     642:	5c00                	lw	s0,56(s0)
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     644:	0006                	c.slli	zero,0x1
     646:	1500                	addi	s0,sp,672
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     648:	04a8                	addi	a0,sp,584
     64a:	0000                	unimp
     64c:	4b15                	li	s6,5
     64e:	0001                	nop
     650:	1500                	addi	s0,sp,672
     652:	00d1                	addi	ra,ra,20
     654:	0000                	unimp
     656:	2515                	jal	c7a <_nettle_aes_decrypt+0x3ba>
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     658:	0000                	unimp
     65a:	0000                	unimp
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     65c:	0410                	addi	a2,sp,512
     65e:	063e                	slli	a2,a2,0xf
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     660:	0000                	unimp
     662:	2514                	fld	fa3,8(a0)
     664:	0000                	unimp
     666:	7600                	flw	fs0,40(a2)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     668:	0006                	c.slli	zero,0x1
     66a:	1500                	addi	s0,sp,672
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     66c:	04a8                	addi	a0,sp,584
     66e:	0000                	unimp
     670:	4b15                	li	s6,5
     672:	0001                	nop
     674:	0000                	unimp
     676:	0410                	addi	a2,sp,512
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     678:	0662                	slli	a2,a2,0x18
     67a:	0000                	unimp
     67c:	6009                	c.lui	zero,0x2
     67e:	0000                	unimp
     680:	8c00                	0x8c00
     682:	0006                	c.slli	zero,0x1
     684:	0a00                	addi	s0,sp,272
     686:	0038                	addi	a4,sp,8
     688:	0000                	unimp
     68a:	0002                	c.slli64	zero
     68c:	6009                	c.lui	zero,0x2
     68e:	0000                	unimp
     690:	9c00                	0x9c00
     692:	0006                	c.slli	zero,0x1
     694:	0a00                	addi	s0,sp,272
     696:	0038                	addi	a4,sp,8
     698:	0000                	unimp
     69a:	0000                	unimp
     69c:	b606                	fsd	ft1,296(sp)
     69e:	06000003          	lb	zero,96(zero) # 60 <__DYNAMIC+0x60>
     6a2:	0124                	addi	s1,sp,136
     6a4:	471a                	lw	a4,132(sp)
     6a6:	19000003          	lb	zero,400(zero) # 190 <_aes_set_key+0x104>
    LE_WRITE_UINT32 (dst, t0);
     6aa:	059d                	addi	a1,a1,7
    LE_WRITE_UINT32 (dst + 4, t1);
     6ac:	0000                	unimp
     6ae:	060c                	addi	a1,sp,768
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     6b0:	0128                	addi	a0,sp,136
     6b2:	e208                	fsw	fa0,0(a2)
     6b4:	0006                	c.slli	zero,0x1
     6b6:	1700                	addi	s0,sp,928
     6b8:	03de                	slli	t2,t2,0x17
     6ba:	0000                	unimp
    LE_WRITE_UINT32 (dst + 8, t2);
     6bc:	2a06                	fld	fs4,64(sp)
     6be:	1101                	addi	sp,sp,-32
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     6c0:	06e2                	slli	a3,a3,0x18
     6c2:	0000                	unimp
    LE_WRITE_UINT32 (dst, t0);
     6c4:	1700                	addi	s0,sp,928
     6c6:	023e                	slli	tp,tp,0xf
     6c8:	0000                	unimp
     6ca:	2b06                	fld	fs6,64(sp)
     6cc:	0701                	addi	a4,a4,0
     6ce:	0025                	c.nop	9
     6d0:	0000                	unimp
     6d2:	1704                	addi	s1,sp,928
     6d4:	03b0                	addi	a2,sp,456
     6d6:	0000                	unimp
     6d8:	2c06                	fld	fs8,64(sp)
     6da:	0b01                	addi	s6,s6,0
    LE_WRITE_UINT32 (dst + 4, t1);
     6dc:	06e8                	addi	a0,sp,844
     6de:	0000                	unimp
     6e0:	0008                	0x8
     6e2:	0410                	addi	a2,sp,512
     6e4:	06a9                	addi	a3,a3,10
     6e6:	0000                	unimp
     6e8:	0410                	addi	a2,sp,512
     6ea:	069c                	addi	a5,sp,832
     6ec:	0000                	unimp
     6ee:	1319                	addi	t1,t1,-26
     6f0:	0000                	unimp
     6f2:	0e00                	addi	s0,sp,784
    LE_WRITE_UINT32 (dst + 8, t2);
     6f4:	4406                	lw	s0,64(sp)
     6f6:	0801                	addi	a6,a6,0
     6f8:	00000727          	0x727
     6fc:	0006bd17          	auipc	s10,0x6b
     700:	0600                	addi	s0,sp,768
     702:	0145                	addi	sp,sp,17
     704:	2712                	fld	fa4,256(sp)
     706:	00000007          	0x7
     70a:	0004cc17          	auipc	s8,0x4c
    LE_WRITE_UINT32 (dst + 12, t3);
     70e:	0600                	addi	s0,sp,768
     710:	0146                	slli	sp,sp,0x11
     712:	2712                	fld	fa4,256(sp)
     714:	06000007          	0x6000007
     718:	0004f017          	auipc	zero,0x4f
     71c:	0600                	addi	s0,sp,768
     71e:	6e120147          	fmsub.q	ft2,ft4,ft1,fa3,rne
     722:	0000                	unimp
     724:	0c00                	addi	s0,sp,528
     726:	0900                	addi	s0,sp,144
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     728:	006e                	c.slli	zero,0x1b
     72a:	0000                	unimp
     72c:	00000737          	lui	a4,0x0
}
     730:	380a                	fld	fa6,160(sp)
     732:	0000                	unimp
     734:	0200                	addi	s0,sp,256
     736:	1a00                	addi	s0,sp,304
     738:	06d0                	addi	a2,sp,836
     73a:	0285                	addi	t0,t0,1
     73c:	00084c07          	flq	fs8,0(a6) # 6256a <_stack_start+0x5256a>
     740:	1700                	addi	s0,sp,928
     742:	0570                	addi	a2,sp,652
     744:	0000                	unimp
     746:	8706                	mv	a4,ra
     748:	1802                	slli	a6,a6,0x20
     74a:	0038                	addi	a4,sp,8
     74c:	0000                	unimp
     74e:	1700                	addi	s0,sp,928
     750:	04d2                	slli	s1,s1,0x14
     752:	0000                	unimp
     754:	8806                	mv	a6,ra
     756:	1202                	slli	tp,tp,0x20
     758:	05fc                	addi	a5,sp,716
     75a:	0000                	unimp
     75c:	1704                	addi	s1,sp,928
     75e:	00000277          	0x277
     762:	8906                	mv	s2,ra
     764:	1002                	c.slli	zero,0x20
     766:	084c                	addi	a1,sp,20
     768:	0000                	unimp
     76a:	1708                	addi	a0,sp,928
	t0 = AES_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     76c:	05ff                	0x5ff
     76e:	0000                	unimp
     770:	8a06                	mv	s4,ra
     772:	1702                	slli	a4,a4,0x20
     774:	01e1                	addi	gp,gp,24
     776:	0000                	unimp
     778:	1724                	addi	s1,sp,936
     77a:	01c9                	addi	gp,gp,18
     77c:	0000                	unimp
     77e:	8b06                	mv	s6,ra
     780:	0f02                	c.slli64	t5
     782:	0025                	c.nop	9
     784:	0000                	unimp
     786:	1748                	addi	a0,sp,932
     788:	03d9                	addi	t2,t2,22
     78a:	0000                	unimp
     78c:	8c06                	mv	s8,ra
     78e:	2c02                	fld	fs8,0(sp)
     790:	0000008f          	0x8f
     794:	1750                	addi	a2,sp,932
     796:	0615                	addi	a2,a2,5
     798:	0000                	unimp
     79a:	8d06                	mv	s10,ra
     79c:	1a02                	slli	s4,s4,0x20
     79e:	06ee                	slli	a3,a3,0x1b
     7a0:	0000                	unimp
     7a2:	1758                	addi	a4,sp,932
     7a4:	03ed                	addi	t2,t2,27
     7a6:	0000                	unimp
     7a8:	8e06                	mv	t3,ra
     7aa:	1602                	slli	a2,a2,0x20
     7ac:	0000013f 061a1768 	0x61a17680000013f
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     7b4:	0000                	unimp
     7b6:	8f06                	mv	t5,ra
     7b8:	1602                	slli	a2,a2,0x20
     7ba:	0000013f 00b21770 	0xb217700000013f
     7c2:	0000                	unimp
	t0 = AES_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     7c4:	9006                	c.add	zero,ra
     7c6:	1602                	slli	a2,a2,0x20
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     7c8:	0000013f 05a31778 	0x5a317780000013f
     7d0:	0000                	unimp
     7d2:	9106                	add	sp,sp,ra
     7d4:	1002                	c.slli	zero,0x20
     7d6:	085c                	addi	a5,sp,20
     7d8:	0000                	unimp
     7da:	1780                	addi	s0,sp,992
     7dc:	0000026b          	0x26b
     7e0:	9206                	add	tp,tp,ra
     7e2:	1002                	c.slli	zero,0x20
     7e4:	086c                	addi	a1,sp,28
     7e6:	0000                	unimp
     7e8:	1788                	addi	a0,sp,992
     7ea:	04fd                	addi	s1,s1,31
     7ec:	0000                	unimp
     7ee:	9306                	add	t1,t1,ra
     7f0:	0f02                	c.slli64	t5
     7f2:	0025                	c.nop	9
     7f4:	0000                	unimp
     7f6:	17a0                	addi	s0,sp,1000
     7f8:	0184                	addi	s1,sp,192
     7fa:	0000                	unimp
     7fc:	9406                	add	s0,s0,ra
     7fe:	1602                	slli	a2,a2,0x20
     800:	0000013f 009c17a4 	0x9c17a40000013f
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     808:	0000                	unimp
     80a:	9506                	add	a0,a0,ra
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     80c:	1602                	slli	a2,a2,0x20
     80e:	0000013f 017317ac 	0x17317ac0000013f
     816:	0000                	unimp
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     818:	9606                	add	a2,a2,ra
     81a:	1602                	slli	a2,a2,0x20
     81c:	0000013f 004917b4 	0x4917b40000013f
     824:	0000                	unimp
     826:	9706                	add	a4,a4,ra
     828:	1602                	slli	a2,a2,0x20
     82a:	0000013f 005817bc 	0x5817bc0000013f
     832:	0000                	unimp
     834:	9806                	add	a6,a6,ra
     836:	1602                	slli	a2,a2,0x20
     838:	0000013f 038c17c4 	0x38c17c40000013f
     840:	0000                	unimp
     842:	9906                	add	s2,s2,ra
     844:	0802                	c.slli64	a6
     846:	0025                	c.nop	9
     848:	0000                	unimp
     84a:	00cc                	addi	a1,sp,68
     84c:	0209                	addi	tp,tp,2
     84e:	0006                	c.slli	zero,0x1
     850:	5c00                	lw	s0,56(s0)
     852:	0008                	0x8
	t3 = AES_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     854:	0a00                	addi	s0,sp,272
     856:	0038                	addi	a4,sp,8
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     858:	0000                	unimp
     85a:	0019                	c.nop	6
     85c:	0209                	addi	tp,tp,2
     85e:	0006                	c.slli	zero,0x1
	t3 = AES_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     860:	6c00                	flw	fs0,24(s0)
     862:	0008                	0x8
     864:	0a00                	addi	s0,sp,272
     866:	0038                	addi	a4,sp,8
     868:	0000                	unimp
     86a:	02090007          	0x2090007
     86e:	0006                	c.slli	zero,0x1
     870:	7c00                	flw	fs0,56(s0)
     872:	0008                	0x8
     874:	0a00                	addi	s0,sp,272
     876:	0038                	addi	a4,sp,8
     878:	0000                	unimp
     87a:	f01a0017          	auipc	zero,0xf01a0
     87e:	9e06                	add	t3,t3,ra
     880:	0702                	c.slli64	a4
     882:	000008a3          	sb	zero,17(zero) # 11 <__DYNAMIC+0x11>
     886:	0002d717          	auipc	a4,0x2d
     88a:	0600                	addi	s0,sp,768
     88c:	02a1                	addi	t0,t0,8
     88e:	0008a31b          	0x8a31b
     892:	0000                	unimp
     894:	0002b817          	auipc	a6,0x2b
     898:	0600                	addi	s0,sp,768
     89a:	02a2                	slli	t0,t0,0x8
     89c:	b318                	fsd	fa4,32(a4)
     89e:	0008                	0x8
     8a0:	7800                	flw	fs0,48(s0)
     8a2:	0900                	addi	s0,sp,144
     8a4:	0341                	addi	t1,t1,16
     8a6:	0000                	unimp
     8a8:	000008b3          	add	a7,zero,zero
     8ac:	380a                	fld	fa6,160(sp)
     8ae:	0000                	unimp
    for (i = 1; i < rounds; i++)
     8b0:	1d00                	addi	s0,sp,688
     8b2:	0900                	addi	s0,sp,144
	t3 = AES_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     8b4:	0038                	addi	a4,sp,8
     8b6:	0000                	unimp
     8b8:	000008c3          	fmadd.s	fa7,ft0,ft0,ft0,rne
     8bc:	380a                	fld	fa6,160(sp)
     8be:	0000                	unimp
{
     8c0:	1d00                	addi	s0,sp,688
     8c2:	1b00                	addi	s0,sp,432
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     8c4:	06f0                	addi	a2,sp,844
     8c6:	e8030283          	lb	t0,-384(t1) # 37422 <_stack_start+0x27422>
     8ca:	0008                	0x8
{
     8cc:	1c00                	addi	s0,sp,560
     8ce:	00000437          	lui	s0,0x0
     8d2:	9a06                	add	s4,s4,ra
     8d4:	0b02                	c.slli64	s6
     8d6:	00000737          	lui	a4,0x0
     8da:	ec1c                	fsw	fa5,24(s0)
     8dc:	0005                	c.nop	1
     8de:	0600                	addi	s0,sp,768
     8e0:	7c0b02a3          	sb	zero,1989(s6) # 1ccd <_aes_decrypt_table+0x321>
     8e4:	0008                	0x8
     8e6:	0000                	unimp
     8e8:	0209                	addi	tp,tp,2
     8ea:	0006                	c.slli	zero,0x1
     8ec:	f800                	fsw	fs0,48(s0)
     8ee:	0008                	0x8
     8f0:	0a00                	addi	s0,sp,272
     8f2:	0038                	addi	a4,sp,8
     8f4:	0000                	unimp
     8f6:	0018                	0x18
     8f8:	891d                	andi	a0,a0,7
     8fa:	0000                	unimp
     8fc:	1000                	addi	s0,sp,32
     8fe:	f804                	fsw	fs1,48(s0)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     900:	0008                	0x8
     902:	1e00                	addi	s0,sp,816
     904:	090e                	slli	s2,s2,0x3
     906:	0000                	unimp
     908:	a815                	j	93c <_nettle_aes_decrypt+0x7c>
     90a:	0004                	0x4
     90c:	0000                	unimp
     90e:	0410                	addi	a2,sp,512
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     910:	00000903          	lb	s2,0(zero) # 0 <__DYNAMIC>
     914:	0410                	addi	a2,sp,512
     916:	000001cb          	fnmsub.s	ft3,ft0,ft0,ft0,rne
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     91a:	251e                	fld	fa0,448(sp)
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     91c:	0009                	c.nop	2
     91e:	1500                	addi	s0,sp,672
     920:	0025                	c.nop	9
     922:	0000                	unimp
     924:	1000                	addi	s0,sp,32
     926:	2b04                	fld	fs1,16(a4)
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     928:	0009                	c.nop	2
     92a:	1000                	addi	s0,sp,32
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     92c:	1a04                	addi	s1,sp,304
     92e:	0009                	c.nop	2
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     930:	0900                	addi	s0,sp,144
     932:	069c                	addi	a5,sp,832
     934:	0000                	unimp
     936:	0941                	addi	s2,s2,16
     938:	0000                	unimp
     93a:	380a                	fld	fa6,160(sp)
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     93c:	0000                	unimp
     93e:	0200                	addi	s0,sp,256
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     940:	1f00                	addi	s0,sp,944
     942:	0564                	addi	s1,sp,652
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     944:	0000                	unimp
     946:	3306                	fld	ft6,96(sp)
     948:	04a81703          	lh	a4,74(a6) # 2b8de <_stack_start+0x1b8de>
     94c:	0000                	unimp
     94e:	5d1f 0005 0600      	0x60000055d1f
    for (i = 1; i < rounds; i++)
     954:	0334                	addi	a3,sp,392
     956:	ae1d                	j	c8c <_nettle_aes_decrypt+0x3cc>
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     958:	0004                	0x4
     95a:	2000                	fld	fs0,0(s0)
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     95c:	02f6                	slli	t0,t0,0x1d
     95e:	0000                	unimp
     960:	6708                	flw	fa0,8(a4)
     962:	fc0e                	fsw	ft3,56(sp)
     964:	0005                	c.nop	1
     966:	1100                	addi	s0,sp,160
     968:	0349                	addi	t1,t1,18
     96a:	0000                	unimp
     96c:	1100                	addi	s0,sp,160
     96e:	3701                	jal	86e <_nettle_aes_encrypt+0x456>
     970:	9108                	0x9108
     972:	0009                	c.nop	2
     974:	0c00                	addi	s0,sp,528
     976:	015e                	slli	sp,sp,0x17
     978:	0000                	unimp
     97a:	3901                	jal	58a <_nettle_aes_encrypt+0x172>
     97c:	0009960b          	0x9960b
     980:	0000                	unimp
     982:	4d12                	lw	s10,4(sp)
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     984:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
     988:	0c3a                	slli	s8,s8,0xe
     98a:	09a6                	slli	s3,s3,0x9
     98c:	0000                	unimp
     98e:	0100                	addi	s0,sp,128
     990:	0500                	addi	s0,sp,640
     992:	00000967          	jalr	s2,zero # 0 <__DYNAMIC>
     996:	9609                	srai	a2,a2,0x22
     998:	0000                	unimp
     99a:	a600                	fsd	fs0,8(a2)
     99c:	0009                	c.nop	2
     99e:	0a00                	addi	s0,sp,272
     9a0:	0038                	addi	a4,sp,8
     9a2:	0000                	unimp
     9a4:	00ff                	0xff
     9a6:	a709                	j	10a8 <realloc_beebs+0x50>
     9a8:	0000                	unimp
     9aa:	bc00                	fsd	fs0,56(s0)
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     9ac:	0009                	c.nop	2
     9ae:	0a00                	addi	s0,sp,272
     9b0:	0038                	addi	a4,sp,8
     9b2:	0000                	unimp
     9b4:	00380a03          	lb	s4,3(a6)
     9b8:	0000                	unimp
     9ba:	00ff                	0xff
     9bc:	2621                	jal	cc4 <_nettle_aes_decrypt+0x404>
     9be:	0000                	unimp
     9c0:	0100                	addi	s0,sp,128
     9c2:	1859                	addi	a6,a6,-10
     9c4:	0991                	addi	s3,s3,4
     9c6:	0000                	unimp
     9c8:	0305                	addi	t1,t1,1
     9ca:	2aac                	fld	fa1,80(a3)
     9cc:	0000                	unimp
     9ce:	2b22                	fld	fs6,8(sp)
     9d0:	0001                	nop
     9d2:	0100                	addi	s0,sp,128
     9d4:	911f018b          	0x911f018b
    for (i = 1; i < rounds; i++)
     9d8:	0009                	c.nop	2
     9da:	0500                	addi	s0,sp,640
     9dc:	0019ac03          	lw	s8,1(s3) # 18001 <_stack_start+0x8001>
     9e0:	1900                	addi	s0,sp,176
     9e2:	062d                	addi	a2,a2,11
     9e4:	0000                	unimp
     9e6:	01f4                	addi	a3,sp,204
     9e8:	02ca                	slli	t0,t0,0x12
     9ea:	0c08                	addi	a0,sp,528
     9ec:	000a                	c.slli	zero,0x2
     9ee:	1700                	addi	s0,sp,928
     9f0:	000005cb          	fnmsub.s	fa1,ft0,ft0,ft0,rne
     9f4:	cc01                	beqz	s0,a0c <_nettle_aes_decrypt+0x14c>
     9f6:	0c02                	c.slli64	s8
     9f8:	0038                	addi	a4,sp,8
     9fa:	0000                	unimp
     9fc:	1700                	addi	s0,sp,928
     9fe:	0159                	addi	sp,sp,22
     a00:	0000                	unimp
     a02:	cd01                	beqz	a0,a1a <_nettle_aes_decrypt+0x15a>
     a04:	0c02                	c.slli64	s8
     a06:	0a11                	addi	s4,s4,4
     a08:	0000                	unimp
     a0a:	0004                	0x4
     a0c:	e105                	bnez	a0,a2c <_nettle_aes_decrypt+0x16c>
     a0e:	0009                	c.nop	2
     a10:	0900                	addi	s0,sp,144
     a12:	000000a7          	0xa7
     a16:	0a21                	addi	s4,s4,8
     a18:	0000                	unimp
     a1a:	380a                	fld	fa6,160(sp)
     a1c:	0000                	unimp
     a1e:	3b00                	fld	fs0,48(a4)
     a20:	0900                	addi	s0,sp,144
     a22:	000000b3          	add	ra,zero,zero
     a26:	0a31                	addi	s4,s4,12
     a28:	0000                	unimp
     a2a:	380a                	fld	fa6,160(sp)
     a2c:	0000                	unimp
     a2e:	ff00                	fsw	fs0,56(a4)
     a30:	0500                	addi	s0,sp,640
     a32:	0a21                	addi	s4,s4,8
     a34:	0000                	unimp
     a36:	ab22                	fsd	fs0,400(sp)
     a38:	0000                	unimp
     a3a:	0100                	addi	s0,sp,128
     a3c:	0315                	addi	t1,t1,5
     a3e:	000a3117          	auipc	sp,0xa3
     a42:	0500                	addi	s0,sp,640
     a44:	0015ac03          	lw	s8,1(a1)
     a48:	0900                	addi	s0,sp,144
     a4a:	0060                	addi	s0,sp,12
     a4c:	0000                	unimp
     a4e:	0a59                	addi	s4,s4,22
     a50:	0000                	unimp
     a52:	380a                	fld	fa6,160(sp)
     a54:	0000                	unimp
     a56:	1f00                	addi	s0,sp,944
     a58:	2300                	fld	fs0,0(a4)
     a5a:	0079656b          	0x79656b
    t0 = AES_FINAL_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     a5e:	2001                	jal	a5e <_nettle_aes_decrypt+0x19e>
     a60:	0f04                	addi	s1,sp,912
     a62:	0a49                	addi	s4,s4,18
     a64:	0000                	unimp
     a66:	0305                	addi	t1,t1,1
     a68:	3bb0                	fld	fa2,112(a5)
     a6a:	0000                	unimp
     a6c:	6009                	c.lui	zero,0x2
     a6e:	0000                	unimp
     a70:	7c00                	flw	fs0,56(s0)
     a72:	000a                	c.slli	zero,0x2
     a74:	0a00                	addi	s0,sp,272
     a76:	0038                	addi	a4,sp,8
     a78:	0000                	unimp
     a7a:	00ff                	0xff
     a7c:	cd24                	sw	s1,88(a0)
     a7e:	0002                	c.slli64	zero
     a80:	0100                	addi	s0,sp,128
     a82:	6c0f0427          	0x6c0f0427
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     a86:	000a                	c.slli	zero,0x2
    t0 = AES_FINAL_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     a88:	0500                	addi	s0,sp,640
     a8a:	003bd003          	lhu	zero,3(s7)
     a8e:	2400                	fld	fs0,8(s0)
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     a90:	03e4                	addi	s1,sp,460
     a92:	0000                	unimp
     a94:	4001                	c.li	zero,0
     a96:	0f04                	addi	s1,sp,912
    t0 = AES_FINAL_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     a98:	0a6c                	addi	a1,sp,284
     a9a:	0000                	unimp
     a9c:	0305                	addi	t1,t1,1
     a9e:	3cd0                	fld	fa2,184(s1)
     aa0:	0000                	unimp
     aa2:	6124                	flw	fs1,64(a0)
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     aa4:	0002                	c.slli64	zero
     aa6:	0100                	addi	s0,sp,128
     aa8:	0459                	addi	s0,s0,22
     aaa:	000a6c0f          	0xa6c0f
     aae:	0500                	addi	s0,sp,640
     ab0:	00431003          	lh	zero,4(t1)
     ab4:	2400                	fld	fs0,8(s0)
     ab6:	0654                	addi	a3,sp,772
     ab8:	0000                	unimp
     aba:	5a01                	li	s4,-32
     abc:	0f04                	addi	s1,sp,912
     abe:	0a6c                	addi	a1,sp,284
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     ac0:	0000                	unimp
     ac2:	0305                	addi	t1,t1,1
     ac4:	4210                	lw	a2,0(a2)
     ac6:	0000                	unimp
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     ac8:	d224                	sw	s1,96(a2)
     aca:	0005                	c.nop	1
     acc:	0100                	addi	s0,sp,128
     ace:	045c                	addi	a5,sp,516
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     ad0:	e110                	fsw	fa2,0(a0)
     ad2:	0009                	c.nop	2
     ad4:	0500                	addi	s0,sp,640
     ad6:	00441003          	lh	zero,4(s0) # 4 <__DYNAMIC+0x4>
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     ada:	2400                	fld	fs0,8(s0)
     adc:	02de                	slli	t0,t0,0x17
     ade:	0000                	unimp
     ae0:	5d01                	li	s10,-32
     ae2:	1004                	addi	s1,sp,32
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     ae4:	09e1                	addi	s3,s3,24
     ae6:	0000                	unimp
     ae8:	0305                	addi	t1,t1,1
     aea:	4504                	lw	s1,8(a0)
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     aec:	0000                	unimp
     aee:	4725                	li	a4,9
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     af0:	0001                	nop
     af2:	0100                	addi	s0,sp,128
     af4:	0488                	addi	a0,sp,576
     af6:	2501                	jal	10f6 <reset_handler+0xa>
     af8:	0000                	unimp
     afa:	d800                	sw	s0,48(s0)
     afc:	000d                	c.nop	3
     afe:	e400                	fsw	fs0,8(s0)
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b00:	0000                	unimp
     b02:	0100                	addi	s0,sp,128
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     b04:	b49c                	fsd	fa5,40(s1)
     b06:	2600000b          	0x2600000b
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     b0a:	7072                	flw	ft0,60(sp)
     b0c:	0074                	addi	a3,sp,12
     b0e:	8801                	andi	s0,s0,0
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     b10:	1504                	addi	s1,sp,672
     b12:	0025                	c.nop	9
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     b14:	0000                	unimp
     b16:	0000                	unimp
     b18:	0000                	unimp
     b1a:	01006927          	0x1006927
     b1e:	048a                	slli	s1,s1,0x2
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b20:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
     b24:	3700                	fld	fs0,40(a4)
     b26:	0000                	unimp
     b28:	2800                	fld	fs0,16(s0)
     b2a:	0e7c                	addi	a5,sp,796
     b2c:	0000                	unimp
     b2e:	1139                	addi	sp,sp,-18
     b30:	0000                	unimp
     b32:	0b49                	addi	s6,s6,18
     b34:	0000                	unimp
     b36:	0129                	addi	sp,sp,10
     b38:	025a                	slli	tp,tp,0x16
     b3a:	0082                	c.slli64	ra
     b3c:	0129                	addi	sp,sp,10
     b3e:	2008025b          	0x2008025b
     b42:	0129                	addi	sp,sp,10
     b44:	025c                	addi	a5,sp,260
     b46:	0079                	c.nop	30
     b48:	2800                	fld	fs0,16(s0)
     b4a:	0e90                	addi	a2,sp,848
     b4c:	0000                	unimp
     b4e:	0d3e                	slli	s10,s10,0xf
    LE_WRITE_UINT32 (dst, t0);
     b50:	0000                	unimp
     b52:	0b70                	addi	a2,sp,412
    LE_WRITE_UINT32 (dst + 4, t1);
     b54:	0000                	unimp
     b56:	0129                	addi	sp,sp,10
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b58:	025a                	slli	tp,tp,0x16
     b5a:	0082                	c.slli64	ra
     b5c:	0129                	addi	sp,sp,10
     b5e:	000a035b          	0xa035b
     b62:	2901                	jal	f72 <srand_beebs+0x6>
    LE_WRITE_UINT32 (dst + 8, t2);
     b64:	5c01                	li	s8,-32
     b66:	8302                	jr	t1
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b68:	2900                	fld	fs0,16(a0)
     b6a:	5d01                	li	s10,-32
    LE_WRITE_UINT32 (dst, t0);
     b6c:	8602                	jr	a2
     b6e:	0000                	unimp
     b70:	a028                	fsd	fa0,64(s0)
     b72:	000e                	c.slli	zero,0x3
     b74:	7300                	flw	fs0,32(a4)
     b76:	9000000f          	0x9000000f
     b7a:	2900000b          	0x2900000b
     b7e:	5a01                	li	s4,-32
     b80:	8402                	jr	s0
     b82:	2900                	fld	fs0,16(a0)
    LE_WRITE_UINT32 (dst + 4, t1);
     b84:	5b01                	li	s6,-32
     b86:	0802                	c.slli64	a6
     b88:	2920                	fld	fs0,80(a0)
     b8a:	5c01                	li	s8,-32
     b8c:	7902                	flw	fs2,32(sp)
     b8e:	0000                	unimp
     b90:	b42a                	fsd	fa0,40(sp)
     b92:	000e                	c.slli	zero,0x3
     b94:	9300                	0x9300
     b96:	000c                	0xc
     b98:	2900                	fld	fs0,16(a0)
     b9a:	5a01                	li	s4,-32
    LE_WRITE_UINT32 (dst + 8, t2);
     b9c:	8402                	jr	s0
     b9e:	2900                	fld	fs0,16(a0)
     ba0:	5b01                	li	s6,-32
     ba2:	01000a03          	lb	s4,16(zero) # 10 <__DYNAMIC+0x10>
     ba6:	0129                	addi	sp,sp,10
     ba8:	025c                	addi	a5,sp,260
     baa:	01290087          	0x1290087
     bae:	025d                	addi	tp,tp,23
     bb0:	00000083          	lb	ra,0(zero) # 0 <__DYNAMIC>
    LE_WRITE_UINT32 (dst + 12, t3);
     bb4:	0006402b          	0x6402b
     bb8:	0100                	addi	s0,sp,128
     bba:	0481                	addi	s1,s1,0
     bbc:	2501                	jal	11bc <exit+0x20>
     bbe:	0000                	unimp
     bc0:	2c00                	fld	fs0,24(s0)
     bc2:	0800000f          	fence	i,unknown
     bc6:	0000                	unimp
     bc8:	0100                	addi	s0,sp,128
     bca:	df9c                	sw	a5,56(a5)
     bcc:	2c00000b          	0x2c00000b
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     bd0:	0f34                	addi	a3,sp,920
     bd2:	0000                	unimp
     bd4:	0aee                	slli	s5,s5,0x1b
     bd6:	0000                	unimp
}
     bd8:	0129                	addi	sp,sp,10
     bda:	015a                	slli	sp,sp,0x16
     bdc:	0031                	c.nop	12
     bde:	2d00                	fld	fs0,24(a0)
     be0:	00000353          	fadd.s	ft6,ft0,ft0,rne
     be4:	7801                	lui	a6,0xfffe0
     be6:	0104                	addi	s1,sp,128
     be8:	0f28                	addi	a0,sp,920
     bea:	0000                	unimp
     bec:	0004                	0x4
     bee:	0000                	unimp
     bf0:	9c01                	0x9c01
     bf2:	0c26                	slli	s8,s8,0x9
     bf4:	0000                	unimp
     bf6:	a92e                	fsd	fa1,144(sp)
     bf8:	0004                	0x4
     bfa:	0100                	addi	s0,sp,128
     bfc:	0478                	addi	a4,sp,524
     bfe:	00002513          	slti	a0,zero,0
     c02:	6100                	flw	fs0,0(a0)
     c04:	0000                	unimp
     c06:	2f00                	fld	fs0,24(a4)
     c08:	6572                	flw	fa0,28(sp)
     c0a:	7a010073          	0x7a010073
     c0e:	0804                	addi	s1,sp,16
     c10:	0025                	c.nop	9
     c12:	0000                	unimp
	t0 = AES_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     c14:	2c2c                	fld	fa1,88(s0)
     c16:	ee00000f          	0xee00000f
     c1a:	000a                	c.slli	zero,0x2
     c1c:	2900                	fld	fs0,16(a0)
     c1e:	5a01                	li	s4,-32
     c20:	5a01f303          	0x5a01f303
     c24:	0000                	unimp
     c26:	3530                	fld	fa2,104(a0)
     c28:	0006                	c.slli	zero,0x1
     c2a:	0100                	addi	s0,sp,128
     c2c:	0470                	addi	a2,sp,524
     c2e:	2401                	jal	e2e <benchmark_body+0x56>
     c30:	0400000f          	fence	o,unknown
     c34:	0000                	unimp
     c36:	0100                	addi	s0,sp,128
     c38:	2b9c                	fld	fa5,16(a5)
     c3a:	057d                	addi	a0,a0,31
     c3c:	0000                	unimp
     c3e:	6001                	0x6001
     c40:	0104                	addi	s1,sp,128
     c42:	0025                	c.nop	9
     c44:	0000                	unimp
     c46:	0ebc                	addi	a5,sp,856
     c48:	0000                	unimp
     c4a:	0068                	addi	a0,sp,12
     c4c:	0000                	unimp
     c4e:	9c01                	0x9c01
     c50:	0c8c                	addi	a1,sp,592
     c52:	0000                	unimp
     c54:	7226                	flw	ft4,104(sp)
     c56:	7365                	lui	t1,0xffff9
     c58:	0100                	addi	s0,sp,128
     c5a:	0460                	addi	s0,sp,524
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     c5c:	00002517          	auipc	a0,0x2
     c60:	8200                	0x8200
     c62:	0000                	unimp
	t0 = AES_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     c64:	3100                	fld	fs0,32(a0)
     c66:	04c4                	addi	s1,sp,580
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     c68:	0000                	unimp
     c6a:	6201                	0x6201
	t0 = AES_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     c6c:	0804                	addi	s1,sp,16
     c6e:	0c8c                	addi	a1,sp,592
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     c70:	0000                	unimp
     c72:	000000a3          	sb	zero,1(zero) # 1 <__DYNAMIC+0x1>
     c76:	0832                	slli	a6,a6,0xc
     c78:	0001                	nop
     c7a:	2700                	fld	fs0,8(a4)
     c7c:	0069                	c.nop	26
     c7e:	6401                	0x6401
     c80:	1504                	addi	s1,sp,672
     c82:	0038                	addi	a4,sp,8
     c84:	0000                	unimp
     c86:	00c2                	slli	ra,ra,0x10
     c88:	0000                	unimp
     c8a:	0000                	unimp
     c8c:	0104                	addi	s1,sp,128
     c8e:	5f02                	lw	t5,32(sp)
     c90:	2d000003          	lb	zero,720(zero) # 2d0 <_nettle_aes_invert+0x64>
     c94:	020c                	addi	a1,sp,256
     c96:	0000                	unimp
     c98:	1501                	addi	a0,a0,-32
     c9a:	0104                	addi	s1,sp,128
     c9c:	0da0                	addi	s0,sp,728
     c9e:	0000                	unimp
     ca0:	0038                	addi	a4,sp,8
     ca2:	0000                	unimp
     ca4:	9c01                	0x9c01
     ca6:	0d2c                	addi	a1,sp,664
     ca8:	0000                	unimp
     caa:	6326                	flw	ft6,72(sp)
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     cac:	7874                	flw	fa3,116(s0)
     cae:	0100                	addi	s0,sp,128
     cb0:	0415                	addi	s0,s0,5
     cb2:	2c24                	fld	fs1,88(s0)
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     cb4:	000d                	c.nop	3
     cb6:	e100                	fsw	fs0,0(a0)
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     cb8:	0000                	unimp
     cba:	2e00                	fld	fs0,24(a2)
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     cbc:	000c                	0xc
     cbe:	0000                	unimp
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     cc0:	1601                	addi	a2,a2,-32
     cc2:	0e04                	addi	s1,sp,784
     cc4:	002c                	addi	a1,sp,8
     cc6:	0000                	unimp
     cc8:	0128                	addi	a0,sp,136
     cca:	0000                	unimp
     ccc:	6426                	flw	fs0,72(sp)
     cce:	01007473          	csrrci	s0,0x10,0
     cd2:	0416                	slli	s0,s0,0x5
     cd4:	3220                	fld	fs0,96(a2)
     cd6:	000d                	c.nop	3
     cd8:	6d00                	flw	fs0,24(a0)
     cda:	0001                	nop
     cdc:	2600                	fld	fs0,8(a2)
     cde:	00637273          	csrrci	tp,0x6,6
     ce2:	1601                	addi	a2,a2,-32
     ce4:	3504                	fld	fs1,40(a0)
     ce6:	0d38                	addi	a4,sp,664
     ce8:	0000                	unimp
     cea:	01b2                	slli	gp,gp,0xc
     cec:	0000                	unimp
     cee:	bc28                	fsd	fa0,120(s0)
     cf0:	000d                	c.nop	3
     cf2:	8000                	0x8000
     cf4:	0014                	0x14
     cf6:	0100                	addi	s0,sp,128
     cf8:	000d                	c.nop	3
     cfa:	2900                	fld	fs0,16(a0)
	t3 = AES_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     cfc:	5a01                	li	s4,-32
     cfe:	3101                	jal	8fe <_nettle_aes_decrypt+0x3e>
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     d00:	2c00                	fld	fs0,24(s0)
     d02:	0dd8                	addi	a4,sp,724
     d04:	0000                	unimp
     d06:	00000dd7          	0xdd7
	t3 = AES_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     d0a:	0129                	addi	sp,sp,10
     d0c:	01f3055b          	0x1f3055b
     d10:	235a                	fld	ft6,400(sp)
     d12:	2904                	fld	fs1,16(a0)
     d14:	5c01                	li	s8,-32
     d16:	0305                	addi	t1,t1,1
     d18:	19ac                	addi	a1,sp,248
     d1a:	0000                	unimp
     d1c:	0129                	addi	sp,sp,10
     d1e:	035d                	addi	t1,t1,23
     d20:	295b01f3          	0x295b01f3
     d24:	5e01                	li	t3,-32
     d26:	5c01f303          	0x5c01f303
     d2a:	0000                	unimp
     d2c:	0410                	addi	a2,sp,512
     d2e:	0a0c                	addi	a1,sp,272
     d30:	0000                	unimp
     d32:	0410                	addi	a2,sp,512
     d34:	0096                	slli	ra,ra,0x5
     d36:	0000                	unimp
     d38:	0410                	addi	a2,sp,512
     d3a:	00a2                	slli	ra,ra,0x8
     d3c:	0000                	unimp
     d3e:	1a2d                	addi	s4,s4,-21
     d40:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
     d44:	0409                	addi	s0,s0,2
     d46:	6801                	0x6801
     d48:	000d                	c.nop	3
     d4a:	3800                	fld	fs0,48(s0)
     d4c:	0000                	unimp
     d4e:	0100                	addi	s0,sp,128
     d50:	d79c                	sw	a5,40(a5)
     d52:	000d                	c.nop	3
     d54:	2600                	fld	fs0,8(a2)
     d56:	00787463          	bgeu	a6,t2,d5e <_nettle_aes_decrypt+0x49e>
    for (i = 1; i < rounds; i++)
     d5a:	0901                	addi	s2,s2,0
	t3 = AES_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     d5c:	2404                	fld	fs1,8(s0)
     d5e:	0d2c                	addi	a1,sp,664
     d60:	0000                	unimp
     d62:	000001f7          	0x1f7
     d66:	0c2e                	slli	s8,s8,0xb
{
     d68:	0000                	unimp
     d6a:	0100                	addi	s0,sp,128
  assert_beebs (!(length % AES_BLOCK_SIZE));
     d6c:	040a                	slli	s0,s0,0x2
     d6e:	2c0e                	fld	fs8,192(sp)
     d70:	0000                	unimp
     d72:	3e00                	fld	fs0,56(a2)
{
     d74:	0002                	c.slli64	zero
     d76:	2600                	fld	fs0,8(a2)
  assert_beebs (!(length % AES_BLOCK_SIZE));
     d78:	7364                	flw	fs1,100(a4)
     d7a:	0074                	addi	a3,sp,12
{
     d7c:	0a01                	addi	s4,s4,0
     d7e:	2004                	fld	fs1,0(s0)
  assert_beebs (!(length % AES_BLOCK_SIZE));
     d80:	0d32                	slli	s10,s10,0xc
     d82:	0000                	unimp
  _nettle_aes_encrypt (ctx->rounds, ctx->keys, &_aes_encrypt_table,
     d84:	00000283          	lb	t0,0(zero) # 0 <__DYNAMIC>
     d88:	7326                	flw	ft6,104(sp)
     d8a:	6372                	flw	ft6,28(sp)
     d8c:	0100                	addi	s0,sp,128
     d8e:	040a                	slli	s0,s0,0x2
     d90:	3835                	jal	5cc <_nettle_aes_encrypt+0x1b4>
     d92:	000d                	c.nop	3
     d94:	c800                	sw	s0,16(s0)
     d96:	0002                	c.slli64	zero
     d98:	2800                	fld	fs0,16(s0)
     d9a:	0d84                	addi	s1,sp,720
     d9c:	0000                	unimp
     d9e:	1480                	addi	s0,sp,608
{
     da0:	0000                	unimp
     da2:	0dac                	addi	a1,sp,728
  assert_beebs (!(length % AES_BLOCK_SIZE));
     da4:	0000                	unimp
     da6:	0129                	addi	sp,sp,10
     da8:	015a                	slli	sp,sp,0x16
     daa:	0031                	c.nop	12
{
     dac:	a02c                	fsd	fa1,64(s0)
     dae:	000d                	c.nop	3
  assert_beebs (!(length % AES_BLOCK_SIZE));
     db0:	ab00                	fsd	fs0,16(a4)
     db2:	000e                	c.slli	zero,0x3
{
     db4:	2900                	fld	fs0,16(a0)
     db6:	5b01                	li	s6,-32
  assert_beebs (!(length % AES_BLOCK_SIZE));
     db8:	f305                	bnez	a4,cd8 <_nettle_aes_decrypt+0x418>
     dba:	5a01                	li	s4,-32
  _nettle_aes_decrypt (ctx->rounds, ctx->keys, &_aes_decrypt_table,
     dbc:	01290423          	sb	s2,8(s2) # 1b4f4 <_stack_start+0xb4f4>
     dc0:	055c                	addi	a5,sp,644
     dc2:	002aac03          	lw	s8,2(s5) # fffec002 <_stack_start+0xfffdc002>
     dc6:	2900                	fld	fs0,16(a0)
     dc8:	5d01                	li	s10,-32
     dca:	5b01f303          	0x5b01f303
     dce:	0129                	addi	sp,sp,10
     dd0:	035e                	slli	t1,t1,0x17
     dd2:	005c01f3          	0x5c01f3
     dd6:	3300                	fld	fs0,32(a4)
{
     dd8:	0204                	addi	s1,sp,256
     dda:	0000                	unimp
     ddc:	d501                	beqz	a0,ce4 <_nettle_aes_decrypt+0x424>
     dde:	9f010103          	lb	sp,-1552(sp) # a342e <_stack_start+0x9342e>
     de2:	000e                	c.slli	zero,0x3
     de4:	3400                	fld	fs0,40(s0)
     de6:	000005cb          	fnmsub.s	fa1,ft0,ft0,ft0,rne
     dea:	d501                	beqz	a0,cf2 <_nettle_aes_decrypt+0x432>
     dec:	00381f03          	lh	t5,3(a6) # fffe0003 <_stack_start+0xfffd0003>
     df0:	0000                	unimp
     df2:	5934                	lw	a3,112(a0)
     df4:	0001                	nop
     df6:	0100                	addi	s0,sp,128
     df8:	03d5                	addi	t2,t2,21
     dfa:	9f38                	0x9f38
     dfc:	000e                	c.slli	zero,0x3
     dfe:	3500                	fld	fs0,40(a0)
     e00:	0054                	addi	a3,sp,4
     e02:	d601                	beqz	a2,d0a <_nettle_aes_decrypt+0x44a>
  for (i = 0; i < rpt; i++)
     e04:	0ea52003          	lw	zero,234(a0) # 2d46 <_aes_encrypt_table+0x29a>
      aes_set_encrypt_key (&encctx, 32, key);
     e08:	0000                	unimp
     e0a:	0c34                	addi	a3,sp,536
     e0c:	0000                	unimp
     e0e:	0100                	addi	s0,sp,128
     e10:	2c0f03d7          	0x2c0f03d7
     e14:	0000                	unimp
     e16:	3500                	fld	fs0,40(a0)
      aes_encrypt (&encctx, LEN, encrypted, plaintext);
     e18:	7364                	flw	fs1,100(a4)
     e1a:	0074                	addi	a3,sp,12
     e1c:	d701                	beqz	a4,d24 <_nettle_aes_decrypt+0x464>
     e1e:	0d322103          	lw	sp,211(tp) # d3 <_aes_set_key+0x47>
     e22:	0000                	unimp
     e24:	7335                	lui	t1,0xfffed
     e26:	6372                	flw	ft6,28(sp)
      aes_set_decrypt_key (&decctx, 32, key);
     e28:	0100                	addi	s0,sp,128
     e2a:	383603d7          	0x383603d7
     e2e:	000d                	c.nop	3
      aes_decrypt (&decctx, LEN, decrypted, encrypted);
     e30:	3600                	fld	fs0,40(a2)
     e32:	0030772f          	0x30772f
     e36:	db01                	beqz	a4,d46 <_nettle_aes_decrypt+0x486>
  for (i = 0; i < rpt; i++)
     e38:	00a70e03          	lb	t3,10(a4) # a <__DYNAMIC+0xa>
}
     e3c:	0000                	unimp
     e3e:	0031772f          	0x31772f
     e42:	db01                	beqz	a4,d52 <_nettle_aes_decrypt+0x492>
     e44:	00a71203          	lh	tp,10(a4)
     e48:	0000                	unimp
     e4a:	0032772f          	0x32772f
     e4e:	db01                	beqz	a4,d5e <_nettle_aes_decrypt+0x49e>
     e50:	00a71603          	lh	a2,10(a4)
     e54:	0000                	unimp
     e56:	0033772f          	0x33772f
     e5a:	db01                	beqz	a4,d6a <aes_encrypt+0x2>
     e5c:	00a71a03          	lh	s4,10(a4)
     e60:	0000                	unimp
     e62:	0030742f          	0x30742f
     e66:	dc01                	beqz	s0,d7e <aes_encrypt+0x16>
     e68:	00a70e03          	lb	t3,10(a4)
      aes_set_encrypt_key (&encctx, 32, key);
     e6c:	0000                	unimp
     e6e:	0031742f          	0x31742f
     e72:	dc01                	beqz	s0,d8a <aes_encrypt+0x22>
     e74:	00a71203          	lh	tp,10(a4)
     e78:	0000                	unimp
     e7a:	0032742f          	0x32742f
      aes_encrypt (&encctx, LEN, encrypted, plaintext);
     e7e:	dc01                	beqz	s0,d96 <aes_encrypt+0x2e>
     e80:	00a71603          	lh	a2,10(a4)
     e84:	0000                	unimp
     e86:	0033742f          	0x33742f
     e8a:	dc01                	beqz	s0,da2 <aes_decrypt+0x2>
     e8c:	00a71a03          	lh	s4,10(a4)
      aes_set_decrypt_key (&decctx, 32, key);
     e90:	0000                	unimp
     e92:	0100692f          	0x100692f
     e96:	03dd                	addi	t2,t2,23
     e98:	380e                	fld	fa6,224(sp)
     e9a:	0000                	unimp
     e9c:	0000                	unimp
     e9e:	1000                	addi	s0,sp,32
      aes_decrypt (&decctx, LEN, decrypted, encrypted);
     ea0:	b304                	fsd	fs1,32(a4)
     ea2:	0000                	unimp
     ea4:	1000                	addi	s0,sp,32
     ea6:	9104                	0x9104
     ea8:	0009                	c.nop	2
     eaa:	3300                	fld	fs0,32(a4)
     eac:	0312                	slli	t1,t1,0x4
     eae:	0000                	unimp
     eb0:	a101                	j	12b0 <__call_exitprocs>
     eb2:	73010103          	lb	sp,1840(sp)
  for (i = 0; i < rpt; i++)
     eb6:	3400000f          	0x3400000f
     eba:	000005cb          	fnmsub.s	fa1,ft0,ft0,ft0,rne
  for (unsigned int i = 0; i < LEN; i++)
     ebe:	a101                	j	12be <__call_exitprocs+0xe>
  bool correct = true;
     ec0:	00381f03          	lh	t5,3(a6)
      if (encrypted[i] != expected[i])
     ec4:	0000                	unimp
     ec6:	5934                	lw	a3,112(a0)
     ec8:	0001                	nop
     eca:	0100                	addi	s0,sp,128
     ecc:	03a1                	addi	t2,t2,8
     ece:	9f38                	0x9f38
     ed0:	000e                	c.slli	zero,0x3
     ed2:	3500                	fld	fs0,40(a0)
      if (plaintext[i] != decrypted[i])
     ed4:	0054                	addi	a3,sp,4
     ed6:	a201                	j	fd6 <malloc_beebs+0x16>
     ed8:	0ea52003          	lw	zero,234(a0)
     edc:	0000                	unimp
     ede:	0c34                	addi	a3,sp,536
     ee0:	0000                	unimp
     ee2:	0100                	addi	s0,sp,128
  for (unsigned int i = 0; i < LEN; i++)
     ee4:	2c0f03a3          	sb	zero,711(t5) # 92c7 <_bss_end+0x4ccf>
      if (encrypted[i] != expected[i])
     ee8:	0000                	unimp
     eea:	3500                	fld	fs0,40(a0)
     eec:	7364                	flw	fs1,100(a4)
     eee:	0074                	addi	a3,sp,12
     ef0:	a301                	j	13f0 <__libc_fini_array+0x20>
     ef2:	0d322103          	lw	sp,211(tp) # d3 <_aes_set_key+0x47>
     ef6:	0000                	unimp
     ef8:	7335                	lui	t1,0xfffed
     efa:	6372                	flw	ft6,28(sp)
	correct = false;
     efc:	0100                	addi	s0,sp,128
     efe:	383603a3          	sb	gp,903(a2) # 328ff <_stack_start+0x228ff>
      if (plaintext[i] != decrypted[i])
     f02:	000d                	c.nop	3
     f04:	3600                	fld	fs0,40(a2)
     f06:	0030772f          	0x30772f
     f0a:	a701                	j	160a <mtable+0x5e>
     f0c:	00a70e03          	lb	t3,10(a4)
     f10:	0000                	unimp
     f12:	0031772f          	0x31772f
	correct = false;
     f16:	a701                	j	1616 <mtable+0x6a>
  for (unsigned int i = 0; i < LEN; i++)
     f18:	00a71203          	lh	tp,10(a4)
     f1c:	0000                	unimp
     f1e:	0032772f          	0x32772f
}
     f22:	a701                	j	1622 <mtable+0x76>
}
     f24:	00a71603          	lh	a2,10(a4)
  int  res = benchmark_body (heat);
     f28:	0000                	unimp
     f2a:	0033772f          	0x33772f
  return benchmark_body (LOCAL_SCALE_FACTOR * CPU_MHZ);
     f2e:	a701                	j	162e <mtable+0x82>
     f30:	00a71a03          	lh	s4,10(a4)
  seed = (seed * 1103515245L + 12345) & ((1UL << 31) - 1);
     f34:	0000                	unimp
     f36:	0030742f          	0x30742f
     f3a:	a801                	j	f4a <rand_beebs+0x16>
     f3c:	00a70e03          	lb	t3,10(a4)
     f40:	0000                	unimp
     f42:	0031742f          	0x31742f
     f46:	a801                	j	f56 <rand_beebs+0x22>
     f48:	00a71203          	lh	tp,10(a4)
     f4c:	0000                	unimp
     f4e:	0032742f          	0x32742f
     f52:	a801                	j	f62 <rand_beebs+0x2e>
     f54:	00a71603          	lh	a2,10(a4)
     f58:	0000                	unimp
     f5a:	0033742f          	0x33742f
     f5e:	a801                	j	f6e <srand_beebs+0x2>
     f60:	00a71a03          	lh	s4,10(a4)
}
     f64:	0000                	unimp
     f66:	0100692f          	0x100692f
     f6a:	03a9                	addi	t2,t2,10
  seed = (long int) new_seed;
     f6c:	380e                	fld	fa6,224(sp)
     f6e:	0000                	unimp
     f70:	0000                	unimp
     f72:	2d00                	fld	fs0,24(a0)
}
     f74:	000005b7          	lui	a1,0x0
  heap_end = (void *) ((char *) heap_ptr + heap_size);
     f78:	9501                	srai	a0,a0,0x20
     f7a:	03ec0103          	lb	sp,62(s8) # 4c748 <_stack_start+0x3c748>
  heap_ptr = (void *) heap;
     f7e:	0000                	unimp
     f80:	002c                	addi	a1,sp,8
     f82:	0000                	unimp
  heap_end = (void *) ((char *) heap_ptr + heap_size);
     f84:	9c01                	0x9c01
     f86:	0ff8                	addi	a4,sp,988
     f88:	0000                	unimp
     f8a:	6326                	flw	ft6,72(sp)
  heap_requested = 0;
     f8c:	7874                	flw	fa3,116(s0)
     f8e:	0100                	addi	s0,sp,128
     f90:	0395                	addi	t2,t2,5
     f92:	f826                	fsw	fs1,48(sp)
}
     f94:	0d00000f          	fence	iow,unknown
  return ((void *) ((char *) heap + heap_requested) <= heap_end);
     f98:	2e000003          	lb	zero,736(zero) # 2e0 <_nettle_aes_invert+0x74>
     f9c:	0218                	addi	a4,sp,256
     f9e:	0000                	unimp
     fa0:	9501                	srai	a0,a0,0x20
     fa2:	002c3203          	0x2c3203
     fa6:	0000                	unimp
     fa8:	0344                	addi	s1,sp,388
     faa:	0000                	unimp
     fac:	6b26                	flw	fs6,72(sp)
     fae:	7965                	lui	s2,0xffff9
     fb0:	0100                	addi	s0,sp,128
     fb2:	0395                	addi	t2,t2,5
     fb4:	000d384b          	fnmsub.s	fa6,fs10,ft0,ft0,rup
}
     fb8:	6500                	flw	fs0,8(a0)
     fba:	28000003          	lb	zero,640(zero) # 280 <_nettle_aes_invert+0x14>
     fbe:	0400                	addi	s0,sp,512
  heap_requested += size;
     fc0:	0000                	unimp
     fc2:	1139                	addi	sp,sp,-18
     fc4:	0000                	unimp
     fc6:	0fdf 0000 0129      	0x12900000fdf
  void *new_ptr = heap_ptr;
     fcc:	025a                	slli	tp,tp,0x16
     fce:	0078                	addi	a4,sp,12
     fd0:	0129                	addi	sp,sp,10
     fd2:	01f3035b          	0x1f3035b
     fd6:	5c01295b          	0x5c01295b
  heap_requested += size;
     fda:	5c01f303          	0x5c01f303
     fde:	2c00                	fld	fs0,24(s0)
     fe0:	0418                	addi	a4,sp,512
     fe2:	0000                	unimp
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
     fe4:	0ffe                	slli	t6,t6,0x1f
     fe6:	0000                	unimp
     fe8:	0129                	addi	sp,sp,10
     fea:	035a                	slli	t1,t1,0x16
     fec:	295a01f3          	0x295a01f3
     ff0:	5b01                	li	s6,-32
     ff2:	5a01f303          	0x5a01f303
     ff6:	0000                	unimp
     ff8:	0410                	addi	a2,sp,512
     ffa:	09e1                	addi	s3,s3,24
      heap_ptr = (void *) ((char *) heap_ptr + size);
     ffc:	0000                	unimp
     ffe:	262d                	jal	1328 <__call_exitprocs+0x78>
    1000:	0002                	c.slli64	zero
    1002:	0100                	addi	s0,sp,128
}
    1004:	038e                	slli	t2,t2,0x3
    1006:	a801                	j	1016 <calloc_beebs+0x2>
    1008:	44000003          	lb	zero,1088(zero) # 440 <_nettle_aes_encrypt+0x28>
    return NULL;
    100c:	0000                	unimp
    100e:	0100                	addi	s0,sp,128
    1010:	4e9c                	lw	a5,24(a3)
    1012:	0010                	0x10
  void *new_ptr = malloc_beebs (nmemb * size);
    1014:	2600                	fld	fs0,8(a2)
    1016:	7364                	flw	fs1,100(a4)
{
    1018:	0074                	addi	a3,sp,12
    101a:	8e01                	sub	a2,a2,s0
    101c:	0ff82103          	lw	sp,255(a6)
    1020:	0000                	unimp
    1022:	0386                	slli	t2,t2,0x1
  void *new_ptr = malloc_beebs (nmemb * size);
    1024:	0000                	unimp
    1026:	7326                	flw	ft6,104(sp)
    1028:	6372                	flw	ft6,28(sp)
    102a:	0100                	addi	s0,sp,128
    102c:	038e                	slli	t2,t2,0x3
    102e:	2c3c                	fld	fa5,88(s0)
    1030:	000d                	c.nop	3
    1032:	b200                	fsd	fs0,32(a2)
  if (NULL != new_ptr)
    1034:	2a000003          	lb	zero,672(zero) # 2a0 <_nettle_aes_invert+0x34>
    memset (new_ptr, 0, nmemb * size);
    1038:	03d0                	addi	a2,sp,452
    103a:	0000                	unimp
    103c:	104e                	c.slli	zero,0x33
    103e:	0000                	unimp
    1040:	0129                	addi	sp,sp,10
    1042:	0479025b          	0x479025b
}
    1046:	0129                	addi	sp,sp,10
    1048:	025c                	addi	a5,sp,260
    104a:	0478                	addi	a4,sp,524
    104c:	0000                	unimp
    104e:	3e2d                	jal	b88 <_nettle_aes_decrypt+0x2c8>
    1050:	0004                	0x4
    1052:	0100                	addi	s0,sp,128
    1054:	036d                	addi	t1,t1,27
    1056:	6c01                	0x6c01
  heap_requested += size;
    1058:	0002                	c.slli64	zero
    105a:	3c00                	fld	fs0,56(s0)
    105c:	0001                	nop
    105e:	0100                	addi	s0,sp,128
    1060:	339c                	fld	fa5,32(a5)
    1062:	0011                	c.nop	4
  void *new_ptr = heap_ptr;
    1064:	2e00                	fld	fs0,24(a2)
    1066:	000005cb          	fnmsub.s	fa1,ft0,ft0,ft0,rne
    106a:	6d01                	0x6d01
    106c:	00381e03          	lh	t3,3(a6)
  heap_requested += size;
    1070:	0000                	unimp
    1072:	03de                	slli	t2,t2,0x17
    1074:	0000                	unimp
    1076:	6426                	flw	fs0,72(sp)
    1078:	01007473          	csrrci	s0,0x10,0
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
    107c:	036d                	addi	t1,t1,27
    107e:	3331                	jal	d8a <aes_encrypt+0x22>
    1080:	0011                	c.nop	4
    1082:	1800                	addi	s0,sp,48
    1084:	0004                	0x4
    1086:	2600                	fld	fs0,8(a2)
    1088:	00637273          	csrrci	tp,0x6,6
    108c:	6d01                	0x6d01
    108e:	0e9f4703          	lbu	a4,233(t5)
    1092:	0000                	unimp
      heap_ptr = (void *) ((char *) heap_ptr + size);
    1094:	045f 0000 6927      	0x69270000045f
    109a:	0100                	addi	s0,sp,128
      if (NULL != ptr)
    109c:	380c036f          	jal	t1,c141c <_stack_start+0xb141c>
	  for (i = 0; i < size; i++)
    10a0:	0000                	unimp
    10a2:	9900                	0x9900
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
    10a4:	0004                	0x4
    10a6:	3700                	fld	fs0,40(a4)
    10a8:	0018                	0x18
    10aa:	0000                	unimp
    10ac:	10e6                	slli	ra,ra,0x39
    10ae:	0000                	unimp
	  for (i = 0; i < size; i++)
    10b0:	01006a27          	0x1006a27
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
    10b4:	0376                	slli	t1,t1,0x1d
    10b6:	3810                	fld	fa2,48(s0)
	  for (i = 0; i < size; i++)
    10b8:	0000                	unimp
    10ba:	3e00                	fld	fs0,56(a2)
}
    10bc:	0005                	c.nop	1
    10be:	2700                	fld	fs0,8(a4)
    10c0:	7601006b          	0x7601006b
    return NULL;
    10c4:	00381303          	lh	t1,3(a6)
    10c8:	0000                	unimp
    10ca:	055c                	addi	a5,sp,644
}
    10cc:	0000                	unimp
    10ce:	3032                	fld	ft0,296(sp)
  __asm__ volatile ("li a0, 0" : : : "memory");
    10d0:	0000                	unimp
    10d2:	3100                	fld	fs0,32(a0)
}
    10d4:	0342                	slli	t1,t1,0x10
    10d6:	0000                	unimp
  __asm__ volatile ("li a0, 0" : : : "memory");
    10d8:	7a01                	lui	s4,0xfffe0
    10da:	00a70403          	lb	s0,10(a4)
}
    10de:	0000                	unimp
  __asm__ volatile ("li a0, 0" : : : "memory");
    10e0:	00000587          	0x587
}
    10e4:	0000                	unimp
    10e6:	00000037          	lui	zero,0x0
  jal x0, default_exc_handler
    10ea:	fb00                	fsw	fs0,48(a4)
  mv  x1, x0
    10ec:	0010                	0x10
    10ee:	2f00                	fld	fs0,24(a4)
  mv  x2, x1
    10f0:	7e01006b          	0x7e01006b
  mv  x3, x1
    10f4:	00381003          	lh	zero,3(a6)
  mv  x4, x1
    10f8:	0000                	unimp
    10fa:	3200                	fld	fs0,32(a2)
  mv  x5, x1
    10fc:	0048                	addi	a0,sp,4
    10fe:	0000                	unimp
  mv  x6, x1
    1100:	006b5f27          	0x6b5f27
  mv  x7, x1
    1104:	8701                	c.srai64	a4
    1106:	00a70503          	lb	a0,10(a4)
  mv  x8, x1
    110a:	0000                	unimp
  mv  x9, x1
    110c:	059a                	slli	a1,a1,0x6
    110e:	0000                	unimp
  mv x10, x1
    1110:	6b6e5f27          	0x6b6e5f27
  mv x11, x1
    1114:	0100                	addi	s0,sp,128
    1116:	a7050387          	0xa7050387
  mv x12, x1
    111a:	0000                	unimp
  mv x13, x1
    111c:	db00                	sw	s0,48(a4)
    111e:	0005                	c.nop	1
  mv x14, x1
    1120:	2700                	fld	fs0,8(a4)
    1122:	745f 0100 0387      	0x3870100745f
  mv x16, x1
    1128:	a705                	j	1848 <mtable+0x29c>
    112a:	0000                	unimp
  mv x17, x1
    112c:	1f00                	addi	s0,sp,944
    112e:	00000007          	0x7
  mv x18, x1
    1132:	1000                	addi	s0,sp,32
  mv x19, x1
    1134:	a704                	fsd	fs1,8(a4)
    1136:	0000                	unimp
  mv x20, x1
    1138:	2d00                	fld	fs0,24(a0)
    113a:	0378                	addi	a4,sp,396
  mv x21, x1
    113c:	0000                	unimp
    113e:	f501                	bnez	a0,1046 <calloc_beebs+0x32>
  mv x22, x1
    1140:	0102                	c.slli64	sp
    1142:	020c                	addi	a1,sp,256
  mv x23, x1
    1144:	0000                	unimp
    1146:	0060                	addi	s0,sp,12
  mv x24, x1
    1148:	0000                	unimp
    114a:	9c01                	0x9c01
  mv x25, x1
    114c:	11ca                	slli	gp,gp,0x32
    114e:	0000                	unimp
  mv x26, x1
    1150:	6326                	flw	ft6,72(sp)
    1152:	7874                	flw	fa3,116(s0)
  mv x27, x1
    1154:	0100                	addi	s0,sp,128
    1156:	02f5                	addi	t0,t0,29
  mv x28, x1
    1158:	f826                	fsw	fs1,48(sp)
    115a:	5400000f          	0x5400000f
  mv x29, x1
    115e:	2e000007          	0x2e000007
  mv x30, x1
    1162:	0218                	addi	a4,sp,256
  mv x31, x1
    1164:	0000                	unimp
    1166:	f501                	bnez	a0,106e <realloc_beebs+0x16>
  la   x2, _stack_start
    1168:	3202                	fld	ft4,32(sp)
    116a:	002c                	addi	a1,sp,8
    116c:	0000                	unimp
    116e:	07a6                	slli	a5,a5,0x9
  la x26, _bss_start
    1170:	0000                	unimp
    1172:	6b26                	flw	fs6,72(sp)
    1174:	7965                	lui	s2,0xffff9
    1176:	0100                	addi	s0,sp,128
  la x27, _bss_end
    1178:	02f5                	addi	t0,t0,29
    117a:	000d384b          	fnmsub.s	fa6,fs10,ft0,ft0,rup
    117e:	1d00                	addi	s0,sp,688
  bge x26, x27, zero_loop_end
    1180:	0008                	0x8
    1182:	2700                	fld	fs0,8(a4)
  sw x0, 0(x26)
    1184:	6b6e                	flw	fs6,216(sp)
    1186:	0100                	addi	s0,sp,128
  addi x26, x26, 4
    1188:	380c02f7          	0x380c02f7
  ble x26, x27, zero_loop
    118c:	0000                	unimp
    118e:	6d00                	flw	fs0,24(a0)
  addi x10, x0, 0
    1190:	0008                	0x8
    1192:	2700                	fld	fs0,8(a4)
  addi x11, x0, 0
    1194:	726e                	flw	ft4,248(sp)
    1196:	0100                	addi	s0,sp,128
  jal x1, main
    1198:	381002f7          	0x381002f7
    119c:	0000                	unimp
    119e:	8000                	0x8000
    11a0:	0008                	0x8
    11a2:	2800                	fld	fs0,16(s0)
    11a4:	0228                	addi	a0,sp,264
    11a6:	0000                	unimp
    11a8:	1480                	addi	s0,sp,608
    11aa:	0000                	unimp
    11ac:	11b6                	slli	gp,gp,0x2d
    11ae:	0000                	unimp
    11b0:	0129                	addi	sp,sp,10
    11b2:	015a                	slli	sp,sp,0x16
    11b4:	0031                	c.nop	12
    11b6:	542c                	lw	a1,104(s0)
    11b8:	0002                	c.slli64	zero
    11ba:	ca00                	sw	s0,16(a2)
    11bc:	0011                	c.nop	4
    11be:	2900                	fld	fs0,16(a0)
    11c0:	5c01                	li	s8,-32
    11c2:	f305                	bnez	a4,10e2 <stop_trigger+0x2>
    11c4:	5a01                	li	s4,-32
    11c6:	00000423          	sb	zero,8(zero) # 8 <__DYNAMIC+0x8>
    11ca:	b72d                	j	10f4 <reset_handler+0x8>
    11cc:	0004                	0x4
    11ce:	0100                	addi	s0,sp,128
    11d0:	02d4                	addi	a3,sp,324
    11d2:	8c01                	sub	s0,s0,s0
    11d4:	0000                	unimp
    11d6:	8000                	0x8000
    11d8:	0001                	nop
    11da:	0100                	addi	s0,sp,128
    11dc:	839c                	0x839c
    11de:	0012                	c.slli	zero,0x4
    11e0:	2600                	fld	fs0,8(a2)
    11e2:	726e                	flw	ft4,248(sp)
    11e4:	0100                	addi	s0,sp,128
    11e6:	02d4                	addi	a3,sp,324
    11e8:	3818                	fld	fa4,48(s0)
    11ea:	0000                	unimp
    11ec:	9300                	0x9300
    11ee:	0008                	0x8
    11f0:	2600                	fld	fs0,8(a2)
    11f2:	6b6e                	flw	fs6,216(sp)
    11f4:	0100                	addi	s0,sp,128
    11f6:	02d4                	addi	a3,sp,324
    11f8:	3825                	jal	a30 <_nettle_aes_decrypt+0x170>
    11fa:	0000                	unimp
    11fc:	da00                	sw	s0,48(a2)
    11fe:	0008                	0x8
    1200:	2e00                	fld	fs0,24(a2)
    1202:	0156                	slli	sp,sp,0x15
    1204:	0000                	unimp
    1206:	d501                	beqz	a0,110e <reset_handler+0x22>
    1208:	1302                	slli	t1,t1,0x20
    120a:	00001133          	sll	sp,zero,zero
    120e:	0906                	slli	s2,s2,0x1
    1210:	0000                	unimp
    1212:	6b26                	flw	fs6,72(sp)
    1214:	7965                	lui	s2,0xffff9
    1216:	0100                	addi	s0,sp,128
    1218:	02d5                	addi	t0,t0,21
    121a:	382c                	fld	fa1,112(s0)
    121c:	000d                	c.nop	3
    121e:	4000                	lw	s0,0(s0)
    1220:	0009                	c.nop	2
    1222:	2200                	fld	fs0,0(a2)
    1224:	000000d7          	0xd7
    1228:	d701                	beqz	a4,1130 <reset_handler+0x44>
    122a:	1802                	slli	a6,a6,0x20
    122c:	00001293          	slli	t0,zero,0x0
    1230:	0305                	addi	t1,t1,1
    1232:	15a0                	addi	s0,sp,744
    1234:	0000                	unimp
    1236:	00707227          	0x707227
    123a:	da01                	beqz	a2,114a <reset_handler+0x5e>
    123c:	1202                	slli	tp,tp,0x20
    123e:	0d38                	addi	a4,sp,664
    1240:	0000                	unimp
    1242:	097a                	slli	s2,s2,0x1e
    1244:	0000                	unimp
    1246:	9422                	add	s0,s0,s0
    1248:	0000                	unimp
    124a:	0100                	addi	s0,sp,128
    124c:	380c02db          	0x380c02db
    1250:	0000                	unimp
    1252:	0100                	addi	s0,sp,128
    1254:	275a                	fld	fa4,400(sp)
    1256:	0069                	c.nop	26
    1258:	db01                	beqz	a4,1168 <reset_handler+0x7c>
    125a:	1502                	slli	a0,a0,0x20
    125c:	0038                	addi	a4,sp,8
    125e:	0000                	unimp
    1260:	09b5                	addi	s3,s3,13
    1262:	0000                	unimp
    1264:	01007427          	0x1007427
    1268:	02dc                	addi	a5,sp,324
    126a:	a70c                	fsd	fa1,8(a4)
    126c:	0000                	unimp
    126e:	df00                	sw	s0,56(a4)
    1270:	0009                	c.nop	2
    1272:	2a00                	fld	fs0,16(a2)
    1274:	00a0                	addi	s0,sp,72
    1276:	0000                	unimp
    1278:	1480                	addi	s0,sp,608
    127a:	0000                	unimp
    127c:	0129                	addi	sp,sp,10
    127e:	015a                	slli	sp,sp,0x16
    1280:	0031                	c.nop	12
    1282:	0900                	addi	s0,sp,144
    1284:	00a2                	slli	ra,ra,0x8
    1286:	0000                	unimp
    1288:	00001293          	slli	t0,zero,0x0
    128c:	380a                	fld	fa6,160(sp)
    128e:	0000                	unimp
    1290:	0900                	addi	s0,sp,144
    1292:	0500                	addi	s0,sp,640
    1294:	00001283          	lh	t0,0(zero) # 0 <__DYNAMIC>
    1298:	ab38                	fsd	fa4,80(a4)
    129a:	000e                	c.slli	zero,0x3
    129c:	1800                	addi	s0,sp,48
    129e:	0004                	0x4
    12a0:	a800                	fsd	fs0,16(s0)
    12a2:	0004                	0x4
    12a4:	0100                	addi	s0,sp,128
    12a6:	8c9c                	0x8c9c
    12a8:	39000013          	li	zero,912
    12ac:	0eb9                	addi	t4,t4,14
    12ae:	0000                	unimp
    12b0:	00000a2b          	0xa2b
    12b4:	c639                	beqz	a2,1302 <__call_exitprocs+0x52>
    12b6:	000e                	c.slli	zero,0x3
    12b8:	5700                	lw	s0,40(a4)
    12ba:	000a                	c.slli	zero,0x2
    12bc:	3900                	fld	fs0,48(a0)
    12be:	00000ed3          	fadd.s	ft9,ft0,ft0,rne
    12c2:	00000a83          	lb	s5,0(zero) # 0 <__DYNAMIC>
    12c6:	de39                	beqz	a2,1224 <memset+0x50>
    12c8:	000e                	c.slli	zero,0x3
    12ca:	af00                	fsd	fs0,24(a4)
    12cc:	000a                	c.slli	zero,0x2
    12ce:	3900                	fld	fs0,48(a0)
    12d0:	00000eeb          	0xeeb
    12d4:	0ad0                	addi	a2,sp,340
    12d6:	0000                	unimp
    12d8:	f839                	bnez	s0,122e <memset+0x5a>
    12da:	000e                	c.slli	zero,0x3
    12dc:	f100                	fsw	fs0,32(a0)
    12de:	000a                	c.slli	zero,0x2
    12e0:	3a00                	fld	fs0,48(a2)
    12e2:	00000eab          	0xeab
    12e6:	0420                	addi	s0,sp,520
    12e8:	0000                	unimp
    12ea:	0068                	addi	a0,sp,12
    12ec:	0000                	unimp
    12ee:	a101                	j	16ee <mtable+0x142>
    12f0:	137c0103          	lb	sp,311(s8)
    12f4:	0000                	unimp
    12f6:	f839                	bnez	s0,124c <memset+0x78>
    12f8:	000e                	c.slli	zero,0x3
    12fa:	1200                	addi	s0,sp,288
    12fc:	3900000b          	0x3900000b
    1300:	00000eeb          	0xeeb
    1304:	0b3d                	addi	s6,s6,15
    1306:	0000                	unimp
    1308:	de39                	beqz	a2,1266 <memset+0x92>
    130a:	000e                	c.slli	zero,0x3
    130c:	6800                	flw	fs0,16(s0)
    130e:	3b00000b          	0x3b00000b
    1312:	00000ed3          	fadd.s	ft9,ft0,ft0,rne
    1316:	000ec63b          	0xec63b
    131a:	3b00                	fld	fs0,48(a4)
    131c:	0eb9                	addi	t4,t4,14
    131e:	0000                	unimp
    1320:	053c                	addi	a5,sp,648
    1322:	9000000f          	0x9000000f
    1326:	0000                	unimp
    1328:	3d00                	fld	fs0,56(a0)
    132a:	0f06                	slli	t5,t5,0x1
    132c:	0000                	unimp
    132e:	0bb1                	addi	s7,s7,12
    1330:	0000                	unimp
    1332:	123d                	addi	tp,tp,-17
    1334:	5100000f          	0x5100000f
    1338:	000d                	c.nop	3
    133a:	3d00                	fld	fs0,56(a0)
    133c:	0f1e                	slli	t5,t5,0x7
    133e:	0000                	unimp
    1340:	0f31                	addi	t5,t5,12
    1342:	0000                	unimp
    1344:	2a3d                	jal	1482 <__register_exitproc+0x3e>
    1346:	d100000f          	0xd100000f
    134a:	0010                	0x10
    134c:	3d00                	fld	fs0,56(a0)
    134e:	0f36                	slli	t5,t5,0xd
    1350:	0000                	unimp
    1352:	12c4                	addi	s1,sp,356
    1354:	0000                	unimp
    1356:	423d                	li	tp,15
    1358:	6400000f          	0x6400000f
    135c:	0014                	0x14
    135e:	3d00                	fld	fs0,56(a0)
    1360:	0f4e                	slli	t5,t5,0x13
    1362:	0000                	unimp
    1364:	1644                	addi	s1,sp,804
    1366:	0000                	unimp
    1368:	5a3d                	li	s4,-17
    136a:	e400000f          	0xe400000f
    136e:	3d000017          	auipc	zero,0x3d000
    1372:	0f66                	slli	t5,t5,0x19
    1374:	0000                	unimp
    1376:	000019d7          	0x19d7
    137a:	0000                	unimp
    137c:	682a                	flw	fa6,136(sp)
    137e:	0004                	0x4
    1380:	8000                	0x8000
    1382:	0014                	0x14
    1384:	2900                	fld	fs0,16(a0)
    1386:	5a01                	li	s4,-32
    1388:	3101                	jal	f88 <init_heap_beebs+0x10>
    138a:	0000                	unimp
    138c:	d738                	sw	a4,104(a4)
    138e:	000d                	c.nop	3
    1390:	c000                	sw	s0,0(s0)
    1392:	0008                	0x8
    1394:	a800                	fsd	fs0,16(s0)
    1396:	0004                	0x4
    1398:	0100                	addi	s0,sp,128
    139a:	809c                	0x809c
    139c:	0014                	0x14
    139e:	3900                	fld	fs0,48(a0)
    13a0:	0de5                	addi	s11,s11,25
    13a2:	0000                	unimp
    13a4:	19f5                	addi	s3,s3,-3
    13a6:	0000                	unimp
    13a8:	f239                	bnez	a2,12ee <__call_exitprocs+0x3e>
    13aa:	000d                	c.nop	3
    13ac:	2100                	fld	fs0,0(a0)
    13ae:	001a                	c.slli	zero,0x6
    13b0:	3900                	fld	fs0,48(a0)
    13b2:	0dff                	0xdff
    13b4:	0000                	unimp
    13b6:	1a4d                	addi	s4,s4,-13
    13b8:	0000                	unimp
    13ba:	0a39                	addi	s4,s4,14
    13bc:	000e                	c.slli	zero,0x3
    13be:	7900                	flw	fs0,48(a0)
    13c0:	001a                	c.slli	zero,0x6
    13c2:	3900                	fld	fs0,48(a0)
    13c4:	00000e17          	auipc	t3,0x0
    13c8:	1a9a                	slli	s5,s5,0x26
    13ca:	0000                	unimp
    13cc:	2439                	jal	15da <mtable+0x2e>
    13ce:	000e                	c.slli	zero,0x3
    13d0:	bb00                	fsd	fs0,48(a4)
    13d2:	001a                	c.slli	zero,0x6
    13d4:	3a00                	fld	fs0,48(a2)
    13d6:	00000dd7          	0xdd7
    13da:	08c8                	addi	a0,sp,84
    13dc:	0000                	unimp
    13de:	00b8                	addi	a4,sp,72
    13e0:	0000                	unimp
    13e2:	d501                	beqz	a0,12ea <__call_exitprocs+0x3a>
    13e4:	14700103          	lb	sp,327(zero) # 147 <_aes_set_key+0xbb>
    13e8:	0000                	unimp
    13ea:	2439                	jal	15f8 <mtable+0x4c>
    13ec:	000e                	c.slli	zero,0x3
    13ee:	dc00                	sw	s0,56(s0)
    13f0:	001a                	c.slli	zero,0x6
    13f2:	3900                	fld	fs0,48(a0)
    13f4:	00000e17          	auipc	t3,0x0
    13f8:	00001b07          	0x1b07
    13fc:	0a39                	addi	s4,s4,14
    13fe:	000e                	c.slli	zero,0x3
    1400:	3200                	fld	fs0,32(a2)
    1402:	3b00001b          	0x3b00001b
    1406:	0dff                	0xdff
    1408:	0000                	unimp
    140a:	000df23b          	0xdf23b
    140e:	3b00                	fld	fs0,48(a4)
    1410:	0de5                	addi	s11,s11,25
    1412:	0000                	unimp
    1414:	313c                	fld	fa5,96(a0)
    1416:	000e                	c.slli	zero,0x3
    1418:	e000                	fsw	fs0,0(s0)
    141a:	0000                	unimp
    141c:	3d00                	fld	fs0,56(a0)
    141e:	0e32                	slli	t3,t3,0xc
    1420:	0000                	unimp
    1422:	00001b7b          	0x1b7b
    1426:	3e3d                	jal	f64 <rand_beebs+0x30>
    1428:	000e                	c.slli	zero,0x3
    142a:	2000                	fld	fs0,0(s0)
    142c:	001d                	c.nop	7
    142e:	3d00                	fld	fs0,56(a0)
    1430:	0e4a                	slli	t3,t3,0x12
    1432:	0000                	unimp
    1434:	1ec0                	addi	s0,sp,884
    1436:	0000                	unimp
    1438:	563d                	li	a2,-17
    143a:	000e                	c.slli	zero,0x3
    143c:	6000                	flw	fs0,0(s0)
    143e:	0020                	addi	s0,sp,8
    1440:	3d00                	fld	fs0,56(a0)
    1442:	0e62                	slli	t3,t3,0x18
    1444:	0000                	unimp
    1446:	00002253          	fadd.s	ft4,ft0,ft0,rdn
    144a:	6e3d                	lui	t3,0xf
    144c:	000e                	c.slli	zero,0x3
    144e:	f800                	fsw	fs0,48(s0)
    1450:	3d000023          	sb	a6,960(zero) # 3c0 <aes_invert_key+0x18>
    1454:	0e7a                	slli	t3,t3,0x1e
    1456:	0000                	unimp
    1458:	2598                	fld	fa4,8(a1)
    145a:	0000                	unimp
    145c:	863d                	srai	a2,a2,0xf
    145e:	000e                	c.slli	zero,0x3
    1460:	3800                	fld	fs0,48(s0)
    1462:	3d000027          	0x3d000027
    1466:	0e92                	slli	t4,t4,0x4
    1468:	0000                	unimp
    146a:	0000292b          	0x292b
    146e:	0000                	unimp
    1470:	102a                	c.slli	zero,0x2a
    1472:	0009                	c.nop	2
    1474:	8000                	0x8000
    1476:	0014                	0x14
    1478:	2900                	fld	fs0,16(a0)
    147a:	5a01                	li	s4,-32
    147c:	3101                	jal	107c <realloc_beebs+0x24>
    147e:	0000                	unimp
    1480:	f13e                	fsw	fa5,160(sp)
    1482:	0002                	c.slli64	zero
    1484:	f100                	fsw	fs0,32(a0)
    1486:	0002                	c.slli64	zero
    1488:	0800                	addi	s0,sp,16
    148a:	065d                	addi	a2,a2,23
    148c:	4900                	lw	s0,16(a0)
    148e:	0400000b          	0x400000b
    1492:	9600                	0x9600
    1494:	04000003          	lb	zero,64(zero) # 40 <__DYNAMIC+0x40>
    1498:	0a01                	addi	s4,s4,0
    149a:	0005                	c.nop	1
    149c:	0c00                	addi	s0,sp,528
    149e:	0000070b          	0x70b
    14a2:	00000467          	jalr	s0,zero # 0 <__DYNAMIC>
    14a6:	0f34                	addi	a3,sp,920
    14a8:	0000                	unimp
    14aa:	019c                	addi	a5,sp,192
    14ac:	0000                	unimp
    14ae:	1349                	addi	t1,t1,-14
    14b0:	0000                	unimp
    14b2:	0402                	c.slli64	s0
    14b4:	6905                	lui	s2,0x1
    14b6:	746e                	flw	fs0,248(sp)
    14b8:	0300                	addi	s0,sp,384
    14ba:	00000237          	lui	tp,0x0
    14be:	d802                	sw	zero,48(sp)
    14c0:	00003817          	auipc	a6,0x3
    14c4:	0400                	addi	s0,sp,512
    14c6:	0704                	addi	s1,sp,896
    14c8:	00000073          	ecall
    14cc:	0804                	addi	s1,sp,16
    14ce:	c905                	beqz	a0,14fe <_exit+0x1a>
    14d0:	0000                	unimp
    14d2:	0400                	addi	s0,sp,512
    14d4:	0410                	addi	a2,sp,512
    14d6:	02c1                	addi	t0,t0,16
    14d8:	0000                	unimp
    14da:	9205                	srli	a2,a2,0x21
    14dc:	0002                	c.slli64	zero
    14de:	0200                	addi	s0,sp,256
    14e0:	0165                	addi	sp,sp,25
    14e2:	00003817          	auipc	a6,0x3
    14e6:	0400                	addi	s0,sp,512
    14e8:	0601                	addi	a2,a2,0
    14ea:	00000367          	jalr	t1,zero # 0 <__DYNAMIC>
    14ee:	0104                	addi	s1,sp,128
    14f0:	6508                	flw	fa0,8(a0)
    14f2:	04000003          	lb	zero,64(zero) # 40 <__DYNAMIC+0x40>
    14f6:	0502                	c.slli64	a0
    14f8:	0395                	addi	t2,t2,5
    14fa:	0000                	unimp
    14fc:	0204                	addi	s1,sp,256
    14fe:	00024507          	flq	fa0,0(tp) # 0 <__DYNAMIC>
    1502:	0400                	addi	s0,sp,512
    1504:	0504                	addi	s1,sp,640
    1506:	00ce                	slli	ra,ra,0x13
    1508:	0000                	unimp
    150a:	0404                	addi	s1,sp,512
    150c:	00006e07          	0x6e07
    1510:	0400                	addi	s0,sp,512
    1512:	0708                	addi	a0,sp,896
    1514:	0069                	c.nop	26
    1516:	0000                	unimp
    1518:	00030b03          	lb	s6,0(t1) # fffed000 <_stack_start+0xfffdd000>
    151c:	0300                	addi	s0,sp,384
    151e:	0e2e                	slli	t3,t3,0xb
    1520:	0076                	c.slli	zero,0x1d
    1522:	0000                	unimp
    1524:	00045f03          	lhu	t5,0(s0)
    1528:	0300                	addi	s0,sp,384
    152a:	0e74                	addi	a3,sp,796
    152c:	0076                	c.slli	zero,0x1d
    152e:	0000                	unimp
    1530:	00023503          	0x23503
    1534:	0300                	addi	s0,sp,384
    1536:	00251793          	slli	a5,a0,0x2
{
    153a:	0000                	unimp
    153c:	0406                	slli	s0,s0,0x1
    153e:	d103a503          	lw	a0,-752(t2) # 535345fa <_stack_start+0x535245fa>
  initialise_board ();
    1542:	0000                	unimp
  initialise_benchmark ();
    1544:	0700                	addi	s0,sp,896
    1546:	028c                	addi	a1,sp,320
  warm_caches (WARMUP_HEAT);
    1548:	0000                	unimp
    154a:	4d0ca703          	lw	a4,1232(s9) # d9ee4d0 <_stack_start+0xd9de4d0>
    154e:	0000                	unimp
  start_trigger ();
    1550:	0700                	addi	s0,sp,896
    1552:	01ed                	addi	gp,gp,27
  result = benchmark ();
    1554:	0000                	unimp
    1556:	d113a803          	lw	a6,-751(t2)
    155a:	0000                	unimp
  stop_trigger ();
    155c:	0000                	unimp
    155e:	6108                	flw	fa0,0(a0)
  correct = verify_benchmark (result);
    1560:	0000                	unimp
    1562:	e100                	fsw	fs0,0(a0)
    1564:	0000                	unimp
    1566:	0900                	addi	s0,sp,144
    1568:	0038                	addi	a4,sp,8
    156a:	0000                	unimp
    asm("wfi");
    156c:	080a0003          	lb	zero,128(s4) # fffe0080 <_stack_start+0xfffd0080>
    1570:	0509a203          	lw	tp,80(s3)
    1574:	0001                	nop
    1576:	0b00                	addi	s0,sp,400
    1578:	0451                	addi	s0,s0,20
    157a:	0000                	unimp
    157c:	2507a403          	lw	s0,592(a5) # ffffc250 <_stack_start+0xfffec250>
    1580:	0000                	unimp
    1582:	0000                	unimp
    1584:	0004df0b          	0x4df0b
    1588:	0300                	addi	s0,sp,384
    158a:	05a9                	addi	a1,a1,10
    158c:	000000af          	0xaf
    1590:	0004                	0x4
    1592:	0003bd03          	0x3bd03
    1596:	0300                	addi	s0,sp,384
    1598:	03aa                	slli	t2,t2,0xa
    159a:	00e1                	addi	ra,ra,24
    159c:	0000                	unimp
    159e:	040c                	addi	a1,sp,512
    15a0:	0004f503          	0x4f503
    15a4:	0400                	addi	s0,sp,512
    15a6:	1916                	slli	s2,s2,0x25
    15a8:	007d                	c.nop	31
    15aa:	0000                	unimp
    15ac:	00033003          	0x33003
    15b0:	0500                	addi	s0,sp,640
    15b2:	0d0c                	addi	a1,sp,656
    15b4:	0025                	c.nop	9
    15b6:	0000                	unimp
    15b8:	0001b003          	0x1b003
    15bc:	0400                	addi	s0,sp,512
    15be:	011f1b23          	sh	a7,22(t5)
    15c2:	0000                	unimp
    15c4:	c10d                	beqz	a0,15e6 <mtable+0x3a>
    15c6:	0001                	nop
    15c8:	1800                	addi	s0,sp,48
    15ca:	3404                	fld	fs1,40(s0)
    15cc:	9108                	0x9108
    15ce:	0001                	nop
    15d0:	0b00                	addi	s0,sp,400
    15d2:	03de                	slli	t2,t2,0x17
    15d4:	0000                	unimp
    15d6:	3604                	fld	fs1,40(a2)
    15d8:	00019113          	slli	sp,gp,0x0
    15dc:	0000                	unimp
    15de:	5f0e                	lw	t5,224(sp)
    15e0:	3704006b          	0x3704006b
    15e4:	00002507          	flw	fa0,0(zero) # 0 <__DYNAMIC>
    15e8:	0400                	addi	s0,sp,512
    15ea:	00042f0b          	0x42f0b
    15ee:	0400                	addi	s0,sp,512
    15f0:	00250b37          	lui	s6,0x250
    15f4:	0000                	unimp
    15f6:	0b08                	addi	a0,sp,400
    15f8:	01aa                	slli	gp,gp,0xa
    15fa:	0000                	unimp
    15fc:	3704                	fld	fs1,40(a4)
    15fe:	2514                	fld	fa3,8(a0)
    1600:	0000                	unimp
    1602:	0c00                	addi	s0,sp,528
    1604:	00058e0b          	0x58e0b
    1608:	0400                	addi	s0,sp,512
    160a:	00251b37          	lui	s6,0x251
    160e:	0000                	unimp
    1610:	0e10                	addi	a2,sp,784
    1612:	785f 0400 0b38      	0xb380400785f
    1618:	00000197          	auipc	gp,0x0
    161c:	0014                	0x14
    161e:	0137040f          	0x137040f
    1622:	0000                	unimp
    1624:	1308                	addi	a0,sp,416
    1626:	0001                	nop
    1628:	a700                	fsd	fs0,8(a4)
    162a:	0001                	nop
    162c:	0900                	addi	s0,sp,144
    162e:	0038                	addi	a4,sp,8
    1630:	0000                	unimp
    1632:	0000                	unimp
    1634:	e80d                	bnez	s0,1666 <mtable+0xba>
    1636:	0001                	nop
    1638:	2400                	fld	fs0,8(s0)
    163a:	3c04                	fld	fs1,56(s0)
    163c:	2a08                	fld	fa0,16(a2)
    163e:	0002                	c.slli64	zero
    1640:	0b00                	addi	s0,sp,400
    1642:	00c0                	addi	s0,sp,68
    1644:	0000                	unimp
    1646:	3e04                	fld	fs1,56(a2)
    1648:	2509                	jal	1c4a <_aes_decrypt_table+0x29e>
    164a:	0000                	unimp
    164c:	0000                	unimp
    164e:	0004ae0b          	0x4ae0b
    1652:	0400                	addi	s0,sp,512
    1654:	0025093f 0b040000 	0xb0400000025093f
    165c:	00e8                	addi	a0,sp,76
    165e:	0000                	unimp
    1660:	4004                	lw	s1,0(s0)
    1662:	2509                	jal	1c64 <_aes_decrypt_table+0x2b8>
    1664:	0000                	unimp
    1666:	0800                	addi	s0,sp,16
    1668:	00064a0b          	0x64a0b
    166c:	0400                	addi	s0,sp,512
    166e:	0941                	addi	s2,s2,16
    1670:	0025                	c.nop	9
    1672:	0000                	unimp
    1674:	0b0c                	addi	a1,sp,400
    1676:	02e5                	addi	t0,t0,25
    1678:	0000                	unimp
    167a:	4204                	lw	s1,0(a2)
    167c:	2509                	jal	1c7e <_aes_decrypt_table+0x2d2>
    167e:	0000                	unimp
    1680:	1000                	addi	s0,sp,32
    1682:	0002ae0b          	0x2ae0b
    1686:	0400                	addi	s0,sp,512
    1688:	00250943          	fmadd.s	fs2,fa0,ft2,ft0,rne
    168c:	0000                	unimp
    168e:	0b14                	addi	a3,sp,400
    1690:	00000593          	li	a1,0
    1694:	4404                	lw	s1,8(s0)
    1696:	2509                	jal	1c98 <_aes_decrypt_table+0x2ec>
    1698:	0000                	unimp
    169a:	1800                	addi	s0,sp,48
    169c:	00039f0b          	0x39f0b
    16a0:	0400                	addi	s0,sp,512
    16a2:	0945                	addi	s2,s2,17
    16a4:	0025                	c.nop	9
    16a6:	0000                	unimp
    16a8:	0b1c                	addi	a5,sp,400
    16aa:	05f4                	addi	a3,sp,716
    16ac:	0000                	unimp
    16ae:	4604                	lw	s1,8(a2)
    16b0:	2509                	jal	1cb2 <_aes_decrypt_table+0x306>
    16b2:	0000                	unimp
    16b4:	2000                	fld	fs0,0(s0)
    16b6:	1000                	addi	s0,sp,32
    16b8:	000000f7          	0xf7
    16bc:	0108                	addi	a0,sp,128
    16be:	4f04                	lw	s1,24(a4)
    16c0:	6f08                	flw	fa0,24(a4)
    16c2:	0002                	c.slli64	zero
    16c4:	0b00                	addi	s0,sp,400
    16c6:	0192                	slli	gp,gp,0x4
    16c8:	0000                	unimp
    16ca:	5004                	lw	s1,32(s0)
    16cc:	6f0a                	flw	ft10,128(sp)
    16ce:	0002                	c.slli64	zero
    16d0:	0000                	unimp
    16d2:	0000000b          	0xb
    16d6:	0400                	addi	s0,sp,512
    16d8:	0951                	addi	s2,s2,20
    16da:	0000026f          	jal	tp,16da <mtable+0x12e>
    16de:	1180                	addi	s0,sp,224
    16e0:	000004e7          	jalr	s1,zero # 0 <__DYNAMIC>
    16e4:	5304                	lw	s1,32(a4)
    16e6:	130a                	slli	t1,t1,0x22
    16e8:	0001                	nop
    16ea:	0000                	unimp
    16ec:	1101                	addi	sp,sp,-32
    16ee:	011c                	addi	a5,sp,128
    16f0:	0000                	unimp
    16f2:	5604                	lw	s1,40(a2)
    16f4:	130a                	slli	t1,t1,0x22
    16f6:	0001                	nop
    16f8:	0400                	addi	s0,sp,512
    16fa:	0001                	nop
    16fc:	1108                	addi	a0,sp,160
    16fe:	0001                	nop
    1700:	7f00                	flw	fs0,56(a4)
    1702:	0002                	c.slli64	zero
    1704:	0900                	addi	s0,sp,144
    1706:	0038                	addi	a4,sp,8
    1708:	0000                	unimp
    170a:	001f ee10 0002      	0x2ee10001f
    1710:	9000                	0x9000
    1712:	0401                	addi	s0,s0,0
    1714:	0862                	slli	a6,a6,0x18
    1716:	02c2                	slli	t0,t0,0x10
    1718:	0000                	unimp
    171a:	0003de0b          	0x3de0b
    171e:	0400                	addi	s0,sp,512
    1720:	02c21263          	bne	tp,a2,1744 <mtable+0x198>
    1724:	0000                	unimp
    1726:	0b00                	addi	s0,sp,400
    1728:	03ff                	0x3ff
    172a:	0000                	unimp
    172c:	6404                	flw	fs1,8(s0)
    172e:	2506                	fld	fa0,64(sp)
    1730:	0000                	unimp
    1732:	0400                	addi	s0,sp,512
    1734:	00019a0b          	0x19a0b
    1738:	0400                	addi	s0,sp,512
    173a:	0966                	slli	s2,s2,0x19
    173c:	02c8                	addi	a0,sp,324
    173e:	0000                	unimp
    1740:	0b08                	addi	a0,sp,400
    1742:	000000f7          	0xf7
    1746:	6704                	flw	fs1,8(a4)
    1748:	2a1e                	fld	fs4,448(sp)
    174a:	0002                	c.slli64	zero
    174c:	8800                	0x8800
    174e:	0f00                	addi	s0,sp,912
    1750:	7f04                	flw	fs1,56(a4)
    1752:	0002                	c.slli64	zero
    1754:	0800                	addi	s0,sp,16
    1756:	02d8                	addi	a4,sp,324
    1758:	0000                	unimp
    175a:	02d8                	addi	a4,sp,324
    175c:	0000                	unimp
    175e:	3809                	jal	f70 <srand_beebs+0x4>
    1760:	0000                	unimp
    1762:	1f00                	addi	s0,sp,944
    1764:	0f00                	addi	s0,sp,912
    1766:	de04                	sw	s1,56(a2)
    1768:	0002                	c.slli64	zero
    176a:	1200                	addi	s0,sp,288
    176c:	a90d                	j	1b9e <_aes_decrypt_table+0x1f2>
    176e:	08000003          	lb	zero,128(zero) # 80 <__DYNAMIC+0x80>
    1772:	7a04                	flw	fs1,48(a2)
    1774:	0708                	addi	a0,sp,896
    1776:	0b000003          	lb	zero,176(zero) # b0 <_aes_set_key+0x24>
    177a:	00e2                	slli	ra,ra,0x18
    177c:	0000                	unimp
    177e:	7b04                	flw	fs1,48(a4)
    1780:	0711                	addi	a4,a4,4
    1782:	00000003          	lb	zero,0(zero) # 0 <__DYNAMIC>
    1786:	0006730b          	0x6730b
    178a:	0400                	addi	s0,sp,512
    178c:	067c                	addi	a5,sp,780
    178e:	0025                	c.nop	9
    1790:	0000                	unimp
    1792:	0004                	0x4
    1794:	0061040f          	0x61040f
    1798:	0000                	unimp
    179a:	c80d                	beqz	s0,17cc <mtable+0x220>
    179c:	68000003          	lb	zero,1664(zero) # 680 <_nettle_aes_encrypt+0x268>
    17a0:	ba04                	fsd	fs1,48(a2)
    17a2:	5008                	lw	a0,32(s0)
    17a4:	0004                	0x4
    17a6:	0e00                	addi	s0,sp,784
    17a8:	705f 0400 12bb      	0x12bb0400705f
    17ae:	00000307          	0x307
    17b2:	0e00                	addi	s0,sp,784
    17b4:	725f 0400 07bc      	0x7bc0400725f
    17ba:	0025                	c.nop	9
    17bc:	0000                	unimp
    17be:	0e04                	addi	s1,sp,784
    17c0:	775f 0400 07bd      	0x7bd0400775f
    17c6:	0025                	c.nop	9
    17c8:	0000                	unimp
    17ca:	0b08                	addi	a0,sp,400
    17cc:	0115                	addi	sp,sp,5
    17ce:	0000                	unimp
    17d0:	be04                	fsd	fs1,56(a2)
    17d2:	6809                	lui	a6,0x2
    17d4:	0000                	unimp
    17d6:	0c00                	addi	s0,sp,528
    17d8:	0002200b          	0x2200b
    17dc:	0400                	addi	s0,sp,512
    17de:	006809bf 0e0e0000 	0xe0e0000006809bf
    17e6:	625f 0066 c004      	0xc0040066625f
    17ec:	df11                	beqz	a4,1708 <mtable+0x15c>
    17ee:	0002                	c.slli64	zero
    17f0:	1000                	addi	s0,sp,32
    17f2:	0000800b          	0x800b
    17f6:	0400                	addi	s0,sp,512
    17f8:	07c1                	addi	a5,a5,16
    17fa:	0025                	c.nop	9
    17fc:	0000                	unimp
    17fe:	0b18                	addi	a4,sp,400
    1800:	0105                	addi	sp,sp,1
    1802:	0000                	unimp
    1804:	c804                	sw	s1,16(s0)
    1806:	110a                	slli	sp,sp,0x22
    1808:	0001                	nop
    180a:	1c00                	addi	s0,sp,560
    180c:	0001d80b          	0x1d80b
    1810:	0400                	addi	s0,sp,512
    1812:	1dca                	slli	s11,s11,0x32
    1814:	05d4                	addi	a3,sp,708
    1816:	0000                	unimp
    1818:	0b20                	addi	s0,sp,408
    181a:	000002a7          	0x2a7
    181e:	cc04                	sw	s1,24(s0)
    1820:	fe1d                	bnez	a2,175e <mtable+0x1b2>
    1822:	0005                	c.nop	1
    1824:	2400                	fld	fs0,8(s0)
    1826:	0004590b          	0x4590b
    182a:	0400                	addi	s0,sp,512
    182c:	06220dcf          	fnmadd.q	fs11,ft4,ft2,ft0,rne
    1830:	0000                	unimp
    1832:	0b28                	addi	a0,sp,408
    1834:	060e                	slli	a2,a2,0x3
    1836:	0000                	unimp
    1838:	d004                	sw	s1,32(s0)
    183a:	3c09                	jal	124c <memset+0x78>
    183c:	0006                	c.slli	zero,0x1
    183e:	2c00                	fld	fs0,24(s0)
    1840:	5f0e                	lw	t5,224(sp)
    1842:	6275                	lui	tp,0x1d
    1844:	0400                	addi	s0,sp,512
    1846:	02df11d3          	fadd.d	ft3,ft10,fa3,rtz
    184a:	0000                	unimp
    184c:	0e30                	addi	a2,sp,792
    184e:	755f 0070 d404      	0xd4040070755f
    1854:	0712                	slli	a4,a4,0x4
    1856:	38000003          	lb	zero,896(zero) # 380 <_nettle_aes_invert+0x114>
    185a:	5f0e                	lw	t5,224(sp)
    185c:	7275                	lui	tp,0xffffd
    185e:	0400                	addi	s0,sp,512
    1860:	07d5                	addi	a5,a5,21
    1862:	0025                	c.nop	9
    1864:	0000                	unimp
    1866:	0b3c                	addi	a5,sp,408
    1868:	00dc                	addi	a5,sp,68
    186a:	0000                	unimp
    186c:	d804                	sw	s1,48(s0)
    186e:	4211                	li	tp,4
    1870:	0006                	c.slli	zero,0x1
    1872:	4000                	lw	s0,0(s0)
    1874:	0005e60b          	0x5e60b
    1878:	0400                	addi	s0,sp,512
    187a:	11d9                	addi	gp,gp,-10
    187c:	0652                	slli	a2,a2,0x14
    187e:	0000                	unimp
    1880:	6c5f0e43          	0x6c5f0e43
    1884:	0062                	c.slli	zero,0x18
    1886:	dc04                	sw	s1,56(s0)
    1888:	df11                	beqz	a4,17a4 <mtable+0x1f8>
    188a:	0002                	c.slli64	zero
    188c:	4400                	lw	s0,8(s0)
    188e:	00013e0b          	0x13e0b
    1892:	0400                	addi	s0,sp,512
    1894:	07df 0025 0000      	0x2507df
    189a:	0b4c                	addi	a1,sp,404
    189c:	0000016b          	0x16b
    18a0:	e004                	fsw	fs1,0(s0)
    18a2:	8b0a                	mv	s6,sp
    18a4:	0000                	unimp
    18a6:	5000                	lw	s0,32(s0)
    18a8:	0000430b          	0x430b
    18ac:	0400                	addi	s0,sp,512
    18ae:	046e12e3          	bne	t3,t1,20f2 <_min_stack+0xf2>
    18b2:	0000                	unimp
    18b4:	0b54                	addi	a3,sp,404
    18b6:	0299                	addi	t0,t0,6
    18b8:	0000                	unimp
    18ba:	e704                	fsw	fs1,8(a4)
    18bc:	2b0c                	fld	fa1,16(a4)
    18be:	0001                	nop
    18c0:	5800                	lw	s0,48(s0)
    18c2:	0003d00b          	0x3d00b
    18c6:	0400                	addi	s0,sp,512
    18c8:	0ee9                	addi	t4,t4,26
    18ca:	0105                	addi	sp,sp,1
    18cc:	0000                	unimp
    18ce:	0b5c                	addi	a5,sp,404
    18d0:	029f 0000 ea04      	0xea040000029f
    18d6:	2509                	jal	1ed8 <_aes_decrypt_table+0x52c>
    18d8:	0000                	unimp
    18da:	6400                	flw	fs0,8(s0)
    18dc:	1300                	addi	s0,sp,416
    18de:	000000a3          	sb	zero,1(zero) # 1 <__DYNAMIC+0x1>
    18e2:	046e                	slli	s0,s0,0x1b
    18e4:	0000                	unimp
    18e6:	6e14                	flw	fa3,24(a2)
    18e8:	0004                	0x4
    18ea:	1400                	addi	s0,sp,544
    18ec:	0111                	addi	sp,sp,4
    18ee:	0000                	unimp
    18f0:	c214                	sw	a3,0(a2)
    18f2:	0005                	c.nop	1
    18f4:	1400                	addi	s0,sp,544
    18f6:	0025                	c.nop	9
    18f8:	0000                	unimp
    18fa:	0f00                	addi	s0,sp,912
    18fc:	7904                	flw	fs1,48(a0)
    18fe:	0004                	0x4
    1900:	1500                	addi	s0,sp,672
    1902:	046e                	slli	s0,s0,0x1b
    1904:	0000                	unimp
    1906:	3716                	fld	fa4,352(sp)
    1908:	0004                	0x4
    190a:	2800                	fld	fs0,16(s0)
    190c:	0404                	addi	s1,sp,512
    190e:	0265                	addi	tp,tp,25
    1910:	c208                	sw	a0,0(a2)
    1912:	0005                	c.nop	1
    1914:	1700                	addi	s0,sp,928
    1916:	038e                	slli	t2,t2,0x3
    1918:	0000                	unimp
    191a:	6704                	flw	fs1,8(a4)
    191c:	0702                	c.slli64	a4
    191e:	0025                	c.nop	9
    1920:	0000                	unimp
    1922:	1700                	addi	s0,sp,928
    1924:	0124                	addi	s1,sp,136
    1926:	0000                	unimp
    1928:	6c04                	flw	fs1,24(s0)
    192a:	0b02                	c.slli64	s6
    192c:	06ae                	slli	a3,a3,0xb
    192e:	0000                	unimp
    1930:	1704                	addi	s1,sp,928
    1932:	01f4                	addi	a3,sp,204
    1934:	0000                	unimp
    1936:	6c04                	flw	fs1,24(s0)
    1938:	1402                	slli	s0,s0,0x20
    193a:	06ae                	slli	a3,a3,0xb
    193c:	0000                	unimp
    193e:	1708                	addi	a0,sp,928
    1940:	01b9                	addi	gp,gp,14
    1942:	0000                	unimp
    1944:	6c04                	flw	fs1,24(s0)
    1946:	1e02                	slli	t3,t3,0x20
    1948:	06ae                	slli	a3,a3,0xb
    194a:	0000                	unimp
    194c:	170c                	addi	a1,sp,928
    194e:	03fa                	slli	t2,t2,0x1e
    1950:	0000                	unimp
    1952:	6e04                	flw	fs1,24(a2)
    1954:	0802                	c.slli64	a6
    1956:	0025                	c.nop	9
    1958:	0000                	unimp
    195a:	1710                	addi	a2,sp,928
    195c:	0000001b          	0x1b
    1960:	6f04                	flw	fs1,24(a4)
    1962:	0802                	c.slli64	a6
    1964:	08ae                	slli	a7,a7,0xb
    1966:	0000                	unimp
    1968:	1714                	addi	a3,sp,928
    196a:	0416                	slli	s0,s0,0x5
    196c:	0000                	unimp
    196e:	7204                	flw	fs1,32(a2)
    1970:	0702                	c.slli64	a4
    1972:	0025                	c.nop	9
    1974:	0000                	unimp
    1976:	1730                	addi	a2,sp,936
    1978:	0404                	addi	s1,sp,512
    197a:	0000                	unimp
    197c:	7304                	flw	fs1,32(a4)
    197e:	1602                	slli	a2,a2,0x20
    1980:	000008c3          	fmadd.s	fa7,ft0,ft0,ft0,rne
    1984:	1734                	addi	a3,sp,936
    1986:	0300                	addi	s0,sp,384
    1988:	0000                	unimp
    198a:	7504                	flw	fs1,40(a0)
    198c:	0702                	c.slli64	a4
    198e:	0025                	c.nop	9
    1990:	0000                	unimp
    1992:	1738                	addi	a4,sp,936
    1994:	040c                	addi	a1,sp,512
    1996:	0000                	unimp
    1998:	7704                	flw	fs1,40(a4)
    199a:	0a02                	c.slli64	s4
    199c:	08d4                	addi	a3,sp,84
    199e:	0000                	unimp
    19a0:	173c                	addi	a5,sp,936
    19a2:	0284                	addi	s1,sp,320
    19a4:	0000                	unimp
    19a6:	7a04                	flw	fs1,48(a2)
    19a8:	1302                	slli	t1,t1,0x20
    19aa:	0191                	addi	gp,gp,4
    19ac:	0000                	unimp
    19ae:	1740                	addi	s0,sp,932
    19b0:	01de                	slli	gp,gp,0x17
    19b2:	0000                	unimp
    19b4:	7b04                	flw	fs1,48(a4)
    19b6:	0702                	c.slli64	a4
    19b8:	0025                	c.nop	9
    19ba:	0000                	unimp
    19bc:	1744                	addi	s1,sp,932
    19be:	0628                	addi	a0,sp,776
    19c0:	0000                	unimp
    19c2:	7c04                	flw	fs1,56(s0)
    19c4:	1302                	slli	t1,t1,0x20
    19c6:	0191                	addi	gp,gp,4
    19c8:	0000                	unimp
    19ca:	1748                	addi	a0,sp,932
    19cc:	0326                	slli	t1,t1,0x9
    19ce:	0000                	unimp
    19d0:	7d04                	flw	fs1,56(a0)
    19d2:	1402                	slli	s0,s0,0x20
    19d4:	08da                	slli	a7,a7,0x16
    19d6:	0000                	unimp
    19d8:	174c                	addi	a1,sp,932
    19da:	01fc                	addi	a5,sp,204
    19dc:	0000                	unimp
    19de:	8004                	0x8004
    19e0:	0702                	c.slli64	a4
    19e2:	0025                	c.nop	9
    19e4:	0000                	unimp
    19e6:	1750                	addi	a2,sp,932
    19e8:	00000163          	beqz	zero,19ea <_aes_decrypt_table+0x3e>
    19ec:	8104                	0x8104
    19ee:	0902                	c.slli64	s2
    19f0:	05c2                	slli	a1,a1,0x10
    19f2:	0000                	unimp
    19f4:	1754                	addi	a3,sp,932
    19f6:	00000373          	0x373
    19fa:	a404                	fsd	fs1,8(s0)
    19fc:	0702                	c.slli64	a4
    19fe:	0889                	addi	a7,a7,2
    1a00:	0000                	unimp
    1a02:	1858                	addi	a4,sp,52
    1a04:	02ee                	slli	t0,t0,0x1b
    1a06:	0000                	unimp
    1a08:	a804                	fsd	fs1,16(s0)
    1a0a:	1302                	slli	t1,t1,0x20
    1a0c:	02c2                	slli	t0,t0,0x10
    1a0e:	0000                	unimp
    1a10:	0148                	addi	a0,sp,132
    1a12:	5818                	lw	a4,48(s0)
    1a14:	0002                	c.slli64	zero
    1a16:	0400                	addi	s0,sp,512
    1a18:	02a9                	addi	t0,t0,10
    1a1a:	7f12                	flw	ft10,36(sp)
    1a1c:	0002                	c.slli64	zero
    1a1e:	4c00                	lw	s0,24(s0)
    1a20:	1801                	addi	a6,a6,-32
    1a22:	05ad                	addi	a1,a1,11
    1a24:	0000                	unimp
    1a26:	ad04                	fsd	fs1,24(a0)
    1a28:	0c02                	c.slli64	s8
    1a2a:	000008eb          	0x8eb
    1a2e:	02dc                	addi	a5,sp,324
    1a30:	0d18                	addi	a4,sp,656
    1a32:	0001                	nop
    1a34:	0400                	addi	s0,sp,512
    1a36:	02b2                	slli	t0,t0,0xc
    1a38:	6f10                	flw	fa2,24(a4)
    1a3a:	0006                	c.slli	zero,0x1
    1a3c:	e000                	fsw	fs0,0(s0)
    1a3e:	1802                	slli	a6,a6,0x20
    1a40:	00f2                	slli	ra,ra,0x1c
    1a42:	0000                	unimp
    1a44:	b404                	fsd	fs1,40(s0)
    1a46:	0a02                	c.slli64	s4
    1a48:	000008f7          	0x8f7
    1a4c:	02ec                	addi	a1,sp,332
    1a4e:	0f00                	addi	s0,sp,912
    1a50:	c804                	sw	s1,16(s0)
    1a52:	0005                	c.nop	1
    1a54:	0400                	addi	s0,sp,512
    1a56:	0801                	addi	a6,a6,0
    1a58:	036e                	slli	t1,t1,0x1b
    1a5a:	0000                	unimp
    1a5c:	c815                	beqz	s0,1a90 <_aes_decrypt_table+0xe4>
    1a5e:	0005                	c.nop	1
    1a60:	0f00                	addi	s0,sp,912
    1a62:	5004                	lw	s1,32(s0)
    1a64:	0004                	0x4
    1a66:	1300                	addi	s0,sp,416
    1a68:	000000a3          	sb	zero,1(zero) # 1 <__DYNAMIC+0x1>
    1a6c:	05f8                	addi	a4,sp,716
    1a6e:	0000                	unimp
    1a70:	6e14                	flw	fa3,24(a2)
    1a72:	0004                	0x4
    1a74:	1400                	addi	s0,sp,544
    1a76:	0111                	addi	sp,sp,4
    1a78:	0000                	unimp
    1a7a:	f814                	fsw	fa3,48(s0)
    1a7c:	0005                	c.nop	1
    1a7e:	1400                	addi	s0,sp,544
    1a80:	0025                	c.nop	9
    1a82:	0000                	unimp
    1a84:	0f00                	addi	s0,sp,912
    1a86:	cf04                	sw	s1,24(a4)
    1a88:	0005                	c.nop	1
    1a8a:	0f00                	addi	s0,sp,912
    1a8c:	da04                	sw	s1,48(a2)
    1a8e:	0005                	c.nop	1
    1a90:	1300                	addi	s0,sp,416
    1a92:	00000097          	auipc	ra,0x0
    1a96:	0622                	slli	a2,a2,0x8
    1a98:	0000                	unimp
    1a9a:	6e14                	flw	fa3,24(a2)
    1a9c:	0004                	0x4
    1a9e:	1400                	addi	s0,sp,544
    1aa0:	0111                	addi	sp,sp,4
    1aa2:	0000                	unimp
    1aa4:	9714                	0x9714
    1aa6:	0000                	unimp
    1aa8:	1400                	addi	s0,sp,544
    1aaa:	0025                	c.nop	9
    1aac:	0000                	unimp
    1aae:	0f00                	addi	s0,sp,912
    1ab0:	0404                	addi	s1,sp,512
    1ab2:	0006                	c.slli	zero,0x1
    1ab4:	1300                	addi	s0,sp,416
    1ab6:	0025                	c.nop	9
    1ab8:	0000                	unimp
    1aba:	063c                	addi	a5,sp,776
    1abc:	0000                	unimp
    1abe:	6e14                	flw	fa3,24(a2)
    1ac0:	0004                	0x4
    1ac2:	1400                	addi	s0,sp,544
    1ac4:	0111                	addi	sp,sp,4
    1ac6:	0000                	unimp
    1ac8:	0f00                	addi	s0,sp,912
    1aca:	2804                	fld	fs1,16(s0)
    1acc:	0006                	c.slli	zero,0x1
    1ace:	0800                	addi	s0,sp,16
    1ad0:	0061                	c.nop	24
    1ad2:	0000                	unimp
    1ad4:	0652                	slli	a2,a2,0x14
    1ad6:	0000                	unimp
    1ad8:	3809                	jal	12ea <__call_exitprocs+0x3a>
    1ada:	0000                	unimp
    1adc:	0200                	addi	s0,sp,256
    1ade:	0800                	addi	s0,sp,16
    1ae0:	0061                	c.nop	24
    1ae2:	0000                	unimp
    1ae4:	0662                	slli	a2,a2,0x18
    1ae6:	0000                	unimp
    1ae8:	3809                	jal	12fa <__call_exitprocs+0x4a>
    1aea:	0000                	unimp
    1aec:	0000                	unimp
    1aee:	0500                	addi	s0,sp,640
    1af0:	03b6                	slli	t2,t2,0xd
    1af2:	0000                	unimp
    1af4:	2404                	fld	fs1,8(s0)
    1af6:	1a01                	addi	s4,s4,-32
    1af8:	030d                	addi	t1,t1,3
    1afa:	0000                	unimp
    1afc:	9d19                	0x9d19
    1afe:	0005                	c.nop	1
    1b00:	0c00                	addi	s0,sp,528
    1b02:	2804                	fld	fs1,16(s0)
    1b04:	0801                	addi	a6,a6,0
    1b06:	06a8                	addi	a0,sp,840
    1b08:	0000                	unimp
    1b0a:	0003de17          	auipc	t3,0x3d
    1b0e:	0400                	addi	s0,sp,512
    1b10:	012a                	slli	sp,sp,0xa
    1b12:	a811                	j	1b26 <_aes_decrypt_table+0x17a>
    1b14:	0006                	c.slli	zero,0x1
    1b16:	0000                	unimp
    1b18:	00023e17          	auipc	t3,0x23
    1b1c:	0400                	addi	s0,sp,512
    1b1e:	2507012b          	0x2507012b
    1b22:	0000                	unimp
    1b24:	0400                	addi	s0,sp,512
    1b26:	0003b017          	auipc	zero,0x3b
    1b2a:	0400                	addi	s0,sp,512
    1b2c:	012c                	addi	a1,sp,136
    1b2e:	0006ae0b          	0x6ae0b
    1b32:	0800                	addi	s0,sp,16
    1b34:	0f00                	addi	s0,sp,912
    1b36:	6f04                	flw	fs1,24(a4)
    1b38:	0006                	c.slli	zero,0x1
    1b3a:	0f00                	addi	s0,sp,912
    1b3c:	6204                	flw	fs1,0(a2)
    1b3e:	0006                	c.slli	zero,0x1
    1b40:	1900                	addi	s0,sp,176
    1b42:	00000013          	nop
    1b46:	040e                	slli	s0,s0,0x3
    1b48:	0144                	addi	s1,sp,132
    1b4a:	ed08                	fsw	fa0,24(a0)
    1b4c:	0006                	c.slli	zero,0x1
    1b4e:	1700                	addi	s0,sp,928
    1b50:	06bd                	addi	a3,a3,15
    1b52:	0000                	unimp
    1b54:	4504                	lw	s1,8(a0)
    1b56:	1201                	addi	tp,tp,-32
    1b58:	06ed                	addi	a3,a3,27
    1b5a:	0000                	unimp
    1b5c:	1700                	addi	s0,sp,928
    1b5e:	04cc                	addi	a1,sp,580
    1b60:	0000                	unimp
    1b62:	4604                	lw	s1,8(a2)
    1b64:	1201                	addi	tp,tp,-32
    1b66:	06ed                	addi	a3,a3,27
    1b68:	0000                	unimp
    1b6a:	1706                	slli	a4,a4,0x21
    1b6c:	04f0                	addi	a2,sp,588
    1b6e:	0000                	unimp
    1b70:	4704                	lw	s1,8(a4)
    1b72:	1201                	addi	tp,tp,-32
    1b74:	0000006f          	j	1b74 <_aes_decrypt_table+0x1c8>
    1b78:	000c                	0xc
    1b7a:	6f08                	flw	fa0,24(a4)
    1b7c:	0000                	unimp
    1b7e:	fd00                	fsw	fs0,56(a0)
    1b80:	0006                	c.slli	zero,0x1
    1b82:	0900                	addi	s0,sp,144
    1b84:	0038                	addi	a4,sp,8
    1b86:	0000                	unimp
    1b88:	0002                	c.slli64	zero
    1b8a:	d01a                	sw	t1,32(sp)
    1b8c:	8504                	0x8504
    1b8e:	0702                	c.slli64	a4
    1b90:	0812                	slli	a6,a6,0x4
    1b92:	0000                	unimp
    1b94:	00057017          	auipc	zero,0x57
    1b98:	0400                	addi	s0,sp,512
    1b9a:	38180287          	0x38180287
    1b9e:	0000                	unimp
    1ba0:	0000                	unimp
    1ba2:	0004d217          	auipc	tp,0x4d
    1ba6:	0400                	addi	s0,sp,512
    1ba8:	0288                	addi	a0,sp,320
    1baa:	c212                	sw	tp,4(sp)
    1bac:	0005                	c.nop	1
    1bae:	0400                	addi	s0,sp,512
    1bb0:	00027717          	auipc	a4,0x27
    1bb4:	0400                	addi	s0,sp,512
    1bb6:	0289                	addi	t0,t0,2
    1bb8:	1210                	addi	a2,sp,288
    1bba:	0008                	0x8
    1bbc:	0800                	addi	s0,sp,16
    1bbe:	0005ff17          	auipc	t5,0x5f
    1bc2:	0400                	addi	s0,sp,512
    1bc4:	028a                	slli	t0,t0,0x2
    1bc6:	0001a717          	auipc	a4,0x1a
    1bca:	2400                	fld	fs0,8(s0)
    1bcc:	0001c917          	auipc	s2,0x1c
    1bd0:	0400                	addi	s0,sp,512
    1bd2:	250f028b          	0x250f028b
    1bd6:	0000                	unimp
    1bd8:	4800                	lw	s0,16(s0)
    1bda:	0003d917          	auipc	s2,0x3d
    1bde:	0400                	addi	s0,sp,512
    1be0:	028c                	addi	a1,sp,320
    1be2:	842c                	0x842c
    1be4:	0000                	unimp
    1be6:	5000                	lw	s0,32(s0)
    1be8:	00061517          	auipc	a0,0x61
    1bec:	0400                	addi	s0,sp,512
    1bee:	028d                	addi	t0,t0,3
    1bf0:	b41a                	fsd	ft6,40(sp)
    1bf2:	0006                	c.slli	zero,0x1
    1bf4:	5800                	lw	s0,48(s0)
    1bf6:	0003ed17          	auipc	s10,0x3e
    1bfa:	0400                	addi	s0,sp,512
    1bfc:	028e                	slli	t0,t0,0x3
    1bfe:	0516                	slli	a0,a0,0x5
    1c00:	0001                	nop
    1c02:	6800                	flw	fs0,16(s0)
    1c04:	00061a17          	auipc	s4,0x61
    1c08:	0400                	addi	s0,sp,512
    1c0a:	0516028f          	0x516028f
    1c0e:	0001                	nop
    1c10:	7000                	flw	fs0,32(s0)
    1c12:	0000b217          	auipc	tp,0xb
    1c16:	0400                	addi	s0,sp,512
    1c18:	0290                	addi	a2,sp,320
    1c1a:	0516                	slli	a0,a0,0x5
    1c1c:	0001                	nop
    1c1e:	7800                	flw	fs0,48(s0)
    1c20:	0005a317          	auipc	t1,0x5a
    1c24:	0400                	addi	s0,sp,512
    1c26:	0291                	addi	t0,t0,4
    1c28:	2210                	fld	fa2,0(a2)
    1c2a:	0008                	0x8
    1c2c:	8000                	0x8000
    1c2e:	00026b17          	auipc	s6,0x26
    1c32:	0400                	addi	s0,sp,512
    1c34:	0292                	slli	t0,t0,0x4
    1c36:	3210                	fld	fa2,32(a2)
    1c38:	0008                	0x8
    1c3a:	8800                	0x8800
    1c3c:	0004fd17          	auipc	s10,0x4f
    1c40:	0400                	addi	s0,sp,512
    1c42:	250f0293          	addi	t0,t5,592 # 60e0e <_stack_start+0x50e0e>
    1c46:	0000                	unimp
    1c48:	a000                	fsd	fs0,0(s0)
    1c4a:	00018417          	auipc	s0,0x18
    1c4e:	0400                	addi	s0,sp,512
    1c50:	0294                	addi	a3,sp,320
    1c52:	0516                	slli	a0,a0,0x5
    1c54:	0001                	nop
    1c56:	a400                	fsd	fs0,8(s0)
    1c58:	00009c17          	auipc	s8,0x9
    1c5c:	0400                	addi	s0,sp,512
    1c5e:	0295                	addi	t0,t0,5
    1c60:	0516                	slli	a0,a0,0x5
    1c62:	0001                	nop
    1c64:	ac00                	fsd	fs0,24(s0)
    1c66:	00017317          	auipc	t1,0x17
    1c6a:	0400                	addi	s0,sp,512
    1c6c:	0296                	slli	t0,t0,0x5
    1c6e:	0516                	slli	a0,a0,0x5
    1c70:	0001                	nop
    1c72:	b400                	fsd	fs0,40(s0)
    1c74:	00004917          	auipc	s2,0x4
    1c78:	0400                	addi	s0,sp,512
    1c7a:	05160297          	auipc	t0,0x5160
    1c7e:	0001                	nop
    1c80:	bc00                	fsd	fs0,56(s0)
    1c82:	00005817          	auipc	a6,0x5
    1c86:	0400                	addi	s0,sp,512
    1c88:	0298                	addi	a4,sp,320
    1c8a:	0516                	slli	a0,a0,0x5
    1c8c:	0001                	nop
    1c8e:	c400                	sw	s0,8(s0)
    1c90:	00038c17          	auipc	s8,0x38
    1c94:	0400                	addi	s0,sp,512
    1c96:	0299                	addi	t0,t0,6
    1c98:	2508                	fld	fa0,8(a0)
    1c9a:	0000                	unimp
    1c9c:	cc00                	sw	s0,24(s0)
    1c9e:	0800                	addi	s0,sp,16
    1ca0:	05c8                	addi	a0,sp,708
    1ca2:	0000                	unimp
    1ca4:	0822                	slli	a6,a6,0x8
    1ca6:	0000                	unimp
    1ca8:	3809                	jal	14ba <__register_exitproc+0x76>
    1caa:	0000                	unimp
    1cac:	1900                	addi	s0,sp,176
    1cae:	0800                	addi	s0,sp,16
    1cb0:	05c8                	addi	a0,sp,708
    1cb2:	0000                	unimp
    1cb4:	0832                	slli	a6,a6,0xc
    1cb6:	0000                	unimp
    1cb8:	3809                	jal	14ca <__register_exitproc+0x86>
    1cba:	0000                	unimp
    1cbc:	0700                	addi	s0,sp,896
    1cbe:	0800                	addi	s0,sp,16
    1cc0:	05c8                	addi	a0,sp,708
    1cc2:	0000                	unimp
    1cc4:	0842                	slli	a6,a6,0x10
    1cc6:	0000                	unimp
    1cc8:	3809                	jal	14da <__register_exitproc+0x96>
    1cca:	0000                	unimp
    1ccc:	1700                	addi	s0,sp,928
    1cce:	1a00                	addi	s0,sp,304
    1cd0:	04f0                	addi	a2,sp,588
    1cd2:	029e                	slli	t0,t0,0x7
    1cd4:	00086907          	0x86907
    1cd8:	1700                	addi	s0,sp,928
    1cda:	000002d7          	0x2d7
    1cde:	a104                	fsd	fs1,0(a0)
    1ce0:	1b02                	slli	s6,s6,0x20
    1ce2:	0869                	addi	a6,a6,26
    1ce4:	0000                	unimp
    1ce6:	1700                	addi	s0,sp,928
    1ce8:	02b8                	addi	a4,sp,328
    1cea:	0000                	unimp
    1cec:	a204                	fsd	fs1,0(a2)
    1cee:	1802                	slli	a6,a6,0x20
    1cf0:	0879                	addi	a6,a6,30
    1cf2:	0000                	unimp
    1cf4:	0078                	addi	a4,sp,12
    1cf6:	0708                	addi	a0,sp,896
    1cf8:	79000003          	lb	zero,1936(zero) # 790 <_nettle_aes_encrypt+0x378>
    1cfc:	0008                	0x8
    1cfe:	0900                	addi	s0,sp,144
    1d00:	0038                	addi	a4,sp,8
    1d02:	0000                	unimp
    1d04:	001d                	c.nop	7
    1d06:	3808                	fld	fa0,48(s0)
    1d08:	0000                	unimp
    1d0a:	8900                	0x8900
    1d0c:	0008                	0x8
    1d0e:	0900                	addi	s0,sp,144
    1d10:	0038                	addi	a4,sp,8
    1d12:	0000                	unimp
    1d14:	001d                	c.nop	7
    1d16:	8304f01b          	0x8304f01b
    1d1a:	0302                	c.slli64	t1
    1d1c:	08ae                	slli	a7,a7,0xb
    1d1e:	0000                	unimp
    1d20:	371c                	fld	fa5,40(a4)
    1d22:	0004                	0x4
    1d24:	0400                	addi	s0,sp,512
    1d26:	029a                	slli	t0,t0,0x6
    1d28:	0006fd0b          	0x6fd0b
    1d2c:	1c00                	addi	s0,sp,560
    1d2e:	05ec                	addi	a1,sp,716
    1d30:	0000                	unimp
    1d32:	a304                	fsd	fs1,0(a4)
    1d34:	0b02                	c.slli64	s6
    1d36:	0842                	slli	a6,a6,0x10
    1d38:	0000                	unimp
    1d3a:	0800                	addi	s0,sp,16
    1d3c:	05c8                	addi	a0,sp,708
    1d3e:	0000                	unimp
    1d40:	08be                	slli	a7,a7,0xf
    1d42:	0000                	unimp
    1d44:	3809                	jal	1556 <main+0x1e>
    1d46:	0000                	unimp
    1d48:	1800                	addi	s0,sp,48
    1d4a:	1d00                	addi	s0,sp,688
    1d4c:	0089                	addi	ra,ra,2
    1d4e:	0000                	unimp
    1d50:	08be040f          	0x8be040f
    1d54:	0000                	unimp
    1d56:	d41e                	sw	t2,40(sp)
    1d58:	0008                	0x8
    1d5a:	1400                	addi	s0,sp,544
    1d5c:	046e                	slli	s0,s0,0x1b
    1d5e:	0000                	unimp
    1d60:	0f00                	addi	s0,sp,912
    1d62:	c904                	sw	s1,16(a0)
    1d64:	0008                	0x8
    1d66:	0f00                	addi	s0,sp,912
    1d68:	9104                	0x9104
    1d6a:	0001                	nop
    1d6c:	1e00                	addi	s0,sp,816
    1d6e:	000008eb          	0x8eb
    1d72:	2514                	fld	fa3,8(a0)
    1d74:	0000                	unimp
    1d76:	0000                	unimp
    1d78:	08f1040f          	0x8f1040f
    1d7c:	0000                	unimp
    1d7e:	08e0040f          	0x8e0040f
    1d82:	0000                	unimp
    1d84:	6208                	flw	fa0,0(a2)
    1d86:	0006                	c.slli	zero,0x1
    1d88:	0700                	addi	s0,sp,896
    1d8a:	0009                	c.nop	2
    1d8c:	0900                	addi	s0,sp,144
    1d8e:	0038                	addi	a4,sp,8
    1d90:	0000                	unimp
    1d92:	0002                	c.slli64	zero
    1d94:	641f 0005 0400      	0x4000005641f
    1d9a:	6e170333          	0x6e170333
    1d9e:	0004                	0x4
    1da0:	1f00                	addi	s0,sp,944
    1da2:	055d                	addi	a0,a0,23
    1da4:	0000                	unimp
    1da6:	3404                	fld	fs1,40(s0)
    1da8:	04741d03          	lh	s10,71(s0) # 19c91 <_stack_start+0x9c91>
    1dac:	0000                	unimp
    1dae:	be20                	fsd	fs0,120(a2)
    1db0:	0006                	c.slli	zero,0x1
    1db2:	0100                	addi	s0,sp,128
    1db4:	00761117          	auipc	sp,0x761
    1db8:	0000                	unimp
    1dba:	0305                	addi	t1,t1,1
    1dbc:	420c                	lw	a1,0(a2)
    1dbe:	0000                	unimp
    1dc0:	b120                	fsd	fs0,96(a0)
    1dc2:	0006                	c.slli	zero,0x1
    1dc4:	0100                	addi	s0,sp,128
    1dc6:	01110e1b          	0x1110e1b
    1dca:	0000                	unimp
    1dcc:	0305                	addi	t1,t1,1
    1dce:	4208                	lw	a0,0(a2)
    1dd0:	0000                	unimp
    1dd2:	f720                	fsw	fs0,104(a4)
    1dd4:	0006                	c.slli	zero,0x1
    1dd6:	0100                	addi	s0,sp,128
    1dd8:	0e1c                	addi	a5,sp,784
    1dda:	0111                	addi	sp,sp,4
    1ddc:	0000                	unimp
    1dde:	0305                	addi	t1,t1,1
    1de0:	4204                	lw	s1,0(a2)
    1de2:	0000                	unimp
    1de4:	a220                	fsd	fs0,64(a2)
    1de6:	0006                	c.slli	zero,0x1
    1de8:	0100                	addi	s0,sp,128
    1dea:	0f1d                	addi	t5,t5,7
    1dec:	002c                	addi	a1,sp,8
    1dee:	0000                	unimp
    1df0:	0305                	addi	t1,t1,1
    1df2:	4200                	lw	s0,0(a2)
    1df4:	0000                	unimp
    1df6:	0021                	c.nop	8
    1df8:	01000007          	0x1000007
    1dfc:	10cc01a7          	0x10cc01a7
    1e00:	0000                	unimp
    1e02:	0004                	0x4
    1e04:	0000                	unimp
    1e06:	9c01                	0x9c01
    1e08:	098e                	slli	s3,s3,0x3
    1e0a:	0000                	unimp
    1e0c:	7022                	flw	ft0,40(sp)
    1e0e:	7274                	flw	fa3,100(a2)
    1e10:	0100                	addi	s0,sp,128
    1e12:	011113a7          	0x11113a7
    1e16:	0000                	unimp
    1e18:	5a01                	li	s4,-32
    1e1a:	2300                	fld	fs0,0(a4)
    1e1c:	000006c3          	fmadd.s	fa3,ft0,ft0,ft0,rne
    1e20:	8401                	c.srai64	s0
    1e22:	1101                	addi	sp,sp,-32
    1e24:	0001                	nop
    1e26:	5800                	lw	s0,48(s0)
    1e28:	0010                	0x10
    1e2a:	7400                	flw	fs0,40(s0)
    1e2c:	0000                	unimp
    1e2e:	0100                	addi	s0,sp,128
    1e30:	ef9c                	fsw	fa5,24(a5)
    1e32:	0009                	c.nop	2
    1e34:	2400                	fld	fs0,8(s0)
    1e36:	7470                	flw	fa2,108(s0)
    1e38:	0072                	c.slli	zero,0x1c
    1e3a:	8401                	c.srai64	s0
    1e3c:	1116                	slli	sp,sp,0x25
    1e3e:	0001                	nop
    1e40:	4900                	lw	s0,16(a0)
    1e42:	0029                	c.nop	10
    1e44:	2500                	fld	fs0,8(a0)
    1e46:	0674                	addi	a3,sp,780
    1e48:	0000                	unimp
    1e4a:	8401                	c.srai64	s0
    1e4c:	2c22                	fld	fs8,8(sp)
    1e4e:	0000                	unimp
    1e50:	0100                	addi	s0,sp,128
    1e52:	0679265b          	0x679265b
    1e56:	0000                	unimp
    1e58:	8601                	c.srai64	a2
    1e5a:	1109                	addi	sp,sp,-30
    1e5c:	0001                	nop
    1e5e:	7500                	flw	fs0,40(a0)
    1e60:	0029                	c.nop	10
    1e62:	2700                	fld	fs0,8(a4)
    1e64:	10a0                	addi	s0,sp,104
    1e66:	0000                	unimp
    1e68:	001c                	0x1c
    1e6a:	0000                	unimp
    1e6c:	6928                	flw	fa0,80(a0)
    1e6e:	0100                	addi	s0,sp,128
    1e70:	002c0b97          	auipc	s7,0x2c0
    1e74:	0000                	unimp
    1e76:	29a2                	fld	fs3,8(sp)
    1e78:	0000                	unimp
    1e7a:	0000                	unimp
    1e7c:	0006dd23          	0x6dd23
    1e80:	0100                	addi	s0,sp,128
    1e82:	0170                	addi	a2,sp,140
    1e84:	0111                	addi	sp,sp,4
    1e86:	0000                	unimp
    1e88:	1014                	addi	a3,sp,32
    1e8a:	0000                	unimp
    1e8c:	0044                	addi	s1,sp,4
    1e8e:	0000                	unimp
    1e90:	9c01                	0x9c01
    1e92:	00000a6b          	0xa6b
    1e96:	1929                	addi	s2,s2,-22
    1e98:	01000007          	0x1000007
    1e9c:	1670                	addi	a2,sp,812
    1e9e:	002c                	addi	a1,sp,8
    1ea0:	0000                	unimp
    1ea2:	29b5                	jal	231e <_min_stack+0x31e>
    1ea4:	0000                	unimp
    1ea6:	7429                	lui	s0,0xfffea
    1ea8:	0006                	c.slli	zero,0x1
    1eaa:	0100                	addi	s0,sp,128
    1eac:	2470                	fld	fa2,200(s0)
    1eae:	002c                	addi	a1,sp,8
    1eb0:	0000                	unimp
    1eb2:	29d6                	fld	fs3,336(sp)
    1eb4:	0000                	unimp
    1eb6:	7926                	flw	fs2,104(sp)
    1eb8:	0006                	c.slli	zero,0x1
    1eba:	0100                	addi	s0,sp,128
    1ebc:	0972                	slli	s2,s2,0x1c
    1ebe:	0111                	addi	sp,sp,4
    1ec0:	0000                	unimp
    1ec2:	000029f7          	0x29f7
    1ec6:	302a                	fld	ft0,168(sp)
    1ec8:	0010                	0x10
    1eca:	6b00                	flw	fs0,16(a4)
    1ecc:	000a                	c.slli	zero,0x2
    1ece:	4e00                	lw	s0,24(a2)
    1ed0:	000a                	c.slli	zero,0x2
    1ed2:	2b00                	fld	fs0,16(a4)
    1ed4:	5a01                	li	s4,-32
    1ed6:	066c9103          	lh	sp,102(s9)
    1eda:	2c00                	fld	fs0,24(s0)
    1edc:	1044                	addi	s1,sp,36
    1ede:	0000                	unimp
    1ee0:	0b41                	addi	s6,s6,16
    1ee2:	0000                	unimp
    1ee4:	025a012b          	0x25a012b
    1ee8:	0078                	addi	a4,sp,12
    1eea:	015b012b          	0x15b012b
    1eee:	2b30                	fld	fa2,80(a4)
    1ef0:	5c01                	li	s8,-32
    1ef2:	066c9103          	lh	sp,102(s9)
    1ef6:	0000                	unimp
    1ef8:	0006ea23          	0x6ea23
    1efc:	0100                	addi	s0,sp,128
    1efe:	0111015b          	0x111015b
    1f02:	0000                	unimp
    1f04:	0fc0                	addi	s0,sp,980
    1f06:	0000                	unimp
    1f08:	0054                	addi	a3,sp,4
    1f0a:	0000                	unimp
    1f0c:	9c01                	0x9c01
    1f0e:	0aa6                	slli	s5,s5,0x9
    1f10:	0000                	unimp
    1f12:	7429                	lui	s0,0xfffea
    1f14:	0006                	c.slli	zero,0x1
    1f16:	0100                	addi	s0,sp,128
    1f18:	002c165b          	0x2c165b
    1f1c:	0000                	unimp
    1f1e:	2a15                	jal	2052 <_min_stack+0x52>
    1f20:	0000                	unimp
    1f22:	7926                	flw	fs2,104(sp)
    1f24:	0006                	c.slli	zero,0x1
    1f26:	0100                	addi	s0,sp,128
    1f28:	095d                	addi	s2,s2,23
    1f2a:	0111                	addi	sp,sp,4
    1f2c:	0000                	unimp
    1f2e:	2a41                	jal	20be <_min_stack+0xbe>
    1f30:	0000                	unimp
    1f32:	2300                	fld	fs0,0(a4)
    1f34:	0681                	addi	a3,a3,0
    1f36:	0000                	unimp
    1f38:	4b01                	li	s6,0
    1f3a:	2501                	jal	253a <_min_stack+0x53a>
    1f3c:	0000                	unimp
    1f3e:	9800                	0x9800
    1f40:	2800000f          	0x2800000f
    1f44:	0000                	unimp
    1f46:	0100                	addi	s0,sp,128
    1f48:	d19c                	sw	a5,32(a1)
    1f4a:	000a                	c.slli	zero,0x2
    1f4c:	2900                	fld	fs0,16(a0)
    1f4e:	0714                	addi	a3,sp,896
    1f50:	0000                	unimp
    1f52:	4b01                	li	s6,0
    1f54:	1119                	addi	sp,sp,-26
    1f56:	0001                	nop
    1f58:	6e00                	flw	fs0,24(a2)
    1f5a:	002a                	c.slli	zero,0xa
    1f5c:	0000                	unimp
    1f5e:	9221                	srli	a2,a2,0x28
    1f60:	0006                	c.slli	zero,0x1
    1f62:	0100                	addi	s0,sp,128
    1f64:	013d                	addi	sp,sp,15
    1f66:	0f78                	addi	a4,sp,924
    1f68:	0000                	unimp
    1f6a:	0020                	addi	s0,sp,8
    1f6c:	0000                	unimp
    1f6e:	9c01                	0x9c01
    1f70:	0b06                	slli	s6,s6,0x1
    1f72:	0000                	unimp
    1f74:	1425                	addi	s0,s0,-23
    1f76:	01000007          	0x1000007
    1f7a:	183d                	addi	a6,a6,-17
    1f7c:	0111                	addi	sp,sp,4
    1f7e:	0000                	unimp
    1f80:	5a01                	li	s4,-32
    1f82:	6f29                	lui	t5,0xa
    1f84:	0006                	c.slli	zero,0x1
    1f86:	0100                	addi	s0,sp,128
    1f88:	253d                	jal	25b6 <_min_stack+0x5b6>
    1f8a:	002c                	addi	a1,sp,8
    1f8c:	0000                	unimp
    1f8e:	00002a8f          	0x2a8f
    1f92:	2100                	fld	fs0,0(a0)
    1f94:	06d1                	addi	a3,a3,20
    1f96:	0000                	unimp
    1f98:	3301                	jal	1c98 <_aes_decrypt_table+0x2ec>
    1f9a:	6c01                	0x6c01
    1f9c:	0c00000f          	fence	io,unknown
    1fa0:	0000                	unimp
    1fa2:	0100                	addi	s0,sp,128
    1fa4:	2b9c                	fld	fa5,16(a5)
    1fa6:	2500000b          	0x2500000b
    1faa:	06ba                	slli	a3,a3,0xe
    1fac:	0000                	unimp
    1fae:	3301                	jal	1cae <_aes_decrypt_table+0x302>
    1fb0:	0000381b          	0x381b
    1fb4:	0100                	addi	s0,sp,128
    1fb6:	005a                	c.slli	zero,0x16
    1fb8:	d22d                	beqz	a2,1f1a <_aes_decrypt_table+0x56e>
    1fba:	0006                	c.slli	zero,0x1
    1fbc:	0100                	addi	s0,sp,128
    1fbe:	0129                	addi	sp,sp,10
    1fc0:	0025                	c.nop	9
    1fc2:	0000                	unimp
    1fc4:	0f34                	addi	a3,sp,920
    1fc6:	0000                	unimp
    1fc8:	0038                	addi	a4,sp,8
    1fca:	0000                	unimp
    1fcc:	9c01                	0x9c01
    1fce:	682e                	flw	fa6,200(sp)
    1fd0:	0006                	c.slli	zero,0x1
    1fd2:	5e00                	lw	s0,56(a2)
    1fd4:	0006                	c.slli	zero,0x1
    1fd6:	0600                	addi	s0,sp,768
    1fd8:	0000                	unimp
    1fda:	0058                	addi	a4,sp,4
    1fdc:	0000                	unimp
    1fde:	0004                	0x4
    1fe0:	00000643          	fmadd.s	fa2,ft0,ft0,ft0,rne
    1fe4:	0104                	addi	s1,sp,128
    1fe6:	050a                	slli	a0,a0,0x2
    1fe8:	0000                	unimp
    1fea:	2c0c                	fld	fa1,24(s0)
    1fec:	67000007          	0x67000007
    1ff0:	0004                	0x4
    1ff2:	d000                	sw	s0,32(s0)
    1ff4:	0010                	0x10
    1ff6:	1800                	addi	s0,sp,48
    1ff8:	0000                	unimp
    1ffa:	7700                	flw	fs0,40(a4)
    1ffc:	02000017          	auipc	zero,0x2000
    2000:	071f 0000 1901      	0x19010000071f
    2006:	e001                	bnez	s0,2006 <_min_stack+0x6>
    2008:	0010                	0x10
    200a:	0800                	addi	s0,sp,16
    200c:	0000                	unimp
    200e:	0100                	addi	s0,sp,128
    2010:	029c                	addi	a5,sp,320
    2012:	0734                	addi	a3,sp,904
    2014:	0000                	unimp
    2016:	1301                	addi	t1,t1,-32
    2018:	d801                	beqz	s0,1f28 <_aes_decrypt_table+0x57c>
    201a:	0010                	0x10
    201c:	0800                	addi	s0,sp,16
    201e:	0000                	unimp
    2020:	0100                	addi	s0,sp,128
    2022:	029c                	addi	a5,sp,320
    2024:	0742                	slli	a4,a4,0x10
    2026:	0000                	unimp
    2028:	0d01                	addi	s10,s10,0
    202a:	d001                	beqz	s0,1f2a <_aes_decrypt_table+0x57e>
    202c:	0010                	0x10
    202e:	0800                	addi	s0,sp,16
    2030:	0000                	unimp
    2032:	0100                	addi	s0,sp,128
    2034:	009c                	addi	a5,sp,64
    2036:	014c                	addi	a1,sp,132
    2038:	0000                	unimp
    203a:	0004                	0x4
    203c:	0000066f          	jal	a2,203c <_min_stack+0x3c>
    2040:	0104                	addi	s1,sp,128
    2042:	050a                	slli	a0,a0,0x2
    2044:	0000                	unimp
    2046:	5d0c                	lw	a1,56(a0)
    2048:	67000007          	0x67000007
    204c:	0004                	0x4
    204e:	2000                	fld	fs0,0(s0)
    2050:	0001                	nop
    2052:	0000                	unimp
    2054:	0000                	unimp
    2056:	f900                	fsw	fs0,48(a0)
    2058:	02000017          	auipc	zero,0x2000
    205c:	0504                	addi	s1,sp,640
    205e:	6e69                	lui	t3,0x1a
    2060:	0074                	addi	a3,sp,12
    2062:	00002503          	lw	a0,0(zero) # 0 <__DYNAMIC>
    2066:	0400                	addi	s0,sp,512
    2068:	0704                	addi	s1,sp,896
    206a:	00000073          	ecall
    206e:	0804                	addi	s1,sp,16
    2070:	c905                	beqz	a0,20a0 <_min_stack+0xa0>
    2072:	0000                	unimp
    2074:	0400                	addi	s0,sp,512
    2076:	0410                	addi	a2,sp,512
    2078:	02c1                	addi	t0,t0,16
    207a:	0000                	unimp
    207c:	6405                	lui	s0,0x1
    207e:	01000007          	0x1000007
    2082:	0112                	slli	sp,sp,0x4
    2084:	0025                	c.nop	9
    2086:	0000                	unimp
    2088:	1538                	addi	a4,sp,680
    208a:	0000                	unimp
    208c:	003c                	addi	a5,sp,8
    208e:	0000                	unimp
    2090:	9c01                	0x9c01
    2092:	00e8                	addi	a0,sp,76
    2094:	0000                	unimp
    2096:	5806                	lw	a6,96(sp)
    2098:	01000007          	0x1000007
    209c:	0b12                	slli	s6,s6,0x4
    209e:	0025                	c.nop	9
    20a0:	0000                	unimp
    20a2:	2ab0                	fld	fa2,80(a3)
    20a4:	0000                	unimp
    20a6:	5306                	lw	t1,96(sp)
    20a8:	01000007          	0x1000007
    20ac:	00e80d13          	addi	s10,a6,14 # 6c90 <_bss_end+0x2698>
    20b0:	0000                	unimp
    20b2:	2ad1                	jal	2286 <_min_stack+0x286>
    20b4:	0000                	unimp
    20b6:	00028507          	0x28507
    20ba:	0100                	addi	s0,sp,128
    20bc:	1015                	c.nop	-27
    20be:	002c                	addi	a1,sp,8
    20c0:	0000                	unimp
    20c2:	9102                	jalr	sp
    20c4:	0768                	addi	a0,sp,908
    20c6:	04c4                	addi	s1,sp,580
    20c8:	0000                	unimp
    20ca:	1601                	addi	a2,a2,-32
    20cc:	2c10                	fld	fa2,24(s0)
    20ce:	0000                	unimp
    20d0:	0200                	addi	s0,sp,256
    20d2:	6c91                	lui	s9,0x4
    20d4:	4408                	lw	a0,8(s0)
    20d6:	0015                	c.nop	5
    20d8:	fb00                	fsw	fs0,48(a4)
    20da:	0000                	unimp
    20dc:	0800                	addi	s0,sp,16
    20de:	1548                	addi	a0,sp,676
    20e0:	0000                	unimp
    20e2:	00000107          	0x107
    20e6:	5009                	c.li	zero,-30
    20e8:	0015                	c.nop	5
    20ea:	1300                	addi	s0,sp,416
    20ec:	0001                	nop
    20ee:	c300                	sw	s0,0(a4)
    20f0:	0000                	unimp
    20f2:	0a00                	addi	s0,sp,272
    20f4:	5a01                	li	s4,-32
    20f6:	3001                	jal	18f6 <mtable+0x34a>
    20f8:	0800                	addi	s0,sp,16
    20fa:	1554                	addi	a3,sp,676
    20fc:	0000                	unimp
    20fe:	011f 0000 5808      	0x58080000011f
    2104:	0015                	c.nop	5
    2106:	2b00                	fld	fs0,16(a4)
    2108:	0001                	nop
    210a:	0800                	addi	s0,sp,16
    210c:	1560                	addi	s0,sp,684
    210e:	0000                	unimp
    2110:	00000137          	lui	sp,0x0
    2114:	6808                	flw	fa0,16(s0)
    2116:	0015                	c.nop	5
    2118:	4300                	lw	s0,0(a4)
    211a:	0001                	nop
    211c:	0000                	unimp
    211e:	00ee040b          	0xee040b
    2122:	0000                	unimp
    2124:	00f4040b          	0xf4040b
    2128:	0000                	unimp
    212a:	0104                	addi	s1,sp,128
    212c:	6e08                	flw	fa0,24(a2)
    212e:	0c000003          	lb	zero,192(zero) # c0 <_aes_set_key+0x34>
    2132:	0742                	slli	a4,a4,0x10
    2134:	0000                	unimp
    2136:	0742                	slli	a4,a4,0x10
    2138:	0000                	unimp
    213a:	2302                	fld	ft6,0(sp)
    213c:	0c06                	slli	s8,s8,0x1
    213e:	0635                	addi	a2,a2,13
    2140:	0000                	unimp
    2142:	0635                	addi	a2,a2,13
    2144:	0000                	unimp
    2146:	2b02                	fld	fs6,0(sp)
    2148:	0c06                	slli	s8,s8,0x1
    214a:	00000353          	fadd.s	ft6,ft0,ft0,rne
    214e:	00000353          	fadd.s	ft6,ft0,ft0,rne
    2152:	3102                	fld	ft2,32(sp)
    2154:	0c06                	slli	s8,s8,0x1
    2156:	0734                	addi	a3,sp,904
    2158:	0000                	unimp
    215a:	0734                	addi	a3,sp,904
    215c:	0000                	unimp
    215e:	2402                	fld	fs0,0(sp)
    2160:	0c06                	slli	s8,s8,0x1
    2162:	0640                	addi	s0,sp,772
    2164:	0000                	unimp
    2166:	0640                	addi	s0,sp,772
    2168:	0000                	unimp
    216a:	3602                	fld	fa2,32(sp)
    216c:	0c05                	addi	s8,s8,1
    216e:	071f 0000 071f      	0x71f0000071f
    2174:	0000                	unimp
    2176:	2502                	fld	fa0,0(sp)
    2178:	0c06                	slli	s8,s8,0x1
    217a:	057d                	addi	a0,a0,31
    217c:	0000                	unimp
    217e:	057d                	addi	a0,a0,31
    2180:	0000                	unimp
    2182:	3b02                	fld	fs6,32(sp)
    2184:	0005                	c.nop	1
    2186:	001e                	c.slli	zero,0x7
    2188:	0000                	unimp
    218a:	0002                	c.slli64	zero
    218c:	0720                	addi	s0,sp,904
    218e:	0000                	unimp
    2190:	0104                	addi	s1,sp,128
    2192:	000018c7          	fmsub.s	fa7,ft0,ft0,ft0,rtz
    2196:	0130                	addi	a2,sp,136
    2198:	0000                	unimp
    219a:	0769                	addi	a4,a4,26
    219c:	0000                	unimp
    219e:	00000467          	jalr	s0,zero # 0 <__DYNAMIC>
    21a2:	0770                	addi	a2,sp,908
    21a4:	0000                	unimp
    21a6:	8001                	c.srli64	s0

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
  .endr
   0:	1101                	addi	sp,sp,-32
   2:	2501                	jal	602 <_nettle_aes_encrypt+0x1ea>
   4:	130e                	slli	t1,t1,0x23
   6:	1b0e030b          	0x1b0e030b
   a:	110e                	slli	sp,sp,0x23
   c:	1201                	addi	tp,tp,-32
   e:	1006                	c.slli	zero,0x21
  10:	02000017          	auipc	zero,0x2000
  14:	0024                	addi	s1,sp,8
  16:	0b3e0b0b          	0xb3e0b0b
  1a:	00000803          	lb	a6,0(zero) # 0 <__DYNAMIC>
  1e:	03001603          	lh	a2,48(zero) # 30 <__DYNAMIC+0x30>
  22:	3a0e                	fld	fs4,224(sp)
  24:	390b3b0b          	0x390b3b0b
  28:	0013490b          	0x13490b
  2c:	0400                	addi	s0,sp,512
  2e:	0024                	addi	s1,sp,8
  30:	0b3e0b0b          	0xb3e0b0b
  34:	00000e03          	lb	t3,0(zero) # 0 <__DYNAMIC>
  38:	2605                	jal	358 <_nettle_aes_invert+0xec>
  3a:	4900                	lw	s0,16(a0)
  3c:	06000013          	li	zero,96
  40:	0016                	c.slli	zero,0x5
  42:	0b3a0e03          	lb	t3,179(s4) # 62cb7 <_stack_start+0x52cb7>
  46:	0b39053b          	0xb39053b
  4a:	1349                	addi	t1,t1,-14
  4c:	0000                	unimp
  4e:	0b011707          	0xb011707
  52:	3b0b3a0b          	0x3b0b3a0b
  56:	010b390b          	0x10b390b
  5a:	08000013          	li	zero,128
  5e:	000d                	c.nop	3
  60:	0b3a0e03          	lb	t3,179(s4)
  64:	0b390b3b          	0xb390b3b
  68:	1349                	addi	t1,t1,-14
  6a:	0000                	unimp
  6c:	0109                	addi	sp,sp,2
  6e:	4901                	li	s2,0
  70:	00130113          	addi	sp,t1,1 # 18c67 <_stack_start+0x8c67>
  74:	0a00                	addi	s0,sp,272
  76:	0021                	c.nop	8
  78:	1349                	addi	t1,t1,-14
  7a:	00000b2f          	0xb2f
  jal x0, default_exc_handler
  7e:	0b01130b          	0xb01130b
  jal x0, reset_handler
  82:	3b0b3a0b          	0x3b0b3a0b
  jal x0, default_exc_handler
  86:	010b390b          	0x10b390b
  jal x0, default_exc_handler
  8a:	0c000013          	li	zero,192
  assert_beebs (nk != 0);
  8e:	000d                	c.nop	3
{
  90:	0b3a0e03          	lb	t3,179(s4)
  assert_beebs (nk != 0);
  94:	0b390b3b          	0xb390b3b
{
  98:	1349                	addi	t1,t1,-14
  9a:	0b38                	addi	a4,sp,408
  assert_beebs (nk != 0);
  9c:	0000                	unimp
  9e:	0f0d                	addi	t5,t5,3
  lastkey = (AES_BLOCK_SIZE / 4) * (nr + 1);
  a0:	0b00                	addi	s0,sp,400
  a2:	0e00000b          	0xe00000b
  a6:	0e030113          	addi	sp,t1,224
  for (i = 0, rp = rcon; i < nk; i++)
  aa:	0b3a0b0b          	0xb3a0b0b
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
  ae:	0b390b3b          	0xb390b3b
  b2:	1301                	addi	t1,t1,-32
  b4:	0000                	unimp
  b6:	03000d0f          	0x3000d0f
  ba:	3a08                	fld	fa0,48(a2)
  bc:	390b3b0b          	0x390b3b0b
  c0:	3813490b          	0x3813490b
  c4:	1000000b          	0x1000000b
  c8:	0b0b000f          	0xb0b000f
  for (i = 0, rp = rcon; i < nk; i++)
  cc:	1349                	addi	t1,t1,-14
  ce:	0000                	unimp
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
  d0:	1311                	addi	t1,t1,-28
  d2:	0301                	addi	t1,t1,0
  d4:	0b0e                	slli	s6,s6,0x3
  d6:	3a05                	jal	fffffa06 <_stack_start+0xfffefa06>
  d8:	390b3b0b          	0x390b3b0b
  dc:	0013010b          	0x13010b
  e0:	1200                	addi	s0,sp,288
  e2:	000d                	c.nop	3
  e4:	0b3a0e03          	lb	t3,179(s4)
  for (i = 0, rp = rcon; i < nk; i++)
  e8:	0b390b3b          	0xb390b3b
  ec:	1349                	addi	t1,t1,-14
  ee:	0538                	addi	a4,sp,648
  f0:	0000                	unimp
  f2:	27001513          	0x27001513
  f6:	0019                	c.nop	6
  f8:	1400                	addi	s0,sp,544
  fa:	0115                	addi	sp,sp,5
  fc:	13491927          	0x13491927
 100:	1301                	addi	t1,t1,-32
 102:	0000                	unimp
 104:	0515                	addi	a0,a0,5
 106:	4900                	lw	s0,16(a0)
      else if (nk > 6 && (i % nk) == 4)
 108:	16000013          	li	zero,352
 10c:	0e030113          	addi	sp,t1,224
	t = SUBBYTE (t, aes_sbox);
 110:	0b3a050b          	0xb3a050b
 114:	0b39053b          	0xb39053b
  for (i = nk; i < lastkey; i++)
 118:	1301                	addi	t1,t1,-32
 11a:	0000                	unimp
 11c:	03000d17          	auipc	s10,0x3000
      if (i % nk == 0)
 120:	3a0e                	fld	fs4,224(sp)
 122:	39053b0b          	0x39053b0b
      t = subkeys[i - 1];
 126:	3813490b          	0x3813490b
      if (i % nk == 0)
 12a:	1800000b          	0x1800000b
	t = SUBBYTE (ROTL32 (24, t), aes_sbox) ^ *rp++;
 12e:	000d                	c.nop	3
 130:	0b3a0e03          	lb	t3,179(s4)
 134:	0b39053b          	0xb39053b
 138:	1349                	addi	t1,t1,-14
 13a:	0538                	addi	a4,sp,648
 13c:	0000                	unimp
 13e:	1319                	addi	t1,t1,-26
 140:	0301                	addi	t1,t1,0
 142:	0b0e                	slli	s6,s6,0x3
 144:	3b0b3a0b          	0x3b0b3a0b
 148:	3905                	jal	fffffd78 <_stack_start+0xfffefd78>
 14a:	0013010b          	0x13010b
 14e:	1a00                	addi	s0,sp,304
 150:	0b0b0113          	addi	sp,s6,176 # 27cde <_stack_start+0x17cde>
 154:	0b3a                	slli	s6,s6,0xe
 156:	0b39053b          	0xb39053b
 15a:	1301                	addi	t1,t1,-32
 15c:	0000                	unimp
 15e:	0b01171b          	0xb01171b
 162:	3b0b3a0b          	0x3b0b3a0b
 166:	3905                	jal	fffffd96 <_stack_start+0xfffefd96>
 168:	0013010b          	0x13010b
 16c:	1c00                	addi	s0,sp,560
 16e:	000d                	c.nop	3
 170:	0b3a0e03          	lb	t3,179(s4)
 174:	0b39053b          	0xb39053b
 178:	1349                	addi	t1,t1,-14
 17a:	0000                	unimp
 17c:	131d                	addi	t1,t1,-25
 17e:	0300                	addi	s0,sp,384
 180:	3c0e                	fld	fs8,224(sp)
 182:	0019                	c.nop	6
 184:	1e00                	addi	s0,sp,816
 186:	0115                	addi	sp,sp,5
 188:	13011927          	0x13011927
 18c:	0000                	unimp
 18e:	341f 0300 3a0e      	0x3a0e0300341f
      subkeys[i] = subkeys[i - nk] ^ t;
 194:	39053b0b          	0x39053b0b
 198:	3f13490b          	0x3f13490b
  for (i = nk; i < lastkey; i++)
 19c:	3c19                	jal	fffffbb2 <_stack_start+0xfffefbb2>
 19e:	0019                	c.nop	6
 1a0:	2000                	fld	fs0,0(s0)
 1a2:	0034                	addi	a3,sp,8
      subkeys[i] = subkeys[i - nk] ^ t;
 1a4:	0b3a0e03          	lb	t3,179(s4)
 1a8:	0b390b3b          	0xb390b3b
 1ac:	1349                	addi	t1,t1,-14
 1ae:	193c193f 34210000 	0x34210000193c193f
      else if (nk > 6 && (i % nk) == 4)
 1b6:	0300                	addi	s0,sp,384
	t = SUBBYTE (t, aes_sbox);
 1b8:	3a0e                	fld	fs4,224(sp)
 1ba:	390b3b0b          	0x390b3b0b
 1be:	3f13490b          	0x3f13490b
 1c2:	0219                	addi	tp,tp,6
 1c4:	0018                	0x18
 1c6:	2200                	fld	fs0,0(a2)
 1c8:	0034                	addi	a3,sp,8
 1ca:	0b3a0e03          	lb	t3,179(s4)
 1ce:	0b39053b          	0xb39053b
 1d2:	1349                	addi	t1,t1,-14
 1d4:	1802                	slli	a6,a6,0x20
 1d6:	0000                	unimp
 1d8:	03003423          	0x3003423
 1dc:	3a08                	fld	fa0,48(a2)
 1de:	39053b0b          	0x39053b0b
 1e2:	3f13490b          	0x3f13490b
 1e6:	0219                	addi	tp,tp,6
 1e8:	0018                	0x18
 1ea:	2400                	fld	fs0,8(s0)
 1ec:	0034                	addi	a3,sp,8
 1ee:	0b3a0e03          	lb	t3,179(s4)
 1f2:	0b39053b          	0xb39053b
 1f6:	1349                	addi	t1,t1,-14
 1f8:	1802193f 2e250000 	0x2e2500001802193f
 200:	0301                	addi	t1,t1,0
 202:	3a0e                	fld	fs4,224(sp)
 204:	39053b0b          	0x39053b0b
 208:	4919270b          	0x4919270b
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
 20c:	12011113          	0x12011113
 210:	4006                	0x4006
 212:	9718                	0x9718
 214:	1942                	slli	s2,s2,0x30
 216:	1301                	addi	t1,t1,-32
{
 218:	0000                	unimp
 21a:	0526                	slli	a0,a0,0x9
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
 21c:	0300                	addi	s0,sp,384
 21e:	3a08                	fld	fa0,48(a2)
{
 220:	39053b0b          	0x39053b0b
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
 224:	0213490b          	0x213490b
  if (keysize == AES256_KEY_SIZE)
 228:	27000017          	auipc	zero,0x27000
 22c:	0034                	addi	a3,sp,8
 22e:	0b3a0803          	lb	a6,179(s4)
 232:	0b39053b          	0xb39053b
  else if (keysize >= AES192_KEY_SIZE)
 236:	1349                	addi	t1,t1,-14
 238:	1702                	slli	a4,a4,0x20
 23a:	0000                	unimp
      nr = _AES128_ROUNDS;
 23c:	8928                	0x8928
 23e:	0182                	c.slli64	gp
      nk = 4;
 240:	1101                	addi	sp,sp,-32
 242:	3101                	jal	fffffe42 <_stack_start+0xfffefe42>
  ctx->rounds = nr;
 244:	00130113          	addi	sp,t1,1
  _aes_set_key (nr, nk, ctx->keys, key);
 248:	2900                	fld	fs0,16(a0)
 24a:	828a                	mv	t0,sp
 24c:	0001                	nop
 24e:	1802                	slli	a6,a6,0x20
 250:	4291                	li	t0,4
 252:	0018                	0x18
      nr = _AES256_ROUNDS;
 254:	2a00                	fld	fs0,16(a2)
 256:	8289                	srli	a3,a3,0x2
      nk = 8;
 258:	0101                	addi	sp,sp,0
 25a:	0111                	addi	sp,sp,4
 25c:	1331                	addi	t1,t1,-20
 25e:	0000                	unimp
      nr = _AES192_ROUNDS;
 260:	3f012e2b          	0x3f012e2b
      nk = 6;
 264:	0319                	addi	t1,t1,6
 266:	3a0e                	fld	fs4,224(sp)
 268:	39053b0b          	0x39053b0b
  if (src == dst)
 26c:	4919270b          	0x4919270b
 270:	12011113          	0x12011113
 274:	4006                	0x4006
 276:	9718                	0x9718
 278:	1942                	slli	s2,s2,0x30
 27a:	1301                	addi	t1,t1,-32
 27c:	0000                	unimp
 27e:	892c                	0x892c
      for (i = 0; i <= rounds * 4; i += 4)
 280:	0182                	c.slli64	gp
 282:	1101                	addi	sp,sp,-32
	for (k = 0; k < 4; k++)
 284:	9501                	srai	a0,a0,0x20
 286:	1942                	slli	s2,s2,0x30
      for (i = 0; i <= rounds * 4; i += 4)
 288:	1331                	addi	t1,t1,-20
 28a:	0000                	unimp
 28c:	2e2d                	jal	5c6 <_nettle_aes_encrypt+0x1ae>
 28e:	3f01                	jal	19e <_aes_set_key+0x112>
	  dst[i + k] = src[rounds * 4 - i + k];
 290:	0319                	addi	t1,t1,6
 292:	3a0e                	fld	fs4,224(sp)
 294:	39053b0b          	0x39053b0b
 298:	1119270b          	0x1119270b
 29c:	1201                	addi	tp,tp,-32
 29e:	4006                	0x4006
 2a0:	9718                	0x9718
 2a2:	1942                	slli	s2,s2,0x30
	for (k = 0; k < 4; k++)
 2a4:	1301                	addi	t1,t1,-32
 2a6:	0000                	unimp
      for (i = 0; i <= rounds * 4; i += 4)
 2a8:	052e                	slli	a0,a0,0xb
 2aa:	0300                	addi	s0,sp,384
 2ac:	3a0e                	fld	fs4,224(sp)
 2ae:	39053b0b          	0x39053b0b
 2b2:	0213490b          	0x213490b
 2b6:	2f000017          	auipc	zero,0x2f000
 2ba:	0034                	addi	a3,sp,8
  if (src == dst)
 2bc:	0b3a0803          	lb	a6,179(s4)
 2c0:	0b39053b          	0xb39053b
	for (k = 0; k < 4; k++)
 2c4:	1349                	addi	t1,t1,-14
 2c6:	0000                	unimp
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
 2c8:	2e30                	fld	fa2,88(a2)
 2ca:	3f00                	fld	fs0,56(a4)
 2cc:	0319                	addi	t1,t1,6
 2ce:	3a0e                	fld	fs4,224(sp)
 2d0:	39053b0b          	0x39053b0b
      for (i = 0; i <= rounds * 4; i += 4)
 2d4:	1119270b          	0x1119270b
    MIX_COLUMN (mtable, dst[i]);
 2d8:	1201                	addi	tp,tp,-32
 2da:	4006                	0x4006
 2dc:	9718                	0x9718
 2de:	1942                	slli	s2,s2,0x30
  for (i = 4; i < 4 * rounds; i++)
 2e0:	0000                	unimp
 2e2:	3431                	jal	fffffcee <_stack_start+0xfffefcee>
}
 2e4:	0300                	addi	s0,sp,384
 2e6:	3a0e                	fld	fs4,224(sp)
 2e8:	39053b0b          	0x39053b0b
 2ec:	0213490b          	0x213490b
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
 2f0:	32000017          	auipc	zero,0x32000
	for (k = 0; k < 4; k++)
 2f4:	1755010b          	0x1755010b
	  SWAP (dst[i + k], dst[j + k]);
 2f8:	0000                	unimp
 2fa:	3f012e33          	0x3f012e33
 2fe:	0319                	addi	t1,t1,6
	for (k = 0; k < 4; k++)
 300:	3a0e                	fld	fs4,224(sp)
 302:	39053b0b          	0x39053b0b
	  SWAP (dst[i + k], dst[j + k]);
 306:	2019270b          	0x2019270b
 30a:	0013010b          	0x13010b
 30e:	3400                	fld	fs0,40(s0)
 310:	0005                	c.nop	1
 312:	0b3a0e03          	lb	t3,179(s4)
	for (k = 0; k < 4; k++)
 316:	0b39053b          	0xb39053b
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
 31a:	1349                	addi	t1,t1,-14
 31c:	0000                	unimp
 31e:	0535                	addi	a0,a0,13
 320:	0300                	addi	s0,sp,384
 322:	3a08                	fld	fa0,48(a2)
    MIX_COLUMN (mtable, dst[i]);
 324:	39053b0b          	0x39053b0b
  for (i = 4; i < 4 * rounds; i++)
 328:	0013490b          	0x13490b
 32c:	3600                	fld	fs0,40(a2)
 32e:	0000010b          	0x10b
    MIX_COLUMN (mtable, dst[i]);
 332:	55010b37          	lui	s6,0x55010
 336:	00130117          	auipc	sp,0x130
 33a:	3800                	fld	fs0,48(s0)
 33c:	012e                	slli	sp,sp,0xb
 33e:	1331                	addi	t1,t1,-20
 340:	0111                	addi	sp,sp,4
 342:	0612                	slli	a2,a2,0x4
 344:	1840                	addi	s0,sp,52
 346:	01194297          	auipc	t0,0x1194
 34a:	39000013          	li	zero,912
 34e:	0005                	c.nop	1
 350:	1331                	addi	t1,t1,-20
 352:	1702                	slli	a4,a4,0x20
 354:	0000                	unimp
 356:	1d3a                	slli	s10,s10,0x2e
 358:	3101                	jal	ffffff58 <_stack_start+0xfffeff58>
 35a:	55015213          	0x55015213
 35e:	590b5817          	auipc	a6,0x590b5
 362:	5705                	li	a4,-31
 364:	0013010b          	0x13010b
 368:	3b00                	fld	fs0,48(a4)
 36a:	0005                	c.nop	1
 36c:	1331                	addi	t1,t1,-20
 36e:	0000                	unimp
 370:	0b3c                	addi	a5,sp,408
 372:	3101                	jal	ffffff72 <_stack_start+0xfffeff72>
 374:	00175513          	srli	a0,a4,0x1
 378:	3d00                	fld	fs0,56(a0)
 37a:	0034                	addi	a3,sp,8
 37c:	1331                	addi	t1,t1,-20
 37e:	1702                	slli	a4,a4,0x20
 380:	0000                	unimp
 382:	2e3e                	fld	ft8,456(sp)
 384:	3f00                	fld	fs0,56(a4)
 386:	3c19                	jal	fffffd9c <_stack_start+0xfffefd9c>
 388:	6e19                	lui	t3,0x6
 38a:	030e                	slli	t1,t1,0x3
 38c:	3a0e                	fld	fs4,224(sp)
 38e:	390b3b0b          	0x390b3b0b
 392:	0000000b          	0xb
 396:	1101                	addi	sp,sp,-32
 398:	2501                	jal	998 <_nettle_aes_decrypt+0xd8>
 39a:	130e                	slli	t1,t1,0x23
 39c:	1b0e030b          	0x1b0e030b
 3a0:	110e                	slli	sp,sp,0x23
 3a2:	1201                	addi	tp,tp,-32
 3a4:	1006                	c.slli	zero,0x21
 3a6:	02000017          	auipc	zero,0x2000
{
 3aa:	0024                	addi	s1,sp,8
 3ac:	0b3e0b0b          	0xb3e0b0b
 3b0:	00000803          	lb	a6,0(zero) # 0 <__DYNAMIC>
 3b4:	03001603          	lh	a2,48(zero) # 30 <__DYNAMIC+0x30>
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
 3b8:	3a0e                	fld	fs4,224(sp)
 3ba:	390b3b0b          	0x390b3b0b
{
 3be:	0013490b          	0x13490b
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
 3c2:	0400                	addi	s0,sp,512
 3c4:	0024                	addi	s1,sp,8
 3c6:	0b3e0b0b          	0xb3e0b0b
{
 3ca:	00000e03          	lb	t3,0(zero) # 0 <__DYNAMIC>
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
 3ce:	1605                	addi	a2,a2,-31
  dst->rounds = src->rounds;
 3d0:	0300                	addi	s0,sp,384
 3d2:	3a0e                	fld	fs4,224(sp)
}
 3d4:	39053b0b          	0x39053b0b
 3d8:	0013490b          	0x13490b
  dst->rounds = src->rounds;
 3dc:	0600                	addi	s0,sp,768
 3de:	0b0b0117          	auipc	sp,0xb0b0
}
 3e2:	0b3a                	slli	s6,s6,0xe
 3e4:	0b390b3b          	0xb390b3b
 3e8:	1301                	addi	t1,t1,-32
 3ea:	0000                	unimp
{
 3ec:	03000d07          	0x3000d07
 3f0:	3a0e                	fld	fs4,224(sp)
 3f2:	390b3b0b          	0x390b3b0b
 3f6:	0013490b          	0x13490b
 3fa:	0800                	addi	s0,sp,16
  aes_set_encrypt_key (ctx, keysize, key);
 3fc:	0101                	addi	sp,sp,0
 3fe:	1349                	addi	t1,t1,-14
  aes_invert_key (ctx, ctx);
 400:	1301                	addi	t1,t1,-32
 402:	0000                	unimp
 404:	2109                	jal	806 <_nettle_aes_encrypt+0x3ee>
 406:	4900                	lw	s0,16(a0)
}
 408:	000b2f13          	slti	t5,s6,0
 40c:	0a00                	addi	s0,sp,272
 40e:	0b0b0113          	addi	sp,s6,176 # 550100b0 <_stack_start+0x550000b0>
 412:	0b3a                	slli	s6,s6,0xe
  aes_invert_key (ctx, ctx);
 414:	0b390b3b          	0xb390b3b
{
 418:	1301                	addi	t1,t1,-32
 41a:	0000                	unimp
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
 41c:	03000d0b          	0x3000d0b
 420:	3a0e                	fld	fs4,224(sp)
 422:	390b3b0b          	0x390b3b0b
{
 426:	3813490b          	0x3813490b
 42a:	0c00000b          	0xc00000b
 42e:	0b0b000f          	0xb0b000f
 432:	0000                	unimp
 434:	130d                	addi	t1,t1,-29
 436:	0301                	addi	t1,t1,0
 438:	0b0e                	slli	s6,s6,0x3
 43a:	3b0b3a0b          	0x3b0b3a0b
 43e:	010b390b          	0x10b390b
 442:	0e000013          	li	zero,224
 446:	000d                	c.nop	3
 448:	0b3a0803          	lb	a6,179(s4)
 44c:	0b390b3b          	0xb390b3b
 450:	1349                	addi	t1,t1,-14
 452:	0b38                	addi	a4,sp,408
 454:	0000                	unimp
 456:	0b000f0f          	0xb000f0f
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
 45a:	0013490b          	0x13490b
 45e:	1000                	addi	s0,sp,32
 460:	0e030113          	addi	sp,t1,224
 464:	0b3a050b          	0xb3a050b
    w0 = LE_READ_UINT32 (src) ^ keys[0];
 468:	0b390b3b          	0xb390b3b
 46c:	1301                	addi	t1,t1,-32
 46e:	0000                	unimp
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
 470:	0d11                	addi	s10,s10,4
 472:	0300                	addi	s0,sp,384
    w0 = LE_READ_UINT32 (src) ^ keys[0];
 474:	3a0e                	fld	fs4,224(sp)
 476:	390b3b0b          	0x390b3b0b
 47a:	3813490b          	0x3813490b
 47e:	0005                	c.nop	1
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
 480:	1200                	addi	s0,sp,288
 482:	0015                	c.nop	5
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
 484:	00001927          	0x1927
    w0 = LE_READ_UINT32 (src) ^ keys[0];
 488:	27011513          	0x27011513
 48c:	4919                	li	s2,6
 48e:	00130113          	addi	sp,t1,1
 492:	1400                	addi	s0,sp,544
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
 494:	0005                	c.nop	1
 496:	1349                	addi	t1,t1,-14
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
 498:	0000                	unimp
 49a:	2615                	jal	7be <_nettle_aes_encrypt+0x3a6>
    w0 = LE_READ_UINT32 (src) ^ keys[0];
 49c:	4900                	lw	s0,16(a0)
 49e:	16000013          	li	zero,352
 4a2:	0e030113          	addi	sp,t1,224
 4a6:	0b3a050b          	0xb3a050b
 4aa:	0b39053b          	0xb39053b
    for (i = 1; i < rounds; i++)
 4ae:	1301                	addi	t1,t1,-32
    w0 = LE_READ_UINT32 (src) ^ keys[0];
 4b0:	0000                	unimp
 4b2:	03000d17          	auipc	s10,0x3000
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
 4b6:	3a0e                	fld	fs4,224(sp)
 4b8:	39053b0b          	0x39053b0b
 4bc:	3813490b          	0x3813490b
 4c0:	1800000b          	0x1800000b
 4c4:	000d                	c.nop	3
 4c6:	0b3a0e03          	lb	t3,179(s4)
 4ca:	0b39053b          	0xb39053b
 4ce:	1349                	addi	t1,t1,-14
 4d0:	0538                	addi	a4,sp,648
 4d2:	0000                	unimp
 4d4:	1319                	addi	t1,t1,-26
 4d6:	0301                	addi	t1,t1,0
 4d8:	0b0e                	slli	s6,s6,0x3
 4da:	3b0b3a0b          	0x3b0b3a0b
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
 4de:	3905                	jal	10e <_aes_set_key+0x82>
 4e0:	0013010b          	0x13010b
 4e4:	1a00                	addi	s0,sp,304
 4e6:	0b0b0113          	addi	sp,s6,176
 4ea:	0b3a                	slli	s6,s6,0xe
 4ec:	0b39053b          	0xb39053b
 4f0:	1301                	addi	t1,t1,-32
 4f2:	0000                	unimp
 4f4:	0b01171b          	0xb01171b
 4f8:	3b0b3a0b          	0x3b0b3a0b
 4fc:	3905                	jal	12c <_aes_set_key+0xa0>
 4fe:	0013010b          	0x13010b
 502:	1c00                	addi	s0,sp,560
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
 504:	000d                	c.nop	3
 506:	0b3a0e03          	lb	t3,179(s4)
 50a:	0b39053b          	0xb39053b
 50e:	1349                	addi	t1,t1,-14
 510:	0000                	unimp
 512:	131d                	addi	t1,t1,-25
 514:	0300                	addi	s0,sp,384
 516:	3c0e                	fld	fs8,224(sp)
 518:	0019                	c.nop	6
 51a:	1e00                	addi	s0,sp,816
 51c:	0115                	addi	sp,sp,5
 51e:	13011927          	0x13011927
 522:	0000                	unimp
 524:	341f 0300 3a0e      	0x3a0e0300341f
 52a:	39053b0b          	0x39053b0b
 52e:	3f13490b          	0x3f13490b
    for (i = 1; i < rounds; i++)
 532:	3c19                	jal	ffffff48 <_stack_start+0xfffeff48>
 534:	0019                	c.nop	6
 536:	2000                	fld	fs0,0(s0)
 538:	0034                	addi	a3,sp,8
 53a:	0b3a0e03          	lb	t3,179(s4)
 53e:	0b390b3b          	0xb390b3b
 542:	1349                	addi	t1,t1,-14
 544:	1802                	slli	a6,a6,0x20
 546:	0000                	unimp
 548:	2e21                	jal	860 <_nettle_aes_encrypt+0x448>
 54a:	3f01                	jal	45a <_nettle_aes_encrypt+0x42>
 54c:	0319                	addi	t1,t1,6
 54e:	3a0e                	fld	fs4,224(sp)
 550:	390b3b0b          	0x390b3b0b
 554:	1119270b          	0x1119270b
 558:	1201                	addi	tp,tp,-32
 55a:	4006                	0x4006
 55c:	9718                	0x9718
 55e:	1942                	slli	s2,s2,0x30
 560:	1301                	addi	t1,t1,-32
 562:	0000                	unimp
 564:	0522                	slli	a0,a0,0x8
 566:	0300                	addi	s0,sp,384
 568:	3a08                	fld	fa0,48(a2)
 56a:	390b3b0b          	0x390b3b0b
 56e:	0213490b          	0x213490b
 572:	0018                	0x18
 574:	2300                	fld	fs0,0(a4)
 576:	012e                	slli	sp,sp,0xb
 578:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 580:	0b39                	addi	s6,s6,14
 582:	13491927          	0x13491927
 586:	0111                	addi	sp,sp,4
 588:	0612                	slli	a2,a2,0x4
 58a:	1840                	addi	s0,sp,52
 58c:	01194297          	auipc	t0,0x1194
 590:	24000013          	li	zero,576
 594:	0005                	c.nop	1
 596:	0b3a0803          	lb	a6,179(s4)
 59a:	0b390b3b          	0xb390b3b
 59e:	1349                	addi	t1,t1,-14
 5a0:	1702                	slli	a4,a4,0x20
 5a2:	0000                	unimp
 5a4:	0525                	addi	a0,a0,9
 5a6:	0300                	addi	s0,sp,384
 5a8:	3a0e                	fld	fs4,224(sp)
 5aa:	390b3b0b          	0x390b3b0b
 5ae:	0213490b          	0x213490b
 5b2:	0018                	0x18
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
 5b4:	2600                	fld	fs0,8(a2)
 5b6:	0034                	addi	a3,sp,8
 5b8:	0b3a0e03          	lb	t3,179(s4)
 5bc:	0b390b3b          	0xb390b3b
 5c0:	1349                	addi	t1,t1,-14
 5c2:	1702                	slli	a4,a4,0x20
 5c4:	0000                	unimp
 5c6:	11010b27          	0x11010b27
 5ca:	1201                	addi	tp,tp,-32
 5cc:	0006                	c.slli	zero,0x1
 5ce:	2800                	fld	fs0,16(s0)
 5d0:	0034                	addi	a3,sp,8
 5d2:	0b3a0803          	lb	a6,179(s4)
 5d6:	0b390b3b          	0xb390b3b
 5da:	1349                	addi	t1,t1,-14
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
 5dc:	1702                	slli	a4,a4,0x20
 5de:	0000                	unimp
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
 5e0:	0529                	addi	a0,a0,10
 5e2:	0300                	addi	s0,sp,384
 5e4:	3a0e                	fld	fs4,224(sp)
 5e6:	390b3b0b          	0x390b3b0b
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
 5ea:	0213490b          	0x213490b
 5ee:	2a000017          	auipc	zero,0x2a000
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
 5f2:	8289                	srli	a3,a3,0x2
 5f4:	0101                	addi	sp,sp,0
 5f6:	0111                	addi	sp,sp,4
 5f8:	1331                	addi	t1,t1,-20
 5fa:	1301                	addi	t1,t1,-32
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
 5fc:	0000                	unimp
 5fe:	01828a2b          	0x1828a2b
 602:	0200                	addi	s0,sp,256
 604:	9118                	0x9118
 606:	1842                	slli	a6,a6,0x30
 608:	0000                	unimp
 60a:	892c                	0x892c
 60c:	0182                	c.slli64	gp
 60e:	1101                	addi	sp,sp,-32
 610:	3101                	jal	210 <aes_set_encrypt_key+0x4>
 612:	2d000013          	li	zero,720
 616:	002e                	c.slli	zero,0xb
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
 618:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
 620:	0b39                	addi	s6,s6,14
 622:	13491927          	0x13491927
 626:	0111                	addi	sp,sp,4
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
 628:	0612                	slli	a2,a2,0x4
 62a:	1840                	addi	s0,sp,52
 62c:	00194297          	auipc	t0,0x194
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
 630:	2e00                	fld	fs0,24(a2)
 632:	002e                	c.slli	zero,0xb
 634:	193c193f 0e030e6e 	0xe030e6e193c193f
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
 63c:	0b3a                	slli	s6,s6,0xe
 63e:	00000b3b          	0xb3b
 642:	0100                	addi	s0,sp,128
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
 644:	0111                	addi	sp,sp,4
 646:	0e25                	addi	t3,t3,9
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
 648:	0e030b13          	addi	s6,t1,224
 64c:	01110e1b          	0x1110e1b
 650:	0612                	slli	a2,a2,0x4
 652:	1710                	addi	a2,sp,928
 654:	0000                	unimp
 656:	2e02                	fld	ft8,0(sp)
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
 658:	3f00                	fld	fs0,56(a4)
 65a:	0319                	addi	t1,t1,6
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
 65c:	3a0e                	fld	fs4,224(sp)
 65e:	390b3b0b          	0x390b3b0b
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
 662:	1201110b          	0x1201110b
 666:	4006                	0x4006
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
 668:	9718                	0x9718
 66a:	1942                	slli	s2,s2,0x30
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
 66c:	0000                	unimp
 66e:	0100                	addi	s0,sp,128
 670:	0111                	addi	sp,sp,4
 672:	0e25                	addi	t3,t3,9
 674:	0e030b13          	addi	s6,t1,224
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
 678:	17550e1b          	0x17550e1b
 67c:	0111                	addi	sp,sp,4
 67e:	1710                	addi	a2,sp,928
 680:	0000                	unimp
 682:	2402                	fld	fs0,0(sp)
 684:	0b00                	addi	s0,sp,400
 686:	030b3e0b          	0x30b3e0b
 68a:	0008                	0x8
 68c:	0300                	addi	s0,sp,384
 68e:	0035                	c.nop	13
 690:	1349                	addi	t1,t1,-14
 692:	0000                	unimp
 694:	2404                	fld	fs1,8(s0)
 696:	0b00                	addi	s0,sp,400
 698:	030b3e0b          	0x30b3e0b
 69c:	000e                	c.slli	zero,0x3
 69e:	0500                	addi	s0,sp,640
 6a0:	012e                	slli	sp,sp,0xb
 6a2:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    LE_WRITE_UINT32 (dst, t0);
 6aa:	0b39                	addi	s6,s6,14
    LE_WRITE_UINT32 (dst + 4, t1);
 6ac:	13491927          	0x13491927
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
 6b0:	0111                	addi	sp,sp,4
 6b2:	0612                	slli	a2,a2,0x4
 6b4:	1840                	addi	s0,sp,52
 6b6:	01194297          	auipc	t0,0x1194
 6ba:	06000013          	li	zero,96
    LE_WRITE_UINT32 (dst + 8, t2);
 6be:	0005                	c.nop	1
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
 6c0:	0b3a0e03          	lb	t3,179(s4)
    LE_WRITE_UINT32 (dst, t0);
 6c4:	0b390b3b          	0xb390b3b
 6c8:	1349                	addi	t1,t1,-14
 6ca:	1702                	slli	a4,a4,0x20
 6cc:	0000                	unimp
 6ce:	03003407          	fld	fs0,48(zero) # 30 <__DYNAMIC+0x30>
 6d2:	3a0e                	fld	fs4,224(sp)
 6d4:	390b3b0b          	0x390b3b0b
 6d8:	0213490b          	0x213490b
    LE_WRITE_UINT32 (dst + 4, t1);
 6dc:	0018                	0x18
 6de:	0800                	addi	s0,sp,16
 6e0:	8289                	srli	a3,a3,0x2
 6e2:	0001                	nop
 6e4:	0111                	addi	sp,sp,4
 6e6:	1331                	addi	t1,t1,-20
 6e8:	0000                	unimp
 6ea:	8909                	andi	a0,a0,2
 6ec:	0182                	c.slli64	gp
 6ee:	1101                	addi	sp,sp,-32
 6f0:	3101                	jal	2f0 <_nettle_aes_invert+0x84>
 6f2:	00130113          	addi	sp,t1,1
    LE_WRITE_UINT32 (dst + 8, t2);
 6f6:	0a00                	addi	s0,sp,272
 6f8:	828a                	mv	t0,sp
 6fa:	0001                	nop
 6fc:	1802                	slli	a6,a6,0x20
 6fe:	4291                	li	t0,4
 700:	0018                	0x18
 702:	0b00                	addi	s0,sp,400
 704:	0b0b000f          	0xb0b000f
 708:	1349                	addi	t1,t1,-14
 70a:	0000                	unimp
    LE_WRITE_UINT32 (dst + 12, t3);
 70c:	2e0c                	fld	fa1,24(a2)
 70e:	3f00                	fld	fs0,56(a4)
 710:	3c19                	jal	126 <_aes_set_key+0x9a>
 712:	6e19                	lui	t3,0x6
 714:	030e                	slli	t1,t1,0x3
 716:	3a0e                	fld	fs4,224(sp)
 718:	390b3b0b          	0x390b3b0b
 71c:	0000000b          	0xb
 720:	1101                	addi	sp,sp,-32
 722:	1000                	addi	s0,sp,32
 724:	5506                	lw	a0,96(sp)
 726:	0306                	slli	t1,t1,0x1
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
 728:	1b0e                	slli	s6,s6,0x23
 72a:	250e                	fld	fa0,192(sp)
 72c:	130e                	slli	t1,t1,0x23
 72e:	0005                	c.nop	1
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
  .endr
       0:	0d4c                	addi	a1,sp,660
       2:	0000                	unimp
       4:	0dac                	addi	a1,sp,728
       6:	0000                	unimp
       8:	0001                	nop
       a:	ac5a                	fsd	fs6,24(sp)
       c:	000d                	c.nop	3
       e:	cc00                	sw	s0,24(s0)
      10:	000d                	c.nop	3
      12:	0100                	addi	s0,sp,128
      14:	6500                	flw	fs0,8(a0)
      16:	0dcc                	addi	a1,sp,724
      18:	0000                	unimp
      1a:	0de0                	addi	s0,sp,732
      1c:	0000                	unimp
      1e:	0004                	0x4
      20:	9f5a01f3          	0x9f5a01f3
      24:	0de0                	addi	s0,sp,732
      26:	0000                	unimp
      28:	0e30                	addi	a2,sp,792
      2a:	0000                	unimp
      2c:	0001                	nop
      2e:	0065                	c.nop	25
      30:	0000                	unimp
      32:	0000                	unimp
      34:	0000                	unimp
      36:	4c00                	lw	s0,24(s0)
      38:	000d                	c.nop	3
      3a:	ac00                	fsd	fs0,24(s0)
      3c:	000d                	c.nop	3
      3e:	0200                	addi	s0,sp,256
      40:	3000                	fld	fs0,32(s0)
      42:	ac9f 000d b800      	0xb800000dac9f
      48:	000d                	c.nop	3
      4a:	0100                	addi	s0,sp,128
      4c:	5800                	lw	s0,48(s0)
      4e:	0de0                	addi	s0,sp,732
      50:	0000                	unimp
      52:	0e30                	addi	a2,sp,792
      54:	0000                	unimp
      56:	0001                	nop
      58:	0058                	addi	a4,sp,4
      5a:	0000                	unimp
      5c:	0000                	unimp
      5e:	0000                	unimp
      60:	9c00                	0x9c00
      62:	000e                	c.slli	zero,0x3
      64:	9f00                	0x9f00
      66:	000e                	c.slli	zero,0x3
      68:	0100                	addi	s0,sp,128
      6a:	5a00                	lw	s0,48(a2)
      6c:	0e9f 0000 0ea0      	0xea000000e9f
      72:	0000                	unimp
      74:	0004                	0x4
      76:	9f5a01f3          	0x9f5a01f3
	...
  jal x0, reset_handler
      82:	0e30                	addi	a2,sp,792
  jal x0, default_exc_handler
      84:	0000                	unimp
      86:	0e38                	addi	a4,sp,792
  jal x0, default_exc_handler
      88:	0000                	unimp
      8a:	0001                	nop
  assert_beebs (nk != 0);
      8c:	385a                	fld	fa6,432(sp)
      8e:	000e                	c.slli	zero,0x3
{
      90:	9800                	0x9800
      92:	000e                	c.slli	zero,0x3
  assert_beebs (nk != 0);
      94:	0400                	addi	s0,sp,512
      96:	f300                	fsw	fs0,32(a4)
{
      98:	5a01                	li	s4,-32
      9a:	009f 0000 0000      	0x9f
  lastkey = (AES_BLOCK_SIZE / 4) * (nr + 1);
      a0:	0000                	unimp
      a2:	3000                	fld	fs0,32(s0)
      a4:	000e                	c.slli	zero,0x3
      a6:	5c00                	lw	s0,56(s0)
  for (i = 0, rp = rcon; i < nk; i++)
      a8:	000e                	c.slli	zero,0x3
      aa:	0200                	addi	s0,sp,256
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
      ac:	3100                	fld	fs0,32(a0)
      ae:	5c9f 000e 9800      	0x9800000e5c9f
      b4:	000e                	c.slli	zero,0x3
      b6:	0100                	addi	s0,sp,128
      b8:	5a00                	lw	s0,48(a2)
	...
      c2:	0e30                	addi	a2,sp,792
      c4:	0000                	unimp
      c6:	0e5c                	addi	a5,sp,788
      c8:	0000                	unimp
      ca:	0002                	c.slli64	zero
  for (i = 0, rp = rcon; i < nk; i++)
      cc:	9f30                	0x9f30
      ce:	0e5c                	addi	a5,sp,788
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
      d0:	0000                	unimp
      d2:	0e98                	addi	a4,sp,848
      d4:	0000                	unimp
      d6:	0001                	nop
      d8:	005f 0000 0000      	0x5f
      de:	0000                	unimp
      e0:	1400                	addi	s0,sp,544
      e2:	000d                	c.nop	3
      e4:	2800                	fld	fs0,16(s0)
      e6:	000d                	c.nop	3
  for (i = 0, rp = rcon; i < nk; i++)
      e8:	0100                	addi	s0,sp,128
      ea:	5a00                	lw	s0,48(a2)
      ec:	0d28                	addi	a0,sp,664
      ee:	0000                	unimp
      f0:	0d30                	addi	a2,sp,664
      f2:	0000                	unimp
      f4:	0004                	0x4
      f6:	9f5a01f3          	0x9f5a01f3
      fa:	0d30                	addi	a2,sp,664
      fc:	0000                	unimp
      fe:	0d3c                	addi	a5,sp,664
     100:	0000                	unimp
     102:	0001                	nop
     104:	3c5a                	fld	fs8,432(sp)
     106:	000d                	c.nop	3
      else if (nk > 6 && (i % nk) == 4)
     108:	4b00                	lw	s0,16(a4)
     10a:	000d                	c.nop	3
     10c:	0300                	addi	s0,sp,384
     10e:	7b00                	flw	fs0,48(a4)
	t = SUBBYTE (t, aes_sbox);
     110:	9f7c                	0x9f7c
     112:	00000d4b          	fnmsub.s	fs10,ft0,ft0,ft0,rne
     116:	0d4c                	addi	a1,sp,660
  for (i = nk; i < lastkey; i++)
     118:	0000                	unimp
     11a:	0004                	0x4
     11c:	9f5a01f3          	0x9f5a01f3
	...
      if (i % nk == 0)
     128:	0d14                	addi	a3,sp,656
     12a:	0000                	unimp
	t = SUBBYTE (ROTL32 (24, t), aes_sbox) ^ *rp++;
     12c:	00000d2f          	0xd2f
     130:	0001                	nop
     132:	000d2f5b          	0xd2f5b
     136:	3000                	fld	fs0,32(s0)
     138:	000d                	c.nop	3
     13a:	0400                	addi	s0,sp,512
     13c:	f300                	fsw	fs0,32(a4)
     13e:	5b01                	li	s6,-32
     140:	309f 000d 3800      	0x3800000d309f
     146:	000d                	c.nop	3
     148:	0100                	addi	s0,sp,128
     14a:	5b00                	lw	s0,48(a4)
     14c:	0d38                	addi	a4,sp,664
     14e:	0000                	unimp
     150:	00000d4b          	fnmsub.s	fs10,ft0,ft0,ft0,rne
     154:	0001                	nop
     156:	4b5d                	li	s6,23
     158:	000d                	c.nop	3
     15a:	4c00                	lw	s0,24(s0)
     15c:	000d                	c.nop	3
     15e:	0400                	addi	s0,sp,512
     160:	f300                	fsw	fs0,32(a4)
     162:	5b01                	li	s6,-32
     164:	009f 0000 0000      	0x9f
     16a:	0000                	unimp
     16c:	1400                	addi	s0,sp,544
     16e:	000d                	c.nop	3
     170:	2f00                	fld	fs0,24(a4)
     172:	000d                	c.nop	3
     174:	0100                	addi	s0,sp,128
     176:	5c00                	lw	s0,56(s0)
     178:	00000d2f          	0xd2f
     17c:	0d30                	addi	a2,sp,664
     17e:	0000                	unimp
     180:	0004                	0x4
     182:	9f5c01f3          	0x9f5c01f3
     186:	0d30                	addi	a2,sp,664
     188:	0000                	unimp
     18a:	0d48                	addi	a0,sp,660
     18c:	0000                	unimp
     18e:	0001                	nop
     190:	485c                	lw	a5,20(s0)
     192:	000d                	c.nop	3
      subkeys[i] = subkeys[i - nk] ^ t;
     194:	4b00                	lw	s0,16(a4)
     196:	000d                	c.nop	3
     198:	0100                	addi	s0,sp,128
     19a:	5e00                	lw	s0,56(a2)
  for (i = nk; i < lastkey; i++)
     19c:	00000d4b          	fnmsub.s	fs10,ft0,ft0,ft0,rne
     1a0:	0d4c                	addi	a1,sp,660
     1a2:	0000                	unimp
      subkeys[i] = subkeys[i - nk] ^ t;
     1a4:	0004                	0x4
     1a6:	9f5c01f3          	0x9f5c01f3
	...
      else if (nk > 6 && (i % nk) == 4)
     1b2:	0d14                	addi	a3,sp,656
     1b4:	0000                	unimp
     1b6:	0d1c                	addi	a5,sp,656
	t = SUBBYTE (t, aes_sbox);
     1b8:	0000                	unimp
     1ba:	0001                	nop
     1bc:	1c5d                	addi	s8,s8,-9
     1be:	000d                	c.nop	3
     1c0:	2f00                	fld	fs0,24(a4)
     1c2:	000d                	c.nop	3
     1c4:	0100                	addi	s0,sp,128
     1c6:	5f00                	lw	s0,56(a4)
     1c8:	00000d2f          	0xd2f
     1cc:	0d30                	addi	a2,sp,664
     1ce:	0000                	unimp
     1d0:	0004                	0x4
     1d2:	9f5d01f3          	0x9f5d01f3
     1d6:	0d30                	addi	a2,sp,664
     1d8:	0000                	unimp
     1da:	00000d4b          	fnmsub.s	fs10,ft0,ft0,ft0,rne
     1de:	0001                	nop
     1e0:	4b5f 000d 4c00      	0x4c00000d4b5f
     1e6:	000d                	c.nop	3
     1e8:	0400                	addi	s0,sp,512
     1ea:	f300                	fsw	fs0,32(a4)
     1ec:	5d01                	li	s10,-32
     1ee:	009f 0000 0000      	0x9f
     1f4:	0000                	unimp
     1f6:	dc00                	sw	s0,56(s0)
     1f8:	000c                	0xc
     1fa:	f000                	fsw	fs0,32(s0)
     1fc:	000c                	0xc
     1fe:	0100                	addi	s0,sp,128
     200:	5a00                	lw	s0,48(a2)
     202:	0cf0                	addi	a2,sp,604
     204:	0000                	unimp
     206:	0cf8                	addi	a4,sp,604
     208:	0000                	unimp
     20a:	0004                	0x4
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
     20c:	9f5a01f3          	0x9f5a01f3
     210:	0cf8                	addi	a4,sp,604
     212:	0000                	unimp
     214:	0d04                	addi	s1,sp,656
     216:	0000                	unimp
{
     218:	0001                	nop
     21a:	045a                	slli	s0,s0,0x16
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
     21c:	000d                	c.nop	3
     21e:	1300                	addi	s0,sp,416
{
     220:	000d                	c.nop	3
     222:	0300                	addi	s0,sp,384
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
     224:	7b00                	flw	fs0,48(a4)
     226:	9f7c                	0x9f7c
  if (keysize == AES256_KEY_SIZE)
     228:	00000d13          	li	s10,0
     22c:	0d14                	addi	a3,sp,656
     22e:	0000                	unimp
     230:	0004                	0x4
     232:	9f5a01f3          	0x9f5a01f3
	...
      nr = _AES128_ROUNDS;
     23e:	0cdc                	addi	a5,sp,596
      nk = 4;
     240:	0000                	unimp
     242:	00000cf7          	0xcf7
  ctx->rounds = nr;
     246:	0001                	nop
  _aes_set_key (nr, nk, ctx->keys, key);
     248:	000cf75b          	0xcf75b
     24c:	f800                	fsw	fs0,48(s0)
     24e:	000c                	0xc
     250:	0400                	addi	s0,sp,512
     252:	f300                	fsw	fs0,32(a4)
      nr = _AES256_ROUNDS;
     254:	5b01                	li	s6,-32
     256:	f89f 000c 0000      	0xcf89f
      nk = 8;
     25c:	000d                	c.nop	3
     25e:	0100                	addi	s0,sp,128
      nr = _AES192_ROUNDS;
     260:	5b00                	lw	s0,48(a4)
     262:	0d00                	addi	s0,sp,656
      nk = 6;
     264:	0000                	unimp
     266:	00000d13          	li	s10,0
     26a:	0001                	nop
  if (src == dst)
     26c:	135d                	addi	t1,t1,-9
     26e:	000d                	c.nop	3
     270:	1400                	addi	s0,sp,544
     272:	000d                	c.nop	3
     274:	0400                	addi	s0,sp,512
     276:	f300                	fsw	fs0,32(a4)
     278:	5b01                	li	s6,-32
     27a:	009f 0000 0000      	0x9f
      for (i = 0; i <= rounds * 4; i += 4)
     280:	0000                	unimp
     282:	dc00                	sw	s0,56(s0)
	for (k = 0; k < 4; k++)
     284:	000c                	0xc
     286:	f700                	fsw	fs0,40(a4)
      for (i = 0; i <= rounds * 4; i += 4)
     288:	000c                	0xc
     28a:	0100                	addi	s0,sp,128
     28c:	5c00                	lw	s0,56(s0)
     28e:	00000cf7          	0xcf7
	  dst[i + k] = src[rounds * 4 - i + k];
     292:	0cf8                	addi	a4,sp,604
     294:	0000                	unimp
     296:	0004                	0x4
     298:	9f5c01f3          	0x9f5c01f3
     29c:	0cf8                	addi	a4,sp,604
     29e:	0000                	unimp
     2a0:	0d10                	addi	a2,sp,656
     2a2:	0000                	unimp
	for (k = 0; k < 4; k++)
     2a4:	0001                	nop
     2a6:	105c                	addi	a5,sp,36
      for (i = 0; i <= rounds * 4; i += 4)
     2a8:	000d                	c.nop	3
     2aa:	1300                	addi	s0,sp,416
     2ac:	000d                	c.nop	3
     2ae:	0100                	addi	s0,sp,128
     2b0:	5e00                	lw	s0,56(a2)
     2b2:	00000d13          	li	s10,0
     2b6:	0d14                	addi	a3,sp,656
     2b8:	0000                	unimp
     2ba:	0004                	0x4
  if (src == dst)
     2bc:	9f5c01f3          	0x9f5c01f3
	...
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
     2c8:	0cdc                	addi	a5,sp,596
     2ca:	0000                	unimp
     2cc:	0ce4                	addi	s1,sp,604
     2ce:	0000                	unimp
     2d0:	0001                	nop
     2d2:	e45d                	bnez	s0,380 <_nettle_aes_invert+0x114>
      for (i = 0; i <= rounds * 4; i += 4)
     2d4:	000c                	0xc
     2d6:	f700                	fsw	fs0,40(a4)
    MIX_COLUMN (mtable, dst[i]);
     2d8:	000c                	0xc
     2da:	0100                	addi	s0,sp,128
     2dc:	5f00                	lw	s0,56(a4)
     2de:	00000cf7          	0xcf7
  for (i = 4; i < 4 * rounds; i++)
     2e2:	0cf8                	addi	a4,sp,604
}
     2e4:	0000                	unimp
     2e6:	0004                	0x4
     2e8:	9f5d01f3          	0x9f5d01f3
     2ec:	0cf8                	addi	a4,sp,604
     2ee:	0000                	unimp
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
     2f0:	00000d13          	li	s10,0
	for (k = 0; k < 4; k++)
     2f4:	0001                	nop
     2f6:	135f 000d 1400      	0x1400000d135f
	  SWAP (dst[i + k], dst[j + k]);
     2fc:	000d                	c.nop	3
     2fe:	0400                	addi	s0,sp,512
	for (k = 0; k < 4; k++)
     300:	f300                	fsw	fs0,32(a4)
     302:	5d01                	li	s10,-32
	  SWAP (dst[i + k], dst[j + k]);
     304:	009f 0000 0000      	0x9f
     30a:	0000                	unimp
     30c:	6000                	flw	fs0,0(s0)
     30e:	73000003          	lb	zero,1840(zero) # 730 <_nettle_aes_encrypt+0x318>
     312:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
	for (k = 0; k < 4; k++)
     316:	5a00                	lw	s0,48(a2)
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
     318:	00000373          	0x373
     31c:	0380                	addi	s0,sp,448
     31e:	0000                	unimp
     320:	0001                	nop
     322:	8058                	0x8058
    MIX_COLUMN (mtable, dst[i]);
     324:	8b000003          	lb	zero,-1872(zero) # fffff8b0 <_stack_start+0xfffef8b0>
  for (i = 4; i < 4 * rounds; i++)
     328:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
     32c:	5a00                	lw	s0,48(a2)
     32e:	0000038b          	0x38b
    MIX_COLUMN (mtable, dst[i]);
     332:	038c                	addi	a1,sp,448
     334:	0000                	unimp
     336:	0004                	0x4
     338:	9f5a01f3          	0x9f5a01f3
	...
     344:	0360                	addi	s0,sp,396
     346:	0000                	unimp
     348:	00000373          	0x373
     34c:	0001                	nop
     34e:	0003735b          	0x3735b
     352:	8c00                	0x8c00
     354:	04000003          	lb	zero,64(zero) # 40 <__DYNAMIC+0x40>
     358:	f300                	fsw	fs0,32(a4)
     35a:	5b01                	li	s6,-32
     35c:	009f 0000 0000      	0x9f
     362:	0000                	unimp
     364:	6000                	flw	fs0,0(s0)
     366:	73000003          	lb	zero,1840(zero) # 730 <_nettle_aes_encrypt+0x318>
     36a:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
     36e:	5c00                	lw	s0,56(s0)
     370:	00000373          	0x373
     374:	038c                	addi	a1,sp,448
     376:	0000                	unimp
     378:	0004                	0x4
     37a:	9f5c01f3          	0x9f5c01f3
	...
     386:	031c                	addi	a5,sp,384
     388:	0000                	unimp
     38a:	033c                	addi	a5,sp,392
     38c:	0000                	unimp
     38e:	0001                	nop
     390:	3c5a                	fld	fs8,432(sp)
     392:	58000003          	lb	zero,1408(zero) # 580 <_nettle_aes_encrypt+0x168>
     396:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
     39a:	5900                	lw	s0,48(a0)
     39c:	0358                	addi	a4,sp,388
     39e:	0000                	unimp
     3a0:	0360                	addi	s0,sp,396
     3a2:	0000                	unimp
     3a4:	0004                	0x4
     3a6:	9f5a01f3          	0x9f5a01f3
	...
{
     3b2:	031c                	addi	a5,sp,384
     3b4:	0000                	unimp
     3b6:	0338                	addi	a4,sp,392
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
     3b8:	0000                	unimp
     3ba:	0001                	nop
{
     3bc:	0003385b          	0x3385b
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
     3c0:	5000                	lw	s0,32(s0)
     3c2:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
     3c6:	5800                	lw	s0,48(s0)
{
     3c8:	0350                	addi	a2,sp,388
     3ca:	0000                	unimp
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
     3cc:	0360                	addi	s0,sp,396
     3ce:	0000                	unimp
  dst->rounds = src->rounds;
     3d0:	0004                	0x4
     3d2:	9f5b01f3          	0x9f5b01f3
	...
     3de:	01e0                	addi	s0,sp,204
}
     3e0:	0000                	unimp
     3e2:	01ec                	addi	a1,sp,204
     3e4:	0000                	unimp
     3e6:	0001                	nop
     3e8:	ec5a                	fsw	fs6,24(sp)
     3ea:	0001                	nop
{
     3ec:	3000                	fld	fs0,32(s0)
     3ee:	0002                	c.slli64	zero
     3f0:	0400                	addi	s0,sp,512
     3f2:	f300                	fsw	fs0,32(a4)
     3f4:	5a01                	li	s4,-32
     3f6:	309f 0002 3c00      	0x3c000002309f
  aes_set_encrypt_key (ctx, keysize, key);
     3fc:	0002                	c.slli64	zero
     3fe:	0100                	addi	s0,sp,128
  aes_invert_key (ctx, ctx);
     400:	5a00                	lw	s0,48(a2)
     402:	023c                	addi	a5,sp,264
     404:	0000                	unimp
     406:	031c                	addi	a5,sp,384
}
     408:	0000                	unimp
     40a:	0004                	0x4
     40c:	9f5a01f3          	0x9f5a01f3
	...
{
     418:	01e0                	addi	s0,sp,204
     41a:	0000                	unimp
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     41c:	0248                	addi	a0,sp,260
     41e:	0000                	unimp
     420:	0001                	nop
     422:	0002485b          	0x2485b
{
     426:	5400                	lw	s0,40(s0)
     428:	0002                	c.slli64	zero
     42a:	0300                	addi	s0,sp,384
     42c:	7b00                	flw	fs0,48(a4)
     42e:	9f70                	0x9f70
     430:	0254                	addi	a3,sp,260
     432:	0000                	unimp
     434:	025c                	addi	a5,sp,260
     436:	0000                	unimp
     438:	0004                	0x4
     43a:	9f5b01f3          	0x9f5b01f3
     43e:	025c                	addi	a5,sp,260
     440:	0000                	unimp
     442:	0298                	addi	a4,sp,320
     444:	0000                	unimp
     446:	0001                	nop
     448:	0002985b          	0x2985b
     44c:	1c00                	addi	s0,sp,560
     44e:	04000003          	lb	zero,64(zero) # 40 <__DYNAMIC+0x40>
     452:	f300                	fsw	fs0,32(a4)
     454:	5b01                	li	s6,-32
     456:	009f 0000 0000      	0x9f
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     45c:	0000                	unimp
     45e:	e000                	fsw	fs0,0(s0)
     460:	0001                	nop
     462:	f000                	fsw	fs0,32(s0)
     464:	0001                	nop
     466:	0100                	addi	s0,sp,128
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     468:	5c00                	lw	s0,56(s0)
     46a:	01f0                	addi	a2,sp,204
     46c:	0000                	unimp
     46e:	0230                	addi	a2,sp,264
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     470:	0000                	unimp
     472:	0004                	0x4
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     474:	9f5c01f3          	0x9f5c01f3
     478:	0230                	addi	a2,sp,264
     47a:	0000                	unimp
     47c:	0234                	addi	a3,sp,264
     47e:	0000                	unimp
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     480:	0001                	nop
     482:	345c                	fld	fa5,168(s0)
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     484:	0002                	c.slli64	zero
     486:	1c00                	addi	s0,sp,560
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     488:	04000003          	lb	zero,64(zero) # 40 <__DYNAMIC+0x40>
     48c:	f300                	fsw	fs0,32(a4)
     48e:	5c01                	li	s8,-32
     490:	009f 0000 0000      	0x9f
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     496:	0000                	unimp
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     498:	f400                	fsw	fs0,40(s0)
     49a:	0001                	nop
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     49c:	fc00                	fsw	fs0,56(s0)
     49e:	0001                	nop
     4a0:	0200                	addi	s0,sp,256
     4a2:	3000                	fld	fs0,32(s0)
     4a4:	fc9f 0001 3000      	0x30000001fc9f
     4aa:	0002                	c.slli64	zero
    for (i = 1; i < rounds; i++)
     4ac:	0100                	addi	s0,sp,128
     4ae:	5e00                	lw	s0,56(a2)
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     4b0:	023c                	addi	a5,sp,264
     4b2:	0000                	unimp
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     4b4:	0240                	addi	s0,sp,260
     4b6:	0000                	unimp
     4b8:	0006                	c.slli	zero,0x1
     4ba:	0080                	addi	s0,sp,64
     4bc:	007e                	c.slli	zero,0x1f
     4be:	9f1c                	0x9f1c
     4c0:	0240                	addi	s0,sp,260
     4c2:	0000                	unimp
     4c4:	0244                	addi	s1,sp,260
     4c6:	0000                	unimp
     4c8:	0001                	nop
     4ca:	545f 0002 5c00      	0x5c000002545f
     4d0:	0002                	c.slli64	zero
     4d2:	0100                	addi	s0,sp,128
     4d4:	5a00                	lw	s0,48(a2)
     4d6:	025c                	addi	a5,sp,260
     4d8:	0000                	unimp
     4da:	0260                	addi	s0,sp,268
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     4dc:	0000                	unimp
     4de:	0001                	nop
     4e0:	605f 0002 8c00      	0x8c000002605f
     4e6:	0002                	c.slli64	zero
     4e8:	0600                	addi	s0,sp,768
     4ea:	8000                	0x8000
     4ec:	7e00                	flw	fs0,56(a2)
     4ee:	1c00                	addi	s0,sp,560
     4f0:	8c9f 0002 9000      	0x900000028c9f
     4f6:	0002                	c.slli64	zero
     4f8:	0800                	addi	s0,sp,16
     4fa:	8000                	0x8000
     4fc:	7e00                	flw	fs0,56(a2)
     4fe:	1c00                	addi	s0,sp,560
     500:	909f0423          	sb	s1,-1784(t5) # 9908 <_bss_end+0x5310>
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     504:	0002                	c.slli64	zero
     506:	9800                	0x9800
     508:	0002                	c.slli64	zero
     50a:	0600                	addi	s0,sp,768
     50c:	8000                	0x8000
     50e:	7e00                	flw	fs0,56(a2)
     510:	1c00                	addi	s0,sp,560
     512:	989f 0002 a000      	0xa0000002989f
     518:	0002                	c.slli64	zero
     51a:	0100                	addi	s0,sp,128
     51c:	5a00                	lw	s0,48(a2)
     51e:	02a0                	addi	s0,sp,328
     520:	0000                	unimp
     522:	0300                	addi	s0,sp,384
     524:	0000                	unimp
     526:	7f7a0003          	lb	zero,2039(s4)
     52a:	009f 0003 1c00      	0x1c000003009f
    for (i = 1; i < rounds; i++)
     530:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
     534:	5a00                	lw	s0,48(a2)
	...
     53e:	023c                	addi	a5,sp,264
     540:	0000                	unimp
     542:	0244                	addi	s1,sp,260
     544:	0000                	unimp
     546:	0001                	nop
     548:	5c5e                	lw	s8,244(sp)
     54a:	0002                	c.slli64	zero
     54c:	9800                	0x9800
     54e:	0002                	c.slli64	zero
     550:	0100                	addi	s0,sp,128
     552:	5e00                	lw	s0,56(a2)
	...
     55c:	026c                	addi	a1,sp,268
     55e:	0000                	unimp
     560:	0278                	addi	a4,sp,268
     562:	0000                	unimp
     564:	0001                	nop
     566:	785a                	flw	fa6,180(sp)
     568:	0002                	c.slli64	zero
     56a:	7c00                	flw	fs0,56(s0)
     56c:	0002                	c.slli64	zero
     56e:	0300                	addi	s0,sp,384
     570:	7a00                	flw	fs0,48(a2)
     572:	9f7f                	0x9f7f
     574:	027c                	addi	a5,sp,268
     576:	0000                	unimp
     578:	0298                	addi	a4,sp,320
     57a:	0000                	unimp
     57c:	0001                	nop
     57e:	005a                	c.slli	zero,0x16
     580:	0000                	unimp
     582:	0000                	unimp
     584:	0000                	unimp
     586:	7400                	flw	fs0,40(s0)
     588:	0002                	c.slli64	zero
     58a:	9800                	0x9800
     58c:	0002                	c.slli64	zero
     58e:	0100                	addi	s0,sp,128
     590:	5600                	lw	s0,40(a2)
	...
     59a:	029c                	addi	a5,sp,320
     59c:	0000                	unimp
     59e:	02a8                	addi	a0,sp,328
     5a0:	0000                	unimp
     5a2:	0005                	c.nop	1
     5a4:	007f                	0x7f
     5a6:	2548                	fld	fa0,136(a0)
     5a8:	a89f 0002 ac00      	0xac000002a89f
     5ae:	0002                	c.slli64	zero
     5b0:	0100                	addi	s0,sp,128
     5b2:	5e00                	lw	s0,56(a2)
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     5b4:	02ac                	addi	a1,sp,328
     5b6:	0000                	unimp
     5b8:	02e8                	addi	a0,sp,332
     5ba:	0000                	unimp
     5bc:	0005                	c.nop	1
     5be:	007f                	0x7f
     5c0:	2548                	fld	fa0,136(a0)
     5c2:	e89f 0002 1800      	0x18000002e89f
     5c8:	06000003          	lb	zero,96(zero) # 60 <__DYNAMIC+0x60>
     5cc:	7b00                	flw	fs0,48(a4)
     5ce:	067c                	addi	a5,sp,780
     5d0:	2548                	fld	fa0,136(a0)
     5d2:	009f 0000 0000      	0x9f
     5d8:	0000                	unimp
     5da:	9c00                	0x9c00
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     5dc:	0002                	c.slli64	zero
     5de:	c400                	sw	s0,8(s0)
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     5e0:	0002                	c.slli64	zero
     5e2:	4500                	lw	s0,8(a0)
     5e4:	7f00                	flw	fs0,56(a4)
     5e6:	3800                	fld	fs0,48(s0)
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     5e8:	0825                	addi	a6,a6,9
     5ea:	1aff                	0x1aff
     5ec:	2432                	fld	fs0,264(sp)
     5ee:	0015ac03          	lw	s8,1(a1) # 1 <__DYNAMIC+0x1>
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     5f2:	2200                	fld	fs0,0(a2)
     5f4:	4806                	lw	a6,64(sp)
     5f6:	1414                	addi	a3,sp,544
     5f8:	231f 2420 2517      	0x25172420231f
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     5fe:	7f21                	lui	t5,0xfffe8
     600:	4000                	lw	s0,0(s0)
     602:	0825                	addi	a6,a6,9
     604:	1aff                	0x1aff
     606:	2432                	fld	fs0,264(sp)
     608:	0015ac03          	lw	s8,1(a1)
     60c:	2200                	fld	fs0,0(a2)
     60e:	4006                	0x4006
     610:	1414                	addi	a3,sp,544
     612:	231f 2420 2517      	0x25172420231f
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     618:	2721                	jal	d20 <_nettle_aes_decrypt+0x460>
     61a:	007f                	0x7f
     61c:	ff08                	fsw	fa0,56(a4)
     61e:	321a                	fld	ft4,416(sp)
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     620:	0324                	addi	s1,sp,392
     622:	15ac                	addi	a1,sp,744
     624:	0000                	unimp
     626:	0622                	slli	a2,a2,0x8
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     628:	02c49f27          	0x2c49f27
     62c:	0000                	unimp
     62e:	02c8                	addi	a0,sp,324
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     630:	0000                	unimp
     632:	0042                	c.slli	zero,0x10
     634:	007f                	0x7f
     636:	2538                	fld	fa4,72(a0)
     638:	ff08                	fsw	fa0,56(a4)
     63a:	321a                	fld	ft4,416(sp)
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     63c:	0324                	addi	s1,sp,392
     63e:	15ac                	addi	a1,sp,744
     640:	0000                	unimp
     642:	0622                	slli	a2,a2,0x8
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     644:	1448                	addi	a0,sp,548
     646:	1f14                	addi	a3,sp,944
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     648:	17242023          	sw	s2,352(s0) # 1160 <reset_handler+0x74>
     64c:	2125                	jal	a74 <_nettle_aes_decrypt+0x1b4>
     64e:	007f                	0x7f
     650:	2540                	fld	fs0,136(a0)
     652:	ff08                	fsw	fa0,56(a4)
     654:	321a                	fld	ft4,416(sp)
     656:	0324                	addi	s1,sp,392
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     658:	15ac                	addi	a1,sp,744
     65a:	0000                	unimp
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     65c:	0622                	slli	a2,a2,0x8
     65e:	1440                	addi	s0,sp,548
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     660:	1f14                	addi	a3,sp,944
     662:	17242023          	sw	s2,352(s0)
     666:	2125                	jal	a8e <_nettle_aes_decrypt+0x1ce>
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     668:	32007d27          	0x32007d27
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     66c:	0324                	addi	s1,sp,392
     66e:	15ac                	addi	a1,sp,744
     670:	0000                	unimp
     672:	0622                	slli	a2,a2,0x8
     674:	02c89f27          	0x2c89f27
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     678:	0000                	unimp
     67a:	02e8                	addi	a0,sp,332
     67c:	0000                	unimp
     67e:	0045                	c.nop	17
     680:	007f                	0x7f
     682:	2538                	fld	fa4,72(a0)
     684:	ff08                	fsw	fa0,56(a4)
     686:	321a                	fld	ft4,416(sp)
     688:	0324                	addi	s1,sp,392
     68a:	15ac                	addi	a1,sp,744
     68c:	0000                	unimp
     68e:	0622                	slli	a2,a2,0x8
     690:	1448                	addi	a0,sp,548
     692:	1f14                	addi	a3,sp,944
     694:	17242023          	sw	s2,352(s0)
     698:	2125                	jal	ac0 <_nettle_aes_decrypt+0x200>
     69a:	007f                	0x7f
     69c:	2540                	fld	fs0,136(a0)
     69e:	ff08                	fsw	fa0,56(a4)
     6a0:	321a                	fld	ft4,416(sp)
     6a2:	0324                	addi	s1,sp,392
     6a4:	15ac                	addi	a1,sp,744
     6a6:	0000                	unimp
    LE_WRITE_UINT32 (dst, t0);
     6a8:	0622                	slli	a2,a2,0x8
     6aa:	1440                	addi	s0,sp,548
    LE_WRITE_UINT32 (dst + 4, t1);
     6ac:	1f14                	addi	a3,sp,944
     6ae:	17242023          	sw	s2,352(s0)
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     6b2:	2125                	jal	ada <_nettle_aes_decrypt+0x21a>
     6b4:	08007f27          	0x8007f27
     6b8:	1aff                	0x1aff
     6ba:	2432                	fld	fs0,264(sp)
    LE_WRITE_UINT32 (dst + 8, t2);
     6bc:	0015ac03          	lw	s8,1(a1)
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     6c0:	2200                	fld	fs0,0(a2)
     6c2:	2706                	fld	fa4,64(sp)
    LE_WRITE_UINT32 (dst, t0);
     6c4:	e89f 0002 0000      	0x2e89f
     6ca:	48000003          	lb	zero,1152(zero) # 480 <_nettle_aes_encrypt+0x68>
     6ce:	7b00                	flw	fs0,48(a4)
     6d0:	067c                	addi	a5,sp,780
     6d2:	2538                	fld	fa4,72(a0)
     6d4:	ff08                	fsw	fa0,56(a4)
     6d6:	321a                	fld	ft4,416(sp)
     6d8:	0324                	addi	s1,sp,392
     6da:	15ac                	addi	a1,sp,744
    LE_WRITE_UINT32 (dst + 4, t1);
     6dc:	0000                	unimp
     6de:	0622                	slli	a2,a2,0x8
     6e0:	1448                	addi	a0,sp,548
     6e2:	1f14                	addi	a3,sp,944
     6e4:	17242023          	sw	s2,352(s0)
     6e8:	2125                	jal	b10 <_nettle_aes_decrypt+0x250>
     6ea:	40067c7b          	0x40067c7b
     6ee:	0825                	addi	a6,a6,9
     6f0:	1aff                	0x1aff
     6f2:	2432                	fld	fs0,264(sp)
    LE_WRITE_UINT32 (dst + 8, t2);
     6f4:	0015ac03          	lw	s8,1(a1)
     6f8:	2200                	fld	fs0,0(a2)
     6fa:	4006                	0x4006
     6fc:	1414                	addi	a3,sp,544
     6fe:	231f 2420 2517      	0x25172420231f
     704:	2721                	jal	e0c <benchmark_body+0x34>
     706:	08067c7b          	0x8067c7b
     70a:	1aff                	0x1aff
    LE_WRITE_UINT32 (dst + 12, t3);
     70c:	2432                	fld	fs0,264(sp)
     70e:	0015ac03          	lw	s8,1(a1)
     712:	2200                	fld	fs0,0(a2)
     714:	2706                	fld	fa4,64(sp)
     716:	009f 0000 0000      	0x9f
     71c:	0000                	unimp
     71e:	9c00                	0x9c00
     720:	0002                	c.slli64	zero
     722:	e800                	fsw	fs0,16(s0)
     724:	0002                	c.slli64	zero
     726:	0c00                	addi	s0,sp,528
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     728:	7f00                	flw	fs0,56(a4)
     72a:	4800                	lw	s0,16(s0)
     72c:	3225                	jal	54 <__DYNAMIC+0x54>
     72e:	0324                	addi	s1,sp,392
}
     730:	15ac                	addi	a1,sp,744
     732:	0000                	unimp
     734:	e822                	fsw	fs0,16(sp)
     736:	0002                	c.slli64	zero
     738:	1800                	addi	s0,sp,48
     73a:	0d000003          	lb	zero,208(zero) # d0 <_aes_set_key+0x44>
     73e:	7b00                	flw	fs0,48(a4)
     740:	067c                	addi	a5,sp,780
     742:	2548                	fld	fa0,136(a0)
     744:	2432                	fld	fs0,264(sp)
     746:	0015ac03          	lw	s8,1(a1)
     74a:	2200                	fld	fs0,0(a2)
	...
     754:	0180                	addi	s0,sp,192
     756:	0000                	unimp
     758:	0194                	addi	a3,sp,192
     75a:	0000                	unimp
     75c:	0001                	nop
     75e:	945a                	add	s0,s0,s6
     760:	0001                	nop
     762:	9c00                	0x9c00
     764:	0001                	nop
     766:	0400                	addi	s0,sp,512
     768:	f300                	fsw	fs0,32(a4)
     76a:	5a01                	li	s4,-32
	t0 = AES_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     76c:	9c9f 0001 c400      	0xc40000019c9f
     772:	0001                	nop
     774:	0100                	addi	s0,sp,128
     776:	5a00                	lw	s0,48(a2)
     778:	01c4                	addi	s1,sp,196
     77a:	0000                	unimp
     77c:	000001c7          	fmsub.s	ft3,ft0,ft0,ft0,rne
     780:	7c7c0003          	lb	zero,1991(s8) # 3a457 <_stack_start+0x2a457>
     784:	c79f 0001 c800      	0xc8000001c79f
     78a:	0001                	nop
     78c:	0400                	addi	s0,sp,512
     78e:	f300                	fsw	fs0,32(a4)
     790:	5a01                	li	s4,-32
     792:	c89f 0001 e000      	0xe0000001c89f
     798:	0001                	nop
     79a:	0100                	addi	s0,sp,128
     79c:	5a00                	lw	s0,48(a2)
	...
     7a6:	0180                	addi	s0,sp,192
     7a8:	0000                	unimp
     7aa:	0000019b          	0x19b
     7ae:	0001                	nop
     7b0:	00019b5b          	0x19b5b
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     7b4:	9c00                	0x9c00
     7b6:	0001                	nop
     7b8:	0400                	addi	s0,sp,512
     7ba:	f300                	fsw	fs0,32(a4)
	t0 = AES_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     7bc:	5b01                	li	s6,-32
     7be:	9c9f 0001 b800      	0xb80000019c9f
     7c4:	0001                	nop
     7c6:	0100                	addi	s0,sp,128
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     7c8:	5b00                	lw	s0,48(a4)
     7ca:	01b8                	addi	a4,sp,200
     7cc:	0000                	unimp
     7ce:	000001c7          	fmsub.s	ft3,ft0,ft0,ft0,rne
     7d2:	107e0003          	lb	zero,263(t3) # 6107 <_bss_end+0x1b0f>
     7d6:	c79f 0001 c800      	0xc8000001c79f
     7dc:	0001                	nop
     7de:	0400                	addi	s0,sp,512
     7e0:	f300                	fsw	fs0,32(a4)
     7e2:	5b01                	li	s6,-32
     7e4:	c89f 0001 d000      	0xd0000001c89f
     7ea:	0001                	nop
     7ec:	0100                	addi	s0,sp,128
     7ee:	5b00                	lw	s0,48(a4)
     7f0:	01d0                	addi	a2,sp,196
     7f2:	0000                	unimp
     7f4:	01d4                	addi	a3,sp,196
     7f6:	0000                	unimp
     7f8:	107e0003          	lb	zero,263(t3)
     7fc:	d49f 0001 dc00      	0xdc000001d49f
     802:	0001                	nop
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     804:	0100                	addi	s0,sp,128
     806:	5b00                	lw	s0,48(a4)
     808:	01dc                	addi	a5,sp,196
     80a:	0000                	unimp
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     80c:	01e0                	addi	s0,sp,204
     80e:	0000                	unimp
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     810:	107e0003          	lb	zero,263(t3)
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     814:	009f 0000 0000      	0x9f
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     81a:	0000                	unimp
     81c:	8000                	0x8000
     81e:	0001                	nop
     820:	9b00                	0x9b00
     822:	0001                	nop
     824:	0100                	addi	s0,sp,128
     826:	5c00                	lw	s0,56(s0)
     828:	0000019b          	0x19b
     82c:	019c                	addi	a5,sp,192
     82e:	0000                	unimp
     830:	0004                	0x4
     832:	9f5c01f3          	0x9f5c01f3
     836:	019c                	addi	a5,sp,192
     838:	0000                	unimp
     83a:	01c0                	addi	s0,sp,196
     83c:	0000                	unimp
     83e:	0001                	nop
     840:	c05c                	sw	a5,4(s0)
     842:	0001                	nop
     844:	c700                	sw	s0,8(a4)
     846:	0001                	nop
     848:	0100                	addi	s0,sp,128
     84a:	5d00                	lw	s0,56(a0)
     84c:	000001c7          	fmsub.s	ft3,ft0,ft0,ft0,rne
     850:	01c8                	addi	a0,sp,196
     852:	0000                	unimp
	t3 = AES_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     854:	0004                	0x4
     856:	9f5c01f3          	0x9f5c01f3
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     85a:	01c8                	addi	a0,sp,196
     85c:	0000                	unimp
     85e:	01e0                	addi	s0,sp,204
	t3 = AES_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     860:	0000                	unimp
     862:	0001                	nop
     864:	005c                	addi	a5,sp,4
     866:	0000                	unimp
     868:	0000                	unimp
     86a:	0000                	unimp
     86c:	b800                	fsd	fs0,48(s0)
     86e:	0001                	nop
     870:	c700                	sw	s0,8(a4)
     872:	0001                	nop
     874:	0100                	addi	s0,sp,128
     876:	5b00                	lw	s0,48(a4)
	...
     880:	01b8                	addi	a4,sp,200
     882:	0000                	unimp
     884:	000001c7          	fmsub.s	ft3,ft0,ft0,ft0,rne
     888:	0001                	nop
     88a:	005f 0000 0000      	0x5f
     890:	0000                	unimp
     892:	0000                	unimp
     894:	0000                	unimp
     896:	0c00                	addi	s0,sp,528
     898:	0000                	unimp
     89a:	0100                	addi	s0,sp,128
     89c:	5a00                	lw	s0,48(a2)
     89e:	000c                	0xc
     8a0:	0000                	unimp
     8a2:	0014                	0x14
     8a4:	0000                	unimp
     8a6:	0004                	0x4
     8a8:	9f5a01f3          	0x9f5a01f3
     8ac:	0014                	0x14
     8ae:	0000                	unimp
    for (i = 1; i < rounds; i++)
     8b0:	0018                	0x18
     8b2:	0000                	unimp
	t3 = AES_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     8b4:	0001                	nop
     8b6:	185a                	slli	a6,a6,0x36
     8b8:	0000                	unimp
     8ba:	1c00                	addi	s0,sp,560
     8bc:	0000                	unimp
     8be:	0300                	addi	s0,sp,384
{
     8c0:	7a00                	flw	fs0,48(a2)
     8c2:	9f7f                	0x9f7f
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     8c4:	001c                	0x1c
     8c6:	0000                	unimp
     8c8:	0180                	addi	s0,sp,192
     8ca:	0000                	unimp
{
     8cc:	0004                	0x4
     8ce:	9f5a01f3          	0x9f5a01f3
	...
     8de:	00000013          	nop
     8e2:	0001                	nop
     8e4:	0000135b          	0x135b
     8e8:	1400                	addi	s0,sp,544
     8ea:	0000                	unimp
     8ec:	0400                	addi	s0,sp,512
     8ee:	f300                	fsw	fs0,32(a4)
     8f0:	5b01                	li	s6,-32
     8f2:	149f 0000 8000      	0x80000000149f
     8f8:	0001                	nop
     8fa:	0100                	addi	s0,sp,128
     8fc:	5b00                	lw	s0,48(a4)
	...
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     90a:	00000013          	nop
     90e:	0001                	nop
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     910:	135c                	addi	a5,sp,420
     912:	0000                	unimp
     914:	1400                	addi	s0,sp,544
     916:	0000                	unimp
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     918:	0400                	addi	s0,sp,512
     91a:	f300                	fsw	fs0,32(a4)
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     91c:	5c01                	li	s8,-32
     91e:	149f 0000 7000      	0x70000000149f
     924:	0000                	unimp
     926:	0100                	addi	s0,sp,128
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     928:	5c00                	lw	s0,56(s0)
     92a:	0070                	addi	a2,sp,12
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     92c:	0000                	unimp
     92e:	0180                	addi	s0,sp,192
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     930:	0000                	unimp
     932:	0004                	0x4
     934:	9f5c01f3          	0x9f5c01f3
	...
     944:	00000013          	nop
     948:	0001                	nop
     94a:	135d                	addi	t1,t1,-9
     94c:	0000                	unimp
     94e:	1400                	addi	s0,sp,544
     950:	0000                	unimp
     952:	0400                	addi	s0,sp,512
    for (i = 1; i < rounds; i++)
     954:	f300                	fsw	fs0,32(a4)
     956:	5d01                	li	s10,-32
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     958:	149f 0000 2000      	0x20000000149f
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     95e:	0000                	unimp
     960:	0100                	addi	s0,sp,128
     962:	5d00                	lw	s0,56(a0)
     964:	0020                	addi	s0,sp,8
     966:	0000                	unimp
     968:	0180                	addi	s0,sp,192
     96a:	0000                	unimp
     96c:	0004                	0x4
     96e:	9f5d01f3          	0x9f5d01f3
	...
     97a:	001c                	0x1c
     97c:	0000                	unimp
     97e:	008c                	addi	a1,sp,64
     980:	0000                	unimp
     982:	0006                	c.slli	zero,0x1
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     984:	0015a003          	lw	zero,1(a1)
     988:	9f00                	0x9f00
     98a:	008c                	addi	a1,sp,64
     98c:	0000                	unimp
     98e:	00a0                	addi	s0,sp,72
     990:	0000                	unimp
     992:	0001                	nop
     994:	a056                	fsd	fs5,0(sp)
     996:	0000                	unimp
     998:	cc00                	sw	s0,24(s0)
     99a:	0000                	unimp
     99c:	0300                	addi	s0,sp,384
     99e:	7600                	flw	fs0,40(a2)
     9a0:	9f01                	0x9f01
     9a2:	00cc                	addi	a1,sp,68
     9a4:	0000                	unimp
     9a6:	0180                	addi	s0,sp,192
     9a8:	0000                	unimp
     9aa:	0001                	nop
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     9ac:	0056                	c.slli	zero,0x15
     9ae:	0000                	unimp
     9b0:	0000                	unimp
     9b2:	0000                	unimp
     9b4:	1c00                	addi	s0,sp,560
     9b6:	0000                	unimp
     9b8:	2000                	fld	fs0,0(s0)
     9ba:	0000                	unimp
     9bc:	0200                	addi	s0,sp,256
     9be:	3000                	fld	fs0,32(s0)
     9c0:	209f 0000 8c00      	0x8c000000209f
     9c6:	0000                	unimp
     9c8:	0100                	addi	s0,sp,128
     9ca:	5e00                	lw	s0,56(a2)
     9cc:	008c                	addi	a1,sp,64
     9ce:	0000                	unimp
     9d0:	0180                	addi	s0,sp,192
     9d2:	0000                	unimp
     9d4:	0001                	nop
     9d6:	0061                	c.nop	24
    for (i = 1; i < rounds; i++)
     9d8:	0000                	unimp
     9da:	0000                	unimp
     9dc:	0000                	unimp
     9de:	9c00                	0x9c00
     9e0:	0000                	unimp
     9e2:	a800                	fsd	fs0,16(s0)
     9e4:	0000                	unimp
     9e6:	0100                	addi	s0,sp,128
     9e8:	5f00                	lw	s0,56(a4)
     9ea:	00a8                	addi	a0,sp,72
     9ec:	0000                	unimp
     9ee:	0108                	addi	a0,sp,128
     9f0:	0000                	unimp
     9f2:	0002                	c.slli64	zero
     9f4:	7c7c                	flw	fa5,124(s0)
     9f6:	0108                	addi	a0,sp,128
     9f8:	0000                	unimp
     9fa:	011c                	addi	a5,sp,128
     9fc:	0000                	unimp
     9fe:	0001                	nop
     a00:	245f 0001 7000      	0x70000001245f
     a06:	0001                	nop
     a08:	0100                	addi	s0,sp,128
     a0a:	5f00                	lw	s0,56(a4)
     a0c:	0170                	addi	a2,sp,140
     a0e:	0000                	unimp
     a10:	017c                	addi	a5,sp,140
     a12:	0000                	unimp
     a14:	0002                	c.slli64	zero
     a16:	7c7c                	flw	fa5,124(s0)
     a18:	017c                	addi	a5,sp,140
     a1a:	0000                	unimp
     a1c:	0180                	addi	s0,sp,192
     a1e:	0000                	unimp
     a20:	0001                	nop
     a22:	005f 0000 0000      	0x5f
     a28:	0000                	unimp
     a2a:	8c00                	0x8c00
     a2c:	d8000003          	lb	zero,-640(zero) # fffffd80 <_stack_start+0xfffefd80>
     a30:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
     a34:	5a00                	lw	s0,48(a2)
     a36:	03d8                	addi	a4,sp,452
     a38:	0000                	unimp
     a3a:	03dc                	addi	a5,sp,452
     a3c:	0000                	unimp
     a3e:	0004                	0x4
     a40:	9f5a01f3          	0x9f5a01f3
     a44:	03dc                	addi	a5,sp,452
     a46:	0000                	unimp
     a48:	0834                	addi	a3,sp,24
     a4a:	0000                	unimp
     a4c:	0001                	nop
     a4e:	005a                	c.slli	zero,0x16
     a50:	0000                	unimp
     a52:	0000                	unimp
     a54:	0000                	unimp
     a56:	8c00                	0x8c00
     a58:	db000003          	lb	zero,-592(zero) # fffffdb0 <_stack_start+0xfffefdb0>
    t0 = AES_FINAL_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     a5c:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
     a60:	5b00                	lw	s0,48(a4)
     a62:	000003db          	0x3db
     a66:	03dc                	addi	a5,sp,452
     a68:	0000                	unimp
     a6a:	0004                	0x4
     a6c:	9f5b01f3          	0x9f5b01f3
     a70:	03dc                	addi	a5,sp,452
     a72:	0000                	unimp
     a74:	0834                	addi	a3,sp,24
     a76:	0000                	unimp
     a78:	0001                	nop
     a7a:	0000005b          	0x5b
     a7e:	0000                	unimp
     a80:	0000                	unimp
     a82:	8c00                	0x8c00
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     a84:	db000003          	lb	zero,-592(zero) # fffffdb0 <_stack_start+0xfffefdb0>
    t0 = AES_FINAL_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     a88:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
     a8c:	5c00                	lw	s0,56(s0)
     a8e:	000003db          	0x3db
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     a92:	03dc                	addi	a5,sp,452
     a94:	0000                	unimp
     a96:	0004                	0x4
    t0 = AES_FINAL_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     a98:	9f5c01f3          	0x9f5c01f3
     a9c:	03dc                	addi	a5,sp,452
     a9e:	0000                	unimp
     aa0:	0834                	addi	a3,sp,24
     aa2:	0000                	unimp
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     aa4:	0001                	nop
     aa6:	005c                	addi	a5,sp,4
     aa8:	0000                	unimp
     aaa:	0000                	unimp
     aac:	0000                	unimp
     aae:	8c00                	0x8c00
     ab0:	98000003          	lb	zero,-1664(zero) # fffff980 <_stack_start+0xfffef980>
     ab4:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
     ab8:	5d00                	lw	s0,56(a0)
     aba:	0398                	addi	a4,sp,448
     abc:	0000                	unimp
     abe:	0834                	addi	a3,sp,24
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     ac0:	0000                	unimp
     ac2:	0004                	0x4
     ac4:	9f5d01f3          	0x9f5d01f3
	...
     ad0:	038c                	addi	a1,sp,448
     ad2:	0000                	unimp
     ad4:	000003db          	0x3db
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     ad8:	0001                	nop
     ada:	db5e                	sw	s7,180(sp)
     adc:	34000003          	lb	zero,832(zero) # 340 <_nettle_aes_invert+0xd4>
     ae0:	0008                	0x8
     ae2:	0400                	addi	s0,sp,512
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     ae4:	f300                	fsw	fs0,32(a4)
     ae6:	5e01                	li	t3,-32
     ae8:	009f 0000 0000      	0x9f
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     aee:	0000                	unimp
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     af0:	8c00                	0x8c00
     af2:	db000003          	lb	zero,-592(zero) # fffffdb0 <_stack_start+0xfffefdb0>
     af6:	01000003          	lb	zero,16(zero) # 10 <__DYNAMIC+0x10>
     afa:	5f00                	lw	s0,56(a4)
     afc:	000003db          	0x3db
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b00:	0834                	addi	a3,sp,24
     b02:	0000                	unimp
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     b04:	0004                	0x4
     b06:	9f5f01f3          	0x9f5f01f3
	...
     b12:	03dc                	addi	a5,sp,452
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     b14:	0000                	unimp
     b16:	05e0                	addi	s0,sp,716
     b18:	0000                	unimp
     b1a:	0001                	nop
     b1c:	e05f 0005 9c00      	0x9c000005e05f
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b22:	0006                	c.slli	zero,0x1
     b24:	0300                	addi	s0,sp,384
     b26:	7f00                	flw	fs0,56(a4)
     b28:	9f70                	0x9f70
     b2a:	069c                	addi	a5,sp,832
     b2c:	0000                	unimp
     b2e:	0834                	addi	a3,sp,24
     b30:	0000                	unimp
     b32:	0001                	nop
     b34:	005f 0000 0000      	0x5f
     b3a:	0000                	unimp
     b3c:	dc00                	sw	s0,56(s0)
     b3e:	d4000003          	lb	zero,-704(zero) # fffffd40 <_stack_start+0xfffefd40>
     b42:	0005                	c.nop	1
     b44:	0100                	addi	s0,sp,128
     b46:	5e00                	lw	s0,56(a2)
     b48:	05d4                	addi	a3,sp,708
     b4a:	0000                	unimp
     b4c:	069c                	addi	a5,sp,832
     b4e:	0000                	unimp
    LE_WRITE_UINT32 (dst, t0);
     b50:	707e0003          	lb	zero,1799(t3)
    LE_WRITE_UINT32 (dst + 4, t1);
     b54:	9c9f 0006 3400      	0x340000069c9f
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b5a:	0008                	0x8
     b5c:	0100                	addi	s0,sp,128
     b5e:	5e00                	lw	s0,56(a2)
	...
     b68:	03dc                	addi	a5,sp,452
     b6a:	0000                	unimp
    LE_WRITE_UINT32 (dst, t0);
     b6c:	05d4                	addi	a3,sp,708
     b6e:	0000                	unimp
     b70:	01f3000b          	0x1f3000b
     b74:	7e5e                	flw	ft8,244(sp)
     b76:	1c00                	addi	s0,sp,560
     b78:	225d01f3          	0x225d01f3
     b7c:	d49f 0005 9c00      	0x9c000005d49f
     b82:	0006                	c.slli	zero,0x1
    LE_WRITE_UINT32 (dst + 4, t1);
     b84:	0d00                	addi	s0,sp,656
     b86:	f300                	fsw	fs0,32(a4)
     b88:	5e01                	li	t3,-32
     b8a:	007e                	c.slli	zero,0x1f
     b8c:	f31c                	fsw	fa5,32(a4)
     b8e:	5d01                	li	s10,-32
     b90:	2322                	fld	ft6,8(sp)
     b92:	9f10                	0x9f10
     b94:	069c                	addi	a5,sp,832
     b96:	0000                	unimp
     b98:	0834                	addi	a3,sp,24
     b9a:	0000                	unimp
    LE_WRITE_UINT32 (dst + 8, t2);
     b9c:	01f3000b          	0x1f3000b
     ba0:	7e5e                	flw	ft8,244(sp)
     ba2:	1c00                	addi	s0,sp,560
     ba4:	225d01f3          	0x225d01f3
     ba8:	009f 0000 0000      	0x9f
     bae:	0000                	unimp
     bb0:	2800                	fld	fs0,16(s0)
     bb2:	0004                	0x4
    LE_WRITE_UINT32 (dst + 12, t3);
     bb4:	0400                	addi	s0,sp,512
     bb6:	0005                	c.nop	1
     bb8:	0100                	addi	s0,sp,128
     bba:	6000                	flw	fs0,0(s0)
     bbc:	06e0                	addi	s0,sp,844
     bbe:	0000                	unimp
     bc0:	06e4                	addi	s1,sp,844
     bc2:	0000                	unimp
     bc4:	c086002b          	0xc086002b
     bc8:	3200                	fld	fs0,32(a2)
     bca:	7c24                	flw	fs1,120(s0)
     bcc:	2200                	fld	fs0,0(a2)
     bce:	8b06                	mv	s6,ra
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     bd0:	2700                	fld	fs0,8(a4)
     bd2:	c085                	beqz	s1,bf2 <_nettle_aes_decrypt+0x332>
     bd4:	3206                	fld	ft4,96(sp)
     bd6:	7c24                	flw	fs1,120(s0)
}
     bd8:	2200                	fld	fs0,0(a2)
     bda:	2706                	fld	fa4,64(sp)
     bdc:	c075                	beqz	s0,cc0 <_nettle_aes_decrypt+0x400>
     bde:	3202                	fld	ft4,32(sp)
     be0:	7c24                	flw	fs1,120(s0)
     be2:	2200                	fld	fs0,0(a2)
     be4:	2706                	fld	fa4,64(sp)
     be6:	3204c08f          	0x3204c08f
     bea:	7c24                	flw	fs1,120(s0)
     bec:	2200                	fld	fs0,0(a2)
     bee:	2706                	fld	fa4,64(sp)
     bf0:	e49f 0006 e800      	0xe8000006e49f
     bf6:	0006                	c.slli	zero,0x1
     bf8:	2a00                	fld	fs0,16(a2)
     bfa:	8600                	0x8600
     bfc:	3200                	fld	fs0,32(a2)
     bfe:	7c24                	flw	fs1,120(s0)
     c00:	2200                	fld	fs0,0(a2)
     c02:	8b06                	mv	s6,ra
     c04:	2700                	fld	fs0,8(a4)
     c06:	c085                	beqz	s1,c26 <_nettle_aes_decrypt+0x366>
     c08:	3206                	fld	ft4,96(sp)
     c0a:	7c24                	flw	fs1,120(s0)
     c0c:	2200                	fld	fs0,0(a2)
     c0e:	2706                	fld	fa4,64(sp)
     c10:	c075                	beqz	s0,cf4 <_nettle_aes_decrypt+0x434>
     c12:	3202                	fld	ft4,32(sp)
	t0 = AES_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     c14:	7c24                	flw	fs1,120(s0)
     c16:	2200                	fld	fs0,0(a2)
     c18:	2706                	fld	fa4,64(sp)
     c1a:	3204c08f          	0x3204c08f
     c1e:	7c24                	flw	fs1,120(s0)
     c20:	2200                	fld	fs0,0(a2)
     c22:	2706                	fld	fa4,64(sp)
     c24:	ec9f 0006 f400      	0xf4000006ec9f
     c2a:	0006                	c.slli	zero,0x1
     c2c:	2500                	fld	fs0,8(a0)
     c2e:	8600                	0x8600
     c30:	0600                	addi	s0,sp,768
     c32:	8527008b          	0x8527008b
     c36:	06c0                	addi	s0,sp,836
     c38:	2432                	fld	fs0,264(sp)
     c3a:	007c                	addi	a5,sp,12
     c3c:	0622                	slli	a2,a2,0x8
     c3e:	02c07527          	0x2c07527
     c42:	2432                	fld	fs0,264(sp)
     c44:	007c                	addi	a5,sp,12
     c46:	0622                	slli	a2,a2,0x8
     c48:	04c08f27          	0x4c08f27
     c4c:	2432                	fld	fs0,264(sp)
     c4e:	007c                	addi	a5,sp,12
     c50:	0622                	slli	a2,a2,0x8
     c52:	06f49f27          	0x6f49f27
     c56:	0000                	unimp
     c58:	06f8                	addi	a4,sp,844
     c5a:	0000                	unimp
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     c5c:	0024                	addi	s1,sp,8
     c5e:	0086                	slli	ra,ra,0x1
     c60:	8b06                	mv	s6,ra
     c62:	2700                	fld	fs0,8(a4)
	t0 = AES_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     c64:	0085                	addi	ra,ra,1
     c66:	2432                	fld	fs0,264(sp)
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     c68:	007c                	addi	a5,sp,12
     c6a:	0622                	slli	a2,a2,0x8
	t0 = AES_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     c6c:	02c07527          	0x2c07527
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     c70:	2432                	fld	fs0,264(sp)
     c72:	007c                	addi	a5,sp,12
     c74:	0622                	slli	a2,a2,0x8
     c76:	04c08f27          	0x4c08f27
     c7a:	2432                	fld	fs0,264(sp)
     c7c:	007c                	addi	a5,sp,12
     c7e:	0622                	slli	a2,a2,0x8
     c80:	06fc9f27          	0x6fc9f27
     c84:	0000                	unimp
     c86:	0704                	addi	s1,sp,896
     c88:	0000                	unimp
     c8a:	001f 0086 8b06      	0x8b060086001f
     c90:	2700                	fld	fs0,8(a4)
     c92:	0085                	addi	ra,ra,1
     c94:	2706                	fld	fa4,64(sp)
     c96:	c075                	beqz	s0,d7a <aes_encrypt+0x12>
     c98:	3202                	fld	ft4,32(sp)
     c9a:	7c24                	flw	fs1,120(s0)
     c9c:	2200                	fld	fs0,0(a2)
     c9e:	2706                	fld	fa4,64(sp)
     ca0:	3204c08f          	0x3204c08f
     ca4:	7c24                	flw	fs1,120(s0)
     ca6:	2200                	fld	fs0,0(a2)
     ca8:	2706                	fld	fa4,64(sp)
     caa:	049f 0007 0800      	0x8000007049f
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     cb0:	1e000007          	0x1e000007
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     cb4:	8600                	0x8600
     cb6:	0600                	addi	s0,sp,768
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     cb8:	8527008b          	0x8527008b
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     cbc:	0600                	addi	s0,sp,768
     cbe:	32007527          	0x32007527
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     cc2:	7c24                	flw	fs1,120(s0)
     cc4:	2200                	fld	fs0,0(a2)
     cc6:	2706                	fld	fa4,64(sp)
     cc8:	3204c08f          	0x3204c08f
     ccc:	7c24                	flw	fs1,120(s0)
     cce:	2200                	fld	fs0,0(a2)
     cd0:	2706                	fld	fa4,64(sp)
     cd2:	089f 0007 0c00      	0xc000007089f
     cd8:	1f000007          	0x1f000007
     cdc:	8600                	0x8600
     cde:	0600                	addi	s0,sp,768
     ce0:	27067087          	0x27067087
     ce4:	0085                	addi	ra,ra,1
     ce6:	2706                	fld	fa4,64(sp)
     ce8:	0075                	c.nop	29
     cea:	2432                	fld	fs0,264(sp)
     cec:	007c                	addi	a5,sp,12
     cee:	0622                	slli	a2,a2,0x8
     cf0:	04c08f27          	0x4c08f27
     cf4:	2432                	fld	fs0,264(sp)
     cf6:	007c                	addi	a5,sp,12
     cf8:	0622                	slli	a2,a2,0x8
     cfa:	070c9f27          	0x70c9f27
	t3 = AES_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     cfe:	0000                	unimp
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     d00:	0710                	addi	a2,sp,896
     d02:	0000                	unimp
     d04:	001d                	c.nop	7
     d06:	0086                	slli	ra,ra,0x1
	t3 = AES_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     d08:	8706                	mv	a4,ra
     d0a:	0670                	addi	a2,sp,780
     d0c:	06008527          	0x6008527
     d10:	7c007527          	0x7c007527
     d14:	2200                	fld	fs0,0(a2)
     d16:	2706                	fld	fa4,64(sp)
     d18:	3204c08f          	0x3204c08f
     d1c:	7c24                	flw	fs1,120(s0)
     d1e:	2200                	fld	fs0,0(a2)
     d20:	2706                	fld	fa4,64(sp)
     d22:	109f 0007 1400      	0x14000007109f
     d28:	1c000007          	0x1c000007
     d2c:	8600                	0x8600
     d2e:	0600                	addi	s0,sp,768
     d30:	27067087          	0x27067087
     d34:	0085                	addi	ra,ra,1
     d36:	2706                	fld	fa4,64(sp)
     d38:	0075                	c.nop	29
     d3a:	007c                	addi	a5,sp,12
     d3c:	0622                	slli	a2,a2,0x8
     d3e:	32008f27          	0x32008f27
     d42:	7c24                	flw	fs1,120(s0)
     d44:	2200                	fld	fs0,0(a2)
     d46:	2706                	fld	fa4,64(sp)
     d48:	009f 0000 0000      	0x9f
     d4e:	0000                	unimp
     d50:	5000                	lw	s0,32(s0)
     d52:	0004                	0x4
     d54:	c400                	sw	s0,8(s0)
     d56:	0004                	0x4
    for (i = 1; i < rounds; i++)
     d58:	0100                	addi	s0,sp,128
     d5a:	5d00                	lw	s0,56(a0)
	t3 = AES_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     d5c:	06e0                	addi	s0,sp,844
     d5e:	0000                	unimp
     d60:	072c                	addi	a1,sp,904
     d62:	0000                	unimp
     d64:	c084002b          	0xc084002b
{
     d68:	3200                	fld	fs0,32(a2)
     d6a:	7c24                	flw	fs1,120(s0)
  assert_beebs (!(length % AES_BLOCK_SIZE));
     d6c:	2200                	fld	fs0,0(a2)
     d6e:	8a06                	mv	s4,ra
     d70:	2700                	fld	fs0,8(a4)
     d72:	3206c083          	lbu	ra,800(a3) # 23e8f9ea <_stack_start+0x23e7f9ea>
{
     d76:	7c24                	flw	fs1,120(s0)
  assert_beebs (!(length % AES_BLOCK_SIZE));
     d78:	2200                	fld	fs0,0(a2)
     d7a:	2706                	fld	fa4,64(sp)
{
     d7c:	c08e                	sw	gp,64(sp)
     d7e:	3202                	fld	ft4,32(sp)
  assert_beebs (!(length % AES_BLOCK_SIZE));
     d80:	7c24                	flw	fs1,120(s0)
     d82:	2200                	fld	fs0,0(a2)
  _nettle_aes_encrypt (ctx->rounds, ctx->keys, &_aes_encrypt_table,
     d84:	2706                	fld	fa4,64(sp)
     d86:	c08d                	beqz	s1,da8 <aes_decrypt+0x8>
     d88:	3204                	fld	fs1,32(a2)
     d8a:	7c24                	flw	fs1,120(s0)
     d8c:	2200                	fld	fs0,0(a2)
     d8e:	2706                	fld	fa4,64(sp)
     d90:	2c9f 0007 3000      	0x300000072c9f
     d96:	2a000007          	0x2a000007
     d9a:	8400                	0x8400
     d9c:	3200                	fld	fs0,32(a2)
     d9e:	7c24                	flw	fs1,120(s0)
{
     da0:	2200                	fld	fs0,0(a2)
     da2:	8a06                	mv	s4,ra
  assert_beebs (!(length % AES_BLOCK_SIZE));
     da4:	2700                	fld	fs0,8(a4)
     da6:	3206c083          	lbu	ra,800(a3)
     daa:	7c24                	flw	fs1,120(s0)
{
     dac:	2200                	fld	fs0,0(a2)
     dae:	2706                	fld	fa4,64(sp)
  assert_beebs (!(length % AES_BLOCK_SIZE));
     db0:	c08e                	sw	gp,64(sp)
     db2:	3202                	fld	ft4,32(sp)
{
     db4:	7c24                	flw	fs1,120(s0)
     db6:	2200                	fld	fs0,0(a2)
  assert_beebs (!(length % AES_BLOCK_SIZE));
     db8:	2706                	fld	fa4,64(sp)
     dba:	c08d                	beqz	s1,ddc <benchmark_body+0x4>
  _nettle_aes_decrypt (ctx->rounds, ctx->keys, &_aes_decrypt_table,
     dbc:	3204                	fld	fs1,32(a2)
     dbe:	7c24                	flw	fs1,120(s0)
     dc0:	2200                	fld	fs0,0(a2)
     dc2:	2706                	fld	fa4,64(sp)
     dc4:	389f 0007 4000      	0x40000007389f
     dca:	25000007          	0x25000007
     dce:	8400                	0x8400
     dd0:	0600                	addi	s0,sp,768
     dd2:	008a                	slli	ra,ra,0x2
     dd4:	06c08327          	0x6c08327
{
     dd8:	2432                	fld	fs0,264(sp)
     dda:	007c                	addi	a5,sp,12
     ddc:	0622                	slli	a2,a2,0x8
     dde:	02c08e27          	0x2c08e27
     de2:	2432                	fld	fs0,264(sp)
     de4:	007c                	addi	a5,sp,12
     de6:	0622                	slli	a2,a2,0x8
     de8:	04c08d27          	0x4c08d27
     dec:	2432                	fld	fs0,264(sp)
     dee:	007c                	addi	a5,sp,12
     df0:	0622                	slli	a2,a2,0x8
     df2:	07409f27          	0x7409f27
     df6:	0000                	unimp
     df8:	0748                	addi	a0,sp,900
     dfa:	0000                	unimp
     dfc:	0024                	addi	s1,sp,8
     dfe:	0084                	addi	s1,sp,64
     e00:	8a06                	mv	s4,ra
     e02:	2700                	fld	fs0,8(a4)
  for (i = 0; i < rpt; i++)
     e04:	24320083          	lb	ra,579(tp) # ce55 <_bss_end+0x885d>
      aes_set_encrypt_key (&encctx, 32, key);
     e08:	007c                	addi	a5,sp,12
     e0a:	0622                	slli	a2,a2,0x8
     e0c:	02c08e27          	0x2c08e27
     e10:	2432                	fld	fs0,264(sp)
     e12:	007c                	addi	a5,sp,12
     e14:	0622                	slli	a2,a2,0x8
     e16:	04c08d27          	0x4c08d27
      aes_encrypt (&encctx, LEN, encrypted, plaintext);
     e1a:	2432                	fld	fs0,264(sp)
     e1c:	007c                	addi	a5,sp,12
     e1e:	0622                	slli	a2,a2,0x8
     e20:	074c9f27          	0x74c9f27
     e24:	0000                	unimp
     e26:	0754                	addi	a3,sp,900
      aes_set_decrypt_key (&decctx, 32, key);
     e28:	0000                	unimp
     e2a:	001f 0084 8a06      	0x8a060084001f
      aes_decrypt (&decctx, LEN, decrypted, encrypted);
     e30:	2700                	fld	fs0,8(a4)
     e32:	27060083          	lb	ra,624(a2)
     e36:	c08e                	sw	gp,64(sp)
  for (i = 0; i < rpt; i++)
     e38:	3202                	fld	ft4,32(sp)
     e3a:	7c24                	flw	fs1,120(s0)
}
     e3c:	2200                	fld	fs0,0(a2)
     e3e:	2706                	fld	fa4,64(sp)
     e40:	c08d                	beqz	s1,e62 <benchmark_body+0x8a>
     e42:	3204                	fld	fs1,32(a2)
     e44:	7c24                	flw	fs1,120(s0)
     e46:	2200                	fld	fs0,0(a2)
     e48:	2706                	fld	fa4,64(sp)
     e4a:	549f 0007 5800      	0x58000007549f
     e50:	26000007          	0x26000007
     e54:	8400                	0x8400
     e56:	0600                	addi	s0,sp,768
     e58:	008a                	slli	ra,ra,0x2
     e5a:	06008327          	0x6008327
     e5e:	38008127          	0x38008127
     e62:	0825                	addi	a6,a6,9
     e64:	1aff                	0x1aff
     e66:	3202c023          	0x3202c023
     e6a:	7c24                	flw	fs1,120(s0)
      aes_set_encrypt_key (&encctx, 32, key);
     e6c:	2200                	fld	fs0,0(a2)
     e6e:	2706                	fld	fa4,64(sp)
     e70:	c08d                	beqz	s1,e92 <benchmark_body+0xba>
     e72:	3204                	fld	fs1,32(a2)
     e74:	7c24                	flw	fs1,120(s0)
     e76:	2200                	fld	fs0,0(a2)
     e78:	2706                	fld	fa4,64(sp)
     e7a:	589f 0007 5c00      	0x5c000007589f
      aes_encrypt (&encctx, LEN, encrypted, plaintext);
     e80:	27000007          	0x27000007
     e84:	8400                	0x8400
     e86:	0600                	addi	s0,sp,768
     e88:	27067487          	0x27067487
     e8c:	27060083          	lb	ra,624(a2)
      aes_set_decrypt_key (&decctx, 32, key);
     e90:	0081                	addi	ra,ra,0
     e92:	2538                	fld	fa4,72(a0)
     e94:	ff08                	fsw	fa0,56(a4)
     e96:	231a                	fld	ft6,384(sp)
     e98:	02c0                	addi	s0,sp,324
     e9a:	2432                	fld	fs0,264(sp)
     e9c:	007c                	addi	a5,sp,12
     e9e:	0622                	slli	a2,a2,0x8
      aes_decrypt (&decctx, LEN, decrypted, encrypted);
     ea0:	04c08d27          	0x4c08d27
     ea4:	2432                	fld	fs0,264(sp)
     ea6:	007c                	addi	a5,sp,12
     ea8:	0622                	slli	a2,a2,0x8
     eaa:	075c9f27          	0x75c9f27
     eae:	0000                	unimp
     eb0:	0760                	addi	s0,sp,908
     eb2:	0000                	unimp
  for (i = 0; i < rpt; i++)
     eb4:	001d                	c.nop	7
     eb6:	0084                	addi	s1,sp,64
     eb8:	8706                	mv	a4,ra
     eba:	0674                	addi	a3,sp,780
  for (unsigned int i = 0; i < LEN; i++)
     ebc:	06008327          	0x6008327
  bool correct = true;
     ec0:	7c008e27          	0x7c008e27
      if (encrypted[i] != expected[i])
     ec4:	2200                	fld	fs0,0(a2)
     ec6:	2706                	fld	fa4,64(sp)
     ec8:	c08d                	beqz	s1,eea <verify_benchmark+0x2e>
     eca:	3204                	fld	fs1,32(a2)
     ecc:	7c24                	flw	fs1,120(s0)
     ece:	2200                	fld	fs0,0(a2)
     ed0:	2706                	fld	fa4,64(sp)
     ed2:	609f 0007 6400      	0x64000007609f
      if (plaintext[i] != decrypted[i])
     ed8:	1c000007          	0x1c000007
     edc:	8400                	0x8400
     ede:	0600                	addi	s0,sp,768
     ee0:	27067487          	0x27067487
  for (unsigned int i = 0; i < LEN; i++)
     ee4:	27060083          	lb	ra,624(a2)
      if (encrypted[i] != expected[i])
     ee8:	008e                	slli	ra,ra,0x3
     eea:	007c                	addi	a5,sp,12
     eec:	0622                	slli	a2,a2,0x8
     eee:	32008d27          	0x32008d27
     ef2:	7c24                	flw	fs1,120(s0)
     ef4:	2200                	fld	fs0,0(a2)
     ef6:	2706                	fld	fa4,64(sp)
     ef8:	649f 0007 6800      	0x68000007649f
	correct = false;
     efe:	26000007          	0x26000007
      if (plaintext[i] != decrypted[i])
     f02:	8400                	0x8400
     f04:	0600                	addi	s0,sp,768
     f06:	27067487          	0x27067487
     f0a:	27060083          	lb	ra,624(a2)
     f0e:	0081                	addi	ra,ra,0
     f10:	2538                	fld	fa4,72(a0)
     f12:	ff08                	fsw	fa0,56(a4)
	correct = false;
     f14:	231a                	fld	ft6,384(sp)
     f16:	02c0                	addi	s0,sp,324
  for (unsigned int i = 0; i < LEN; i++)
     f18:	2432                	fld	fs0,264(sp)
     f1a:	007c                	addi	a5,sp,12
     f1c:	0622                	slli	a2,a2,0x8
     f1e:	32008d27          	0x32008d27
}
     f22:	7c24                	flw	fs1,120(s0)
}
     f24:	2200                	fld	fs0,0(a2)
     f26:	2706                	fld	fa4,64(sp)
  int  res = benchmark_body (heat);
     f28:	009f 0000 0000      	0x9f
  return benchmark_body (LOCAL_SCALE_FACTOR * CPU_MHZ);
     f2e:	0000                	unimp
     f30:	7800                	flw	fs0,48(s0)
     f32:	0004                	0x4
  seed = (seed * 1103515245L + 12345) & ((1UL << 31) - 1);
     f34:	9c00                	0x9c00
     f36:	0006                	c.slli	zero,0x1
     f38:	0100                	addi	s0,sp,128
     f3a:	6100                	flw	fs0,0(a0)
     f3c:	06e0                	addi	s0,sp,844
     f3e:	0000                	unimp
     f40:	077c                	addi	a5,sp,908
     f42:	0000                	unimp
     f44:	c082002b          	0xc082002b
     f48:	3200                	fld	fs0,32(a2)
     f4a:	7c24                	flw	fs1,120(s0)
     f4c:	2200                	fld	fs0,0(a2)
     f4e:	8906                	mv	s2,ra
     f50:	2700                	fld	fs0,8(a4)
     f52:	c079                	beqz	s0,1018 <calloc_beebs+0x4>
     f54:	3206                	fld	ft4,96(sp)
     f56:	7c24                	flw	fs1,120(s0)
     f58:	2200                	fld	fs0,0(a2)
     f5a:	2706                	fld	fa4,64(sp)
     f5c:	c08c                	sw	a1,0(s1)
     f5e:	3202                	fld	ft4,32(sp)
     f60:	7c24                	flw	fs1,120(s0)
     f62:	2200                	fld	fs0,0(a2)
}
     f64:	2706                	fld	fa4,64(sp)
     f66:	c076                	sw	t4,0(sp)
     f68:	3204                	fld	fs1,32(a2)
     f6a:	7c24                	flw	fs1,120(s0)
  seed = (long int) new_seed;
     f6c:	2200                	fld	fs0,0(a2)
     f6e:	2706                	fld	fa4,64(sp)
     f70:	7c9f 0007 8000      	0x800000077c9f
}
     f76:	2a000007          	0x2a000007
  heap_end = (void *) ((char *) heap_ptr + heap_size);
     f7a:	8200                	0x8200
  heap_ptr = (void *) heap;
     f7c:	3200                	fld	fs0,32(a2)
     f7e:	7c24                	flw	fs1,120(s0)
     f80:	2200                	fld	fs0,0(a2)
     f82:	8906                	mv	s2,ra
  heap_end = (void *) ((char *) heap_ptr + heap_size);
     f84:	2700                	fld	fs0,8(a4)
     f86:	c079                	beqz	s0,104c <calloc_beebs+0x38>
     f88:	3206                	fld	ft4,96(sp)
     f8a:	7c24                	flw	fs1,120(s0)
  heap_requested = 0;
     f8c:	2200                	fld	fs0,0(a2)
     f8e:	2706                	fld	fa4,64(sp)
     f90:	c08c                	sw	a1,0(s1)
     f92:	3202                	fld	ft4,32(sp)
}
     f94:	7c24                	flw	fs1,120(s0)
     f96:	2200                	fld	fs0,0(a2)
  return ((void *) ((char *) heap + heap_requested) <= heap_end);
     f98:	2706                	fld	fa4,64(sp)
     f9a:	c076                	sw	t4,0(sp)
     f9c:	3204                	fld	fs1,32(a2)
     f9e:	7c24                	flw	fs1,120(s0)
     fa0:	2200                	fld	fs0,0(a2)
     fa2:	2706                	fld	fa4,64(sp)
     fa4:	889f 0007 9000      	0x90000007889f
     faa:	25000007          	0x25000007
     fae:	8200                	0x8200
     fb0:	0600                	addi	s0,sp,768
     fb2:	0089                	addi	ra,ra,2
     fb4:	06c07927          	0x6c07927
}
     fb8:	2432                	fld	fs0,264(sp)
     fba:	007c                	addi	a5,sp,12
     fbc:	0622                	slli	a2,a2,0x8
     fbe:	02c08c27          	0x2c08c27
  heap_requested += size;
     fc2:	2432                	fld	fs0,264(sp)
     fc4:	007c                	addi	a5,sp,12
     fc6:	0622                	slli	a2,a2,0x8
     fc8:	04c07627          	0x4c07627
  void *new_ptr = heap_ptr;
     fcc:	2432                	fld	fs0,264(sp)
     fce:	007c                	addi	a5,sp,12
     fd0:	0622                	slli	a2,a2,0x8
     fd2:	07909f27          	0x7909f27
     fd6:	0000                	unimp
  heap_requested += size;
     fd8:	0798                	addi	a4,sp,960
     fda:	0000                	unimp
     fdc:	0024                	addi	s1,sp,8
     fde:	0082                	c.slli64	ra
     fe0:	8906                	mv	s2,ra
     fe2:	2700                	fld	fs0,8(a4)
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
     fe4:	0079                	c.nop	30
     fe6:	2432                	fld	fs0,264(sp)
     fe8:	007c                	addi	a5,sp,12
     fea:	0622                	slli	a2,a2,0x8
     fec:	02c08c27          	0x2c08c27
     ff0:	2432                	fld	fs0,264(sp)
     ff2:	007c                	addi	a5,sp,12
     ff4:	0622                	slli	a2,a2,0x8
     ff6:	04c07627          	0x4c07627
     ffa:	2432                	fld	fs0,264(sp)
      heap_ptr = (void *) ((char *) heap_ptr + size);
     ffc:	007c                	addi	a5,sp,12
     ffe:	0622                	slli	a2,a2,0x8
    1000:	079c9f27          	0x79c9f27
}
    1004:	0000                	unimp
    1006:	07a4                	addi	s1,sp,968
    1008:	0000                	unimp
    100a:	001f 0082 8906      	0x89060082001f
    return NULL;
    1010:	2700                	fld	fs0,8(a4)
    1012:	0079                	c.nop	30
  void *new_ptr = malloc_beebs (nmemb * size);
    1014:	2706                	fld	fa4,64(sp)
    1016:	c08c                	sw	a1,0(s1)
{
    1018:	3202                	fld	ft4,32(sp)
    101a:	7c24                	flw	fs1,120(s0)
    101c:	2200                	fld	fs0,0(a2)
    101e:	2706                	fld	fa4,64(sp)
    1020:	c076                	sw	t4,0(sp)
    1022:	3204                	fld	fs1,32(a2)
  void *new_ptr = malloc_beebs (nmemb * size);
    1024:	7c24                	flw	fs1,120(s0)
    1026:	2200                	fld	fs0,0(a2)
    1028:	2706                	fld	fa4,64(sp)
    102a:	a49f 0007 a800      	0xa8000007a49f
    1030:	1e000007          	0x1e000007
  if (NULL != new_ptr)
    1034:	8200                	0x8200
    1036:	0600                	addi	s0,sp,768
    memset (new_ptr, 0, nmemb * size);
    1038:	0089                	addi	ra,ra,2
    103a:	06007927          	0x6007927
    103e:	32008c27          	0x32008c27
    1042:	7c24                	flw	fs1,120(s0)
}
    1044:	2200                	fld	fs0,0(a2)
    1046:	2706                	fld	fa4,64(sp)
    1048:	c076                	sw	t4,0(sp)
    104a:	3204                	fld	fs1,32(a2)
    104c:	7c24                	flw	fs1,120(s0)
    104e:	2200                	fld	fs0,0(a2)
    1050:	2706                	fld	fa4,64(sp)
    1052:	a89f 0007 ac00      	0xac000007a89f
  heap_requested += size;
    1058:	1f000007          	0x1f000007
    105c:	8200                	0x8200
    105e:	0600                	addi	s0,sp,768
    1060:	27067887          	0x27067887
  void *new_ptr = heap_ptr;
    1064:	0079                	c.nop	30
    1066:	2706                	fld	fa4,64(sp)
    1068:	008c                	addi	a1,sp,64
    106a:	2432                	fld	fs0,264(sp)
    106c:	007c                	addi	a5,sp,12
    106e:	0622                	slli	a2,a2,0x8
  heap_requested += size;
    1070:	04c07627          	0x4c07627
    1074:	2432                	fld	fs0,264(sp)
    1076:	007c                	addi	a5,sp,12
    1078:	0622                	slli	a2,a2,0x8
    107a:	07ac9f27          	0x7ac9f27
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
    107e:	0000                	unimp
    1080:	07b0                	addi	a2,sp,968
    1082:	0000                	unimp
    1084:	001d                	c.nop	7
    1086:	0082                	c.slli64	ra
    1088:	8706                	mv	a4,ra
    108a:	0678                	addi	a4,sp,780
    108c:	06007927          	0x6007927
    1090:	7c008c27          	0x7c008c27
      heap_ptr = (void *) ((char *) heap_ptr + size);
    1094:	2200                	fld	fs0,0(a2)
    1096:	2706                	fld	fa4,64(sp)
    1098:	c076                	sw	t4,0(sp)
    109a:	3204                	fld	fs1,32(a2)
      if (NULL != ptr)
    109c:	7c24                	flw	fs1,120(s0)
    109e:	2200                	fld	fs0,0(a2)
	  for (i = 0; i < size; i++)
    10a0:	2706                	fld	fa4,64(sp)
    10a2:	b09f 0007 b400      	0xb4000007b09f
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
    10a8:	1c000007          	0x1c000007
    10ac:	8200                	0x8200
    10ae:	0600                	addi	s0,sp,768
	  for (i = 0; i < size; i++)
    10b0:	27067887          	0x27067887
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
    10b4:	0079                	c.nop	30
    10b6:	2706                	fld	fa4,64(sp)
	  for (i = 0; i < size; i++)
    10b8:	008c                	addi	a1,sp,64
    10ba:	007c                	addi	a5,sp,12
}
    10bc:	0622                	slli	a2,a2,0x8
    10be:	32007627          	0x32007627
    10c2:	7c24                	flw	fs1,120(s0)
    return NULL;
    10c4:	2200                	fld	fs0,0(a2)
    10c6:	2706                	fld	fa4,64(sp)
    10c8:	009f 0000 0000      	0x9f
}
    10ce:	0000                	unimp
  __asm__ volatile ("li a0, 0" : : : "memory");
    10d0:	a400                	fsd	fs0,8(s0)
    10d2:	0004                	0x4
}
    10d4:	bc00                	fsd	fs0,56(s0)
    10d6:	0004                	0x4
  __asm__ volatile ("li a0, 0" : : : "memory");
    10d8:	0100                	addi	s0,sp,128
    10da:	5700                	lw	s0,40(a4)
}
    10dc:	06e0                	addi	s0,sp,844
    10de:	0000                	unimp
  __asm__ volatile ("li a0, 0" : : : "memory");
    10e0:	07ec                	addi	a1,sp,972
    10e2:	0000                	unimp
}
    10e4:	00720033          	add	zero,tp,t2
  jal x0, default_exc_handler
    10e8:	2306                	fld	ft6,64(sp)
    10ea:	3240                	fld	fs0,160(a2)
  mv  x1, x0
    10ec:	7c24                	flw	fs1,120(s0)
    10ee:	2200                	fld	fs0,0(a2)
  mv  x2, x1
    10f0:	9106                	add	sp,sp,ra
    10f2:	7fb4                	flw	fa3,120(a5)
  mv  x3, x1
    10f4:	2306                	fld	ft6,64(sp)
    10f6:	06c0                	addi	s0,sp,836
  mv  x4, x1
    10f8:	2432                	fld	fs0,264(sp)
    10fa:	007c                	addi	a5,sp,12
  mv  x5, x1
    10fc:	0622                	slli	a2,a2,0x8
    10fe:	7fb89127          	0x7fb89127
  mv  x6, x1
    1102:	2706                	fld	fa4,64(sp)
  mv  x7, x1
    1104:	c078                	sw	a4,68(s0)
    1106:	3202                	fld	ft4,32(sp)
  mv  x8, x1
    1108:	7c24                	flw	fs1,120(s0)
    110a:	2200                	fld	fs0,0(a2)
  mv  x9, x1
    110c:	2706                	fld	fa4,64(sp)
    110e:	3204c077          	0x3204c077
  mv x10, x1
    1112:	7c24                	flw	fs1,120(s0)
  mv x11, x1
    1114:	2200                	fld	fs0,0(a2)
    1116:	2706                	fld	fa4,64(sp)
  mv x12, x1
    1118:	ec9f 0007 f000      	0xf0000007ec9f
  mv x13, x1
    111e:	2b000007          	0x2b000007
  mv x14, x1
    1122:	7600                	flw	fs0,40(a2)
  mv x15, x1
    1124:	0600                	addi	s0,sp,768
    1126:	b491                	j	b6a <_nettle_aes_decrypt+0x2aa>
  mv x16, x1
    1128:	067f                	0x67f
    112a:	3206c023          	0x3206c023
  mv x17, x1
    112e:	7c24                	flw	fs1,120(s0)
  mv x18, x1
    1130:	2200                	fld	fs0,0(a2)
    1132:	2706                	fld	fa4,64(sp)
  mv x19, x1
    1134:	b891                	j	988 <_nettle_aes_decrypt+0xc8>
    1136:	067f                	0x67f
  mv x20, x1
    1138:	02c07827          	0x2c07827
  mv x21, x1
    113c:	2432                	fld	fs0,264(sp)
    113e:	007c                	addi	a5,sp,12
  mv x22, x1
    1140:	0622                	slli	a2,a2,0x8
    1142:	04c07727          	0x4c07727
  mv x23, x1
    1146:	2432                	fld	fs0,264(sp)
  mv x24, x1
    1148:	007c                	addi	a5,sp,12
    114a:	0622                	slli	a2,a2,0x8
  mv x25, x1
    114c:	07f09f27          	0x7f09f27
  mv x26, x1
    1150:	0000                	unimp
    1152:	07f4                	addi	a3,sp,972
  mv x27, x1
    1154:	0000                	unimp
    1156:	0021                	c.nop	8
  mv x28, x1
    1158:	0076                	c.slli	zero,0x1d
    115a:	8c06                	mv	s8,ra
  mv x29, x1
    115c:	0600                	addi	s0,sp,768
    115e:	7fb89127          	0x7fb89127
  mv x30, x1
    1162:	2706                	fld	fa4,64(sp)
  mv x31, x1
    1164:	c078                	sw	a4,68(s0)
    1166:	3202                	fld	ft4,32(sp)
  la   x2, _stack_start
    1168:	7c24                	flw	fs1,120(s0)
    116a:	2200                	fld	fs0,0(a2)
    116c:	2706                	fld	fa4,64(sp)
    116e:	3204c077          	0x3204c077
  la x26, _bss_start
    1172:	7c24                	flw	fs1,120(s0)
    1174:	2200                	fld	fs0,0(a2)
    1176:	2706                	fld	fa4,64(sp)
  la x27, _bss_end
    1178:	f49f 0007 f800      	0xf8000007f49f
    117e:	20000007          	0x20000007
  bge x26, x27, zero_loop_end
    1182:	7600                	flw	fs0,40(a2)
  sw x0, 0(x26)
    1184:	0600                	addi	s0,sp,768
    1186:	008c                	addi	a1,sp,64
  addi x26, x26, 4
    1188:	7fb89127          	0x7fb89127
  ble x26, x27, zero_loop
    118c:	2706                	fld	fa4,64(sp)
    118e:	c078                	sw	a4,68(s0)
  addi x10, x0, 0
    1190:	3202                	fld	ft4,32(sp)
    1192:	7c24                	flw	fs1,120(s0)
  addi x11, x0, 0
    1194:	2200                	fld	fs0,0(a2)
    1196:	2706                	fld	fa4,64(sp)
  jal x1, main
    1198:	3204c077          	0x3204c077
    119c:	7c24                	flw	fs1,120(s0)
    119e:	2200                	fld	fs0,0(a2)
    11a0:	2706                	fld	fa4,64(sp)
    11a2:	f89f 0007 fc00      	0xfc000007f89f
    11a8:	1f000007          	0x1f000007
    11ac:	7600                	flw	fs0,40(a2)
    11ae:	8c00                	0x8c00
    11b0:	2700                	fld	fs0,8(a4)
    11b2:	b891                	j	a06 <_nettle_aes_decrypt+0x146>
    11b4:	067f                	0x67f
    11b6:	02c07827          	0x2c07827
    11ba:	2432                	fld	fs0,264(sp)
    11bc:	007c                	addi	a5,sp,12
    11be:	0622                	slli	a2,a2,0x8
    11c0:	04c07727          	0x4c07727
    11c4:	2432                	fld	fs0,264(sp)
    11c6:	007c                	addi	a5,sp,12
    11c8:	0622                	slli	a2,a2,0x8
    11ca:	07fc9f27          	0x7fc9f27
    11ce:	0000                	unimp
    11d0:	0800                	addi	s0,sp,16
    11d2:	0000                	unimp
    11d4:	001e                	c.slli	zero,0x7
    11d6:	0076                	c.slli	zero,0x1d
    11d8:	008c                	addi	a1,sp,64
    11da:	7fb89127          	0x7fb89127
    11de:	2706                	fld	fa4,64(sp)
    11e0:	0078                	addi	a4,sp,12
    11e2:	2432                	fld	fs0,264(sp)
    11e4:	007c                	addi	a5,sp,12
    11e6:	0622                	slli	a2,a2,0x8
    11e8:	04c07727          	0x4c07727
    11ec:	2432                	fld	fs0,264(sp)
    11ee:	007c                	addi	a5,sp,12
    11f0:	0622                	slli	a2,a2,0x8
    11f2:	08009f27          	0x8009f27
    11f6:	0000                	unimp
    11f8:	0804                	addi	s1,sp,16
    11fa:	0000                	unimp
    11fc:	001c                	0x1c
    11fe:	0076                	c.slli	zero,0x1d
    1200:	008c                	addi	a1,sp,64
    1202:	7fb89127          	0x7fb89127
    1206:	2706                	fld	fa4,64(sp)
    1208:	0078                	addi	a4,sp,12
    120a:	007c                	addi	a5,sp,12
    120c:	0622                	slli	a2,a2,0x8
    120e:	04c07727          	0x4c07727
    1212:	2432                	fld	fs0,264(sp)
    1214:	007c                	addi	a5,sp,12
    1216:	0622                	slli	a2,a2,0x8
    1218:	08049f27          	0x8049f27
    121c:	0000                	unimp
    121e:	0808                	addi	a0,sp,16
    1220:	0000                	unimp
    1222:	0025                	c.nop	9
    1224:	0072                	c.slli	zero,0x1c
    1226:	2306                	fld	ft6,64(sp)
    1228:	3240                	fld	fs0,160(a2)
    122a:	7c24                	flw	fs1,120(s0)
    122c:	2200                	fld	fs0,0(a2)
    122e:	8c06                	mv	s8,ra
    1230:	2700                	fld	fs0,8(a4)
    1232:	b891                	j	a86 <_nettle_aes_decrypt+0x1c6>
    1234:	067f                	0x67f
    1236:	7c007827          	0x7c007827
    123a:	2200                	fld	fs0,0(a2)
    123c:	2706                	fld	fa4,64(sp)
    123e:	3204c077          	0x3204c077
    1242:	7c24                	flw	fs1,120(s0)
    1244:	2200                	fld	fs0,0(a2)
    1246:	2706                	fld	fa4,64(sp)
    1248:	089f 0008 0c00      	0xc000008089f
    124e:	0008                	0x8
    1250:	3000                	fld	fs0,32(s0)
    1252:	7200                	flw	fs0,32(a2)
    1254:	0600                	addi	s0,sp,768
    1256:	24324023          	0x24324023
    125a:	007c                	addi	a5,sp,12
    125c:	0622                	slli	a2,a2,0x8
    125e:	b491                	j	ca2 <_nettle_aes_decrypt+0x3e2>
    1260:	067f                	0x67f
    1262:	3206c023          	0x3206c023
    1266:	7c24                	flw	fs1,120(s0)
    1268:	2200                	fld	fs0,0(a2)
    126a:	2706                	fld	fa4,64(sp)
    126c:	b891                	j	ac0 <_nettle_aes_decrypt+0x200>
    126e:	067f                	0x67f
    1270:	7c007827          	0x7c007827
    1274:	2200                	fld	fs0,0(a2)
    1276:	2706                	fld	fa4,64(sp)
    1278:	3204c077          	0x3204c077
    127c:	7c24                	flw	fs1,120(s0)
    127e:	2200                	fld	fs0,0(a2)
    1280:	2706                	fld	fa4,64(sp)
    1282:	0c9f 0008 1000      	0x100000080c9f
    1288:	0008                	0x8
    128a:	2f00                	fld	fs0,24(a4)
    128c:	7200                	flw	fs0,32(a2)
    128e:	0600                	addi	s0,sp,768
    1290:	24324023          	0x24324023
    1294:	007c                	addi	a5,sp,12
    1296:	0622                	slli	a2,a2,0x8
    1298:	b491                	j	cdc <_nettle_aes_decrypt+0x41c>
    129a:	067f                	0x67f
    129c:	3206c023          	0x3206c023
    12a0:	7c24                	flw	fs1,120(s0)
    12a2:	2200                	fld	fs0,0(a2)
    12a4:	2706                	fld	fa4,64(sp)
    12a6:	b891                	j	afa <_nettle_aes_decrypt+0x23a>
    12a8:	067f                	0x67f
    12aa:	7c007827          	0x7c007827
    12ae:	2200                	fld	fs0,0(a2)
    12b0:	2706                	fld	fa4,64(sp)
    12b2:	24320077          	0x24320077
    12b6:	007c                	addi	a5,sp,12
    12b8:	0622                	slli	a2,a2,0x8
    12ba:	00009f27          	0x9f27
    12be:	0000                	unimp
    12c0:	0000                	unimp
    12c2:	0000                	unimp
    12c4:	0570                	addi	a2,sp,652
    12c6:	0000                	unimp
    12c8:	069c                	addi	a5,sp,832
    12ca:	0000                	unimp
    12cc:	0001                	nop
    12ce:	0006e06b          	0x6e06b
    12d2:	e400                	fsw	fs0,8(s0)
    12d4:	0006                	c.slli	zero,0x1
    12d6:	2b00                	fld	fs0,16(a4)
    12d8:	8600                	0x8600
    12da:	00c0                	addi	s0,sp,68
    12dc:	2432                	fld	fs0,264(sp)
    12de:	007c                	addi	a5,sp,12
    12e0:	0622                	slli	a2,a2,0x8
    12e2:	8527008b          	0x8527008b
    12e6:	06c0                	addi	s0,sp,836
    12e8:	2432                	fld	fs0,264(sp)
    12ea:	007c                	addi	a5,sp,12
    12ec:	0622                	slli	a2,a2,0x8
    12ee:	02c07527          	0x2c07527
    12f2:	2432                	fld	fs0,264(sp)
    12f4:	007c                	addi	a5,sp,12
    12f6:	0622                	slli	a2,a2,0x8
    12f8:	04c08f27          	0x4c08f27
    12fc:	2432                	fld	fs0,264(sp)
    12fe:	007c                	addi	a5,sp,12
    1300:	0622                	slli	a2,a2,0x8
    1302:	06e49f27          	0x6e49f27
    1306:	0000                	unimp
    1308:	06e8                	addi	a0,sp,844
    130a:	0000                	unimp
    130c:	002a                	c.slli	zero,0xa
    130e:	0086                	slli	ra,ra,0x1
    1310:	2432                	fld	fs0,264(sp)
    1312:	007c                	addi	a5,sp,12
    1314:	0622                	slli	a2,a2,0x8
    1316:	8527008b          	0x8527008b
    131a:	06c0                	addi	s0,sp,836
    131c:	2432                	fld	fs0,264(sp)
    131e:	007c                	addi	a5,sp,12
    1320:	0622                	slli	a2,a2,0x8
    1322:	02c07527          	0x2c07527
    1326:	2432                	fld	fs0,264(sp)
    1328:	007c                	addi	a5,sp,12
    132a:	0622                	slli	a2,a2,0x8
    132c:	04c08f27          	0x4c08f27
    1330:	2432                	fld	fs0,264(sp)
    1332:	007c                	addi	a5,sp,12
    1334:	0622                	slli	a2,a2,0x8
    1336:	06ec9f27          	0x6ec9f27
    133a:	0000                	unimp
    133c:	06f4                	addi	a3,sp,844
    133e:	0000                	unimp
    1340:	0025                	c.nop	9
    1342:	0086                	slli	ra,ra,0x1
    1344:	8b06                	mv	s6,ra
    1346:	2700                	fld	fs0,8(a4)
    1348:	c085                	beqz	s1,1368 <__call_exitprocs+0xb8>
    134a:	3206                	fld	ft4,96(sp)
    134c:	7c24                	flw	fs1,120(s0)
    134e:	2200                	fld	fs0,0(a2)
    1350:	2706                	fld	fa4,64(sp)
    1352:	c075                	beqz	s0,1436 <atexit+0x6>
    1354:	3202                	fld	ft4,32(sp)
    1356:	7c24                	flw	fs1,120(s0)
    1358:	2200                	fld	fs0,0(a2)
    135a:	2706                	fld	fa4,64(sp)
    135c:	3204c08f          	0x3204c08f
    1360:	7c24                	flw	fs1,120(s0)
    1362:	2200                	fld	fs0,0(a2)
    1364:	2706                	fld	fa4,64(sp)
    1366:	f49f 0006 f800      	0xf8000006f49f
    136c:	0006                	c.slli	zero,0x1
    136e:	2400                	fld	fs0,8(s0)
    1370:	8600                	0x8600
    1372:	0600                	addi	s0,sp,768
    1374:	8527008b          	0x8527008b
    1378:	3200                	fld	fs0,32(a2)
    137a:	7c24                	flw	fs1,120(s0)
    137c:	2200                	fld	fs0,0(a2)
    137e:	2706                	fld	fa4,64(sp)
    1380:	c075                	beqz	s0,1464 <__register_exitproc+0x20>
    1382:	3202                	fld	ft4,32(sp)
    1384:	7c24                	flw	fs1,120(s0)
    1386:	2200                	fld	fs0,0(a2)
    1388:	2706                	fld	fa4,64(sp)
    138a:	3204c08f          	0x3204c08f
    138e:	7c24                	flw	fs1,120(s0)
    1390:	2200                	fld	fs0,0(a2)
    1392:	2706                	fld	fa4,64(sp)
    1394:	fc9f 0006 0400      	0x4000006fc9f
    139a:	1f000007          	0x1f000007
    139e:	8600                	0x8600
    13a0:	0600                	addi	s0,sp,768
    13a2:	8527008b          	0x8527008b
    13a6:	0600                	addi	s0,sp,768
    13a8:	02c07527          	0x2c07527
    13ac:	2432                	fld	fs0,264(sp)
    13ae:	007c                	addi	a5,sp,12
    13b0:	0622                	slli	a2,a2,0x8
    13b2:	04c08f27          	0x4c08f27
    13b6:	2432                	fld	fs0,264(sp)
    13b8:	007c                	addi	a5,sp,12
    13ba:	0622                	slli	a2,a2,0x8
    13bc:	07049f27          	0x7049f27
    13c0:	0000                	unimp
    13c2:	0708                	addi	a0,sp,896
    13c4:	0000                	unimp
    13c6:	001e                	c.slli	zero,0x7
    13c8:	0086                	slli	ra,ra,0x1
    13ca:	8b06                	mv	s6,ra
    13cc:	2700                	fld	fs0,8(a4)
    13ce:	0085                	addi	ra,ra,1
    13d0:	2706                	fld	fa4,64(sp)
    13d2:	0075                	c.nop	29
    13d4:	2432                	fld	fs0,264(sp)
    13d6:	007c                	addi	a5,sp,12
    13d8:	0622                	slli	a2,a2,0x8
    13da:	04c08f27          	0x4c08f27
    13de:	2432                	fld	fs0,264(sp)
    13e0:	007c                	addi	a5,sp,12
    13e2:	0622                	slli	a2,a2,0x8
    13e4:	07089f27          	0x7089f27
    13e8:	0000                	unimp
    13ea:	070c                	addi	a1,sp,896
    13ec:	0000                	unimp
    13ee:	001f 0086 8706      	0x87060086001f
    13f4:	0670                	addi	a2,sp,780
    13f6:	06008527          	0x6008527
    13fa:	32007527          	0x32007527
    13fe:	7c24                	flw	fs1,120(s0)
    1400:	2200                	fld	fs0,0(a2)
    1402:	2706                	fld	fa4,64(sp)
    1404:	3204c08f          	0x3204c08f
    1408:	7c24                	flw	fs1,120(s0)
    140a:	2200                	fld	fs0,0(a2)
    140c:	2706                	fld	fa4,64(sp)
    140e:	0c9f 0007 1000      	0x100000070c9f
    1414:	1d000007          	0x1d000007
    1418:	8600                	0x8600
    141a:	0600                	addi	s0,sp,768
    141c:	27067087          	0x27067087
    1420:	0085                	addi	ra,ra,1
    1422:	2706                	fld	fa4,64(sp)
    1424:	0075                	c.nop	29
    1426:	007c                	addi	a5,sp,12
    1428:	0622                	slli	a2,a2,0x8
    142a:	04c08f27          	0x4c08f27
    142e:	2432                	fld	fs0,264(sp)
    1430:	007c                	addi	a5,sp,12
    1432:	0622                	slli	a2,a2,0x8
    1434:	07109f27          	0x7109f27
    1438:	0000                	unimp
    143a:	0714                	addi	a3,sp,896
    143c:	0000                	unimp
    143e:	001c                	0x1c
    1440:	0086                	slli	ra,ra,0x1
    1442:	8706                	mv	a4,ra
    1444:	0670                	addi	a2,sp,780
    1446:	06008527          	0x6008527
    144a:	7c007527          	0x7c007527
    144e:	2200                	fld	fs0,0(a2)
    1450:	2706                	fld	fa4,64(sp)
    1452:	2432008f          	0x2432008f
    1456:	007c                	addi	a5,sp,12
    1458:	0622                	slli	a2,a2,0x8
    145a:	00009f27          	0x9f27
    145e:	0000                	unimp
    1460:	0000                	unimp
    1462:	0000                	unimp
    1464:	05b0                	addi	a2,sp,712
    1466:	0000                	unimp
    1468:	069c                	addi	a5,sp,832
    146a:	0000                	unimp
    146c:	0001                	nop
    146e:	e06a                	fsw	fs10,0(sp)
    1470:	0006                	c.slli	zero,0x1
    1472:	2c00                	fld	fs0,24(s0)
    1474:	2b000007          	0x2b000007
    1478:	8400                	0x8400
    147a:	00c0                	addi	s0,sp,68
    147c:	2432                	fld	fs0,264(sp)
    147e:	007c                	addi	a5,sp,12
    1480:	0622                	slli	a2,a2,0x8
    1482:	008a                	slli	ra,ra,0x2
    1484:	06c08327          	0x6c08327
    1488:	2432                	fld	fs0,264(sp)
    148a:	007c                	addi	a5,sp,12
    148c:	0622                	slli	a2,a2,0x8
    148e:	02c08e27          	0x2c08e27
    1492:	2432                	fld	fs0,264(sp)
    1494:	007c                	addi	a5,sp,12
    1496:	0622                	slli	a2,a2,0x8
    1498:	04c08d27          	0x4c08d27
    149c:	2432                	fld	fs0,264(sp)
    149e:	007c                	addi	a5,sp,12
    14a0:	0622                	slli	a2,a2,0x8
    14a2:	072c9f27          	0x72c9f27
    14a6:	0000                	unimp
    14a8:	0730                	addi	a2,sp,904
    14aa:	0000                	unimp
    14ac:	002a                	c.slli	zero,0xa
    14ae:	0084                	addi	s1,sp,64
    14b0:	2432                	fld	fs0,264(sp)
    14b2:	007c                	addi	a5,sp,12
    14b4:	0622                	slli	a2,a2,0x8
    14b6:	008a                	slli	ra,ra,0x2
    14b8:	06c08327          	0x6c08327
    14bc:	2432                	fld	fs0,264(sp)
    14be:	007c                	addi	a5,sp,12
    14c0:	0622                	slli	a2,a2,0x8
    14c2:	02c08e27          	0x2c08e27
    14c6:	2432                	fld	fs0,264(sp)
    14c8:	007c                	addi	a5,sp,12
    14ca:	0622                	slli	a2,a2,0x8
    14cc:	04c08d27          	0x4c08d27
    14d0:	2432                	fld	fs0,264(sp)
    14d2:	007c                	addi	a5,sp,12
    14d4:	0622                	slli	a2,a2,0x8
    14d6:	07389f27          	0x7389f27
    14da:	0000                	unimp
    14dc:	0740                	addi	s0,sp,900
    14de:	0000                	unimp
    14e0:	0025                	c.nop	9
    14e2:	0084                	addi	s1,sp,64
    14e4:	8a06                	mv	s4,ra
    14e6:	2700                	fld	fs0,8(a4)
    14e8:	3206c083          	lbu	ra,800(a3)
    14ec:	7c24                	flw	fs1,120(s0)
    14ee:	2200                	fld	fs0,0(a2)
    14f0:	2706                	fld	fa4,64(sp)
    14f2:	c08e                	sw	gp,64(sp)
    14f4:	3202                	fld	ft4,32(sp)
    14f6:	7c24                	flw	fs1,120(s0)
    14f8:	2200                	fld	fs0,0(a2)
    14fa:	2706                	fld	fa4,64(sp)
    14fc:	c08d                	beqz	s1,151e <_exit+0x3a>
    14fe:	3204                	fld	fs1,32(a2)
    1500:	7c24                	flw	fs1,120(s0)
    1502:	2200                	fld	fs0,0(a2)
    1504:	2706                	fld	fa4,64(sp)
    1506:	409f 0007 4800      	0x48000007409f
    150c:	24000007          	0x24000007
    1510:	8400                	0x8400
    1512:	0600                	addi	s0,sp,768
    1514:	008a                	slli	ra,ra,0x2
    1516:	32008327          	0x32008327
    151a:	7c24                	flw	fs1,120(s0)
    151c:	2200                	fld	fs0,0(a2)
    151e:	2706                	fld	fa4,64(sp)
    1520:	c08e                	sw	gp,64(sp)
    1522:	3202                	fld	ft4,32(sp)
    1524:	7c24                	flw	fs1,120(s0)
    1526:	2200                	fld	fs0,0(a2)
    1528:	2706                	fld	fa4,64(sp)
    152a:	c08d                	beqz	s1,154c <main+0x14>
    152c:	3204                	fld	fs1,32(a2)
    152e:	7c24                	flw	fs1,120(s0)
    1530:	2200                	fld	fs0,0(a2)
    1532:	2706                	fld	fa4,64(sp)
    1534:	4c9f 0007 5400      	0x540000074c9f
{
    153a:	1f000007          	0x1f000007
    153e:	8400                	0x8400
  initialise_board ();
    1540:	0600                	addi	s0,sp,768
    1542:	008a                	slli	ra,ra,0x2
  initialise_benchmark ();
    1544:	06008327          	0x6008327
  warm_caches (WARMUP_HEAT);
    1548:	02c08e27          	0x2c08e27
    154c:	2432                	fld	fs0,264(sp)
    154e:	007c                	addi	a5,sp,12
  start_trigger ();
    1550:	0622                	slli	a2,a2,0x8
    1552:	04c08d27          	0x4c08d27
  result = benchmark ();
    1556:	2432                	fld	fs0,264(sp)
    1558:	007c                	addi	a5,sp,12
    155a:	0622                	slli	a2,a2,0x8
  stop_trigger ();
    155c:	07549f27          	0x7549f27
  correct = verify_benchmark (result);
    1560:	0000                	unimp
    1562:	0758                	addi	a4,sp,900
    1564:	0000                	unimp
    1566:	0026                	c.slli	zero,0x9
    1568:	0084                	addi	s1,sp,64
    156a:	8a06                	mv	s4,ra
    asm("wfi");
    156c:	2700                	fld	fs0,8(a4)
    156e:	27060083          	lb	ra,624(a2)
    1572:	0081                	addi	ra,ra,0
    1574:	2538                	fld	fa4,72(a0)
    1576:	ff08                	fsw	fa0,56(a4)
    1578:	231a                	fld	ft6,384(sp)
    157a:	02c0                	addi	s0,sp,324
    157c:	2432                	fld	fs0,264(sp)
    157e:	007c                	addi	a5,sp,12
    1580:	0622                	slli	a2,a2,0x8
    1582:	04c08d27          	0x4c08d27
    1586:	2432                	fld	fs0,264(sp)
    1588:	007c                	addi	a5,sp,12
    158a:	0622                	slli	a2,a2,0x8
    158c:	07589f27          	0x7589f27
    1590:	0000                	unimp
    1592:	075c                	addi	a5,sp,900
    1594:	0000                	unimp
    1596:	00840027          	0x840027
    159a:	8706                	mv	a4,ra
    159c:	0674                	addi	a3,sp,780
    159e:	06008327          	0x6008327
    15a2:	38008127          	0x38008127
    15a6:	0825                	addi	a6,a6,9
    15a8:	1aff                	0x1aff
    15aa:	3202c023          	0x3202c023
    15ae:	7c24                	flw	fs1,120(s0)
    15b0:	2200                	fld	fs0,0(a2)
    15b2:	2706                	fld	fa4,64(sp)
    15b4:	c08d                	beqz	s1,15d6 <mtable+0x2a>
    15b6:	3204                	fld	fs1,32(a2)
    15b8:	7c24                	flw	fs1,120(s0)
    15ba:	2200                	fld	fs0,0(a2)
    15bc:	2706                	fld	fa4,64(sp)
    15be:	5c9f 0007 6000      	0x600000075c9f
    15c4:	1d000007          	0x1d000007
    15c8:	8400                	0x8400
    15ca:	0600                	addi	s0,sp,768
    15cc:	27067487          	0x27067487
    15d0:	27060083          	lb	ra,624(a2)
    15d4:	008e                	slli	ra,ra,0x3
    15d6:	007c                	addi	a5,sp,12
    15d8:	0622                	slli	a2,a2,0x8
    15da:	04c08d27          	0x4c08d27
    15de:	2432                	fld	fs0,264(sp)
    15e0:	007c                	addi	a5,sp,12
    15e2:	0622                	slli	a2,a2,0x8
    15e4:	07609f27          	0x7609f27
    15e8:	0000                	unimp
    15ea:	0764                	addi	s1,sp,908
    15ec:	0000                	unimp
    15ee:	001c                	0x1c
    15f0:	0084                	addi	s1,sp,64
    15f2:	8706                	mv	a4,ra
    15f4:	0674                	addi	a3,sp,780
    15f6:	06008327          	0x6008327
    15fa:	7c008e27          	0x7c008e27
    15fe:	2200                	fld	fs0,0(a2)
    1600:	2706                	fld	fa4,64(sp)
    1602:	008d                	addi	ra,ra,3
    1604:	2432                	fld	fs0,264(sp)
    1606:	007c                	addi	a5,sp,12
    1608:	0622                	slli	a2,a2,0x8
    160a:	07649f27          	0x7649f27
    160e:	0000                	unimp
    1610:	0768                	addi	a0,sp,908
    1612:	0000                	unimp
    1614:	0026                	c.slli	zero,0x9
    1616:	0084                	addi	s1,sp,64
    1618:	8706                	mv	a4,ra
    161a:	0674                	addi	a3,sp,780
    161c:	06008327          	0x6008327
    1620:	38008127          	0x38008127
    1624:	0825                	addi	a6,a6,9
    1626:	1aff                	0x1aff
    1628:	3202c023          	0x3202c023
    162c:	7c24                	flw	fs1,120(s0)
    162e:	2200                	fld	fs0,0(a2)
    1630:	2706                	fld	fa4,64(sp)
    1632:	008d                	addi	ra,ra,3
    1634:	2432                	fld	fs0,264(sp)
    1636:	007c                	addi	a5,sp,12
    1638:	0622                	slli	a2,a2,0x8
    163a:	00009f27          	0x9f27
    163e:	0000                	unimp
    1640:	0000                	unimp
    1642:	0000                	unimp
    1644:	05ec                	addi	a1,sp,716
    1646:	0000                	unimp
    1648:	069c                	addi	a5,sp,832
    164a:	0000                	unimp
    164c:	0001                	nop
    164e:	e069                	bnez	s0,1710 <mtable+0x164>
    1650:	0006                	c.slli	zero,0x1
    1652:	7c00                	flw	fs0,56(s0)
    1654:	2b000007          	0x2b000007
    1658:	8200                	0x8200
    165a:	00c0                	addi	s0,sp,68
    165c:	2432                	fld	fs0,264(sp)
    165e:	007c                	addi	a5,sp,12
    1660:	0622                	slli	a2,a2,0x8
    1662:	0089                	addi	ra,ra,2
    1664:	06c07927          	0x6c07927
    1668:	2432                	fld	fs0,264(sp)
    166a:	007c                	addi	a5,sp,12
    166c:	0622                	slli	a2,a2,0x8
    166e:	02c08c27          	0x2c08c27
    1672:	2432                	fld	fs0,264(sp)
    1674:	007c                	addi	a5,sp,12
    1676:	0622                	slli	a2,a2,0x8
    1678:	04c07627          	0x4c07627
    167c:	2432                	fld	fs0,264(sp)
    167e:	007c                	addi	a5,sp,12
    1680:	0622                	slli	a2,a2,0x8
    1682:	077c9f27          	0x77c9f27
    1686:	0000                	unimp
    1688:	0780                	addi	s0,sp,960
    168a:	0000                	unimp
    168c:	002a                	c.slli	zero,0xa
    168e:	0082                	c.slli64	ra
    1690:	2432                	fld	fs0,264(sp)
    1692:	007c                	addi	a5,sp,12
    1694:	0622                	slli	a2,a2,0x8
    1696:	0089                	addi	ra,ra,2
    1698:	06c07927          	0x6c07927
    169c:	2432                	fld	fs0,264(sp)
    169e:	007c                	addi	a5,sp,12
    16a0:	0622                	slli	a2,a2,0x8
    16a2:	02c08c27          	0x2c08c27
    16a6:	2432                	fld	fs0,264(sp)
    16a8:	007c                	addi	a5,sp,12
    16aa:	0622                	slli	a2,a2,0x8
    16ac:	04c07627          	0x4c07627
    16b0:	2432                	fld	fs0,264(sp)
    16b2:	007c                	addi	a5,sp,12
    16b4:	0622                	slli	a2,a2,0x8
    16b6:	07889f27          	0x7889f27
    16ba:	0000                	unimp
    16bc:	0790                	addi	a2,sp,960
    16be:	0000                	unimp
    16c0:	0025                	c.nop	9
    16c2:	0082                	c.slli64	ra
    16c4:	8906                	mv	s2,ra
    16c6:	2700                	fld	fs0,8(a4)
    16c8:	c079                	beqz	s0,178e <mtable+0x1e2>
    16ca:	3206                	fld	ft4,96(sp)
    16cc:	7c24                	flw	fs1,120(s0)
    16ce:	2200                	fld	fs0,0(a2)
    16d0:	2706                	fld	fa4,64(sp)
    16d2:	c08c                	sw	a1,0(s1)
    16d4:	3202                	fld	ft4,32(sp)
    16d6:	7c24                	flw	fs1,120(s0)
    16d8:	2200                	fld	fs0,0(a2)
    16da:	2706                	fld	fa4,64(sp)
    16dc:	c076                	sw	t4,0(sp)
    16de:	3204                	fld	fs1,32(a2)
    16e0:	7c24                	flw	fs1,120(s0)
    16e2:	2200                	fld	fs0,0(a2)
    16e4:	2706                	fld	fa4,64(sp)
    16e6:	909f 0007 9800      	0x98000007909f
    16ec:	24000007          	0x24000007
    16f0:	8200                	0x8200
    16f2:	0600                	addi	s0,sp,768
    16f4:	0089                	addi	ra,ra,2
    16f6:	32007927          	0x32007927
    16fa:	7c24                	flw	fs1,120(s0)
    16fc:	2200                	fld	fs0,0(a2)
    16fe:	2706                	fld	fa4,64(sp)
    1700:	c08c                	sw	a1,0(s1)
    1702:	3202                	fld	ft4,32(sp)
    1704:	7c24                	flw	fs1,120(s0)
    1706:	2200                	fld	fs0,0(a2)
    1708:	2706                	fld	fa4,64(sp)
    170a:	c076                	sw	t4,0(sp)
    170c:	3204                	fld	fs1,32(a2)
    170e:	7c24                	flw	fs1,120(s0)
    1710:	2200                	fld	fs0,0(a2)
    1712:	2706                	fld	fa4,64(sp)
    1714:	9c9f 0007 a400      	0xa40000079c9f
    171a:	1f000007          	0x1f000007
    171e:	8200                	0x8200
    1720:	0600                	addi	s0,sp,768
    1722:	0089                	addi	ra,ra,2
    1724:	06007927          	0x6007927
    1728:	02c08c27          	0x2c08c27
    172c:	2432                	fld	fs0,264(sp)
    172e:	007c                	addi	a5,sp,12
    1730:	0622                	slli	a2,a2,0x8
    1732:	04c07627          	0x4c07627
    1736:	2432                	fld	fs0,264(sp)
    1738:	007c                	addi	a5,sp,12
    173a:	0622                	slli	a2,a2,0x8
    173c:	07a49f27          	0x7a49f27
    1740:	0000                	unimp
    1742:	07a8                	addi	a0,sp,968
    1744:	0000                	unimp
    1746:	001e                	c.slli	zero,0x7
    1748:	0082                	c.slli64	ra
    174a:	8906                	mv	s2,ra
    174c:	2700                	fld	fs0,8(a4)
    174e:	0079                	c.nop	30
    1750:	2706                	fld	fa4,64(sp)
    1752:	008c                	addi	a1,sp,64
    1754:	2432                	fld	fs0,264(sp)
    1756:	007c                	addi	a5,sp,12
    1758:	0622                	slli	a2,a2,0x8
    175a:	04c07627          	0x4c07627
    175e:	2432                	fld	fs0,264(sp)
    1760:	007c                	addi	a5,sp,12
    1762:	0622                	slli	a2,a2,0x8
    1764:	07a89f27          	0x7a89f27
    1768:	0000                	unimp
    176a:	07ac                	addi	a1,sp,968
    176c:	0000                	unimp
    176e:	001f 0082 8706      	0x87060082001f
    1774:	0678                	addi	a4,sp,780
    1776:	06007927          	0x6007927
    177a:	32008c27          	0x32008c27
    177e:	7c24                	flw	fs1,120(s0)
    1780:	2200                	fld	fs0,0(a2)
    1782:	2706                	fld	fa4,64(sp)
    1784:	c076                	sw	t4,0(sp)
    1786:	3204                	fld	fs1,32(a2)
    1788:	7c24                	flw	fs1,120(s0)
    178a:	2200                	fld	fs0,0(a2)
    178c:	2706                	fld	fa4,64(sp)
    178e:	ac9f 0007 b000      	0xb0000007ac9f
    1794:	1d000007          	0x1d000007
    1798:	8200                	0x8200
    179a:	0600                	addi	s0,sp,768
    179c:	27067887          	0x27067887
    17a0:	0079                	c.nop	30
    17a2:	2706                	fld	fa4,64(sp)
    17a4:	008c                	addi	a1,sp,64
    17a6:	007c                	addi	a5,sp,12
    17a8:	0622                	slli	a2,a2,0x8
    17aa:	04c07627          	0x4c07627
    17ae:	2432                	fld	fs0,264(sp)
    17b0:	007c                	addi	a5,sp,12
    17b2:	0622                	slli	a2,a2,0x8
    17b4:	07b09f27          	0x7b09f27
    17b8:	0000                	unimp
    17ba:	07b4                	addi	a3,sp,968
    17bc:	0000                	unimp
    17be:	001c                	0x1c
    17c0:	0082                	c.slli64	ra
    17c2:	8706                	mv	a4,ra
    17c4:	0678                	addi	a4,sp,780
    17c6:	06007927          	0x6007927
    17ca:	7c008c27          	0x7c008c27
    17ce:	2200                	fld	fs0,0(a2)
    17d0:	2706                	fld	fa4,64(sp)
    17d2:	0076                	c.slli	zero,0x1d
    17d4:	2432                	fld	fs0,264(sp)
    17d6:	007c                	addi	a5,sp,12
    17d8:	0622                	slli	a2,a2,0x8
    17da:	00009f27          	0x9f27
    17de:	0000                	unimp
    17e0:	0000                	unimp
    17e2:	0000                	unimp
    17e4:	0638                	addi	a4,sp,776
    17e6:	0000                	unimp
    17e8:	069c                	addi	a5,sp,832
    17ea:	0000                	unimp
    17ec:	0001                	nop
    17ee:	e05d                	bnez	s0,1894 <mtable+0x2e8>
    17f0:	0006                	c.slli	zero,0x1
    17f2:	ec00                	fsw	fs0,24(s0)
    17f4:	33000007          	0x33000007
    17f8:	7200                	flw	fs0,32(a2)
    17fa:	0600                	addi	s0,sp,768
    17fc:	24324023          	0x24324023
    1800:	007c                	addi	a5,sp,12
    1802:	0622                	slli	a2,a2,0x8
    1804:	b491                	j	1248 <memset+0x74>
    1806:	067f                	0x67f
    1808:	3206c023          	0x3206c023
    180c:	7c24                	flw	fs1,120(s0)
    180e:	2200                	fld	fs0,0(a2)
    1810:	2706                	fld	fa4,64(sp)
    1812:	b891                	j	1066 <realloc_beebs+0xe>
    1814:	067f                	0x67f
    1816:	02c07827          	0x2c07827
    181a:	2432                	fld	fs0,264(sp)
    181c:	007c                	addi	a5,sp,12
    181e:	0622                	slli	a2,a2,0x8
    1820:	04c07727          	0x4c07727
    1824:	2432                	fld	fs0,264(sp)
    1826:	007c                	addi	a5,sp,12
    1828:	0622                	slli	a2,a2,0x8
    182a:	07ec9f27          	0x7ec9f27
    182e:	0000                	unimp
    1830:	07f0                	addi	a2,sp,972
    1832:	0000                	unimp
    1834:	0076002b          	0x76002b
    1838:	9106                	add	sp,sp,ra
    183a:	7fb4                	flw	fa3,120(a5)
    183c:	2306                	fld	ft6,64(sp)
    183e:	06c0                	addi	s0,sp,836
    1840:	2432                	fld	fs0,264(sp)
    1842:	007c                	addi	a5,sp,12
    1844:	0622                	slli	a2,a2,0x8
    1846:	7fb89127          	0x7fb89127
    184a:	2706                	fld	fa4,64(sp)
    184c:	c078                	sw	a4,68(s0)
    184e:	3202                	fld	ft4,32(sp)
    1850:	7c24                	flw	fs1,120(s0)
    1852:	2200                	fld	fs0,0(a2)
    1854:	2706                	fld	fa4,64(sp)
    1856:	3204c077          	0x3204c077
    185a:	7c24                	flw	fs1,120(s0)
    185c:	2200                	fld	fs0,0(a2)
    185e:	2706                	fld	fa4,64(sp)
    1860:	f09f 0007 f400      	0xf4000007f09f
    1866:	21000007          	0x21000007
    186a:	7600                	flw	fs0,40(a2)
    186c:	0600                	addi	s0,sp,768
    186e:	008c                	addi	a1,sp,64
    1870:	2706                	fld	fa4,64(sp)
    1872:	b891                	j	10c6 <realloc_beebs+0x6e>
    1874:	067f                	0x67f
    1876:	02c07827          	0x2c07827
    187a:	2432                	fld	fs0,264(sp)
    187c:	007c                	addi	a5,sp,12
    187e:	0622                	slli	a2,a2,0x8
    1880:	04c07727          	0x4c07727
    1884:	2432                	fld	fs0,264(sp)
    1886:	007c                	addi	a5,sp,12
    1888:	0622                	slli	a2,a2,0x8
    188a:	07f49f27          	0x7f49f27
    188e:	0000                	unimp
    1890:	07f8                	addi	a4,sp,972
    1892:	0000                	unimp
    1894:	0020                	addi	s0,sp,8
    1896:	0076                	c.slli	zero,0x1d
    1898:	8c06                	mv	s8,ra
    189a:	2700                	fld	fs0,8(a4)
    189c:	b891                	j	10f0 <reset_handler+0x4>
    189e:	067f                	0x67f
    18a0:	02c07827          	0x2c07827
    18a4:	2432                	fld	fs0,264(sp)
    18a6:	007c                	addi	a5,sp,12
    18a8:	0622                	slli	a2,a2,0x8
    18aa:	04c07727          	0x4c07727
    18ae:	2432                	fld	fs0,264(sp)
    18b0:	007c                	addi	a5,sp,12
    18b2:	0622                	slli	a2,a2,0x8
    18b4:	07f89f27          	0x7f89f27
    18b8:	0000                	unimp
    18ba:	07fc                	addi	a5,sp,972
    18bc:	0000                	unimp
    18be:	001f 0076 008c      	0x8c0076001f
    18c4:	7fb89127          	0x7fb89127
    18c8:	2706                	fld	fa4,64(sp)
    18ca:	c078                	sw	a4,68(s0)
    18cc:	3202                	fld	ft4,32(sp)
    18ce:	7c24                	flw	fs1,120(s0)
    18d0:	2200                	fld	fs0,0(a2)
    18d2:	2706                	fld	fa4,64(sp)
    18d4:	3204c077          	0x3204c077
    18d8:	7c24                	flw	fs1,120(s0)
    18da:	2200                	fld	fs0,0(a2)
    18dc:	2706                	fld	fa4,64(sp)
    18de:	fc9f 0007 0000      	0x7fc9f
    18e4:	0008                	0x8
    18e6:	1e00                	addi	s0,sp,816
    18e8:	7600                	flw	fs0,40(a2)
    18ea:	8c00                	0x8c00
    18ec:	2700                	fld	fs0,8(a4)
    18ee:	b891                	j	1142 <reset_handler+0x56>
    18f0:	067f                	0x67f
    18f2:	32007827          	0x32007827
    18f6:	7c24                	flw	fs1,120(s0)
    18f8:	2200                	fld	fs0,0(a2)
    18fa:	2706                	fld	fa4,64(sp)
    18fc:	3204c077          	0x3204c077
    1900:	7c24                	flw	fs1,120(s0)
    1902:	2200                	fld	fs0,0(a2)
    1904:	2706                	fld	fa4,64(sp)
    1906:	009f 0008 0400      	0x4000008009f
    190c:	0008                	0x8
    190e:	1c00                	addi	s0,sp,560
    1910:	7600                	flw	fs0,40(a2)
    1912:	8c00                	0x8c00
    1914:	2700                	fld	fs0,8(a4)
    1916:	b891                	j	116a <reset_handler+0x7e>
    1918:	067f                	0x67f
    191a:	7c007827          	0x7c007827
    191e:	2200                	fld	fs0,0(a2)
    1920:	2706                	fld	fa4,64(sp)
    1922:	3204c077          	0x3204c077
    1926:	7c24                	flw	fs1,120(s0)
    1928:	2200                	fld	fs0,0(a2)
    192a:	2706                	fld	fa4,64(sp)
    192c:	049f 0008 0800      	0x8000008049f
    1932:	0008                	0x8
    1934:	2500                	fld	fs0,8(a0)
    1936:	7200                	flw	fs0,32(a2)
    1938:	0600                	addi	s0,sp,768
    193a:	24324023          	0x24324023
    193e:	007c                	addi	a5,sp,12
    1940:	0622                	slli	a2,a2,0x8
    1942:	008c                	addi	a1,sp,64
    1944:	7fb89127          	0x7fb89127
    1948:	2706                	fld	fa4,64(sp)
    194a:	0078                	addi	a4,sp,12
    194c:	007c                	addi	a5,sp,12
    194e:	0622                	slli	a2,a2,0x8
    1950:	04c07727          	0x4c07727
    1954:	2432                	fld	fs0,264(sp)
    1956:	007c                	addi	a5,sp,12
    1958:	0622                	slli	a2,a2,0x8
    195a:	08089f27          	0x8089f27
    195e:	0000                	unimp
    1960:	080c                	addi	a1,sp,16
    1962:	0000                	unimp
    1964:	0030                	addi	a2,sp,8
    1966:	0072                	c.slli	zero,0x1c
    1968:	2306                	fld	ft6,64(sp)
    196a:	3240                	fld	fs0,160(a2)
    196c:	7c24                	flw	fs1,120(s0)
    196e:	2200                	fld	fs0,0(a2)
    1970:	9106                	add	sp,sp,ra
    1972:	7fb4                	flw	fa3,120(a5)
    1974:	2306                	fld	ft6,64(sp)
    1976:	06c0                	addi	s0,sp,836
    1978:	2432                	fld	fs0,264(sp)
    197a:	007c                	addi	a5,sp,12
    197c:	0622                	slli	a2,a2,0x8
    197e:	7fb89127          	0x7fb89127
    1982:	2706                	fld	fa4,64(sp)
    1984:	0078                	addi	a4,sp,12
    1986:	007c                	addi	a5,sp,12
    1988:	0622                	slli	a2,a2,0x8
    198a:	04c07727          	0x4c07727
    198e:	2432                	fld	fs0,264(sp)
    1990:	007c                	addi	a5,sp,12
    1992:	0622                	slli	a2,a2,0x8
    1994:	080c9f27          	0x80c9f27
    1998:	0000                	unimp
    199a:	0810                	addi	a2,sp,16
    199c:	0000                	unimp
    199e:	0072002f          	0x72002f
    19a2:	2306                	fld	ft6,64(sp)
    19a4:	3240                	fld	fs0,160(a2)
    19a6:	7c24                	flw	fs1,120(s0)
    19a8:	2200                	fld	fs0,0(a2)
    19aa:	9106                	add	sp,sp,ra
    19ac:	7fb4                	flw	fa3,120(a5)
    19ae:	2306                	fld	ft6,64(sp)
    19b0:	06c0                	addi	s0,sp,836
    19b2:	2432                	fld	fs0,264(sp)
    19b4:	007c                	addi	a5,sp,12
    19b6:	0622                	slli	a2,a2,0x8
    19b8:	7fb89127          	0x7fb89127
    19bc:	2706                	fld	fa4,64(sp)
    19be:	0078                	addi	a4,sp,12
    19c0:	007c                	addi	a5,sp,12
    19c2:	0622                	slli	a2,a2,0x8
    19c4:	32007727          	0x32007727
    19c8:	7c24                	flw	fs1,120(s0)
    19ca:	2200                	fld	fs0,0(a2)
    19cc:	2706                	fld	fa4,64(sp)
    19ce:	009f 0000 0000      	0x9f
    19d4:	0000                	unimp
    19d6:	a400                	fsd	fs0,8(s0)
    19d8:	0004                	0x4
    19da:	9c00                	0x9c00
    19dc:	0006                	c.slli	zero,0x1
    19de:	0100                	addi	s0,sp,128
    19e0:	6800                	flw	fs0,16(s0)
    19e2:	06e0                	addi	s0,sp,844
    19e4:	0000                	unimp
    19e6:	0834                	addi	a3,sp,24
    19e8:	0000                	unimp
    19ea:	0001                	nop
    19ec:	0068                	addi	a0,sp,12
    19ee:	0000                	unimp
    19f0:	0000                	unimp
    19f2:	0000                	unimp
    19f4:	3400                	fld	fs0,40(s0)
    19f6:	0008                	0x8
    19f8:	8000                	0x8000
    19fa:	0008                	0x8
    19fc:	0100                	addi	s0,sp,128
    19fe:	5a00                	lw	s0,48(a2)
    1a00:	0880                	addi	s0,sp,80
    1a02:	0000                	unimp
    1a04:	0884                	addi	s1,sp,80
    1a06:	0000                	unimp
    1a08:	0004                	0x4
    1a0a:	9f5a01f3          	0x9f5a01f3
    1a0e:	0884                	addi	s1,sp,80
    1a10:	0000                	unimp
    1a12:	0cdc                	addi	a5,sp,596
    1a14:	0000                	unimp
    1a16:	0001                	nop
    1a18:	005a                	c.slli	zero,0x16
    1a1a:	0000                	unimp
    1a1c:	0000                	unimp
    1a1e:	0000                	unimp
    1a20:	3400                	fld	fs0,40(s0)
    1a22:	0008                	0x8
    1a24:	8300                	0x8300
    1a26:	0008                	0x8
    1a28:	0100                	addi	s0,sp,128
    1a2a:	5b00                	lw	s0,48(a4)
    1a2c:	00000883          	lb	a7,0(zero) # 0 <__DYNAMIC>
    1a30:	0884                	addi	s1,sp,80
    1a32:	0000                	unimp
    1a34:	0004                	0x4
    1a36:	9f5b01f3          	0x9f5b01f3
    1a3a:	0884                	addi	s1,sp,80
    1a3c:	0000                	unimp
    1a3e:	0cdc                	addi	a5,sp,596
    1a40:	0000                	unimp
    1a42:	0001                	nop
    1a44:	0000005b          	0x5b
    1a48:	0000                	unimp
    1a4a:	0000                	unimp
    1a4c:	3400                	fld	fs0,40(s0)
    1a4e:	0008                	0x8
    1a50:	8300                	0x8300
    1a52:	0008                	0x8
    1a54:	0100                	addi	s0,sp,128
    1a56:	5c00                	lw	s0,56(s0)
    1a58:	00000883          	lb	a7,0(zero) # 0 <__DYNAMIC>
    1a5c:	0884                	addi	s1,sp,80
    1a5e:	0000                	unimp
    1a60:	0004                	0x4
    1a62:	9f5c01f3          	0x9f5c01f3
    1a66:	0884                	addi	s1,sp,80
    1a68:	0000                	unimp
    1a6a:	0cdc                	addi	a5,sp,596
    1a6c:	0000                	unimp
    1a6e:	0001                	nop
    1a70:	005c                	addi	a5,sp,4
    1a72:	0000                	unimp
    1a74:	0000                	unimp
    1a76:	0000                	unimp
    1a78:	3400                	fld	fs0,40(s0)
    1a7a:	0008                	0x8
    1a7c:	4000                	lw	s0,0(s0)
    1a7e:	0008                	0x8
    1a80:	0100                	addi	s0,sp,128
    1a82:	5d00                	lw	s0,56(a0)
    1a84:	0840                	addi	s0,sp,20
    1a86:	0000                	unimp
    1a88:	0cdc                	addi	a5,sp,596
    1a8a:	0000                	unimp
    1a8c:	0004                	0x4
    1a8e:	9f5d01f3          	0x9f5d01f3
	...
    1a9a:	0834                	addi	a3,sp,24
    1a9c:	0000                	unimp
    1a9e:	00000883          	lb	a7,0(zero) # 0 <__DYNAMIC>
    1aa2:	0001                	nop
    1aa4:	835e                	mv	t1,s7
    1aa6:	0008                	0x8
    1aa8:	dc00                	sw	s0,56(s0)
    1aaa:	000c                	0xc
    1aac:	0400                	addi	s0,sp,512
    1aae:	f300                	fsw	fs0,32(a4)
    1ab0:	5e01                	li	t3,-32
    1ab2:	009f 0000 0000      	0x9f
    1ab8:	0000                	unimp
    1aba:	3400                	fld	fs0,40(s0)
    1abc:	0008                	0x8
    1abe:	8300                	0x8300
    1ac0:	0008                	0x8
    1ac2:	0100                	addi	s0,sp,128
    1ac4:	5f00                	lw	s0,56(a4)
    1ac6:	00000883          	lb	a7,0(zero) # 0 <__DYNAMIC>
    1aca:	0cdc                	addi	a5,sp,596
    1acc:	0000                	unimp
    1ace:	0004                	0x4
    1ad0:	9f5f01f3          	0x9f5f01f3
	...
    1adc:	0884                	addi	s1,sp,80
    1ade:	0000                	unimp
    1ae0:	0a88                	addi	a0,sp,336
    1ae2:	0000                	unimp
    1ae4:	0001                	nop
    1ae6:	885f 000a 4400      	0x4400000a885f
    1aec:	0300000b          	0x300000b
    1af0:	7f00                	flw	fs0,56(a4)
    1af2:	9f70                	0x9f70
    1af4:	0b44                	addi	s1,sp,404
    1af6:	0000                	unimp
    1af8:	0cdc                	addi	a5,sp,596
    1afa:	0000                	unimp
    1afc:	0001                	nop
    1afe:	005f 0000 0000      	0x5f
    1b04:	0000                	unimp
    1b06:	8400                	0x8400
    1b08:	0008                	0x8
    1b0a:	7c00                	flw	fs0,56(s0)
    1b0c:	000a                	c.slli	zero,0x2
    1b0e:	0100                	addi	s0,sp,128
    1b10:	5e00                	lw	s0,56(a2)
    1b12:	0a7c                	addi	a5,sp,284
    1b14:	0000                	unimp
    1b16:	0b44                	addi	s1,sp,404
    1b18:	0000                	unimp
    1b1a:	707e0003          	lb	zero,1799(t3)
    1b1e:	449f 000b dc00      	0xdc00000b449f
    1b24:	000c                	0xc
    1b26:	0100                	addi	s0,sp,128
    1b28:	5e00                	lw	s0,56(a2)
	...
    1b32:	0884                	addi	s1,sp,80
    1b34:	0000                	unimp
    1b36:	0a7c                	addi	a5,sp,284
    1b38:	0000                	unimp
    1b3a:	01f3000b          	0x1f3000b
    1b3e:	7e5e                	flw	ft8,244(sp)
    1b40:	1c00                	addi	s0,sp,560
    1b42:	225d01f3          	0x225d01f3
    1b46:	7c9f 000a 4400      	0x4400000a7c9f
    1b4c:	0d00000b          	0xd00000b
    1b50:	f300                	fsw	fs0,32(a4)
    1b52:	5e01                	li	t3,-32
    1b54:	007e                	c.slli	zero,0x1f
    1b56:	f31c                	fsw	fa5,32(a4)
    1b58:	5d01                	li	s10,-32
    1b5a:	2322                	fld	ft6,8(sp)
    1b5c:	9f10                	0x9f10
    1b5e:	0b44                	addi	s1,sp,404
    1b60:	0000                	unimp
    1b62:	0cdc                	addi	a5,sp,596
    1b64:	0000                	unimp
    1b66:	01f3000b          	0x1f3000b
    1b6a:	7e5e                	flw	ft8,244(sp)
    1b6c:	1c00                	addi	s0,sp,560
    1b6e:	225d01f3          	0x225d01f3
    1b72:	009f 0000 0000      	0x9f
    1b78:	0000                	unimp
    1b7a:	d000                	sw	s0,32(s0)
    1b7c:	0008                	0x8
    1b7e:	4400                	lw	s0,8(s0)
    1b80:	0100000b          	0x100000b
    1b84:	6100                	flw	fs0,0(a0)
    1b86:	0b88                	addi	a0,sp,464
    1b88:	0000                	unimp
    1b8a:	0b8c                	addi	a1,sp,464
    1b8c:	0000                	unimp
    1b8e:	c086002b          	0xc086002b
    1b92:	3200                	fld	fs0,32(a2)
    1b94:	7c24                	flw	fs1,120(s0)
    1b96:	2200                	fld	fs0,0(a2)
    1b98:	8b06                	mv	s6,ra
    1b9a:	2700                	fld	fs0,8(a4)
    1b9c:	c085                	beqz	s1,1bbc <_aes_decrypt_table+0x210>
    1b9e:	3206                	fld	ft4,96(sp)
    1ba0:	7c24                	flw	fs1,120(s0)
    1ba2:	2200                	fld	fs0,0(a2)
    1ba4:	2706                	fld	fa4,64(sp)
    1ba6:	c075                	beqz	s0,1c8a <_aes_decrypt_table+0x2de>
    1ba8:	3202                	fld	ft4,32(sp)
    1baa:	7c24                	flw	fs1,120(s0)
    1bac:	2200                	fld	fs0,0(a2)
    1bae:	2706                	fld	fa4,64(sp)
    1bb0:	3204c08f          	0x3204c08f
    1bb4:	7c24                	flw	fs1,120(s0)
    1bb6:	2200                	fld	fs0,0(a2)
    1bb8:	2706                	fld	fa4,64(sp)
    1bba:	8c9f 000b 9400      	0x9400000b8c9f
    1bc0:	2f00000b          	0x2f00000b
    1bc4:	8100                	0x8100
    1bc6:	0800                	addi	s0,sp,16
    1bc8:	1aff                	0x1aff
    1bca:	24324023          	0x24324023
    1bce:	007c                	addi	a5,sp,12
    1bd0:	0622                	slli	a2,a2,0x8
    1bd2:	8527008b          	0x8527008b
    1bd6:	06c0                	addi	s0,sp,836
    1bd8:	2432                	fld	fs0,264(sp)
    1bda:	007c                	addi	a5,sp,12
    1bdc:	0622                	slli	a2,a2,0x8
    1bde:	02c07527          	0x2c07527
    1be2:	2432                	fld	fs0,264(sp)
    1be4:	007c                	addi	a5,sp,12
    1be6:	0622                	slli	a2,a2,0x8
    1be8:	04c08f27          	0x4c08f27
    1bec:	2432                	fld	fs0,264(sp)
    1bee:	007c                	addi	a5,sp,12
    1bf0:	0622                	slli	a2,a2,0x8
    1bf2:	0b949f27          	0xb949f27
    1bf6:	0000                	unimp
    1bf8:	0b9c                	addi	a5,sp,464
    1bfa:	0000                	unimp
    1bfc:	0025                	c.nop	9
    1bfe:	0086                	slli	ra,ra,0x1
    1c00:	8b06                	mv	s6,ra
    1c02:	2700                	fld	fs0,8(a4)
    1c04:	c085                	beqz	s1,1c24 <_aes_decrypt_table+0x278>
    1c06:	3206                	fld	ft4,96(sp)
    1c08:	7c24                	flw	fs1,120(s0)
    1c0a:	2200                	fld	fs0,0(a2)
    1c0c:	2706                	fld	fa4,64(sp)
    1c0e:	c075                	beqz	s0,1cf2 <_aes_decrypt_table+0x346>
    1c10:	3202                	fld	ft4,32(sp)
    1c12:	7c24                	flw	fs1,120(s0)
    1c14:	2200                	fld	fs0,0(a2)
    1c16:	2706                	fld	fa4,64(sp)
    1c18:	3204c08f          	0x3204c08f
    1c1c:	7c24                	flw	fs1,120(s0)
    1c1e:	2200                	fld	fs0,0(a2)
    1c20:	2706                	fld	fa4,64(sp)
    1c22:	9c9f 000b a000      	0xa000000b9c9f
    1c28:	2400000b          	0x2400000b
    1c2c:	8600                	0x8600
    1c2e:	0600                	addi	s0,sp,768
    1c30:	8527008b          	0x8527008b
    1c34:	3200                	fld	fs0,32(a2)
    1c36:	7c24                	flw	fs1,120(s0)
    1c38:	2200                	fld	fs0,0(a2)
    1c3a:	2706                	fld	fa4,64(sp)
    1c3c:	c075                	beqz	s0,1d20 <_aes_decrypt_table+0x374>
    1c3e:	3202                	fld	ft4,32(sp)
    1c40:	7c24                	flw	fs1,120(s0)
    1c42:	2200                	fld	fs0,0(a2)
    1c44:	2706                	fld	fa4,64(sp)
    1c46:	3204c08f          	0x3204c08f
    1c4a:	7c24                	flw	fs1,120(s0)
    1c4c:	2200                	fld	fs0,0(a2)
    1c4e:	2706                	fld	fa4,64(sp)
    1c50:	a49f 000b ac00      	0xac00000ba49f
    1c56:	1f00000b          	0x1f00000b
    1c5a:	8600                	0x8600
    1c5c:	0600                	addi	s0,sp,768
    1c5e:	8527008b          	0x8527008b
    1c62:	0600                	addi	s0,sp,768
    1c64:	02c07527          	0x2c07527
    1c68:	2432                	fld	fs0,264(sp)
    1c6a:	007c                	addi	a5,sp,12
    1c6c:	0622                	slli	a2,a2,0x8
    1c6e:	04c08f27          	0x4c08f27
    1c72:	2432                	fld	fs0,264(sp)
    1c74:	007c                	addi	a5,sp,12
    1c76:	0622                	slli	a2,a2,0x8
    1c78:	0bac9f27          	0xbac9f27
    1c7c:	0000                	unimp
    1c7e:	0bb0                	addi	a2,sp,472
    1c80:	0000                	unimp
    1c82:	001e                	c.slli	zero,0x7
    1c84:	0086                	slli	ra,ra,0x1
    1c86:	8b06                	mv	s6,ra
    1c88:	2700                	fld	fs0,8(a4)
    1c8a:	0085                	addi	ra,ra,1
    1c8c:	2706                	fld	fa4,64(sp)
    1c8e:	0075                	c.nop	29
    1c90:	2432                	fld	fs0,264(sp)
    1c92:	007c                	addi	a5,sp,12
    1c94:	0622                	slli	a2,a2,0x8
    1c96:	04c08f27          	0x4c08f27
    1c9a:	2432                	fld	fs0,264(sp)
    1c9c:	007c                	addi	a5,sp,12
    1c9e:	0622                	slli	a2,a2,0x8
    1ca0:	0bb09f27          	0xbb09f27
    1ca4:	0000                	unimp
    1ca6:	0bb4                	addi	a3,sp,472
    1ca8:	0000                	unimp
    1caa:	001f 0086 8706      	0x87060086001f
    1cb0:	0670                	addi	a2,sp,780
    1cb2:	06008527          	0x6008527
    1cb6:	32007527          	0x32007527
    1cba:	7c24                	flw	fs1,120(s0)
    1cbc:	2200                	fld	fs0,0(a2)
    1cbe:	2706                	fld	fa4,64(sp)
    1cc0:	3204c08f          	0x3204c08f
    1cc4:	7c24                	flw	fs1,120(s0)
    1cc6:	2200                	fld	fs0,0(a2)
    1cc8:	2706                	fld	fa4,64(sp)
    1cca:	b49f 000b b800      	0xb800000bb49f
    1cd0:	1d00000b          	0x1d00000b
    1cd4:	8600                	0x8600
    1cd6:	0600                	addi	s0,sp,768
    1cd8:	27067087          	0x27067087
    1cdc:	0085                	addi	ra,ra,1
    1cde:	2706                	fld	fa4,64(sp)
    1ce0:	0075                	c.nop	29
    1ce2:	007c                	addi	a5,sp,12
    1ce4:	0622                	slli	a2,a2,0x8
    1ce6:	04c08f27          	0x4c08f27
    1cea:	2432                	fld	fs0,264(sp)
    1cec:	007c                	addi	a5,sp,12
    1cee:	0622                	slli	a2,a2,0x8
    1cf0:	0bb89f27          	0xbb89f27
    1cf4:	0000                	unimp
    1cf6:	0bbc                	addi	a5,sp,472
    1cf8:	0000                	unimp
    1cfa:	001c                	0x1c
    1cfc:	0086                	slli	ra,ra,0x1
    1cfe:	8706                	mv	a4,ra
    1d00:	0670                	addi	a2,sp,780
    1d02:	06008527          	0x6008527
    1d06:	7c007527          	0x7c007527
    1d0a:	2200                	fld	fs0,0(a2)
    1d0c:	2706                	fld	fa4,64(sp)
    1d0e:	2432008f          	0x2432008f
    1d12:	007c                	addi	a5,sp,12
    1d14:	0622                	slli	a2,a2,0x8
    1d16:	00009f27          	0x9f27
    1d1a:	0000                	unimp
    1d1c:	0000                	unimp
    1d1e:	0000                	unimp
    1d20:	08f8                	addi	a4,sp,92
    1d22:	0000                	unimp
    1d24:	0968                	addi	a0,sp,156
    1d26:	0000                	unimp
    1d28:	0001                	nop
    1d2a:	885d                	andi	s0,s0,23
    1d2c:	d400000b          	0xd400000b
    1d30:	2b00000b          	0x2b00000b
    1d34:	8400                	0x8400
    1d36:	00c0                	addi	s0,sp,68
    1d38:	2432                	fld	fs0,264(sp)
    1d3a:	007c                	addi	a5,sp,12
    1d3c:	0622                	slli	a2,a2,0x8
    1d3e:	008a                	slli	ra,ra,0x2
    1d40:	06c08327          	0x6c08327
    1d44:	2432                	fld	fs0,264(sp)
    1d46:	007c                	addi	a5,sp,12
    1d48:	0622                	slli	a2,a2,0x8
    1d4a:	02c08e27          	0x2c08e27
    1d4e:	2432                	fld	fs0,264(sp)
    1d50:	007c                	addi	a5,sp,12
    1d52:	0622                	slli	a2,a2,0x8
    1d54:	04c08d27          	0x4c08d27
    1d58:	2432                	fld	fs0,264(sp)
    1d5a:	007c                	addi	a5,sp,12
    1d5c:	0622                	slli	a2,a2,0x8
    1d5e:	0bd49f27          	0xbd49f27
    1d62:	0000                	unimp
    1d64:	0bd8                	addi	a4,sp,468
    1d66:	0000                	unimp
    1d68:	002a                	c.slli	zero,0xa
    1d6a:	0084                	addi	s1,sp,64
    1d6c:	2432                	fld	fs0,264(sp)
    1d6e:	007c                	addi	a5,sp,12
    1d70:	0622                	slli	a2,a2,0x8
    1d72:	008a                	slli	ra,ra,0x2
    1d74:	06c08327          	0x6c08327
    1d78:	2432                	fld	fs0,264(sp)
    1d7a:	007c                	addi	a5,sp,12
    1d7c:	0622                	slli	a2,a2,0x8
    1d7e:	02c08e27          	0x2c08e27
    1d82:	2432                	fld	fs0,264(sp)
    1d84:	007c                	addi	a5,sp,12
    1d86:	0622                	slli	a2,a2,0x8
    1d88:	04c08d27          	0x4c08d27
    1d8c:	2432                	fld	fs0,264(sp)
    1d8e:	007c                	addi	a5,sp,12
    1d90:	0622                	slli	a2,a2,0x8
    1d92:	0be09f27          	0xbe09f27
    1d96:	0000                	unimp
    1d98:	0be8                	addi	a0,sp,476
    1d9a:	0000                	unimp
    1d9c:	0025                	c.nop	9
    1d9e:	0084                	addi	s1,sp,64
    1da0:	8a06                	mv	s4,ra
    1da2:	2700                	fld	fs0,8(a4)
    1da4:	3206c083          	lbu	ra,800(a3)
    1da8:	7c24                	flw	fs1,120(s0)
    1daa:	2200                	fld	fs0,0(a2)
    1dac:	2706                	fld	fa4,64(sp)
    1dae:	c08e                	sw	gp,64(sp)
    1db0:	3202                	fld	ft4,32(sp)
    1db2:	7c24                	flw	fs1,120(s0)
    1db4:	2200                	fld	fs0,0(a2)
    1db6:	2706                	fld	fa4,64(sp)
    1db8:	c08d                	beqz	s1,1dda <_aes_decrypt_table+0x42e>
    1dba:	3204                	fld	fs1,32(a2)
    1dbc:	7c24                	flw	fs1,120(s0)
    1dbe:	2200                	fld	fs0,0(a2)
    1dc0:	2706                	fld	fa4,64(sp)
    1dc2:	e89f 000b f000      	0xf000000be89f
    1dc8:	2400000b          	0x2400000b
    1dcc:	8400                	0x8400
    1dce:	0600                	addi	s0,sp,768
    1dd0:	008a                	slli	ra,ra,0x2
    1dd2:	32008327          	0x32008327
    1dd6:	7c24                	flw	fs1,120(s0)
    1dd8:	2200                	fld	fs0,0(a2)
    1dda:	2706                	fld	fa4,64(sp)
    1ddc:	c08e                	sw	gp,64(sp)
    1dde:	3202                	fld	ft4,32(sp)
    1de0:	7c24                	flw	fs1,120(s0)
    1de2:	2200                	fld	fs0,0(a2)
    1de4:	2706                	fld	fa4,64(sp)
    1de6:	c08d                	beqz	s1,1e08 <_aes_decrypt_table+0x45c>
    1de8:	3204                	fld	fs1,32(a2)
    1dea:	7c24                	flw	fs1,120(s0)
    1dec:	2200                	fld	fs0,0(a2)
    1dee:	2706                	fld	fa4,64(sp)
    1df0:	f49f 000b fc00      	0xfc00000bf49f
    1df6:	1f00000b          	0x1f00000b
    1dfa:	8400                	0x8400
    1dfc:	0600                	addi	s0,sp,768
    1dfe:	008a                	slli	ra,ra,0x2
    1e00:	06008327          	0x6008327
    1e04:	02c08e27          	0x2c08e27
    1e08:	2432                	fld	fs0,264(sp)
    1e0a:	007c                	addi	a5,sp,12
    1e0c:	0622                	slli	a2,a2,0x8
    1e0e:	04c08d27          	0x4c08d27
    1e12:	2432                	fld	fs0,264(sp)
    1e14:	007c                	addi	a5,sp,12
    1e16:	0622                	slli	a2,a2,0x8
    1e18:	0bfc9f27          	0xbfc9f27
    1e1c:	0000                	unimp
    1e1e:	0c00                	addi	s0,sp,528
    1e20:	0000                	unimp
    1e22:	001e                	c.slli	zero,0x7
    1e24:	0084                	addi	s1,sp,64
    1e26:	8a06                	mv	s4,ra
    1e28:	2700                	fld	fs0,8(a4)
    1e2a:	27060083          	lb	ra,624(a2)
    1e2e:	008e                	slli	ra,ra,0x3
    1e30:	2432                	fld	fs0,264(sp)
    1e32:	007c                	addi	a5,sp,12
    1e34:	0622                	slli	a2,a2,0x8
    1e36:	04c08d27          	0x4c08d27
    1e3a:	2432                	fld	fs0,264(sp)
    1e3c:	007c                	addi	a5,sp,12
    1e3e:	0622                	slli	a2,a2,0x8
    1e40:	0c009f27          	0xc009f27
    1e44:	0000                	unimp
    1e46:	0c04                	addi	s1,sp,528
    1e48:	0000                	unimp
    1e4a:	001f 0084 8706      	0x87060084001f
    1e50:	0674                	addi	a3,sp,780
    1e52:	06008327          	0x6008327
    1e56:	32008e27          	0x32008e27
    1e5a:	7c24                	flw	fs1,120(s0)
    1e5c:	2200                	fld	fs0,0(a2)
    1e5e:	2706                	fld	fa4,64(sp)
    1e60:	c08d                	beqz	s1,1e82 <_aes_decrypt_table+0x4d6>
    1e62:	3204                	fld	fs1,32(a2)
    1e64:	7c24                	flw	fs1,120(s0)
    1e66:	2200                	fld	fs0,0(a2)
    1e68:	2706                	fld	fa4,64(sp)
    1e6a:	049f 000c 0800      	0x800000c049f
    1e70:	000c                	0xc
    1e72:	1d00                	addi	s0,sp,688
    1e74:	8400                	0x8400
    1e76:	0600                	addi	s0,sp,768
    1e78:	27067487          	0x27067487
    1e7c:	27060083          	lb	ra,624(a2)
    1e80:	008e                	slli	ra,ra,0x3
    1e82:	007c                	addi	a5,sp,12
    1e84:	0622                	slli	a2,a2,0x8
    1e86:	04c08d27          	0x4c08d27
    1e8a:	2432                	fld	fs0,264(sp)
    1e8c:	007c                	addi	a5,sp,12
    1e8e:	0622                	slli	a2,a2,0x8
    1e90:	0c089f27          	0xc089f27
    1e94:	0000                	unimp
    1e96:	0c0c                	addi	a1,sp,528
    1e98:	0000                	unimp
    1e9a:	001c                	0x1c
    1e9c:	0084                	addi	s1,sp,64
    1e9e:	8706                	mv	a4,ra
    1ea0:	0674                	addi	a3,sp,780
    1ea2:	06008327          	0x6008327
    1ea6:	7c008e27          	0x7c008e27
    1eaa:	2200                	fld	fs0,0(a2)
    1eac:	2706                	fld	fa4,64(sp)
    1eae:	008d                	addi	ra,ra,3
    1eb0:	2432                	fld	fs0,264(sp)
    1eb2:	007c                	addi	a5,sp,12
    1eb4:	0622                	slli	a2,a2,0x8
    1eb6:	00009f27          	0x9f27
    1eba:	0000                	unimp
    1ebc:	0000                	unimp
    1ebe:	0000                	unimp
    1ec0:	0920                	addi	s0,sp,152
    1ec2:	0000                	unimp
    1ec4:	09a8                	addi	a0,sp,216
    1ec6:	0000                	unimp
    1ec8:	0001                	nop
    1eca:	8860                	0x8860
    1ecc:	2400000b          	0x2400000b
    1ed0:	000c                	0xc
    1ed2:	2b00                	fld	fs0,16(a4)
    1ed4:	8200                	0x8200
    1ed6:	00c0                	addi	s0,sp,68
    1ed8:	2432                	fld	fs0,264(sp)
    1eda:	007c                	addi	a5,sp,12
    1edc:	0622                	slli	a2,a2,0x8
    1ede:	0089                	addi	ra,ra,2
    1ee0:	06c07927          	0x6c07927
    1ee4:	2432                	fld	fs0,264(sp)
    1ee6:	007c                	addi	a5,sp,12
    1ee8:	0622                	slli	a2,a2,0x8
    1eea:	02c08c27          	0x2c08c27
    1eee:	2432                	fld	fs0,264(sp)
    1ef0:	007c                	addi	a5,sp,12
    1ef2:	0622                	slli	a2,a2,0x8
    1ef4:	04c07627          	0x4c07627
    1ef8:	2432                	fld	fs0,264(sp)
    1efa:	007c                	addi	a5,sp,12
    1efc:	0622                	slli	a2,a2,0x8
    1efe:	0c249f27          	0xc249f27
    1f02:	0000                	unimp
    1f04:	0c28                	addi	a0,sp,536
    1f06:	0000                	unimp
    1f08:	002a                	c.slli	zero,0xa
    1f0a:	0082                	c.slli64	ra
    1f0c:	2432                	fld	fs0,264(sp)
    1f0e:	007c                	addi	a5,sp,12
    1f10:	0622                	slli	a2,a2,0x8
    1f12:	0089                	addi	ra,ra,2
    1f14:	06c07927          	0x6c07927
    1f18:	2432                	fld	fs0,264(sp)
    1f1a:	007c                	addi	a5,sp,12
    1f1c:	0622                	slli	a2,a2,0x8
    1f1e:	02c08c27          	0x2c08c27
    1f22:	2432                	fld	fs0,264(sp)
    1f24:	007c                	addi	a5,sp,12
    1f26:	0622                	slli	a2,a2,0x8
    1f28:	04c07627          	0x4c07627
    1f2c:	2432                	fld	fs0,264(sp)
    1f2e:	007c                	addi	a5,sp,12
    1f30:	0622                	slli	a2,a2,0x8
    1f32:	0c309f27          	0xc309f27
    1f36:	0000                	unimp
    1f38:	0c38                	addi	a4,sp,536
    1f3a:	0000                	unimp
    1f3c:	0025                	c.nop	9
    1f3e:	0082                	c.slli64	ra
    1f40:	8906                	mv	s2,ra
    1f42:	2700                	fld	fs0,8(a4)
    1f44:	c079                	beqz	s0,200a <_min_stack+0xa>
    1f46:	3206                	fld	ft4,96(sp)
    1f48:	7c24                	flw	fs1,120(s0)
    1f4a:	2200                	fld	fs0,0(a2)
    1f4c:	2706                	fld	fa4,64(sp)
    1f4e:	c08c                	sw	a1,0(s1)
    1f50:	3202                	fld	ft4,32(sp)
    1f52:	7c24                	flw	fs1,120(s0)
    1f54:	2200                	fld	fs0,0(a2)
    1f56:	2706                	fld	fa4,64(sp)
    1f58:	c076                	sw	t4,0(sp)
    1f5a:	3204                	fld	fs1,32(a2)
    1f5c:	7c24                	flw	fs1,120(s0)
    1f5e:	2200                	fld	fs0,0(a2)
    1f60:	2706                	fld	fa4,64(sp)
    1f62:	389f 000c 4000      	0x4000000c389f
    1f68:	000c                	0xc
    1f6a:	2400                	fld	fs0,8(s0)
    1f6c:	8200                	0x8200
    1f6e:	0600                	addi	s0,sp,768
    1f70:	0089                	addi	ra,ra,2
    1f72:	32007927          	0x32007927
    1f76:	7c24                	flw	fs1,120(s0)
    1f78:	2200                	fld	fs0,0(a2)
    1f7a:	2706                	fld	fa4,64(sp)
    1f7c:	c08c                	sw	a1,0(s1)
    1f7e:	3202                	fld	ft4,32(sp)
    1f80:	7c24                	flw	fs1,120(s0)
    1f82:	2200                	fld	fs0,0(a2)
    1f84:	2706                	fld	fa4,64(sp)
    1f86:	c076                	sw	t4,0(sp)
    1f88:	3204                	fld	fs1,32(a2)
    1f8a:	7c24                	flw	fs1,120(s0)
    1f8c:	2200                	fld	fs0,0(a2)
    1f8e:	2706                	fld	fa4,64(sp)
    1f90:	449f 000c 4c00      	0x4c00000c449f
    1f96:	000c                	0xc
    1f98:	1f00                	addi	s0,sp,944
    1f9a:	8200                	0x8200
    1f9c:	0600                	addi	s0,sp,768
    1f9e:	0089                	addi	ra,ra,2
    1fa0:	06007927          	0x6007927
    1fa4:	02c08c27          	0x2c08c27
    1fa8:	2432                	fld	fs0,264(sp)
    1faa:	007c                	addi	a5,sp,12
    1fac:	0622                	slli	a2,a2,0x8
    1fae:	04c07627          	0x4c07627
    1fb2:	2432                	fld	fs0,264(sp)
    1fb4:	007c                	addi	a5,sp,12
    1fb6:	0622                	slli	a2,a2,0x8
    1fb8:	0c4c9f27          	0xc4c9f27
    1fbc:	0000                	unimp
    1fbe:	0c50                	addi	a2,sp,532
    1fc0:	0000                	unimp
    1fc2:	001e                	c.slli	zero,0x7
    1fc4:	0082                	c.slli64	ra
    1fc6:	8906                	mv	s2,ra
    1fc8:	2700                	fld	fs0,8(a4)
    1fca:	0079                	c.nop	30
    1fcc:	2706                	fld	fa4,64(sp)
    1fce:	008c                	addi	a1,sp,64
    1fd0:	2432                	fld	fs0,264(sp)
    1fd2:	007c                	addi	a5,sp,12
    1fd4:	0622                	slli	a2,a2,0x8
    1fd6:	04c07627          	0x4c07627
    1fda:	2432                	fld	fs0,264(sp)
    1fdc:	007c                	addi	a5,sp,12
    1fde:	0622                	slli	a2,a2,0x8
    1fe0:	0c509f27          	0xc509f27
    1fe4:	0000                	unimp
    1fe6:	0c54                	addi	a3,sp,532
    1fe8:	0000                	unimp
    1fea:	001f 0082 8706      	0x87060082001f
    1ff0:	0678                	addi	a4,sp,780
    1ff2:	06007927          	0x6007927
    1ff6:	32008c27          	0x32008c27
    1ffa:	7c24                	flw	fs1,120(s0)
    1ffc:	2200                	fld	fs0,0(a2)
    1ffe:	2706                	fld	fa4,64(sp)
    2000:	c076                	sw	t4,0(sp)
    2002:	3204                	fld	fs1,32(a2)
    2004:	7c24                	flw	fs1,120(s0)
    2006:	2200                	fld	fs0,0(a2)
    2008:	2706                	fld	fa4,64(sp)
    200a:	549f 000c 5800      	0x5800000c549f
    2010:	000c                	0xc
    2012:	1d00                	addi	s0,sp,688
    2014:	8200                	0x8200
    2016:	0600                	addi	s0,sp,768
    2018:	27067887          	0x27067887
    201c:	0079                	c.nop	30
    201e:	2706                	fld	fa4,64(sp)
    2020:	008c                	addi	a1,sp,64
    2022:	007c                	addi	a5,sp,12
    2024:	0622                	slli	a2,a2,0x8
    2026:	04c07627          	0x4c07627
    202a:	2432                	fld	fs0,264(sp)
    202c:	007c                	addi	a5,sp,12
    202e:	0622                	slli	a2,a2,0x8
    2030:	0c589f27          	0xc589f27
    2034:	0000                	unimp
    2036:	0c5c                	addi	a5,sp,532
    2038:	0000                	unimp
    203a:	001c                	0x1c
    203c:	0082                	c.slli64	ra
    203e:	8706                	mv	a4,ra
    2040:	0678                	addi	a4,sp,780
    2042:	06007927          	0x6007927
    2046:	7c008c27          	0x7c008c27
    204a:	2200                	fld	fs0,0(a2)
    204c:	2706                	fld	fa4,64(sp)
    204e:	0076                	c.slli	zero,0x1d
    2050:	2432                	fld	fs0,264(sp)
    2052:	007c                	addi	a5,sp,12
    2054:	0622                	slli	a2,a2,0x8
    2056:	00009f27          	0x9f27
    205a:	0000                	unimp
    205c:	0000                	unimp
    205e:	0000                	unimp
    2060:	094c                	addi	a1,sp,148
    2062:	0000                	unimp
    2064:	096c                	addi	a1,sp,156
    2066:	0000                	unimp
    2068:	0001                	nop
    206a:	000b8857          	0xb8857
    206e:	9400                	0x9400
    2070:	000c                	0xc
    2072:	3300                	fld	fs0,32(a4)
    2074:	7200                	flw	fs0,32(a2)
    2076:	0600                	addi	s0,sp,768
    2078:	24324023          	0x24324023
    207c:	007c                	addi	a5,sp,12
    207e:	0622                	slli	a2,a2,0x8
    2080:	b491                	j	1ac4 <_aes_decrypt_table+0x118>
    2082:	067f                	0x67f
    2084:	3206c023          	0x3206c023
    2088:	7c24                	flw	fs1,120(s0)
    208a:	2200                	fld	fs0,0(a2)
    208c:	2706                	fld	fa4,64(sp)
    208e:	b891                	j	18e2 <mtable+0x336>
    2090:	067f                	0x67f
    2092:	02c07827          	0x2c07827
    2096:	2432                	fld	fs0,264(sp)
    2098:	007c                	addi	a5,sp,12
    209a:	0622                	slli	a2,a2,0x8
    209c:	04c07727          	0x4c07727
    20a0:	2432                	fld	fs0,264(sp)
    20a2:	007c                	addi	a5,sp,12
    20a4:	0622                	slli	a2,a2,0x8
    20a6:	0c949f27          	0xc949f27
    20aa:	0000                	unimp
    20ac:	0c98                	addi	a4,sp,592
    20ae:	0000                	unimp
    20b0:	0076002b          	0x76002b
    20b4:	9106                	add	sp,sp,ra
    20b6:	7fb4                	flw	fa3,120(a5)
    20b8:	2306                	fld	ft6,64(sp)
    20ba:	06c0                	addi	s0,sp,836
    20bc:	2432                	fld	fs0,264(sp)
    20be:	007c                	addi	a5,sp,12
    20c0:	0622                	slli	a2,a2,0x8
    20c2:	7fb89127          	0x7fb89127
    20c6:	2706                	fld	fa4,64(sp)
    20c8:	c078                	sw	a4,68(s0)
    20ca:	3202                	fld	ft4,32(sp)
    20cc:	7c24                	flw	fs1,120(s0)
    20ce:	2200                	fld	fs0,0(a2)
    20d0:	2706                	fld	fa4,64(sp)
    20d2:	3204c077          	0x3204c077
    20d6:	7c24                	flw	fs1,120(s0)
    20d8:	2200                	fld	fs0,0(a2)
    20da:	2706                	fld	fa4,64(sp)
    20dc:	989f 000c 9c00      	0x9c00000c989f
    20e2:	000c                	0xc
    20e4:	2100                	fld	fs0,0(a0)
    20e6:	7600                	flw	fs0,40(a2)
    20e8:	0600                	addi	s0,sp,768
    20ea:	008c                	addi	a1,sp,64
    20ec:	2706                	fld	fa4,64(sp)
    20ee:	b891                	j	1942 <mtable+0x396>
    20f0:	067f                	0x67f
    20f2:	02c07827          	0x2c07827
    20f6:	2432                	fld	fs0,264(sp)
    20f8:	007c                	addi	a5,sp,12
    20fa:	0622                	slli	a2,a2,0x8
    20fc:	04c07727          	0x4c07727
    2100:	2432                	fld	fs0,264(sp)
    2102:	007c                	addi	a5,sp,12
    2104:	0622                	slli	a2,a2,0x8
    2106:	0c9c9f27          	0xc9c9f27
    210a:	0000                	unimp
    210c:	0ca0                	addi	s0,sp,600
    210e:	0000                	unimp
    2110:	0020                	addi	s0,sp,8
    2112:	0076                	c.slli	zero,0x1d
    2114:	8c06                	mv	s8,ra
    2116:	2700                	fld	fs0,8(a4)
    2118:	b891                	j	196c <mtable+0x3c0>
    211a:	067f                	0x67f
    211c:	02c07827          	0x2c07827
    2120:	2432                	fld	fs0,264(sp)
    2122:	007c                	addi	a5,sp,12
    2124:	0622                	slli	a2,a2,0x8
    2126:	04c07727          	0x4c07727
    212a:	2432                	fld	fs0,264(sp)
    212c:	007c                	addi	a5,sp,12
    212e:	0622                	slli	a2,a2,0x8
    2130:	0ca09f27          	0xca09f27
    2134:	0000                	unimp
    2136:	0ca4                	addi	s1,sp,600
    2138:	0000                	unimp
    213a:	001f 0076 008c      	0x8c0076001f
    2140:	7fb89127          	0x7fb89127
    2144:	2706                	fld	fa4,64(sp)
    2146:	c078                	sw	a4,68(s0)
    2148:	3202                	fld	ft4,32(sp)
    214a:	7c24                	flw	fs1,120(s0)
    214c:	2200                	fld	fs0,0(a2)
    214e:	2706                	fld	fa4,64(sp)
    2150:	3204c077          	0x3204c077
    2154:	7c24                	flw	fs1,120(s0)
    2156:	2200                	fld	fs0,0(a2)
    2158:	2706                	fld	fa4,64(sp)
    215a:	a49f 000c a800      	0xa800000ca49f
    2160:	000c                	0xc
    2162:	1e00                	addi	s0,sp,816
    2164:	7600                	flw	fs0,40(a2)
    2166:	8c00                	0x8c00
    2168:	2700                	fld	fs0,8(a4)
    216a:	b891                	j	19be <_aes_decrypt_table+0x12>
    216c:	067f                	0x67f
    216e:	32007827          	0x32007827
    2172:	7c24                	flw	fs1,120(s0)
    2174:	2200                	fld	fs0,0(a2)
    2176:	2706                	fld	fa4,64(sp)
    2178:	3204c077          	0x3204c077
    217c:	7c24                	flw	fs1,120(s0)
    217e:	2200                	fld	fs0,0(a2)
    2180:	2706                	fld	fa4,64(sp)
    2182:	a89f 000c ac00      	0xac00000ca89f
    2188:	000c                	0xc
    218a:	1c00                	addi	s0,sp,560
    218c:	7600                	flw	fs0,40(a2)
    218e:	8c00                	0x8c00
    2190:	2700                	fld	fs0,8(a4)
    2192:	b891                	j	19e6 <_aes_decrypt_table+0x3a>
    2194:	067f                	0x67f
    2196:	7c007827          	0x7c007827
    219a:	2200                	fld	fs0,0(a2)
    219c:	2706                	fld	fa4,64(sp)
    219e:	3204c077          	0x3204c077
    21a2:	7c24                	flw	fs1,120(s0)
    21a4:	2200                	fld	fs0,0(a2)
    21a6:	2706                	fld	fa4,64(sp)
    21a8:	ac9f 000c b000      	0xb000000cac9f
    21ae:	000c                	0xc
    21b0:	2500                	fld	fs0,8(a0)
    21b2:	7200                	flw	fs0,32(a2)
    21b4:	0600                	addi	s0,sp,768
    21b6:	24324023          	0x24324023
    21ba:	007c                	addi	a5,sp,12
    21bc:	0622                	slli	a2,a2,0x8
    21be:	008c                	addi	a1,sp,64
    21c0:	7fb89127          	0x7fb89127
    21c4:	2706                	fld	fa4,64(sp)
    21c6:	0078                	addi	a4,sp,12
    21c8:	007c                	addi	a5,sp,12
    21ca:	0622                	slli	a2,a2,0x8
    21cc:	04c07727          	0x4c07727
    21d0:	2432                	fld	fs0,264(sp)
    21d2:	007c                	addi	a5,sp,12
    21d4:	0622                	slli	a2,a2,0x8
    21d6:	0cb09f27          	0xcb09f27
    21da:	0000                	unimp
    21dc:	0cb4                	addi	a3,sp,600
    21de:	0000                	unimp
    21e0:	0030                	addi	a2,sp,8
    21e2:	0072                	c.slli	zero,0x1c
    21e4:	2306                	fld	ft6,64(sp)
    21e6:	3240                	fld	fs0,160(a2)
    21e8:	7c24                	flw	fs1,120(s0)
    21ea:	2200                	fld	fs0,0(a2)
    21ec:	9106                	add	sp,sp,ra
    21ee:	7fb4                	flw	fa3,120(a5)
    21f0:	2306                	fld	ft6,64(sp)
    21f2:	06c0                	addi	s0,sp,836
    21f4:	2432                	fld	fs0,264(sp)
    21f6:	007c                	addi	a5,sp,12
    21f8:	0622                	slli	a2,a2,0x8
    21fa:	7fb89127          	0x7fb89127
    21fe:	2706                	fld	fa4,64(sp)
    2200:	0078                	addi	a4,sp,12
    2202:	007c                	addi	a5,sp,12
    2204:	0622                	slli	a2,a2,0x8
    2206:	04c07727          	0x4c07727
    220a:	2432                	fld	fs0,264(sp)
    220c:	007c                	addi	a5,sp,12
    220e:	0622                	slli	a2,a2,0x8
    2210:	0cb49f27          	0xcb49f27
    2214:	0000                	unimp
    2216:	0cb8                	addi	a4,sp,600
    2218:	0000                	unimp
    221a:	0072002f          	0x72002f
    221e:	2306                	fld	ft6,64(sp)
    2220:	3240                	fld	fs0,160(a2)
    2222:	7c24                	flw	fs1,120(s0)
    2224:	2200                	fld	fs0,0(a2)
    2226:	9106                	add	sp,sp,ra
    2228:	7fb4                	flw	fa3,120(a5)
    222a:	2306                	fld	ft6,64(sp)
    222c:	06c0                	addi	s0,sp,836
    222e:	2432                	fld	fs0,264(sp)
    2230:	007c                	addi	a5,sp,12
    2232:	0622                	slli	a2,a2,0x8
    2234:	7fb89127          	0x7fb89127
    2238:	2706                	fld	fa4,64(sp)
    223a:	0078                	addi	a4,sp,12
    223c:	007c                	addi	a5,sp,12
    223e:	0622                	slli	a2,a2,0x8
    2240:	32007727          	0x32007727
    2244:	7c24                	flw	fs1,120(s0)
    2246:	2200                	fld	fs0,0(a2)
    2248:	2706                	fld	fa4,64(sp)
    224a:	009f 0000 0000      	0x9f
    2250:	0000                	unimp
    2252:	1800                	addi	s0,sp,48
    2254:	000a                	c.slli	zero,0x2
    2256:	4400                	lw	s0,8(s0)
    2258:	0100000b          	0x100000b
    225c:	6b00                	flw	fs0,16(a4)
    225e:	0b88                	addi	a0,sp,464
    2260:	0000                	unimp
    2262:	0b8c                	addi	a1,sp,464
    2264:	0000                	unimp
    2266:	c086002b          	0xc086002b
    226a:	3200                	fld	fs0,32(a2)
    226c:	7c24                	flw	fs1,120(s0)
    226e:	2200                	fld	fs0,0(a2)
    2270:	8b06                	mv	s6,ra
    2272:	2700                	fld	fs0,8(a4)
    2274:	c085                	beqz	s1,2294 <_min_stack+0x294>
    2276:	3206                	fld	ft4,96(sp)
    2278:	7c24                	flw	fs1,120(s0)
    227a:	2200                	fld	fs0,0(a2)
    227c:	2706                	fld	fa4,64(sp)
    227e:	c075                	beqz	s0,2362 <_min_stack+0x362>
    2280:	3202                	fld	ft4,32(sp)
    2282:	7c24                	flw	fs1,120(s0)
    2284:	2200                	fld	fs0,0(a2)
    2286:	2706                	fld	fa4,64(sp)
    2288:	3204c08f          	0x3204c08f
    228c:	7c24                	flw	fs1,120(s0)
    228e:	2200                	fld	fs0,0(a2)
    2290:	2706                	fld	fa4,64(sp)
    2292:	8c9f 000b 9400      	0x9400000b8c9f
    2298:	2f00000b          	0x2f00000b
    229c:	8100                	0x8100
    229e:	0800                	addi	s0,sp,16
    22a0:	1aff                	0x1aff
    22a2:	24324023          	0x24324023
    22a6:	007c                	addi	a5,sp,12
    22a8:	0622                	slli	a2,a2,0x8
    22aa:	8527008b          	0x8527008b
    22ae:	06c0                	addi	s0,sp,836
    22b0:	2432                	fld	fs0,264(sp)
    22b2:	007c                	addi	a5,sp,12
    22b4:	0622                	slli	a2,a2,0x8
    22b6:	02c07527          	0x2c07527
    22ba:	2432                	fld	fs0,264(sp)
    22bc:	007c                	addi	a5,sp,12
    22be:	0622                	slli	a2,a2,0x8
    22c0:	04c08f27          	0x4c08f27
    22c4:	2432                	fld	fs0,264(sp)
    22c6:	007c                	addi	a5,sp,12
    22c8:	0622                	slli	a2,a2,0x8
    22ca:	0b949f27          	0xb949f27
    22ce:	0000                	unimp
    22d0:	0b9c                	addi	a5,sp,464
    22d2:	0000                	unimp
    22d4:	0025                	c.nop	9
    22d6:	0086                	slli	ra,ra,0x1
    22d8:	8b06                	mv	s6,ra
    22da:	2700                	fld	fs0,8(a4)
    22dc:	c085                	beqz	s1,22fc <_min_stack+0x2fc>
    22de:	3206                	fld	ft4,96(sp)
    22e0:	7c24                	flw	fs1,120(s0)
    22e2:	2200                	fld	fs0,0(a2)
    22e4:	2706                	fld	fa4,64(sp)
    22e6:	c075                	beqz	s0,23ca <_min_stack+0x3ca>
    22e8:	3202                	fld	ft4,32(sp)
    22ea:	7c24                	flw	fs1,120(s0)
    22ec:	2200                	fld	fs0,0(a2)
    22ee:	2706                	fld	fa4,64(sp)
    22f0:	3204c08f          	0x3204c08f
    22f4:	7c24                	flw	fs1,120(s0)
    22f6:	2200                	fld	fs0,0(a2)
    22f8:	2706                	fld	fa4,64(sp)
    22fa:	9c9f 000b a000      	0xa000000b9c9f
    2300:	2400000b          	0x2400000b
    2304:	8600                	0x8600
    2306:	0600                	addi	s0,sp,768
    2308:	8527008b          	0x8527008b
    230c:	3200                	fld	fs0,32(a2)
    230e:	7c24                	flw	fs1,120(s0)
    2310:	2200                	fld	fs0,0(a2)
    2312:	2706                	fld	fa4,64(sp)
    2314:	c075                	beqz	s0,23f8 <_min_stack+0x3f8>
    2316:	3202                	fld	ft4,32(sp)
    2318:	7c24                	flw	fs1,120(s0)
    231a:	2200                	fld	fs0,0(a2)
    231c:	2706                	fld	fa4,64(sp)
    231e:	3204c08f          	0x3204c08f
    2322:	7c24                	flw	fs1,120(s0)
    2324:	2200                	fld	fs0,0(a2)
    2326:	2706                	fld	fa4,64(sp)
    2328:	a49f 000b ac00      	0xac00000ba49f
    232e:	1f00000b          	0x1f00000b
    2332:	8600                	0x8600
    2334:	0600                	addi	s0,sp,768
    2336:	8527008b          	0x8527008b
    233a:	0600                	addi	s0,sp,768
    233c:	02c07527          	0x2c07527
    2340:	2432                	fld	fs0,264(sp)
    2342:	007c                	addi	a5,sp,12
    2344:	0622                	slli	a2,a2,0x8
    2346:	04c08f27          	0x4c08f27
    234a:	2432                	fld	fs0,264(sp)
    234c:	007c                	addi	a5,sp,12
    234e:	0622                	slli	a2,a2,0x8
    2350:	0bac9f27          	0xbac9f27
    2354:	0000                	unimp
    2356:	0bb0                	addi	a2,sp,472
    2358:	0000                	unimp
    235a:	001e                	c.slli	zero,0x7
    235c:	0086                	slli	ra,ra,0x1
    235e:	8b06                	mv	s6,ra
    2360:	2700                	fld	fs0,8(a4)
    2362:	0085                	addi	ra,ra,1
    2364:	2706                	fld	fa4,64(sp)
    2366:	0075                	c.nop	29
    2368:	2432                	fld	fs0,264(sp)
    236a:	007c                	addi	a5,sp,12
    236c:	0622                	slli	a2,a2,0x8
    236e:	04c08f27          	0x4c08f27
    2372:	2432                	fld	fs0,264(sp)
    2374:	007c                	addi	a5,sp,12
    2376:	0622                	slli	a2,a2,0x8
    2378:	0bb09f27          	0xbb09f27
    237c:	0000                	unimp
    237e:	0bb4                	addi	a3,sp,472
    2380:	0000                	unimp
    2382:	001f 0086 8706      	0x87060086001f
    2388:	0670                	addi	a2,sp,780
    238a:	06008527          	0x6008527
    238e:	32007527          	0x32007527
    2392:	7c24                	flw	fs1,120(s0)
    2394:	2200                	fld	fs0,0(a2)
    2396:	2706                	fld	fa4,64(sp)
    2398:	3204c08f          	0x3204c08f
    239c:	7c24                	flw	fs1,120(s0)
    239e:	2200                	fld	fs0,0(a2)
    23a0:	2706                	fld	fa4,64(sp)
    23a2:	b49f 000b b800      	0xb800000bb49f
    23a8:	1d00000b          	0x1d00000b
    23ac:	8600                	0x8600
    23ae:	0600                	addi	s0,sp,768
    23b0:	27067087          	0x27067087
    23b4:	0085                	addi	ra,ra,1
    23b6:	2706                	fld	fa4,64(sp)
    23b8:	0075                	c.nop	29
    23ba:	007c                	addi	a5,sp,12
    23bc:	0622                	slli	a2,a2,0x8
    23be:	04c08f27          	0x4c08f27
    23c2:	2432                	fld	fs0,264(sp)
    23c4:	007c                	addi	a5,sp,12
    23c6:	0622                	slli	a2,a2,0x8
    23c8:	0bb89f27          	0xbb89f27
    23cc:	0000                	unimp
    23ce:	0bbc                	addi	a5,sp,472
    23d0:	0000                	unimp
    23d2:	001c                	0x1c
    23d4:	0086                	slli	ra,ra,0x1
    23d6:	8706                	mv	a4,ra
    23d8:	0670                	addi	a2,sp,780
    23da:	06008527          	0x6008527
    23de:	7c007527          	0x7c007527
    23e2:	2200                	fld	fs0,0(a2)
    23e4:	2706                	fld	fa4,64(sp)
    23e6:	2432008f          	0x2432008f
    23ea:	007c                	addi	a5,sp,12
    23ec:	0622                	slli	a2,a2,0x8
    23ee:	00009f27          	0x9f27
    23f2:	0000                	unimp
    23f4:	0000                	unimp
    23f6:	0000                	unimp
    23f8:	0a58                	addi	a4,sp,276
    23fa:	0000                	unimp
    23fc:	0b44                	addi	s1,sp,404
    23fe:	0000                	unimp
    2400:	0001                	nop
    2402:	886a                	mv	a6,s10
    2404:	d400000b          	0xd400000b
    2408:	2b00000b          	0x2b00000b
    240c:	8400                	0x8400
    240e:	00c0                	addi	s0,sp,68
    2410:	2432                	fld	fs0,264(sp)
    2412:	007c                	addi	a5,sp,12
    2414:	0622                	slli	a2,a2,0x8
    2416:	008a                	slli	ra,ra,0x2
    2418:	06c08327          	0x6c08327
    241c:	2432                	fld	fs0,264(sp)
    241e:	007c                	addi	a5,sp,12
    2420:	0622                	slli	a2,a2,0x8
    2422:	02c08e27          	0x2c08e27
    2426:	2432                	fld	fs0,264(sp)
    2428:	007c                	addi	a5,sp,12
    242a:	0622                	slli	a2,a2,0x8
    242c:	04c08d27          	0x4c08d27
    2430:	2432                	fld	fs0,264(sp)
    2432:	007c                	addi	a5,sp,12
    2434:	0622                	slli	a2,a2,0x8
    2436:	0bd49f27          	0xbd49f27
    243a:	0000                	unimp
    243c:	0bd8                	addi	a4,sp,468
    243e:	0000                	unimp
    2440:	002a                	c.slli	zero,0xa
    2442:	0084                	addi	s1,sp,64
    2444:	2432                	fld	fs0,264(sp)
    2446:	007c                	addi	a5,sp,12
    2448:	0622                	slli	a2,a2,0x8
    244a:	008a                	slli	ra,ra,0x2
    244c:	06c08327          	0x6c08327
    2450:	2432                	fld	fs0,264(sp)
    2452:	007c                	addi	a5,sp,12
    2454:	0622                	slli	a2,a2,0x8
    2456:	02c08e27          	0x2c08e27
    245a:	2432                	fld	fs0,264(sp)
    245c:	007c                	addi	a5,sp,12
    245e:	0622                	slli	a2,a2,0x8
    2460:	04c08d27          	0x4c08d27
    2464:	2432                	fld	fs0,264(sp)
    2466:	007c                	addi	a5,sp,12
    2468:	0622                	slli	a2,a2,0x8
    246a:	0be09f27          	0xbe09f27
    246e:	0000                	unimp
    2470:	0be8                	addi	a0,sp,476
    2472:	0000                	unimp
    2474:	0025                	c.nop	9
    2476:	0084                	addi	s1,sp,64
    2478:	8a06                	mv	s4,ra
    247a:	2700                	fld	fs0,8(a4)
    247c:	3206c083          	lbu	ra,800(a3)
    2480:	7c24                	flw	fs1,120(s0)
    2482:	2200                	fld	fs0,0(a2)
    2484:	2706                	fld	fa4,64(sp)
    2486:	c08e                	sw	gp,64(sp)
    2488:	3202                	fld	ft4,32(sp)
    248a:	7c24                	flw	fs1,120(s0)
    248c:	2200                	fld	fs0,0(a2)
    248e:	2706                	fld	fa4,64(sp)
    2490:	c08d                	beqz	s1,24b2 <_min_stack+0x4b2>
    2492:	3204                	fld	fs1,32(a2)
    2494:	7c24                	flw	fs1,120(s0)
    2496:	2200                	fld	fs0,0(a2)
    2498:	2706                	fld	fa4,64(sp)
    249a:	e89f 000b f000      	0xf000000be89f
    24a0:	2400000b          	0x2400000b
    24a4:	8400                	0x8400
    24a6:	0600                	addi	s0,sp,768
    24a8:	008a                	slli	ra,ra,0x2
    24aa:	32008327          	0x32008327
    24ae:	7c24                	flw	fs1,120(s0)
    24b0:	2200                	fld	fs0,0(a2)
    24b2:	2706                	fld	fa4,64(sp)
    24b4:	c08e                	sw	gp,64(sp)
    24b6:	3202                	fld	ft4,32(sp)
    24b8:	7c24                	flw	fs1,120(s0)
    24ba:	2200                	fld	fs0,0(a2)
    24bc:	2706                	fld	fa4,64(sp)
    24be:	c08d                	beqz	s1,24e0 <_min_stack+0x4e0>
    24c0:	3204                	fld	fs1,32(a2)
    24c2:	7c24                	flw	fs1,120(s0)
    24c4:	2200                	fld	fs0,0(a2)
    24c6:	2706                	fld	fa4,64(sp)
    24c8:	f49f 000b fc00      	0xfc00000bf49f
    24ce:	1f00000b          	0x1f00000b
    24d2:	8400                	0x8400
    24d4:	0600                	addi	s0,sp,768
    24d6:	008a                	slli	ra,ra,0x2
    24d8:	06008327          	0x6008327
    24dc:	02c08e27          	0x2c08e27
    24e0:	2432                	fld	fs0,264(sp)
    24e2:	007c                	addi	a5,sp,12
    24e4:	0622                	slli	a2,a2,0x8
    24e6:	04c08d27          	0x4c08d27
    24ea:	2432                	fld	fs0,264(sp)
    24ec:	007c                	addi	a5,sp,12
    24ee:	0622                	slli	a2,a2,0x8
    24f0:	0bfc9f27          	0xbfc9f27
    24f4:	0000                	unimp
    24f6:	0c00                	addi	s0,sp,528
    24f8:	0000                	unimp
    24fa:	001e                	c.slli	zero,0x7
    24fc:	0084                	addi	s1,sp,64
    24fe:	8a06                	mv	s4,ra
    2500:	2700                	fld	fs0,8(a4)
    2502:	27060083          	lb	ra,624(a2)
    2506:	008e                	slli	ra,ra,0x3
    2508:	2432                	fld	fs0,264(sp)
    250a:	007c                	addi	a5,sp,12
    250c:	0622                	slli	a2,a2,0x8
    250e:	04c08d27          	0x4c08d27
    2512:	2432                	fld	fs0,264(sp)
    2514:	007c                	addi	a5,sp,12
    2516:	0622                	slli	a2,a2,0x8
    2518:	0c009f27          	0xc009f27
    251c:	0000                	unimp
    251e:	0c04                	addi	s1,sp,528
    2520:	0000                	unimp
    2522:	001f 0084 8706      	0x87060084001f
    2528:	0674                	addi	a3,sp,780
    252a:	06008327          	0x6008327
    252e:	32008e27          	0x32008e27
    2532:	7c24                	flw	fs1,120(s0)
    2534:	2200                	fld	fs0,0(a2)
    2536:	2706                	fld	fa4,64(sp)
    2538:	c08d                	beqz	s1,255a <_min_stack+0x55a>
    253a:	3204                	fld	fs1,32(a2)
    253c:	7c24                	flw	fs1,120(s0)
    253e:	2200                	fld	fs0,0(a2)
    2540:	2706                	fld	fa4,64(sp)
    2542:	049f 000c 0800      	0x800000c049f
    2548:	000c                	0xc
    254a:	1d00                	addi	s0,sp,688
    254c:	8400                	0x8400
    254e:	0600                	addi	s0,sp,768
    2550:	27067487          	0x27067487
    2554:	27060083          	lb	ra,624(a2)
    2558:	008e                	slli	ra,ra,0x3
    255a:	007c                	addi	a5,sp,12
    255c:	0622                	slli	a2,a2,0x8
    255e:	04c08d27          	0x4c08d27
    2562:	2432                	fld	fs0,264(sp)
    2564:	007c                	addi	a5,sp,12
    2566:	0622                	slli	a2,a2,0x8
    2568:	0c089f27          	0xc089f27
    256c:	0000                	unimp
    256e:	0c0c                	addi	a1,sp,528
    2570:	0000                	unimp
    2572:	001c                	0x1c
    2574:	0084                	addi	s1,sp,64
    2576:	8706                	mv	a4,ra
    2578:	0674                	addi	a3,sp,780
    257a:	06008327          	0x6008327
    257e:	7c008e27          	0x7c008e27
    2582:	2200                	fld	fs0,0(a2)
    2584:	2706                	fld	fa4,64(sp)
    2586:	008d                	addi	ra,ra,3
    2588:	2432                	fld	fs0,264(sp)
    258a:	007c                	addi	a5,sp,12
    258c:	0622                	slli	a2,a2,0x8
    258e:	00009f27          	0x9f27
    2592:	0000                	unimp
    2594:	0000                	unimp
    2596:	0000                	unimp
    2598:	0a94                	addi	a3,sp,336
    259a:	0000                	unimp
    259c:	0b44                	addi	s1,sp,404
    259e:	0000                	unimp
    25a0:	0001                	nop
    25a2:	8869                	andi	s0,s0,26
    25a4:	2400000b          	0x2400000b
    25a8:	000c                	0xc
    25aa:	2b00                	fld	fs0,16(a4)
    25ac:	8200                	0x8200
    25ae:	00c0                	addi	s0,sp,68
    25b0:	2432                	fld	fs0,264(sp)
    25b2:	007c                	addi	a5,sp,12
    25b4:	0622                	slli	a2,a2,0x8
    25b6:	0089                	addi	ra,ra,2
    25b8:	06c07927          	0x6c07927
    25bc:	2432                	fld	fs0,264(sp)
    25be:	007c                	addi	a5,sp,12
    25c0:	0622                	slli	a2,a2,0x8
    25c2:	02c08c27          	0x2c08c27
    25c6:	2432                	fld	fs0,264(sp)
    25c8:	007c                	addi	a5,sp,12
    25ca:	0622                	slli	a2,a2,0x8
    25cc:	04c07627          	0x4c07627
    25d0:	2432                	fld	fs0,264(sp)
    25d2:	007c                	addi	a5,sp,12
    25d4:	0622                	slli	a2,a2,0x8
    25d6:	0c249f27          	0xc249f27
    25da:	0000                	unimp
    25dc:	0c28                	addi	a0,sp,536
    25de:	0000                	unimp
    25e0:	002a                	c.slli	zero,0xa
    25e2:	0082                	c.slli64	ra
    25e4:	2432                	fld	fs0,264(sp)
    25e6:	007c                	addi	a5,sp,12
    25e8:	0622                	slli	a2,a2,0x8
    25ea:	0089                	addi	ra,ra,2
    25ec:	06c07927          	0x6c07927
    25f0:	2432                	fld	fs0,264(sp)
    25f2:	007c                	addi	a5,sp,12
    25f4:	0622                	slli	a2,a2,0x8
    25f6:	02c08c27          	0x2c08c27
    25fa:	2432                	fld	fs0,264(sp)
    25fc:	007c                	addi	a5,sp,12
    25fe:	0622                	slli	a2,a2,0x8
    2600:	04c07627          	0x4c07627
    2604:	2432                	fld	fs0,264(sp)
    2606:	007c                	addi	a5,sp,12
    2608:	0622                	slli	a2,a2,0x8
    260a:	0c309f27          	0xc309f27
    260e:	0000                	unimp
    2610:	0c38                	addi	a4,sp,536
    2612:	0000                	unimp
    2614:	0025                	c.nop	9
    2616:	0082                	c.slli64	ra
    2618:	8906                	mv	s2,ra
    261a:	2700                	fld	fs0,8(a4)
    261c:	c079                	beqz	s0,26e2 <_min_stack+0x6e2>
    261e:	3206                	fld	ft4,96(sp)
    2620:	7c24                	flw	fs1,120(s0)
    2622:	2200                	fld	fs0,0(a2)
    2624:	2706                	fld	fa4,64(sp)
    2626:	c08c                	sw	a1,0(s1)
    2628:	3202                	fld	ft4,32(sp)
    262a:	7c24                	flw	fs1,120(s0)
    262c:	2200                	fld	fs0,0(a2)
    262e:	2706                	fld	fa4,64(sp)
    2630:	c076                	sw	t4,0(sp)
    2632:	3204                	fld	fs1,32(a2)
    2634:	7c24                	flw	fs1,120(s0)
    2636:	2200                	fld	fs0,0(a2)
    2638:	2706                	fld	fa4,64(sp)
    263a:	389f 000c 4000      	0x4000000c389f
    2640:	000c                	0xc
    2642:	2400                	fld	fs0,8(s0)
    2644:	8200                	0x8200
    2646:	0600                	addi	s0,sp,768
    2648:	0089                	addi	ra,ra,2
    264a:	32007927          	0x32007927
    264e:	7c24                	flw	fs1,120(s0)
    2650:	2200                	fld	fs0,0(a2)
    2652:	2706                	fld	fa4,64(sp)
    2654:	c08c                	sw	a1,0(s1)
    2656:	3202                	fld	ft4,32(sp)
    2658:	7c24                	flw	fs1,120(s0)
    265a:	2200                	fld	fs0,0(a2)
    265c:	2706                	fld	fa4,64(sp)
    265e:	c076                	sw	t4,0(sp)
    2660:	3204                	fld	fs1,32(a2)
    2662:	7c24                	flw	fs1,120(s0)
    2664:	2200                	fld	fs0,0(a2)
    2666:	2706                	fld	fa4,64(sp)
    2668:	449f 000c 4c00      	0x4c00000c449f
    266e:	000c                	0xc
    2670:	1f00                	addi	s0,sp,944
    2672:	8200                	0x8200
    2674:	0600                	addi	s0,sp,768
    2676:	0089                	addi	ra,ra,2
    2678:	06007927          	0x6007927
    267c:	02c08c27          	0x2c08c27
    2680:	2432                	fld	fs0,264(sp)
    2682:	007c                	addi	a5,sp,12
    2684:	0622                	slli	a2,a2,0x8
    2686:	04c07627          	0x4c07627
    268a:	2432                	fld	fs0,264(sp)
    268c:	007c                	addi	a5,sp,12
    268e:	0622                	slli	a2,a2,0x8
    2690:	0c4c9f27          	0xc4c9f27
    2694:	0000                	unimp
    2696:	0c50                	addi	a2,sp,532
    2698:	0000                	unimp
    269a:	001e                	c.slli	zero,0x7
    269c:	0082                	c.slli64	ra
    269e:	8906                	mv	s2,ra
    26a0:	2700                	fld	fs0,8(a4)
    26a2:	0079                	c.nop	30
    26a4:	2706                	fld	fa4,64(sp)
    26a6:	008c                	addi	a1,sp,64
    26a8:	2432                	fld	fs0,264(sp)
    26aa:	007c                	addi	a5,sp,12
    26ac:	0622                	slli	a2,a2,0x8
    26ae:	04c07627          	0x4c07627
    26b2:	2432                	fld	fs0,264(sp)
    26b4:	007c                	addi	a5,sp,12
    26b6:	0622                	slli	a2,a2,0x8
    26b8:	0c509f27          	0xc509f27
    26bc:	0000                	unimp
    26be:	0c54                	addi	a3,sp,532
    26c0:	0000                	unimp
    26c2:	001f 0082 8706      	0x87060082001f
    26c8:	0678                	addi	a4,sp,780
    26ca:	06007927          	0x6007927
    26ce:	32008c27          	0x32008c27
    26d2:	7c24                	flw	fs1,120(s0)
    26d4:	2200                	fld	fs0,0(a2)
    26d6:	2706                	fld	fa4,64(sp)
    26d8:	c076                	sw	t4,0(sp)
    26da:	3204                	fld	fs1,32(a2)
    26dc:	7c24                	flw	fs1,120(s0)
    26de:	2200                	fld	fs0,0(a2)
    26e0:	2706                	fld	fa4,64(sp)
    26e2:	549f 000c 5800      	0x5800000c549f
    26e8:	000c                	0xc
    26ea:	1d00                	addi	s0,sp,688
    26ec:	8200                	0x8200
    26ee:	0600                	addi	s0,sp,768
    26f0:	27067887          	0x27067887
    26f4:	0079                	c.nop	30
    26f6:	2706                	fld	fa4,64(sp)
    26f8:	008c                	addi	a1,sp,64
    26fa:	007c                	addi	a5,sp,12
    26fc:	0622                	slli	a2,a2,0x8
    26fe:	04c07627          	0x4c07627
    2702:	2432                	fld	fs0,264(sp)
    2704:	007c                	addi	a5,sp,12
    2706:	0622                	slli	a2,a2,0x8
    2708:	0c589f27          	0xc589f27
    270c:	0000                	unimp
    270e:	0c5c                	addi	a5,sp,532
    2710:	0000                	unimp
    2712:	001c                	0x1c
    2714:	0082                	c.slli64	ra
    2716:	8706                	mv	a4,ra
    2718:	0678                	addi	a4,sp,780
    271a:	06007927          	0x6007927
    271e:	7c008c27          	0x7c008c27
    2722:	2200                	fld	fs0,0(a2)
    2724:	2706                	fld	fa4,64(sp)
    2726:	0076                	c.slli	zero,0x1d
    2728:	2432                	fld	fs0,264(sp)
    272a:	007c                	addi	a5,sp,12
    272c:	0622                	slli	a2,a2,0x8
    272e:	00009f27          	0x9f27
    2732:	0000                	unimp
    2734:	0000                	unimp
    2736:	0000                	unimp
    2738:	0ae0                	addi	s0,sp,348
    273a:	0000                	unimp
    273c:	0b44                	addi	s1,sp,404
    273e:	0000                	unimp
    2740:	0001                	nop
    2742:	885d                	andi	s0,s0,23
    2744:	9400000b          	0x9400000b
    2748:	000c                	0xc
    274a:	3300                	fld	fs0,32(a4)
    274c:	7200                	flw	fs0,32(a2)
    274e:	0600                	addi	s0,sp,768
    2750:	24324023          	0x24324023
    2754:	007c                	addi	a5,sp,12
    2756:	0622                	slli	a2,a2,0x8
    2758:	b491                	j	219c <_min_stack+0x19c>
    275a:	067f                	0x67f
    275c:	3206c023          	0x3206c023
    2760:	7c24                	flw	fs1,120(s0)
    2762:	2200                	fld	fs0,0(a2)
    2764:	2706                	fld	fa4,64(sp)
    2766:	b891                	j	1fba <_aes_decrypt_table+0x60e>
    2768:	067f                	0x67f
    276a:	02c07827          	0x2c07827
    276e:	2432                	fld	fs0,264(sp)
    2770:	007c                	addi	a5,sp,12
    2772:	0622                	slli	a2,a2,0x8
    2774:	04c07727          	0x4c07727
    2778:	2432                	fld	fs0,264(sp)
    277a:	007c                	addi	a5,sp,12
    277c:	0622                	slli	a2,a2,0x8
    277e:	0c949f27          	0xc949f27
    2782:	0000                	unimp
    2784:	0c98                	addi	a4,sp,592
    2786:	0000                	unimp
    2788:	0076002b          	0x76002b
    278c:	9106                	add	sp,sp,ra
    278e:	7fb4                	flw	fa3,120(a5)
    2790:	2306                	fld	ft6,64(sp)
    2792:	06c0                	addi	s0,sp,836
    2794:	2432                	fld	fs0,264(sp)
    2796:	007c                	addi	a5,sp,12
    2798:	0622                	slli	a2,a2,0x8
    279a:	7fb89127          	0x7fb89127
    279e:	2706                	fld	fa4,64(sp)
    27a0:	c078                	sw	a4,68(s0)
    27a2:	3202                	fld	ft4,32(sp)
    27a4:	7c24                	flw	fs1,120(s0)
    27a6:	2200                	fld	fs0,0(a2)
    27a8:	2706                	fld	fa4,64(sp)
    27aa:	3204c077          	0x3204c077
    27ae:	7c24                	flw	fs1,120(s0)
    27b0:	2200                	fld	fs0,0(a2)
    27b2:	2706                	fld	fa4,64(sp)
    27b4:	989f 000c 9c00      	0x9c00000c989f
    27ba:	000c                	0xc
    27bc:	2100                	fld	fs0,0(a0)
    27be:	7600                	flw	fs0,40(a2)
    27c0:	0600                	addi	s0,sp,768
    27c2:	008c                	addi	a1,sp,64
    27c4:	2706                	fld	fa4,64(sp)
    27c6:	b891                	j	201a <_min_stack+0x1a>
    27c8:	067f                	0x67f
    27ca:	02c07827          	0x2c07827
    27ce:	2432                	fld	fs0,264(sp)
    27d0:	007c                	addi	a5,sp,12
    27d2:	0622                	slli	a2,a2,0x8
    27d4:	04c07727          	0x4c07727
    27d8:	2432                	fld	fs0,264(sp)
    27da:	007c                	addi	a5,sp,12
    27dc:	0622                	slli	a2,a2,0x8
    27de:	0c9c9f27          	0xc9c9f27
    27e2:	0000                	unimp
    27e4:	0ca0                	addi	s0,sp,600
    27e6:	0000                	unimp
    27e8:	0020                	addi	s0,sp,8
    27ea:	0076                	c.slli	zero,0x1d
    27ec:	8c06                	mv	s8,ra
    27ee:	2700                	fld	fs0,8(a4)
    27f0:	b891                	j	2044 <_min_stack+0x44>
    27f2:	067f                	0x67f
    27f4:	02c07827          	0x2c07827
    27f8:	2432                	fld	fs0,264(sp)
    27fa:	007c                	addi	a5,sp,12
    27fc:	0622                	slli	a2,a2,0x8
    27fe:	04c07727          	0x4c07727
    2802:	2432                	fld	fs0,264(sp)
    2804:	007c                	addi	a5,sp,12
    2806:	0622                	slli	a2,a2,0x8
    2808:	0ca09f27          	0xca09f27
    280c:	0000                	unimp
    280e:	0ca4                	addi	s1,sp,600
    2810:	0000                	unimp
    2812:	001f 0076 008c      	0x8c0076001f
    2818:	7fb89127          	0x7fb89127
    281c:	2706                	fld	fa4,64(sp)
    281e:	c078                	sw	a4,68(s0)
    2820:	3202                	fld	ft4,32(sp)
    2822:	7c24                	flw	fs1,120(s0)
    2824:	2200                	fld	fs0,0(a2)
    2826:	2706                	fld	fa4,64(sp)
    2828:	3204c077          	0x3204c077
    282c:	7c24                	flw	fs1,120(s0)
    282e:	2200                	fld	fs0,0(a2)
    2830:	2706                	fld	fa4,64(sp)
    2832:	a49f 000c a800      	0xa800000ca49f
    2838:	000c                	0xc
    283a:	1e00                	addi	s0,sp,816
    283c:	7600                	flw	fs0,40(a2)
    283e:	8c00                	0x8c00
    2840:	2700                	fld	fs0,8(a4)
    2842:	b891                	j	2096 <_min_stack+0x96>
    2844:	067f                	0x67f
    2846:	32007827          	0x32007827
    284a:	7c24                	flw	fs1,120(s0)
    284c:	2200                	fld	fs0,0(a2)
    284e:	2706                	fld	fa4,64(sp)
    2850:	3204c077          	0x3204c077
    2854:	7c24                	flw	fs1,120(s0)
    2856:	2200                	fld	fs0,0(a2)
    2858:	2706                	fld	fa4,64(sp)
    285a:	a89f 000c ac00      	0xac00000ca89f
    2860:	000c                	0xc
    2862:	1c00                	addi	s0,sp,560
    2864:	7600                	flw	fs0,40(a2)
    2866:	8c00                	0x8c00
    2868:	2700                	fld	fs0,8(a4)
    286a:	b891                	j	20be <_min_stack+0xbe>
    286c:	067f                	0x67f
    286e:	7c007827          	0x7c007827
    2872:	2200                	fld	fs0,0(a2)
    2874:	2706                	fld	fa4,64(sp)
    2876:	3204c077          	0x3204c077
    287a:	7c24                	flw	fs1,120(s0)
    287c:	2200                	fld	fs0,0(a2)
    287e:	2706                	fld	fa4,64(sp)
    2880:	ac9f 000c b000      	0xb000000cac9f
    2886:	000c                	0xc
    2888:	2500                	fld	fs0,8(a0)
    288a:	7200                	flw	fs0,32(a2)
    288c:	0600                	addi	s0,sp,768
    288e:	24324023          	0x24324023
    2892:	007c                	addi	a5,sp,12
    2894:	0622                	slli	a2,a2,0x8
    2896:	008c                	addi	a1,sp,64
    2898:	7fb89127          	0x7fb89127
    289c:	2706                	fld	fa4,64(sp)
    289e:	0078                	addi	a4,sp,12
    28a0:	007c                	addi	a5,sp,12
    28a2:	0622                	slli	a2,a2,0x8
    28a4:	04c07727          	0x4c07727
    28a8:	2432                	fld	fs0,264(sp)
    28aa:	007c                	addi	a5,sp,12
    28ac:	0622                	slli	a2,a2,0x8
    28ae:	0cb09f27          	0xcb09f27
    28b2:	0000                	unimp
    28b4:	0cb4                	addi	a3,sp,600
    28b6:	0000                	unimp
    28b8:	0030                	addi	a2,sp,8
    28ba:	0072                	c.slli	zero,0x1c
    28bc:	2306                	fld	ft6,64(sp)
    28be:	3240                	fld	fs0,160(a2)
    28c0:	7c24                	flw	fs1,120(s0)
    28c2:	2200                	fld	fs0,0(a2)
    28c4:	9106                	add	sp,sp,ra
    28c6:	7fb4                	flw	fa3,120(a5)
    28c8:	2306                	fld	ft6,64(sp)
    28ca:	06c0                	addi	s0,sp,836
    28cc:	2432                	fld	fs0,264(sp)
    28ce:	007c                	addi	a5,sp,12
    28d0:	0622                	slli	a2,a2,0x8
    28d2:	7fb89127          	0x7fb89127
    28d6:	2706                	fld	fa4,64(sp)
    28d8:	0078                	addi	a4,sp,12
    28da:	007c                	addi	a5,sp,12
    28dc:	0622                	slli	a2,a2,0x8
    28de:	04c07727          	0x4c07727
    28e2:	2432                	fld	fs0,264(sp)
    28e4:	007c                	addi	a5,sp,12
    28e6:	0622                	slli	a2,a2,0x8
    28e8:	0cb49f27          	0xcb49f27
    28ec:	0000                	unimp
    28ee:	0cb8                	addi	a4,sp,600
    28f0:	0000                	unimp
    28f2:	0072002f          	0x72002f
    28f6:	2306                	fld	ft6,64(sp)
    28f8:	3240                	fld	fs0,160(a2)
    28fa:	7c24                	flw	fs1,120(s0)
    28fc:	2200                	fld	fs0,0(a2)
    28fe:	9106                	add	sp,sp,ra
    2900:	7fb4                	flw	fa3,120(a5)
    2902:	2306                	fld	ft6,64(sp)
    2904:	06c0                	addi	s0,sp,836
    2906:	2432                	fld	fs0,264(sp)
    2908:	007c                	addi	a5,sp,12
    290a:	0622                	slli	a2,a2,0x8
    290c:	7fb89127          	0x7fb89127
    2910:	2706                	fld	fa4,64(sp)
    2912:	0078                	addi	a4,sp,12
    2914:	007c                	addi	a5,sp,12
    2916:	0622                	slli	a2,a2,0x8
    2918:	32007727          	0x32007727
    291c:	7c24                	flw	fs1,120(s0)
    291e:	2200                	fld	fs0,0(a2)
    2920:	2706                	fld	fa4,64(sp)
    2922:	009f 0000 0000      	0x9f
    2928:	0000                	unimp
    292a:	4c00                	lw	s0,24(s0)
    292c:	0009                	c.nop	2
    292e:	4400                	lw	s0,8(s0)
    2930:	0100000b          	0x100000b
    2934:	6800                	flw	fs0,16(s0)
    2936:	0b88                	addi	a0,sp,464
    2938:	0000                	unimp
    293a:	0cdc                	addi	a5,sp,596
    293c:	0000                	unimp
    293e:	0001                	nop
    2940:	0068                	addi	a0,sp,12
    2942:	0000                	unimp
    2944:	0000                	unimp
    2946:	0000                	unimp
    2948:	2400                	fld	fs0,8(s0)
    294a:	0001                	nop
    294c:	8c00                	0x8c00
    294e:	0001                	nop
    2950:	0100                	addi	s0,sp,128
    2952:	5a00                	lw	s0,48(a2)
    2954:	018c                	addi	a1,sp,192
    2956:	0000                	unimp
    2958:	0190                	addi	a2,sp,192
    295a:	0000                	unimp
    295c:	0004                	0x4
    295e:	9f5a01f3          	0x9f5a01f3
    2962:	0190                	addi	a2,sp,192
    2964:	0000                	unimp
    2966:	0198                	addi	a4,sp,192
    2968:	0000                	unimp
    296a:	0001                	nop
    296c:	005a                	c.slli	zero,0x16
    296e:	0000                	unimp
    2970:	0000                	unimp
    2972:	0000                	unimp
    2974:	3c00                	fld	fs0,56(s0)
    2976:	0001                	nop
    2978:	8800                	0x8800
    297a:	0001                	nop
    297c:	0100                	addi	s0,sp,128
    297e:	5f00                	lw	s0,56(a4)
    2980:	0190                	addi	a2,sp,192
    2982:	0000                	unimp
    2984:	0194                	addi	a3,sp,192
    2986:	0000                	unimp
    2988:	0001                	nop
    298a:	945f 0001 9800      	0x98000001945f
    2990:	0001                	nop
    2992:	0500                	addi	s0,sp,640
    2994:	0300                	addi	s0,sp,384
    2996:	4208                	lw	a0,0(a2)
	...
    29a0:	0000                	unimp
    29a2:	0170                	addi	a2,sp,140
    29a4:	0000                	unimp
    29a6:	0188                	addi	a0,sp,192
    29a8:	0000                	unimp
    29aa:	0001                	nop
    29ac:	005e                	c.slli	zero,0x17
    29ae:	0000                	unimp
    29b0:	0000                	unimp
    29b2:	0000                	unimp
    29b4:	e000                	fsw	fs0,0(s0)
    29b6:	0000                	unimp
    29b8:	f400                	fsw	fs0,40(s0)
    29ba:	0000                	unimp
    29bc:	0100                	addi	s0,sp,128
    29be:	5a00                	lw	s0,48(a2)
    29c0:	00f4                	addi	a3,sp,76
    29c2:	0000                	unimp
    29c4:	0124                	addi	s1,sp,136
    29c6:	0000                	unimp
    29c8:	0004                	0x4
    29ca:	9f5a01f3          	0x9f5a01f3
	...
    29d6:	00e0                	addi	s0,sp,76
    29d8:	0000                	unimp
    29da:	000000fb          	0xfb
    29de:	0001                	nop
    29e0:	0000fb5b          	0xfb5b
    29e4:	2400                	fld	fs0,8(s0)
    29e6:	0001                	nop
    29e8:	0400                	addi	s0,sp,512
    29ea:	f300                	fsw	fs0,32(a4)
    29ec:	5b01                	li	s6,-32
    29ee:	009f 0000 0000      	0x9f
    29f4:	0000                	unimp
    29f6:	0000                	unimp
    29f8:	0001                	nop
    29fa:	1c00                	addi	s0,sp,560
    29fc:	0001                	nop
    29fe:	0100                	addi	s0,sp,128
    2a00:	5800                	lw	s0,48(s0)
    2a02:	011c                	addi	a5,sp,128
    2a04:	0000                	unimp
    2a06:	0124                	addi	s1,sp,136
    2a08:	0000                	unimp
    2a0a:	0001                	nop
    2a0c:	005a                	c.slli	zero,0x16
    2a0e:	0000                	unimp
    2a10:	0000                	unimp
    2a12:	0000                	unimp
    2a14:	8c00                	0x8c00
    2a16:	0000                	unimp
    2a18:	d400                	sw	s0,40(s0)
    2a1a:	0000                	unimp
    2a1c:	0100                	addi	s0,sp,128
    2a1e:	5a00                	lw	s0,48(a2)
    2a20:	00d4                	addi	a3,sp,68
    2a22:	0000                	unimp
    2a24:	00d8                	addi	a4,sp,68
    2a26:	0000                	unimp
    2a28:	0004                	0x4
    2a2a:	9f5a01f3          	0x9f5a01f3
    2a2e:	00d8                	addi	a4,sp,68
    2a30:	0000                	unimp
    2a32:	00e0                	addi	s0,sp,76
    2a34:	0000                	unimp
    2a36:	0001                	nop
    2a38:	005a                	c.slli	zero,0x16
    2a3a:	0000                	unimp
    2a3c:	0000                	unimp
    2a3e:	0000                	unimp
    2a40:	a400                	fsd	fs0,8(s0)
    2a42:	0000                	unimp
    2a44:	d000                	sw	s0,32(s0)
    2a46:	0000                	unimp
    2a48:	0100                	addi	s0,sp,128
    2a4a:	5f00                	lw	s0,56(a4)
    2a4c:	00d8                	addi	a4,sp,68
    2a4e:	0000                	unimp
    2a50:	00dc                	addi	a5,sp,68
    2a52:	0000                	unimp
    2a54:	0001                	nop
    2a56:	dc5f 0000 e000      	0xe0000000dc5f
    2a5c:	0000                	unimp
    2a5e:	0500                	addi	s0,sp,640
    2a60:	0300                	addi	s0,sp,384
    2a62:	4208                	lw	a0,0(a2)
	...
    2a6c:	0000                	unimp
    2a6e:	0064                	addi	s1,sp,12
    2a70:	0000                	unimp
    2a72:	0074                	addi	a3,sp,12
    2a74:	0000                	unimp
    2a76:	0001                	nop
    2a78:	745a                	flw	fs0,180(sp)
    2a7a:	0000                	unimp
    2a7c:	8c00                	0x8c00
    2a7e:	0000                	unimp
    2a80:	0400                	addi	s0,sp,512
    2a82:	f300                	fsw	fs0,32(a4)
    2a84:	5a01                	li	s4,-32
    2a86:	009f 0000 0000      	0x9f
    2a8c:	0000                	unimp
    2a8e:	4400                	lw	s0,8(s0)
    2a90:	0000                	unimp
    2a92:	4800                	lw	s0,16(s0)
    2a94:	0000                	unimp
    2a96:	0100                	addi	s0,sp,128
    2a98:	5b00                	lw	s0,48(a4)
    2a9a:	0048                	addi	a0,sp,4
    2a9c:	0000                	unimp
    2a9e:	0064                	addi	s1,sp,12
    2aa0:	0000                	unimp
    2aa2:	0004                	0x4
    2aa4:	9f5b01f3          	0x9f5b01f3
	...
    2ab0:	1538                	addi	a4,sp,680
    2ab2:	0000                	unimp
    2ab4:	00001543          	fmadd.s	fa0,ft0,ft0,ft0,rtz
    2ab8:	0001                	nop
    2aba:	435a                	lw	t1,148(sp)
    2abc:	0015                	c.nop	5
    2abe:	7400                	flw	fs0,40(s0)
    2ac0:	0015                	c.nop	5
    2ac2:	0400                	addi	s0,sp,512
    2ac4:	f300                	fsw	fs0,32(a4)
    2ac6:	5a01                	li	s4,-32
    2ac8:	009f 0000 0000      	0x9f
    2ace:	0000                	unimp
    2ad0:	3800                	fld	fs0,48(s0)
    2ad2:	0015                	c.nop	5
    2ad4:	4300                	lw	s0,0(a4)
    2ad6:	0015                	c.nop	5
    2ad8:	0100                	addi	s0,sp,128
    2ada:	5b00                	lw	s0,48(a4)
    2adc:	00001543          	fmadd.s	fa0,ft0,ft0,ft0,rtz
    2ae0:	1574                	addi	a3,sp,684
    2ae2:	0000                	unimp
    2ae4:	0004                	0x4
    2ae6:	9f5b01f3          	0x9f5b01f3
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
  .endr
   0:	001c                	0x1c
   2:	0000                	unimp
   4:	0002                	c.slli64	zero
   6:	0000                	unimp
   8:	0000                	unimp
   a:	0004                	0x4
   c:	0000                	unimp
   e:	0000                	unimp
  10:	008c                	addi	a1,sp,64
  12:	0000                	unimp
  14:	0ea8                	addi	a0,sp,856
	...
  1e:	0000                	unimp
  20:	001c                	0x1c
  22:	0000                	unimp
  24:	0002                	c.slli64	zero
  26:	148d                	addi	s1,s1,-29
  28:	0000                	unimp
  2a:	0004                	0x4
  2c:	0000                	unimp
  2e:	0000                	unimp
  30:	0f34                	addi	a3,sp,920
  32:	0000                	unimp
  34:	019c                	addi	a5,sp,192
	...
  3e:	0000                	unimp
  40:	001c                	0x1c
  42:	0000                	unimp
  44:	0002                	c.slli64	zero
  46:	1fda                	slli	t6,t6,0x36
  48:	0000                	unimp
  4a:	0004                	0x4
  4c:	0000                	unimp
  4e:	0000                	unimp
  50:	10d0                	addi	a2,sp,100
  52:	0000                	unimp
  54:	0018                	0x18
	...
  5e:	0000                	unimp
  60:	001c                	0x1c
  62:	0000                	unimp
  64:	0002                	c.slli64	zero
  66:	2036                	fld	ft0,328(sp)
  68:	0000                	unimp
  6a:	0004                	0x4
  6c:	0000                	unimp
  6e:	0000                	unimp
  70:	1538                	addi	a4,sp,680
  72:	0000                	unimp
  74:	003c                	addi	a5,sp,8
	...
  jal x0, default_exc_handler
  7e:	0000                	unimp
  jal x0, reset_handler
  80:	0024                	addi	s1,sp,8
  82:	0000                	unimp
  jal x0, default_exc_handler
  84:	0002                	c.slli64	zero
  86:	2186                	fld	ft3,64(sp)
  jal x0, default_exc_handler
  88:	0000                	unimp
  8a:	0004                	0x4
  assert_beebs (nk != 0);
  8c:	0000                	unimp
  8e:	0000                	unimp
{
  90:	10e8                	addi	a0,sp,108
  92:	0000                	unimp
  assert_beebs (nk != 0);
  94:	00b4                	addi	a3,sp,72
  96:	0000                	unimp
{
  98:	0000                	unimp
  9a:	0000                	unimp
  assert_beebs (nk != 0);
  9c:	008c                	addi	a1,sp,64
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
  .endr
   0:	01f4                	addi	a3,sp,204
   2:	0000                	unimp
   4:	0230                	addi	a2,sp,264
   6:	0000                	unimp
   8:	0248                	addi	a0,sp,260
   a:	0000                	unimp
   c:	024c                	addi	a1,sp,260
	...
  16:	0000                	unimp
  18:	0238                	addi	a4,sp,264
  1a:	0000                	unimp
  1c:	0248                	addi	a0,sp,260
  1e:	0000                	unimp
  20:	0264                	addi	s1,sp,268
  22:	0000                	unimp
  24:	0298                	addi	a4,sp,320
	...
  2e:	0000                	unimp
  30:	026c                	addi	a1,sp,268
  32:	0000                	unimp
  34:	0274                	addi	a3,sp,268
  36:	0000                	unimp
  38:	0278                	addi	a4,sp,268
  3a:	0000                	unimp
  3c:	0288                	addi	a0,sp,320
	...
  46:	0000                	unimp
  48:	024c                	addi	a1,sp,260
  4a:	0000                	unimp
  4c:	0254                	addi	a3,sp,260
  4e:	0000                	unimp
  50:	0298                	addi	a4,sp,320
  52:	0000                	unimp
  54:	029c                	addi	a5,sp,320
  56:	0000                	unimp
  58:	02a4                	addi	s1,sp,328
  5a:	0000                	unimp
  5c:	031c                	addi	a5,sp,384
	...
  66:	0000                	unimp
  68:	0394                	addi	a3,sp,448
  6a:	0000                	unimp
  6c:	0398                	addi	a4,sp,448
  6e:	0000                	unimp
  70:	03cc                	addi	a1,sp,452
  72:	0000                	unimp
  74:	03d0                	addi	a2,sp,452
  76:	0000                	unimp
  78:	03dc                	addi	a5,sp,452
  7a:	0000                	unimp
  jal x0, default_exc_handler
  7c:	06a4                	addi	s1,sp,840
  7e:	0000                	unimp
  jal x0, reset_handler
  80:	06e0                	addi	s0,sp,844
  82:	0000                	unimp
  jal x0, default_exc_handler
  84:	0834                	addi	a3,sp,24
	...
  8e:	0000                	unimp
{
  90:	03dc                	addi	a5,sp,452
  92:	0000                	unimp
  assert_beebs (nk != 0);
  94:	05d0                	addi	a2,sp,708
  96:	0000                	unimp
{
  98:	05d4                	addi	a3,sp,708
  9a:	0000                	unimp
  assert_beebs (nk != 0);
  9c:	05dc                	addi	a5,sp,708
  9e:	0000                	unimp
  lastkey = (AES_BLOCK_SIZE / 4) * (nr + 1);
  a0:	05e0                	addi	s0,sp,716
  a2:	0000                	unimp
  a4:	069c                	addi	a5,sp,832
  a6:	0000                	unimp
  for (i = 0, rp = rcon; i < nk; i++)
  a8:	06e0                	addi	s0,sp,844
  aa:	0000                	unimp
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
  ac:	0834                	addi	a3,sp,24
	...
  b6:	0000                	unimp
  b8:	083c                	addi	a5,sp,24
  ba:	0000                	unimp
  bc:	0840                	addi	s0,sp,20
  be:	0000                	unimp
  c0:	0874                	addi	a3,sp,28
  c2:	0000                	unimp
  c4:	0878                	addi	a4,sp,28
  c6:	0000                	unimp
  c8:	0884                	addi	s1,sp,80
  ca:	0000                	unimp
  for (i = 0, rp = rcon; i < nk; i++)
  cc:	0b4c                	addi	a1,sp,404
  ce:	0000                	unimp
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
  d0:	0b88                	addi	a0,sp,464
  d2:	0000                	unimp
  d4:	0cdc                	addi	a5,sp,596
	...
  de:	0000                	unimp
  e0:	0884                	addi	s1,sp,80
  e2:	0000                	unimp
  e4:	0a78                	addi	a4,sp,284
  e6:	0000                	unimp
  for (i = 0, rp = rcon; i < nk; i++)
  e8:	0a7c                	addi	a5,sp,284
  ea:	0000                	unimp
  ec:	0a84                	addi	s1,sp,336
  ee:	0000                	unimp
  f0:	0a88                	addi	a0,sp,336
  f2:	0000                	unimp
  f4:	0b44                	addi	s1,sp,404
  f6:	0000                	unimp
  f8:	0b88                	addi	a0,sp,464
  fa:	0000                	unimp
  fc:	0cdc                	addi	a5,sp,596
	...
 106:	0000                	unimp
      else if (nk > 6 && (i % nk) == 4)
 108:	0e30                	addi	a2,sp,792
 10a:	0000                	unimp
 10c:	0e34                	addi	a3,sp,792
 10e:	0000                	unimp
	t = SUBBYTE (t, aes_sbox);
 110:	0e38                	addi	a4,sp,792
 112:	0000                	unimp
 114:	0e94                	addi	a3,sp,848
	...
  for (i = nk; i < lastkey; i++)
 11e:	0000                	unimp
      if (i % nk == 0)
 120:	1538                	addi	a4,sp,680
 122:	0000                	unimp
      t = subkeys[i - 1];
 124:	1574                	addi	a3,sp,684
	...
	t = SUBBYTE (ROTL32 (24, t), aes_sbox) ^ *rp++;
 12e:	0000                	unimp
 130:	ffff                	0xffff
 132:	ffff                	0xffff
 134:	0000                	unimp
 136:	0000                	unimp
 138:	10e8                	addi	a0,sp,108
 13a:	0000                	unimp
 13c:	119c                	addi	a5,sp,224
 13e:	0000                	unimp
 140:	0000                	unimp
 142:	0000                	unimp
 144:	008c                	addi	a1,sp,64
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
  .endr
       0:	1345                	addi	t1,t1,-15
       2:	0000                	unimp
       4:	02770003          	lb	zero,39(a4) # 1bbed <_stack_start+0xbbed>
       8:	0000                	unimp
       a:	0101                	addi	sp,sp,0
       c:	000d0efb          	0xd0efb
      10:	0101                	addi	sp,sp,0
      12:	0101                	addi	sp,sp,0
      14:	0000                	unimp
      16:	0100                	addi	s0,sp,128
      18:	0000                	unimp
      1a:	2f01                	jal	72a <_nettle_aes_encrypt+0x312>
      1c:	6f68                	flw	fa0,92(a4)
      1e:	656d                	lui	a0,0x1b
      20:	2f43432f          	0x2f43432f
      24:	6262                	flw	ft4,24(sp)
      26:	7565                	lui	a0,0xffff9
      28:	72657473          	csrrci	s0,0x726,10
      2c:	7070412f          	0x7070412f
      30:	696c                	flw	fa1,84(a0)
      32:	69746163          	bltu	s0,s7,6b4 <_nettle_aes_encrypt+0x29c>
      36:	2f736e6f          	jal	t3,36b2c <_stack_start+0x26b2c>
      3a:	6972                	flw	fs2,28(sp)
      3c:	36766373          	csrrsi	t1,0x367,12
      40:	2d34                	fld	fa3,88(a0)
      42:	6e75                	lui	t3,0x1d
      44:	776f6e6b          	0x776f6e6b
      48:	2d6e                	fld	fs10,216(sp)
      4a:	6c65                	lui	s8,0x19
      4c:	2d66                	fld	fs10,88(sp)
      4e:	2d636367          	0x2d636367
      52:	2e38                	fld	fa4,88(a2)
      54:	2d302e33          	0x2d302e33
      58:	3032                	fld	ft0,296(sp)
      5a:	3931                	jal	fffffc76 <_stack_start+0xfffefc76>
      5c:	302e                	fld	ft0,232(sp)
      5e:	2e38                	fld	fa4,88(a2)
      60:	2d30                	fld	fa2,88(a0)
      62:	3878                	fld	fa4,240(s0)
      64:	5f36                	lw	t5,108(sp)
      66:	3436                	fld	fs0,360(sp)
      68:	6c2d                	lui	s8,0xb
      6a:	6e69                	lui	t3,0x1a
      6c:	7875                	lui	a6,0xffffd
      6e:	632d                	lui	t1,0xb
      70:	6e65                	lui	t3,0x19
      72:	6f74                	flw	fa3,92(a4)
      74:	6c2f3673          	csrrc	a2,0x6c2,t5
      78:	6269                	lui	tp,0x1a
      7a:	6363672f          	0x6363672f
  jal x0, default_exc_handler
      7e:	7369722f          	0x7369722f
  jal x0, reset_handler
      82:	34367663          	bgeu	a2,gp,3ce <aes_invert_key+0x26>
  jal x0, default_exc_handler
      86:	752d                	lui	a0,0xfffeb
  jal x0, default_exc_handler
      88:	6b6e                	flw	fs6,216(sp)
      8a:	6f6e                	flw	ft10,216(sp)
  assert_beebs (nk != 0);
      8c:	652d6e77          	0x652d6e77
{
      90:	666c                	flw	fa1,76(a2)
      92:	332e382f          	0x332e382f
  assert_beebs (nk != 0);
      96:	302e                	fld	ft0,232(sp)
{
      98:	636e692f          	0x636e692f
  assert_beebs (nk != 0);
      9c:	756c                	flw	fa1,108(a0)
      9e:	6564                	flw	fs1,76(a0)
  lastkey = (AES_BLOCK_SIZE / 4) * (nr + 1);
      a0:	2f00                	fld	fs0,24(a4)
      a2:	6f68                	flw	fa0,92(a4)
      a4:	656d                	lui	a0,0x1b
      a6:	2f43432f          	0x2f43432f
  for (i = 0, rp = rcon; i < nk; i++)
      aa:	6262                	flw	ft4,24(sp)
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
      ac:	7565                	lui	a0,0xffff9
      ae:	72657473          	csrrci	s0,0x726,10
      b2:	7070412f          	0x7070412f
      b6:	696c                	flw	fa1,84(a0)
      b8:	69746163          	bltu	s0,s7,73a <_nettle_aes_encrypt+0x322>
      bc:	2f736e6f          	jal	t3,36bb2 <_stack_start+0x26bb2>
      c0:	6972                	flw	fs2,28(sp)
      c2:	36766373          	csrrsi	t1,0x367,12
      c6:	2d34                	fld	fa3,88(a0)
      c8:	6e75                	lui	t3,0x1d
      ca:	776f6e6b          	0x776f6e6b
  for (i = 0, rp = rcon; i < nk; i++)
      ce:	2d6e                	fld	fs10,216(sp)
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
      d0:	6c65                	lui	s8,0x19
      d2:	2d66                	fld	fs10,88(sp)
      d4:	2d636367          	0x2d636367
      d8:	2e38                	fld	fa4,88(a2)
      da:	2d302e33          	0x2d302e33
      de:	3032                	fld	ft0,296(sp)
      e0:	3931                	jal	fffffcfc <_stack_start+0xfffefcfc>
      e2:	302e                	fld	ft0,232(sp)
      e4:	2e38                	fld	fa4,88(a2)
      e6:	2d30                	fld	fa2,88(a0)
  for (i = 0, rp = rcon; i < nk; i++)
      e8:	3878                	fld	fa4,240(s0)
      ea:	5f36                	lw	t5,108(sp)
      ec:	3436                	fld	fs0,360(sp)
      ee:	6c2d                	lui	s8,0xb
      f0:	6e69                	lui	t3,0x1a
      f2:	7875                	lui	a6,0xffffd
      f4:	632d                	lui	t1,0xb
      f6:	6e65                	lui	t3,0x19
      f8:	6f74                	flw	fa3,92(a4)
      fa:	722f3673          	csrrc	a2,0x722,t5
      fe:	7369                	lui	t1,0xffffa
     100:	34367663          	bgeu	a2,gp,44c <_nettle_aes_encrypt+0x34>
     104:	752d                	lui	a0,0xfffeb
     106:	6b6e                	flw	fs6,216(sp)
      else if (nk > 6 && (i % nk) == 4)
     108:	6f6e                	flw	ft10,216(sp)
     10a:	652d6e77          	0x652d6e77
     10e:	666c                	flw	fa1,76(a2)
	t = SUBBYTE (t, aes_sbox);
     110:	636e692f          	0x636e692f
     114:	756c                	flw	fa1,108(a0)
     116:	6564                	flw	fs1,76(a0)
  for (i = nk; i < lastkey; i++)
     118:	63616d2f          	0x63616d2f
     11c:	6968                	flw	fa0,84(a0)
     11e:	656e                	flw	fa0,216(sp)
      if (i % nk == 0)
     120:	2f00                	fld	fs0,24(a4)
     122:	6f68                	flw	fa0,92(a4)
      t = subkeys[i - 1];
     124:	656d                	lui	a0,0x1b
     126:	2f43432f          	0x2f43432f
      if (i % nk == 0)
     12a:	6262                	flw	ft4,24(sp)
	t = SUBBYTE (ROTL32 (24, t), aes_sbox) ^ *rp++;
     12c:	7565                	lui	a0,0xffff9
     12e:	72657473          	csrrci	s0,0x726,10
     132:	7070412f          	0x7070412f
     136:	696c                	flw	fa1,84(a0)
     138:	69746163          	bltu	s0,s7,7ba <_nettle_aes_encrypt+0x3a2>
     13c:	2f736e6f          	jal	t3,36c32 <_stack_start+0x26c32>
     140:	6972                	flw	fs2,28(sp)
     142:	36766373          	csrrsi	t1,0x367,12
     146:	2d34                	fld	fa3,88(a0)
     148:	6e75                	lui	t3,0x1d
     14a:	776f6e6b          	0x776f6e6b
     14e:	2d6e                	fld	fs10,216(sp)
     150:	6c65                	lui	s8,0x19
     152:	2d66                	fld	fs10,88(sp)
     154:	2d636367          	0x2d636367
     158:	2e38                	fld	fa4,88(a2)
     15a:	2d302e33          	0x2d302e33
     15e:	3032                	fld	ft0,296(sp)
     160:	3931                	jal	fffffd7c <_stack_start+0xfffefd7c>
     162:	302e                	fld	ft0,232(sp)
     164:	2e38                	fld	fa4,88(a2)
     166:	2d30                	fld	fa2,88(a0)
     168:	3878                	fld	fa4,240(s0)
     16a:	5f36                	lw	t5,108(sp)
     16c:	3436                	fld	fs0,360(sp)
     16e:	6c2d                	lui	s8,0xb
     170:	6e69                	lui	t3,0x1a
     172:	7875                	lui	a6,0xffffd
     174:	632d                	lui	t1,0xb
     176:	6e65                	lui	t3,0x19
     178:	6f74                	flw	fa3,92(a4)
     17a:	722f3673          	csrrc	a2,0x722,t5
     17e:	7369                	lui	t1,0xffffa
     180:	34367663          	bgeu	a2,gp,4cc <_nettle_aes_encrypt+0xb4>
     184:	752d                	lui	a0,0xfffeb
     186:	6b6e                	flw	fs6,216(sp)
     188:	6f6e                	flw	ft10,216(sp)
     18a:	652d6e77          	0x652d6e77
     18e:	666c                	flw	fa1,76(a2)
     190:	636e692f          	0x636e692f
      subkeys[i] = subkeys[i - nk] ^ t;
     194:	756c                	flw	fa1,108(a0)
     196:	6564                	flw	fs1,76(a0)
     198:	7379732f          	0x7379732f
  for (i = nk; i < lastkey; i++)
     19c:	2f00                	fld	fs0,24(a4)
     19e:	6f68                	flw	fa0,92(a4)
     1a0:	656d                	lui	a0,0x1b
     1a2:	2f43432f          	0x2f43432f
      subkeys[i] = subkeys[i - nk] ^ t;
     1a6:	6262                	flw	ft4,24(sp)
     1a8:	7565                	lui	a0,0xffff9
     1aa:	72657473          	csrrci	s0,0x726,10
     1ae:	7070412f          	0x7070412f
      else if (nk > 6 && (i % nk) == 4)
     1b2:	696c                	flw	fa1,84(a0)
     1b4:	69746163          	bltu	s0,s7,836 <_nettle_aes_encrypt+0x41e>
	t = SUBBYTE (t, aes_sbox);
     1b8:	2f736e6f          	jal	t3,36cae <_stack_start+0x26cae>
     1bc:	6972                	flw	fs2,28(sp)
     1be:	36766373          	csrrsi	t1,0x367,12
     1c2:	2d34                	fld	fa3,88(a0)
     1c4:	6e75                	lui	t3,0x1d
     1c6:	776f6e6b          	0x776f6e6b
     1ca:	2d6e                	fld	fs10,216(sp)
     1cc:	6c65                	lui	s8,0x19
     1ce:	2d66                	fld	fs10,88(sp)
     1d0:	2d636367          	0x2d636367
     1d4:	2e38                	fld	fa4,88(a2)
     1d6:	2d302e33          	0x2d302e33
     1da:	3032                	fld	ft0,296(sp)
     1dc:	3931                	jal	fffffdf8 <_stack_start+0xfffefdf8>
     1de:	302e                	fld	ft0,232(sp)
     1e0:	2e38                	fld	fa4,88(a2)
     1e2:	2d30                	fld	fa2,88(a0)
     1e4:	3878                	fld	fa4,240(s0)
     1e6:	5f36                	lw	t5,108(sp)
     1e8:	3436                	fld	fs0,360(sp)
     1ea:	6c2d                	lui	s8,0xb
     1ec:	6e69                	lui	t3,0x1a
     1ee:	7875                	lui	a6,0xffffd
     1f0:	632d                	lui	t1,0xb
     1f2:	6e65                	lui	t3,0x19
     1f4:	6f74                	flw	fa3,92(a4)
     1f6:	722f3673          	csrrc	a2,0x722,t5
     1fa:	7369                	lui	t1,0xffffa
     1fc:	34367663          	bgeu	a2,gp,548 <_nettle_aes_encrypt+0x130>
     200:	752d                	lui	a0,0xfffeb
     202:	6b6e                	flw	fs6,216(sp)
     204:	6f6e                	flw	ft10,216(sp)
     206:	652d6e77          	0x652d6e77
     20a:	666c                	flw	fa1,76(a2)
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
     20c:	636e692f          	0x636e692f
     210:	756c                	flw	fa1,108(a0)
     212:	6564                	flw	fs1,76(a0)
     214:	0000                	unimp
     216:	656e                	flw	fa0,216(sp)
{
     218:	7474                	flw	fa3,108(s0)
     21a:	656c                	flw	fa1,76(a0)
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
     21c:	612d                	addi	sp,sp,224
     21e:	7365                	lui	t1,0xffff9
{
     220:	632e                	flw	ft6,200(sp)
     222:	0000                	unimp
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
     224:	0000                	unimp
     226:	64647473          	csrrci	s0,0x646,8
  if (keysize == AES256_KEY_SIZE)
     22a:	6665                	lui	a2,0x19
     22c:	682e                	flw	fa6,200(sp)
     22e:	0100                	addi	s0,sp,128
     230:	0000                	unimp
     232:	645f 6665 7561      	0x75616665645f
  else if (keysize >= AES192_KEY_SIZE)
     238:	746c                	flw	fa1,108(s0)
     23a:	745f 7079 7365      	0x73657079745f
      nk = 4;
     240:	682e                	flw	fa6,200(sp)
     242:	0200                	addi	s0,sp,256
  ctx->rounds = nr;
     244:	0000                	unimp
     246:	735f 6474 6e69      	0x6e696474735f
  _aes_set_key (nr, nk, ctx->keys, key);
     24c:	2e74                	fld	fa3,216(a2)
     24e:	0068                	addi	a0,sp,12
     250:	5f000003          	lb	zero,1520(zero) # 5f0 <_nettle_aes_encrypt+0x1d8>
      nr = _AES256_ROUNDS;
     254:	7974                	flw	fa3,116(a0)
     256:	6570                	flw	fa2,76(a0)
      nk = 8;
     258:	00682e73          	csrrs	t3,0x6,a6
     25c:	72000003          	lb	zero,1824(zero) # 720 <_nettle_aes_encrypt+0x308>
      nr = _AES192_ROUNDS;
     260:	6565                	lui	a0,0x19
     262:	746e                	flw	fs0,248(sp)
      nk = 6;
     264:	682e                	flw	fa6,200(sp)
     266:	0300                	addi	s0,sp,384
     268:	0000                	unimp
     26a:	6f6c                	flw	fa1,92(a4)
  if (src == dst)
     26c:	682e6b63          	bltu	t3,sp,902 <_nettle_aes_decrypt+0x42>
     270:	0300                	addi	s0,sp,384
     272:	0000                	unimp
     274:	6c647473          	csrrci	s0,0x6c6,8
     278:	6269                	lui	tp,0x1a
     27a:	682e                	flw	fa6,200(sp)
     27c:	0400                	addi	s0,sp,512
     27e:	0000                	unimp
      for (i = 0; i <= rounds * 4; i += 4)
     280:	0500                	addi	s0,sp,640
     282:	0001                	nop
	for (k = 0; k < 4; k++)
     284:	0205                	addi	tp,tp,1
     286:	008c                	addi	a1,sp,64
      for (i = 0; i <= rounds * 4; i += 4)
     288:	0000                	unimp
     28a:	0105d503          	lhu	a0,16(a1)
     28e:	0305                	addi	t1,t1,1
	  dst[i + k] = src[rounds * 4 - i + k];
     290:	00090103          	lb	sp,0(s2) # 5c74 <_bss_end+0x167c>
     294:	0100                	addi	s0,sp,128
     296:	00090303          	lb	t1,0(s2)
     29a:	0100                	addi	s0,sp,128
     29c:	00090103          	lb	sp,0(s2)
     2a0:	0100                	addi	s0,sp,128
     2a2:	00090103          	lb	sp,0(s2)
	for (k = 0; k < 4; k++)
     2a6:	0100                	addi	s0,sp,128
      for (i = 0; i <= rounds * 4; i += 4)
     2a8:	00090203          	lb	tp,0(s2)
     2ac:	0100                	addi	s0,sp,128
     2ae:	0200                	addi	s0,sp,256
     2b0:	0104                	addi	s1,sp,128
     2b2:	04090003          	lb	zero,64(s2)
     2b6:	0100                	addi	s0,sp,128
     2b8:	0105                	addi	sp,sp,1
     2ba:	0200                	addi	s0,sp,256
  if (src == dst)
     2bc:	0104                	addi	s1,sp,128
     2be:	0306                	slli	t1,t1,0x1
     2c0:	0978                	addi	a4,sp,156
     2c2:	0000                	unimp
	for (k = 0; k < 4; k++)
     2c4:	0501                	addi	a0,a0,0
     2c6:	04020003          	lb	zero,64(tp) # 1a040 <_stack_start+0xa040>
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
     2ca:	0301                	addi	t1,t1,0
     2cc:	0908                	addi	a0,sp,144
     2ce:	0004                	0x4
     2d0:	0501                	addi	a0,a0,0
     2d2:	0001                	nop
      for (i = 0; i <= rounds * 4; i += 4)
     2d4:	0402                	c.slli64	s0
     2d6:	0301                	addi	t1,t1,0
    MIX_COLUMN (mtable, dst[i]);
     2d8:	0978                	addi	a4,sp,156
     2da:	0004                	0x4
     2dc:	0501                	addi	a0,a0,0
     2de:	04020003          	lb	zero,64(tp) # 40 <__DYNAMIC+0x40>
  for (i = 4; i < 4 * rounds; i++)
     2e2:	0301                	addi	t1,t1,0
}
     2e4:	0908                	addi	a0,sp,144
     2e6:	0004                	0x4
     2e8:	0501                	addi	a0,a0,0
     2ea:	0019                	c.nop	6
     2ec:	0402                	c.slli64	s0
     2ee:	0602                	c.slli64	a2
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
     2f0:	04090003          	lb	zero,64(s2)
	for (k = 0; k < 4; k++)
     2f4:	0100                	addi	s0,sp,128
     2f6:	0305                	addi	t1,t1,1
	  SWAP (dst[i + k], dst[j + k]);
     2f8:	0200                	addi	s0,sp,256
     2fa:	0204                	addi	s1,sp,256
     2fc:	00090103          	lb	sp,0(s2)
	for (k = 0; k < 4; k++)
     300:	0100                	addi	s0,sp,128
     302:	2205                	jal	422 <_nettle_aes_encrypt+0xa>
	  SWAP (dst[i + k], dst[j + k]);
     304:	0200                	addi	s0,sp,256
     306:	0204                	addi	s1,sp,256
     308:	0306                	slli	t1,t1,0x1
     30a:	0900                	addi	s0,sp,144
     30c:	0000                	unimp
     30e:	0501                	addi	a0,a0,0
     310:	0402000b          	0x402000b
	for (k = 0; k < 4; k++)
     314:	0302                	c.slli64	t1
     316:	0900                	addi	s0,sp,144
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
     318:	0004                	0x4
     31a:	0501                	addi	a0,a0,0
     31c:	04020003          	lb	zero,64(tp) # 40 <__DYNAMIC+0x40>
     320:	0602                	c.slli64	a2
     322:	04090203          	lb	tp,64(s2)
    MIX_COLUMN (mtable, dst[i]);
     326:	0100                	addi	s0,sp,128
  for (i = 4; i < 4 * rounds; i++)
     328:	0a05                	addi	s4,s4,1
     32a:	0200                	addi	s0,sp,256
     32c:	0204                	addi	s1,sp,256
     32e:	0306                	slli	t1,t1,0x1
    MIX_COLUMN (mtable, dst[i]);
     330:	0900                	addi	s0,sp,144
     332:	0000                	unimp
     334:	0501                	addi	a0,a0,0
     336:	0005                	c.nop	1
     338:	0402                	c.slli64	s0
     33a:	01030603          	lb	a2,16(t1) # ffff9010 <_stack_start+0xfffe9010>
     33e:	0409                	addi	s0,s0,2
     340:	0100                	addi	s0,sp,128
     342:	1205                	addi	tp,tp,-31
     344:	0200                	addi	s0,sp,256
     346:	0304                	addi	s1,sp,384
     348:	0306                	slli	t1,t1,0x1
     34a:	0900                	addi	s0,sp,144
     34c:	0000                	unimp
     34e:	0501                	addi	a0,a0,0
     350:	0010                	0x10
     352:	0402                	c.slli64	s0
     354:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     358:	0008                	0x8
     35a:	0501                	addi	a0,a0,0
     35c:	0012                	c.slli	zero,0x4
     35e:	0402                	c.slli64	s0
     360:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     364:	0004                	0x4
     366:	0501                	addi	a0,a0,0
     368:	0010                	0x10
     36a:	0402                	c.slli64	s0
     36c:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     370:	0010                	0x10
     372:	0501                	addi	a0,a0,0
     374:	04020023          	sb	zero,64(tp) # 40 <__DYNAMIC+0x40>
     378:	097f0303          	lb	t1,151(t5) # fffe8097 <_stack_start+0xfffd8097>
     37c:	0004                	0x4
     37e:	0501                	addi	a0,a0,0
     380:	0012                	c.slli	zero,0x4
     382:	0402                	c.slli64	s0
     384:	09010303          	lb	t1,144(sp) # b0b046e <_stack_start+0xb0a046e>
     388:	0004                	0x4
     38a:	0501                	addi	a0,a0,0
     38c:	0010                	0x10
     38e:	0402                	c.slli64	s0
     390:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     394:	0014                	0x14
     396:	0501                	addi	a0,a0,0
     398:	04020003          	lb	zero,64(tp) # 40 <__DYNAMIC+0x40>
     39c:	097f0303          	lb	t1,151(t5)
     3a0:	0004                	0x4
     3a2:	0301                	addi	t1,t1,0
     3a4:	0900                	addi	s0,sp,144
     3a6:	0014                	0x14
{
     3a8:	0501                	addi	a0,a0,0
     3aa:	0312                	slli	t1,t1,0x4
     3ac:	0900                	addi	s0,sp,144
     3ae:	0004                	0x4
     3b0:	0501                	addi	a0,a0,0
     3b2:	0909030f          	0x909030f
     3b6:	0008                	0x8
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
     3b8:	0501                	addi	a0,a0,0
     3ba:	09000317          	auipc	t1,0x9000
{
     3be:	0004                	0x4
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
     3c0:	0501                	addi	a0,a0,0
     3c2:	0306                	slli	t1,t1,0x1
     3c4:	0901                	addi	s2,s2,0
     3c6:	0004                	0x4
{
     3c8:	0501                	addi	a0,a0,0
     3ca:	04020003          	lb	zero,64(tp) # 40 <__DYNAMIC+0x40>
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
     3ce:	0301                	addi	t1,t1,0
  dst->rounds = src->rounds;
     3d0:	0979                	addi	s2,s2,30
     3d2:	0008                	0x8
}
     3d4:	0501                	addi	a0,a0,0
     3d6:	02030607          	0x2030607
     3da:	0809                	addi	a6,a6,2
  dst->rounds = src->rounds;
     3dc:	0100                	addi	s0,sp,128
     3de:	0d05                	addi	s10,s10,1
}
     3e0:	0306                	slli	t1,t1,0x1
     3e2:	0901                	addi	s2,s2,0
     3e4:	0000                	unimp
     3e6:	0501                	addi	a0,a0,0
     3e8:	0309                	addi	t1,t1,2
     3ea:	097f                	0x97f
{
     3ec:	0004                	0x4
     3ee:	0501                	addi	a0,a0,0
     3f0:	01030607          	0x1030607
     3f4:	0409                	addi	s0,s0,2
     3f6:	0100                	addi	s0,sp,128
     3f8:	0a05                	addi	s4,s4,1
     3fa:	0306                	slli	t1,t1,0x1
  aes_set_encrypt_key (ctx, keysize, key);
     3fc:	0900                	addi	s0,sp,144
     3fe:	0000                	unimp
  aes_invert_key (ctx, ctx);
     400:	0501                	addi	a0,a0,0
     402:	0602                	c.slli64	a2
     404:	04090103          	lb	sp,64(s2)
}
     408:	0100                	addi	s0,sp,128
     40a:	0605                	addi	a2,a2,1
     40c:	0306                	slli	t1,t1,0x1
     40e:	0900                	addi	s0,sp,144
     410:	0000                	unimp
     412:	0501                	addi	a0,a0,0
  aes_invert_key (ctx, ctx);
     414:	032e                	slli	t1,t1,0xb
     416:	0900                	addi	s0,sp,144
{
     418:	0028                	addi	a0,sp,8
     41a:	0501                	addi	a0,a0,0
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     41c:	0306                	slli	t1,t1,0x1
     41e:	0900                	addi	s0,sp,144
     420:	0004                	0x4
     422:	0501                	addi	a0,a0,0
{
     424:	0900032b          	0x900032b
     428:	0034                	addi	a3,sp,8
     42a:	0501                	addi	a0,a0,0
     42c:	0304                	addi	s1,sp,384
     42e:	0900                	addi	s0,sp,144
     430:	0004                	0x4
     432:	0501                	addi	a0,a0,0
     434:	04020007          	0x4020007
     438:	0602                	c.slli64	a2
     43a:	04090503          	lb	a0,64(s2)
     43e:	0100                	addi	s0,sp,128
     440:	1b05                	addi	s6,s6,-31
     442:	0200                	addi	s0,sp,256
     444:	0204                	addi	s1,sp,256
     446:	0306                	slli	t1,t1,0x1
     448:	0900                	addi	s0,sp,144
     44a:	0000                	unimp
     44c:	0501                	addi	a0,a0,0
     44e:	0024                	addi	s1,sp,8
     450:	0402                	c.slli64	s0
     452:	0302                	c.slli64	t1
     454:	0900                	addi	s0,sp,144
     456:	0004                	0x4
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     458:	0501                	addi	a0,a0,0
     45a:	001e                	c.slli	zero,0x7
     45c:	0402                	c.slli64	s0
     45e:	0302                	c.slli64	t1
     460:	00040977          	0x40977
     464:	0501                	addi	a0,a0,0
     466:	0024                	addi	s1,sp,8
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     468:	0402                	c.slli64	s0
     46a:	0302                	c.slli64	t1
     46c:	0909                	addi	s2,s2,2
     46e:	0008                	0x8
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     470:	0501                	addi	a0,a0,0
     472:	0012                	c.slli	zero,0x4
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     474:	0402                	c.slli64	s0
     476:	0302                	c.slli64	t1
     478:	0900                	addi	s0,sp,144
     47a:	0004                	0x4
     47c:	0501                	addi	a0,a0,0
     47e:	060c                	addi	a1,sp,768
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     480:	08097d03          	0x8097d03
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     484:	0100                	addi	s0,sp,128
     486:	0f05                	addi	t5,t5,1
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     488:	0306                	slli	t1,t1,0x1
     48a:	0900                	addi	s0,sp,144
     48c:	0000                	unimp
     48e:	0501                	addi	a0,a0,0
     490:	04020017          	auipc	zero,0x4020
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     494:	0301                	addi	t1,t1,0
     496:	0900                	addi	s0,sp,144
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     498:	0004                	0x4
     49a:	0501                	addi	a0,a0,0
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     49c:	0602                	c.slli64	a2
     49e:	04090103          	lb	sp,64(s2)
     4a2:	0100                	addi	s0,sp,128
     4a4:	0605                	addi	a2,a2,1
     4a6:	0306                	slli	t1,t1,0x1
     4a8:	0900                	addi	s0,sp,144
     4aa:	0000                	unimp
    for (i = 1; i < rounds; i++)
     4ac:	0501                	addi	a0,a0,0
     4ae:	0304                	addi	s1,sp,384
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     4b0:	0900                	addi	s0,sp,144
     4b2:	004c                	addi	a1,sp,4
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     4b4:	0501                	addi	a0,a0,0
     4b6:	0601                	addi	a2,a2,0
     4b8:	08090b03          	lb	s6,128(s2)
     4bc:	0100                	addi	s0,sp,128
     4be:	0305                	addi	t1,t1,1
     4c0:	00090103          	lb	sp,0(s2)
     4c4:	0100                	addi	s0,sp,128
     4c6:	00090203          	lb	tp,0(s2)
     4ca:	0100                	addi	s0,sp,128
     4cc:	0200                	addi	s0,sp,256
     4ce:	0104                	addi	s1,sp,128
     4d0:	0c090003          	lb	zero,192(s2)
     4d4:	0100                	addi	s0,sp,128
     4d6:	0105                	addi	sp,sp,1
     4d8:	0200                	addi	s0,sp,256
     4da:	0104                	addi	s1,sp,128
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     4dc:	0306                	slli	t1,t1,0x1
     4de:	097d                	addi	s2,s2,31
     4e0:	0000                	unimp
     4e2:	0501                	addi	a0,a0,0
     4e4:	04020003          	lb	zero,64(tp) # 40 <__DYNAMIC+0x40>
     4e8:	0301                	addi	t1,t1,0
     4ea:	00040903          	lb	s2,0(s0)
     4ee:	0501                	addi	a0,a0,0
     4f0:	0001                	nop
     4f2:	0402                	c.slli64	s0
     4f4:	0301                	addi	t1,t1,0
     4f6:	097d                	addi	s2,s2,31
     4f8:	0004                	0x4
     4fa:	0501                	addi	a0,a0,0
     4fc:	04020003          	lb	zero,64(tp) # 40 <__DYNAMIC+0x40>
     500:	0301                	addi	t1,t1,0
     502:	00040903          	lb	s2,0(s0)
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     506:	0501                	addi	a0,a0,0
     508:	0006                	c.slli	zero,0x1
     50a:	0402                	c.slli64	s0
     50c:	0302                	c.slli64	t1
     50e:	0904                	addi	s1,sp,144
     510:	0004                	0x4
     512:	0501                	addi	a0,a0,0
     514:	002d                	c.nop	11
     516:	0402                	c.slli64	s0
     518:	0602                	c.slli64	a2
     51a:	08097c03          	0x8097c03
     51e:	0100                	addi	s0,sp,128
     520:	0305                	addi	t1,t1,1
     522:	0200                	addi	s0,sp,256
     524:	0204                	addi	s1,sp,256
     526:	00090103          	lb	sp,0(s2)
     52a:	0100                	addi	s0,sp,128
     52c:	2d05                	jal	b5c <_nettle_aes_decrypt+0x29c>
     52e:	0200                	addi	s0,sp,256
    for (i = 1; i < rounds; i++)
     530:	0204                	addi	s1,sp,256
     532:	00090003          	lb	zero,0(s2)
     536:	0100                	addi	s0,sp,128
     538:	0305                	addi	t1,t1,1
     53a:	0200                	addi	s0,sp,256
     53c:	0204                	addi	s1,sp,256
     53e:	00090303          	lb	t1,0(s2)
     542:	0100                	addi	s0,sp,128
     544:	0605                	addi	a2,a2,1
     546:	0200                	addi	s0,sp,256
     548:	0204                	addi	s1,sp,256
     54a:	0306                	slli	t1,t1,0x1
     54c:	0900                	addi	s0,sp,144
     54e:	0000                	unimp
     550:	0501                	addi	a0,a0,0
     552:	0608                	addi	a0,sp,768
     554:	04090503          	lb	a0,64(s2)
     558:	0100                	addi	s0,sp,128
     55a:	0b05                	addi	s6,s6,1
     55c:	0306                	slli	t1,t1,0x1
     55e:	0900                	addi	s0,sp,144
     560:	0000                	unimp
     562:	0501                	addi	a0,a0,0
     564:	030a                	slli	t1,t1,0x2
     566:	0908                	addi	a0,sp,144
     568:	0008                	0x8
     56a:	0301                	addi	t1,t1,0
     56c:	097f                	0x97f
     56e:	0004                	0x4
     570:	0501                	addi	a0,a0,0
     572:	04030603          	lb	a2,64(t1) # 90003fa <_stack_start+0x8ff03fa>
     576:	0409                	addi	s0,s0,2
     578:	0100                	addi	s0,sp,128
     57a:	0f05                	addi	t5,t5,1
     57c:	0306                	slli	t1,t1,0x1
     57e:	0900                	addi	s0,sp,144
     580:	0000                	unimp
     582:	0501                	addi	a0,a0,0
     584:	01030603          	lb	a2,16(t1)
     588:	0409                	addi	s0,s0,2
     58a:	0100                	addi	s0,sp,128
     58c:	0a05                	addi	s4,s4,1
     58e:	0306                	slli	t1,t1,0x1
     590:	0972                	slli	s2,s2,0x1c
     592:	000c                	0xc
     594:	0301                	addi	t1,t1,0
     596:	097f                	0x97f
     598:	0004                	0x4
     59a:	0301                	addi	t1,t1,0
     59c:	0906                	slli	s2,s2,0x1
     59e:	0008                	0x8
     5a0:	0301                	addi	t1,t1,0
     5a2:	097f                	0x97f
     5a4:	0004                	0x4
     5a6:	0501                	addi	a0,a0,0
     5a8:	0601                	addi	a2,a2,0
     5aa:	0900ea03          	0x900ea03
     5ae:	0008                	0x8
     5b0:	0501                	addi	a0,a0,0
     5b2:	09010303          	lb	t1,144(sp)
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     5b6:	0000                	unimp
     5b8:	0301                	addi	t1,t1,0
     5ba:	0905                	addi	s2,s2,1
     5bc:	0000                	unimp
     5be:	0501                	addi	a0,a0,0
     5c0:	0606                	slli	a2,a2,0x1
     5c2:	04090003          	lb	zero,64(s2)
     5c6:	0100                	addi	s0,sp,128
     5c8:	0e05                	addi	t3,t3,1
     5ca:	10090c03          	lb	s8,256(s2)
     5ce:	0100                	addi	s0,sp,128
     5d0:	0205                	addi	tp,tp,1
     5d2:	04090103          	lb	sp,64(s2)
     5d6:	0100                	addi	s0,sp,128
     5d8:	0e05                	addi	t3,t3,1
     5da:	04097f03          	0x4097f03
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     5de:	0100                	addi	s0,sp,128
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     5e0:	0405                	addi	s0,s0,1
     5e2:	0200                	addi	s0,sp,256
     5e4:	0304                	addi	s1,sp,384
     5e6:	0306                	slli	t1,t1,0x1
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     5e8:	0902                	c.slli64	s2
     5ea:	0008                	0x8
     5ec:	0501                	addi	a0,a0,0
     5ee:	0014                	0x14
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     5f0:	0402                	c.slli64	s0
     5f2:	00030603          	lb	a2,0(t1)
     5f6:	0009                	c.nop	2
     5f8:	0100                	addi	s0,sp,128
     5fa:	0f05                	addi	t5,t5,1
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     5fc:	0200                	addi	s0,sp,256
     5fe:	0304                	addi	s1,sp,384
     600:	04090003          	lb	zero,64(s2)
     604:	0100                	addi	s0,sp,128
     606:	0205                	addi	tp,tp,1
     608:	0200                	addi	s0,sp,256
     60a:	0304                	addi	s1,sp,384
     60c:	10097f03          	0x10097f03
     610:	0100                	addi	s0,sp,128
     612:	2605                	jal	932 <_nettle_aes_decrypt+0x72>
     614:	0200                	addi	s0,sp,256
     616:	0204                	addi	s1,sp,256
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     618:	04097f03          	0x4097f03
     61c:	0100                	addi	s0,sp,128
     61e:	0705                	addi	a4,a4,1
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     620:	0200                	addi	s0,sp,256
     622:	0204                	addi	s1,sp,256
     624:	0c090003          	lb	zero,192(s2)
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     628:	0100                	addi	s0,sp,128
     62a:	0605                	addi	a2,a2,1
     62c:	08097403          	0x8097403
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     630:	0100                	addi	s0,sp,128
     632:	0205                	addi	tp,tp,1
     634:	08090503          	lb	a0,128(s2)
     638:	0100                	addi	s0,sp,128
     63a:	0705                	addi	a4,a4,1
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     63c:	0200                	addi	s0,sp,256
     63e:	0104                	addi	s1,sp,128
     640:	04097f03          	0x4097f03
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     644:	0100                	addi	s0,sp,128
     646:	0e05                	addi	t3,t3,1
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     648:	0c090803          	lb	a6,192(s2)
     64c:	0100                	addi	s0,sp,128
     64e:	0505                	addi	a0,a0,1
     650:	04090703          	lb	a4,64(s2)
     654:	0100                	addi	s0,sp,128
     656:	0305                	addi	t1,t1,1
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     658:	0200                	addi	s0,sp,256
     65a:	0104                	addi	s1,sp,128
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     65c:	08097f03          	0x8097f03
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     660:	0100                	addi	s0,sp,128
     662:	0105                	addi	sp,sp,1
     664:	04090203          	lb	tp,64(s2)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     668:	0100                	addi	s0,sp,128
     66a:	0705                	addi	a4,a4,1
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     66c:	0c097003          	0xc097003
     670:	0100                	addi	s0,sp,128
     672:	0905                	addi	s2,s2,1
     674:	04090103          	lb	sp,64(s2)
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     678:	0100                	addi	s0,sp,128
     67a:	0405                	addi	s0,s0,1
     67c:	0200                	addi	s0,sp,256
     67e:	0304                	addi	s1,sp,384
     680:	0306                	slli	t1,t1,0x1
     682:	0901                	addi	s2,s2,0
     684:	0004                	0x4
     686:	0001                	nop
     688:	0402                	c.slli64	s0
     68a:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     68e:	0000                	unimp
     690:	0001                	nop
     692:	0402                	c.slli64	s0
     694:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     698:	0008                	0x8
     69a:	0501                	addi	a0,a0,0
     69c:	0016                	c.slli	zero,0x5
     69e:	0402                	c.slli64	s0
     6a0:	7f030603          	lb	a2,2032(t1)
     6a4:	0009                	c.nop	2
     6a6:	0100                	addi	s0,sp,128
    LE_WRITE_UINT32 (dst, t0);
     6a8:	0405                	addi	s0,s0,1
     6aa:	0200                	addi	s0,sp,256
    LE_WRITE_UINT32 (dst + 4, t1);
     6ac:	0304                	addi	s1,sp,384
     6ae:	04090103          	lb	sp,64(s2)
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     6b2:	0100                	addi	s0,sp,128
     6b4:	0200                	addi	s0,sp,256
     6b6:	0304                	addi	s1,sp,384
     6b8:	0306                	slli	t1,t1,0x1
     6ba:	0900                	addi	s0,sp,144
    LE_WRITE_UINT32 (dst + 8, t2);
     6bc:	0004                	0x4
     6be:	0501                	addi	a0,a0,0
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     6c0:	0002                	c.slli64	zero
     6c2:	0402                	c.slli64	s0
    LE_WRITE_UINT32 (dst, t0);
     6c4:	7f030603          	lb	a2,2032(t1)
     6c8:	0c09                	addi	s8,s8,2
     6ca:	0100                	addi	s0,sp,128
     6cc:	3405                	jal	ec <_aes_set_key+0x60>
     6ce:	0200                	addi	s0,sp,256
     6d0:	0204                	addi	s1,sp,256
     6d2:	04097f03          	0x4097f03
     6d6:	0100                	addi	s0,sp,128
     6d8:	0505                	addi	a0,a0,1
     6da:	0200                	addi	s0,sp,256
    LE_WRITE_UINT32 (dst + 4, t1);
     6dc:	0304                	addi	s1,sp,384
     6de:	0306                	slli	t1,t1,0x1
     6e0:	000c090f          	0xc090f
     6e4:	0001                	nop
     6e6:	0402                	c.slli64	s0
     6e8:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     6ec:	0000                	unimp
     6ee:	0001                	nop
     6f0:	0402                	c.slli64	s0
     6f2:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
    LE_WRITE_UINT32 (dst + 8, t2);
     6f6:	0000                	unimp
     6f8:	0001                	nop
     6fa:	0402                	c.slli64	s0
     6fc:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     700:	0004                	0x4
     702:	0001                	nop
     704:	0402                	c.slli64	s0
     706:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     70a:	0000                	unimp
    LE_WRITE_UINT32 (dst + 12, t3);
     70c:	0001                	nop
     70e:	0402                	c.slli64	s0
     710:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     714:	0000                	unimp
     716:	0001                	nop
     718:	0402                	c.slli64	s0
     71a:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     71e:	0000                	unimp
     720:	0001                	nop
     722:	0402                	c.slli64	s0
     724:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     728:	0000                	unimp
     72a:	0001                	nop
     72c:	0402                	c.slli64	s0
     72e:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
}
     732:	0000                	unimp
     734:	0001                	nop
     736:	0402                	c.slli64	s0
     738:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     73c:	0000                	unimp
     73e:	0001                	nop
     740:	0402                	c.slli64	s0
     742:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     746:	0000                	unimp
     748:	0001                	nop
     74a:	0402                	c.slli64	s0
     74c:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     750:	0000                	unimp
     752:	0001                	nop
     754:	0402                	c.slli64	s0
     756:	09000303          	lb	t1,144(zero) # 90 <_aes_set_key+0x4>
     75a:	0000                	unimp
     75c:	0501                	addi	a0,a0,0
     75e:	0020                	addi	s0,sp,8
     760:	0402                	c.slli64	s0
     762:	7f030603          	lb	a2,2032(t1)
     766:	0009                	c.nop	2
     768:	0100                	addi	s0,sp,128
     76a:	0505                	addi	a0,a0,1
	t0 = AES_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     76c:	0200                	addi	s0,sp,256
     76e:	0304                	addi	s1,sp,384
     770:	08090103          	lb	sp,128(s2)
     774:	0100                	addi	s0,sp,128
     776:	0200                	addi	s0,sp,256
     778:	0304                	addi	s1,sp,384
     77a:	0306                	slli	t1,t1,0x1
     77c:	0900                	addi	s0,sp,144
     77e:	005c                	addi	a5,sp,4
     780:	0501                	addi	a0,a0,0
     782:	0301                	addi	t1,t1,0
     784:	0908                	addi	a0,sp,144
     786:	001c                	0x1c
     788:	0501                	addi	a0,a0,0
     78a:	09010303          	lb	t1,144(sp)
     78e:	0000                	unimp
     790:	0501                	addi	a0,a0,0
     792:	0601                	addi	a2,a2,0
     794:	00097f03          	0x97f03
     798:	0100                	addi	s0,sp,128
     79a:	0305                	addi	t1,t1,1
     79c:	10090103          	lb	sp,256(s2)
     7a0:	0100                	addi	s0,sp,128
     7a2:	0105                	addi	sp,sp,1
     7a4:	04097f03          	0x4097f03
     7a8:	0100                	addi	s0,sp,128
     7aa:	0305                	addi	t1,t1,1
     7ac:	04090103          	lb	sp,64(s2)
     7b0:	0100                	addi	s0,sp,128
     7b2:	0105                	addi	sp,sp,1
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     7b4:	08097f03          	0x8097f03
     7b8:	0100                	addi	s0,sp,128
     7ba:	0305                	addi	t1,t1,1
	t0 = AES_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     7bc:	04090103          	lb	sp,64(s2)
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     7c0:	0100                	addi	s0,sp,128
     7c2:	0306                	slli	t1,t1,0x1
	t0 = AES_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
     7c4:	0901                	addi	s2,s2,0
     7c6:	0004                	0x4
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     7c8:	0501                	addi	a0,a0,0
     7ca:	0614                	addi	a3,sp,768
     7cc:	00090003          	lb	zero,0(s2)
     7d0:	0100                	addi	s0,sp,128
     7d2:	0105                	addi	sp,sp,1
     7d4:	04090103          	lb	sp,64(s2)
     7d8:	0100                	addi	s0,sp,128
     7da:	0f05                	addi	t5,t5,1
     7dc:	08097f03          	0x8097f03
     7e0:	0100                	addi	s0,sp,128
     7e2:	0105                	addi	sp,sp,1
     7e4:	04090103          	lb	sp,64(s2)
     7e8:	0100                	addi	s0,sp,128
     7ea:	0306                	slli	t1,t1,0x1
     7ec:	0904                	addi	s1,sp,144
     7ee:	000c                	0xc
     7f0:	0501                	addi	a0,a0,0
     7f2:	09030303          	lb	t1,144(t1)
     7f6:	0000                	unimp
     7f8:	0501                	addi	a0,a0,0
     7fa:	0601                	addi	a2,a2,0
     7fc:	00097d03          	0x97d03
     800:	0100                	addi	s0,sp,128
     802:	0c090003          	lb	zero,192(s2)
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     806:	0100                	addi	s0,sp,128
     808:	0305                	addi	t1,t1,1
     80a:	04090303          	lb	t1,64(s2)
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     80e:	0100                	addi	s0,sp,128
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     810:	0306                	slli	t1,t1,0x1
     812:	0901                	addi	s2,s2,0
	t1 = AES_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
     814:	0004                	0x4
     816:	0501                	addi	a0,a0,0
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     818:	0601                	addi	a2,a2,0
     81a:	08090103          	lb	sp,128(s2)
     81e:	0100                	addi	s0,sp,128
     820:	0305                	addi	t1,t1,1
     822:	0c097f03          	0xc097f03
     826:	0100                	addi	s0,sp,128
     828:	0105                	addi	sp,sp,1
     82a:	0306                	slli	t1,t1,0x1
     82c:	090a                	slli	s2,s2,0x2
     82e:	0004                	0x4
     830:	0501                	addi	a0,a0,0
     832:	09010303          	lb	t1,144(sp)
     836:	0000                	unimp
     838:	0501                	addi	a0,a0,0
     83a:	0601                	addi	a2,a2,0
     83c:	00097f03          	0x97f03
     840:	0100                	addi	s0,sp,128
     842:	0305                	addi	t1,t1,1
     844:	04090103          	lb	sp,64(s2)
     848:	0100                	addi	s0,sp,128
     84a:	0105                	addi	sp,sp,1
     84c:	08097f03          	0x8097f03
     850:	0100                	addi	s0,sp,128
     852:	0305                	addi	t1,t1,1
	t3 = AES_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     854:	34090103          	lb	sp,832(s2)
	t2 = AES_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
     858:	0100                	addi	s0,sp,128
     85a:	0200                	addi	s0,sp,256
     85c:	0104                	addi	s1,sp,128
     85e:	0306                	slli	t1,t1,0x1
	t3 = AES_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     860:	0900                	addi	s0,sp,144
     862:	0008                	0x8
     864:	0501                	addi	a0,a0,0
     866:	0305                	addi	t1,t1,1
     868:	0902                	c.slli64	s2
     86a:	0008                	0x8
     86c:	0301                	addi	t1,t1,0
     86e:	0901                	addi	s2,s2,0
     870:	0000                	unimp
     872:	0301                	addi	t1,t1,0
     874:	0901                	addi	s2,s2,0
     876:	0000                	unimp
     878:	0301                	addi	t1,t1,0
     87a:	0905                	addi	s2,s2,1
     87c:	0000                	unimp
     87e:	0501                	addi	a0,a0,0
     880:	060a                	slli	a2,a2,0x2
     882:	00090003          	lb	zero,0(s2)
     886:	0100                	addi	s0,sp,128
     888:	08090103          	lb	sp,128(s2)
     88c:	0100                	addi	s0,sp,128
     88e:	04097f03          	0x4097f03
     892:	0100                	addi	s0,sp,128
     894:	0c090103          	lb	sp,192(s2)
     898:	0100                	addi	s0,sp,128
     89a:	04090103          	lb	sp,64(s2)
     89e:	0100                	addi	s0,sp,128
     8a0:	04097e03          	0x4097e03
     8a4:	0100                	addi	s0,sp,128
     8a6:	0c090203          	lb	tp,192(s2)
     8aa:	0100                	addi	s0,sp,128
     8ac:	04090103          	lb	sp,64(s2)
    for (i = 1; i < rounds; i++)
     8b0:	0100                	addi	s0,sp,128
     8b2:	04097d03          	0x4097d03
	t3 = AES_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
     8b6:	0100                	addi	s0,sp,128
     8b8:	0805                	addi	a6,a6,1
     8ba:	08090003          	lb	zero,128(s2)
     8be:	0100                	addi	s0,sp,128
{
     8c0:	0c05                	addi	s8,s8,1
     8c2:	08090503          	lb	a0,128(s2)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     8c6:	0100                	addi	s0,sp,128
     8c8:	0805                	addi	a6,a6,1
     8ca:	04097b03          	0x4097b03
{
     8ce:	0100                	addi	s0,sp,128
     8d0:	0505                	addi	a0,a0,1
     8d2:	0306                	slli	t1,t1,0x1
     8d4:	0901                	addi	s2,s2,0
     8d6:	0004                	0x4
     8d8:	0501                	addi	a0,a0,0
     8da:	060a                	slli	a2,a2,0x2
     8dc:	00090003          	lb	zero,0(s2)
     8e0:	0100                	addi	s0,sp,128
     8e2:	0805                	addi	a6,a6,1
     8e4:	20090003          	lb	zero,512(s2)
     8e8:	0100                	addi	s0,sp,128
     8ea:	0505                	addi	a0,a0,1
     8ec:	0306                	slli	t1,t1,0x1
     8ee:	0901                	addi	s2,s2,0
     8f0:	0008                	0x8
     8f2:	0501                	addi	a0,a0,0
     8f4:	060a                	slli	a2,a2,0x2
     8f6:	00090003          	lb	zero,0(s2)
     8fa:	0100                	addi	s0,sp,128
     8fc:	0805                	addi	a6,a6,1
     8fe:	20090003          	lb	zero,512(s2)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     902:	0100                	addi	s0,sp,128
     904:	0505                	addi	a0,a0,1
     906:	0306                	slli	t1,t1,0x1
     908:	0901                	addi	s2,s2,0
     90a:	0008                	0x8
     90c:	0501                	addi	a0,a0,0
     90e:	060a                	slli	a2,a2,0x2
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     910:	00090003          	lb	zero,0(s2)
     914:	0100                	addi	s0,sp,128
     916:	0805                	addi	a6,a6,1
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     918:	24090003          	lb	zero,576(s2)
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     91c:	0100                	addi	s0,sp,128
     91e:	0505                	addi	a0,a0,1
     920:	0306                	slli	t1,t1,0x1
     922:	0902                	c.slli64	s2
     924:	0008                	0x8
     926:	0301                	addi	t1,t1,0
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     928:	0912                	slli	s2,s2,0x4
     92a:	0084                	addi	s1,sp,64
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     92c:	0501                	addi	a0,a0,0
     92e:	060a                	slli	a2,a2,0x2
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     930:	00090003          	lb	zero,0(s2)
     934:	0100                	addi	s0,sp,128
     936:	28090103          	lb	sp,640(s2)
     93a:	0100                	addi	s0,sp,128
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     93c:	04097f03          	0x4097f03
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     940:	0100                	addi	s0,sp,128
     942:	08090103          	lb	sp,128(s2)
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     946:	0100                	addi	s0,sp,128
     948:	08097f03          	0x8097f03
     94c:	0100                	addi	s0,sp,128
     94e:	0805                	addi	a6,a6,1
     950:	08090003          	lb	zero,128(s2)
    for (i = 1; i < rounds; i++)
     954:	0100                	addi	s0,sp,128
     956:	0505                	addi	a0,a0,1
    w0 = LE_READ_UINT32 (src) ^ keys[0];
     958:	0306                	slli	t1,t1,0x1
     95a:	0901                	addi	s2,s2,0
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
     95c:	0004                	0x4
     95e:	0501                	addi	a0,a0,0
     960:	060a                	slli	a2,a2,0x2
     962:	00090003          	lb	zero,0(s2)
     966:	0100                	addi	s0,sp,128
     968:	1c090103          	lb	sp,448(s2)
     96c:	0100                	addi	s0,sp,128
     96e:	08097f03          	0x8097f03
     972:	0100                	addi	s0,sp,128
     974:	08090103          	lb	sp,128(s2)
     978:	0100                	addi	s0,sp,128
     97a:	08097f03          	0x8097f03
     97e:	0100                	addi	s0,sp,128
     980:	0805                	addi	a6,a6,1
     982:	08090003          	lb	zero,128(s2)
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
     986:	0100                	addi	s0,sp,128
     988:	0505                	addi	a0,a0,1
     98a:	0306                	slli	t1,t1,0x1
     98c:	0901                	addi	s2,s2,0
     98e:	0004                	0x4
     990:	0501                	addi	a0,a0,0
     992:	060a                	slli	a2,a2,0x2
     994:	00090003          	lb	zero,0(s2)
     998:	0100                	addi	s0,sp,128
     99a:	08090103          	lb	sp,128(s2)
     99e:	0100                	addi	s0,sp,128
     9a0:	04097f03          	0x4097f03
     9a4:	0100                	addi	s0,sp,128
     9a6:	10090103          	lb	sp,256(s2)
     9aa:	0100                	addi	s0,sp,128
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
     9ac:	0305                	addi	t1,t1,1
     9ae:	04095d03          	lhu	s10,64(s2)
     9b2:	0100                	addi	s0,sp,128
     9b4:	0a05                	addi	s4,s4,1
     9b6:	04092203          	lw	tp,64(s2)
     9ba:	0100                	addi	s0,sp,128
     9bc:	0305                	addi	t1,t1,1
     9be:	08095e03          	lhu	t3,128(s2)
     9c2:	0100                	addi	s0,sp,128
     9c4:	0a05                	addi	s4,s4,1
     9c6:	04092203          	lw	tp,64(s2)
     9ca:	0100                	addi	s0,sp,128
     9cc:	0805                	addi	a6,a6,1
     9ce:	08090003          	lb	zero,128(s2)
     9d2:	0100                	addi	s0,sp,128
     9d4:	0505                	addi	a0,a0,1
     9d6:	0306                	slli	t1,t1,0x1
    for (i = 1; i < rounds; i++)
     9d8:	0901                	addi	s2,s2,0
     9da:	0004                	0x4
     9dc:	0501                	addi	a0,a0,0
     9de:	060a                	slli	a2,a2,0x2
     9e0:	00090003          	lb	zero,0(s2)
     9e4:	0100                	addi	s0,sp,128
     9e6:	0505                	addi	a0,a0,1
     9e8:	30090203          	lb	tp,768(s2)
     9ec:	0100                	addi	s0,sp,128
     9ee:	04090103          	lb	sp,64(s2)
     9f2:	0100                	addi	s0,sp,128
     9f4:	0a05                	addi	s4,s4,1
     9f6:	04097d03          	0x4097d03
     9fa:	0100                	addi	s0,sp,128
     9fc:	0805                	addi	a6,a6,1
     9fe:	08090003          	lb	zero,128(s2)
     a02:	0100                	addi	s0,sp,128
     a04:	0505                	addi	a0,a0,1
     a06:	04090403          	lb	s0,64(s2)
     a0a:	0100                	addi	s0,sp,128
     a0c:	0805                	addi	a6,a6,1
     a0e:	04097c03          	0x4097c03
     a12:	0100                	addi	s0,sp,128
     a14:	0505                	addi	a0,a0,1
     a16:	0306                	slli	t1,t1,0x1
     a18:	0902                	c.slli64	s2
     a1a:	0004                	0x4
     a1c:	0301                	addi	t1,t1,0
     a1e:	0900                	addi	s0,sp,144
     a20:	0000                	unimp
     a22:	0301                	addi	t1,t1,0
     a24:	0900                	addi	s0,sp,144
     a26:	0008                	0x8
     a28:	0301                	addi	t1,t1,0
     a2a:	0900                	addi	s0,sp,144
     a2c:	0008                	0x8
     a2e:	0301                	addi	t1,t1,0
     a30:	0900                	addi	s0,sp,144
     a32:	0008                	0x8
     a34:	0301                	addi	t1,t1,0
     a36:	0901                	addi	s2,s2,0
     a38:	0000                	unimp
     a3a:	0301                	addi	t1,t1,0
     a3c:	0900                	addi	s0,sp,144
     a3e:	0000                	unimp
     a40:	0301                	addi	t1,t1,0
     a42:	0900                	addi	s0,sp,144
     a44:	0008                	0x8
     a46:	0301                	addi	t1,t1,0
     a48:	0900                	addi	s0,sp,144
     a4a:	0008                	0x8
     a4c:	0301                	addi	t1,t1,0
     a4e:	0900                	addi	s0,sp,144
     a50:	0008                	0x8
     a52:	0301                	addi	t1,t1,0
     a54:	0901                	addi	s2,s2,0
     a56:	0000                	unimp
     a58:	0301                	addi	t1,t1,0
     a5a:	0900                	addi	s0,sp,144
    t0 = AES_FINAL_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     a5c:	0000                	unimp
     a5e:	0301                	addi	t1,t1,0
     a60:	0900                	addi	s0,sp,144
     a62:	0008                	0x8
     a64:	0301                	addi	t1,t1,0
     a66:	0900                	addi	s0,sp,144
     a68:	0008                	0x8
     a6a:	0301                	addi	t1,t1,0
     a6c:	0900                	addi	s0,sp,144
     a6e:	0008                	0x8
     a70:	0301                	addi	t1,t1,0
     a72:	0901                	addi	s2,s2,0
     a74:	0000                	unimp
     a76:	0301                	addi	t1,t1,0
     a78:	0900                	addi	s0,sp,144
     a7a:	0000                	unimp
     a7c:	0301                	addi	t1,t1,0
     a7e:	0900                	addi	s0,sp,144
     a80:	0008                	0x8
     a82:	0301                	addi	t1,t1,0
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     a84:	0900                	addi	s0,sp,144
     a86:	0008                	0x8
    t0 = AES_FINAL_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     a88:	0301                	addi	t1,t1,0
     a8a:	0900                	addi	s0,sp,144
     a8c:	0008                	0x8
     a8e:	0501                	addi	a0,a0,0
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     a90:	58030603          	lb	a2,1408(t1)
     a94:	0409                	addi	s0,s0,2
     a96:	0100                	addi	s0,sp,128
    t0 = AES_FINAL_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     a98:	0105                	addi	sp,sp,1
     a9a:	08092a03          	lw	s4,128(s2)
     a9e:	0100                	addi	s0,sp,128
     aa0:	0205                	addi	tp,tp,1
     aa2:	0306                	slli	t1,t1,0x1
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     aa4:	0966                	slli	s2,s2,0x19
     aa6:	003c                	addi	a5,sp,8
     aa8:	0301                	addi	t1,t1,0
     aaa:	0901                	addi	s2,s2,0
     aac:	0000                	unimp
     aae:	0301                	addi	t1,t1,0
     ab0:	0901                	addi	s2,s2,0
     ab2:	0000                	unimp
     ab4:	0301                	addi	t1,t1,0
     ab6:	0901                	addi	s2,s2,0
     ab8:	0000                	unimp
     aba:	0301                	addi	t1,t1,0
     abc:	0905                	addi	s2,s2,1
     abe:	0000                	unimp
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     ac0:	0301                	addi	t1,t1,0
     ac2:	0901                	addi	s2,s2,0
     ac4:	0000                	unimp
     ac6:	0301                	addi	t1,t1,0
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     ac8:	0901                	addi	s2,s2,0
     aca:	0000                	unimp
     acc:	0301                	addi	t1,t1,0
     ace:	0901                	addi	s2,s2,0
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     ad0:	0000                	unimp
     ad2:	0501                	addi	a0,a0,0
     ad4:	75030607          	0x75030607
    t1 = AES_FINAL_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     ad8:	0009                	c.nop	2
     ada:	0100                	addi	s0,sp,128
     adc:	0505                	addi	a0,a0,1
     ade:	0c090003          	lb	zero,192(s2)
     ae2:	0100                	addi	s0,sp,128
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     ae4:	0705                	addi	a4,a4,1
     ae6:	04090003          	lb	zero,64(s2)
     aea:	0100                	addi	s0,sp,128
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     aec:	0505                	addi	a0,a0,1
     aee:	0c090003          	lb	zero,192(s2)
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     af2:	0100                	addi	s0,sp,128
     af4:	0705                	addi	a4,a4,1
     af6:	04090003          	lb	zero,64(s2)
     afa:	0100                	addi	s0,sp,128
     afc:	0505                	addi	a0,a0,1
     afe:	04090003          	lb	zero,64(s2)
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b02:	0100                	addi	s0,sp,128
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     b04:	0705                	addi	a4,a4,1
     b06:	04090003          	lb	zero,64(s2)
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     b0a:	0100                	addi	s0,sp,128
     b0c:	0505                	addi	a0,a0,1
     b0e:	10090003          	lb	zero,256(s2)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     b12:	0100                	addi	s0,sp,128
    t2 = AES_FINAL_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     b14:	0705                	addi	a4,a4,1
     b16:	04090003          	lb	zero,64(s2)
     b1a:	0100                	addi	s0,sp,128
     b1c:	0505                	addi	a0,a0,1
     b1e:	04090003          	lb	zero,64(s2)
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b22:	0100                	addi	s0,sp,128
     b24:	0705                	addi	a4,a4,1
     b26:	08090103          	lb	sp,128(s2)
     b2a:	0100                	addi	s0,sp,128
     b2c:	0505                	addi	a0,a0,1
     b2e:	08097f03          	0x8097f03
     b32:	0100                	addi	s0,sp,128
     b34:	0705                	addi	a4,a4,1
     b36:	04090103          	lb	sp,64(s2)
     b3a:	0100                	addi	s0,sp,128
     b3c:	0505                	addi	a0,a0,1
     b3e:	04097f03          	0x4097f03
     b42:	0100                	addi	s0,sp,128
     b44:	0705                	addi	a4,a4,1
     b46:	04090103          	lb	sp,64(s2)
     b4a:	0100                	addi	s0,sp,128
     b4c:	0505                	addi	a0,a0,1
     b4e:	04090003          	lb	zero,64(s2)
    LE_WRITE_UINT32 (dst, t0);
     b52:	0100                	addi	s0,sp,128
    LE_WRITE_UINT32 (dst + 4, t1);
     b54:	0705                	addi	a4,a4,1
     b56:	04090003          	lb	zero,64(s2)
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b5a:	0100                	addi	s0,sp,128
     b5c:	0505                	addi	a0,a0,1
     b5e:	08090003          	lb	zero,128(s2)
     b62:	0100                	addi	s0,sp,128
    LE_WRITE_UINT32 (dst + 8, t2);
     b64:	0705                	addi	a4,a4,1
     b66:	04090003          	lb	zero,64(s2)
    t3 = AES_FINAL_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     b6a:	0100                	addi	s0,sp,128
    LE_WRITE_UINT32 (dst, t0);
     b6c:	0505                	addi	a0,a0,1
     b6e:	04090003          	lb	zero,64(s2)
     b72:	0100                	addi	s0,sp,128
     b74:	0705                	addi	a4,a4,1
     b76:	04090003          	lb	zero,64(s2)
     b7a:	0100                	addi	s0,sp,128
     b7c:	0505                	addi	a0,a0,1
     b7e:	10090003          	lb	zero,256(s2)
     b82:	0100                	addi	s0,sp,128
    LE_WRITE_UINT32 (dst + 4, t1);
     b84:	0705                	addi	a4,a4,1
     b86:	04090003          	lb	zero,64(s2)
     b8a:	0100                	addi	s0,sp,128
     b8c:	0505                	addi	a0,a0,1
     b8e:	04090003          	lb	zero,64(s2)
     b92:	0100                	addi	s0,sp,128
     b94:	0705                	addi	a4,a4,1
     b96:	08090103          	lb	sp,128(s2)
     b9a:	0100                	addi	s0,sp,128
    LE_WRITE_UINT32 (dst + 8, t2);
     b9c:	0505                	addi	a0,a0,1
     b9e:	08097f03          	0x8097f03
     ba2:	0100                	addi	s0,sp,128
     ba4:	0705                	addi	a4,a4,1
     ba6:	04090103          	lb	sp,64(s2)
     baa:	0100                	addi	s0,sp,128
     bac:	0505                	addi	a0,a0,1
     bae:	04097f03          	0x4097f03
     bb2:	0100                	addi	s0,sp,128
    LE_WRITE_UINT32 (dst + 12, t3);
     bb4:	0705                	addi	a4,a4,1
     bb6:	04090103          	lb	sp,64(s2)
     bba:	0100                	addi	s0,sp,128
     bbc:	0505                	addi	a0,a0,1
     bbe:	04090003          	lb	zero,64(s2)
     bc2:	0100                	addi	s0,sp,128
     bc4:	0705                	addi	a4,a4,1
     bc6:	04090003          	lb	zero,64(s2)
     bca:	0100                	addi	s0,sp,128
     bcc:	0505                	addi	a0,a0,1
     bce:	08090003          	lb	zero,128(s2)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
     bd2:	0100                	addi	s0,sp,128
     bd4:	0705                	addi	a4,a4,1
     bd6:	04090003          	lb	zero,64(s2)
}
     bda:	0100                	addi	s0,sp,128
     bdc:	0505                	addi	a0,a0,1
     bde:	04090003          	lb	zero,64(s2)
     be2:	0100                	addi	s0,sp,128
     be4:	0705                	addi	a4,a4,1
     be6:	04090003          	lb	zero,64(s2)
     bea:	0100                	addi	s0,sp,128
     bec:	0505                	addi	a0,a0,1
     bee:	10090003          	lb	zero,256(s2)
     bf2:	0100                	addi	s0,sp,128
     bf4:	0705                	addi	a4,a4,1
     bf6:	04090003          	lb	zero,64(s2)
     bfa:	0100                	addi	s0,sp,128
     bfc:	0505                	addi	a0,a0,1
     bfe:	04090003          	lb	zero,64(s2)
     c02:	0100                	addi	s0,sp,128
     c04:	0705                	addi	a4,a4,1
     c06:	08090103          	lb	sp,128(s2)
     c0a:	0100                	addi	s0,sp,128
     c0c:	0505                	addi	a0,a0,1
     c0e:	04097f03          	0x4097f03
     c12:	0100                	addi	s0,sp,128
	t0 = AES_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     c14:	0705                	addi	a4,a4,1
     c16:	08090103          	lb	sp,128(s2)
     c1a:	0100                	addi	s0,sp,128
     c1c:	0505                	addi	a0,a0,1
     c1e:	1c090003          	lb	zero,448(s2)
     c22:	0100                	addi	s0,sp,128
     c24:	0705                	addi	a4,a4,1
     c26:	08090003          	lb	zero,128(s2)
     c2a:	0100                	addi	s0,sp,128
     c2c:	0505                	addi	a0,a0,1
     c2e:	08090003          	lb	zero,128(s2)
     c32:	0100                	addi	s0,sp,128
     c34:	0705                	addi	a4,a4,1
     c36:	08090003          	lb	zero,128(s2)
     c3a:	0100                	addi	s0,sp,128
     c3c:	0505                	addi	a0,a0,1
     c3e:	0c090003          	lb	zero,192(s2)
     c42:	0100                	addi	s0,sp,128
     c44:	0705                	addi	a4,a4,1
     c46:	04090003          	lb	zero,64(s2)
     c4a:	0100                	addi	s0,sp,128
     c4c:	0505                	addi	a0,a0,1
     c4e:	04090003          	lb	zero,64(s2)
     c52:	0100                	addi	s0,sp,128
     c54:	1e05                	addi	t3,t3,-31
     c56:	08097b03          	0x8097b03
     c5a:	0100                	addi	s0,sp,128
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     c5c:	0505                	addi	a0,a0,1
     c5e:	04090503          	lb	a0,64(s2)
     c62:	0100                	addi	s0,sp,128
	t0 = AES_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     c64:	0105                	addi	sp,sp,1
     c66:	0306                	slli	t1,t1,0x1
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     c68:	0920                	addi	s0,sp,152
     c6a:	000c                	0xc
	t0 = AES_ROUND (T, w0, w3, w2, w1, keys[4 * i]);
     c6c:	0501                	addi	a0,a0,0
     c6e:	09010303          	lb	t1,144(sp)
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     c72:	0000                	unimp
     c74:	0501                	addi	a0,a0,0
     c76:	0601                	addi	a2,a2,0
     c78:	00097f03          	0x97f03
     c7c:	0100                	addi	s0,sp,128
     c7e:	0305                	addi	t1,t1,1
     c80:	04090103          	lb	sp,64(s2)
     c84:	0100                	addi	s0,sp,128
     c86:	0105                	addi	sp,sp,1
     c88:	08097f03          	0x8097f03
     c8c:	0100                	addi	s0,sp,128
     c8e:	0305                	addi	t1,t1,1
     c90:	34090103          	lb	sp,832(s2)
     c94:	0100                	addi	s0,sp,128
     c96:	0200                	addi	s0,sp,256
     c98:	0104                	addi	s1,sp,128
     c9a:	0306                	slli	t1,t1,0x1
     c9c:	0900                	addi	s0,sp,144
     c9e:	0008                	0x8
     ca0:	0501                	addi	a0,a0,0
     ca2:	0305                	addi	t1,t1,1
     ca4:	0902                	c.slli64	s2
     ca6:	0008                	0x8
     ca8:	0301                	addi	t1,t1,0
     caa:	0901                	addi	s2,s2,0
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     cac:	0000                	unimp
     cae:	0301                	addi	t1,t1,0
     cb0:	0901                	addi	s2,s2,0
     cb2:	0000                	unimp
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     cb4:	0301                	addi	t1,t1,0
     cb6:	0905                	addi	s2,s2,1
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     cb8:	0000                	unimp
     cba:	0501                	addi	a0,a0,0
	t1 = AES_ROUND (T, w1, w0, w3, w2, keys[4 * i + 1]);
     cbc:	060a                	slli	a2,a2,0x2
     cbe:	00090003          	lb	zero,0(s2)
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     cc2:	0100                	addi	s0,sp,128
     cc4:	08090103          	lb	sp,128(s2)
     cc8:	0100                	addi	s0,sp,128
     cca:	04097f03          	0x4097f03
     cce:	0100                	addi	s0,sp,128
     cd0:	0c090103          	lb	sp,192(s2)
     cd4:	0100                	addi	s0,sp,128
     cd6:	04090103          	lb	sp,64(s2)
     cda:	0100                	addi	s0,sp,128
     cdc:	04097e03          	0x4097e03
     ce0:	0100                	addi	s0,sp,128
     ce2:	0c090203          	lb	tp,192(s2)
     ce6:	0100                	addi	s0,sp,128
     ce8:	04090103          	lb	sp,64(s2)
     cec:	0100                	addi	s0,sp,128
     cee:	04097d03          	0x4097d03
     cf2:	0100                	addi	s0,sp,128
     cf4:	0805                	addi	a6,a6,1
     cf6:	08090003          	lb	zero,128(s2)
     cfa:	0100                	addi	s0,sp,128
	t3 = AES_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     cfc:	0c05                	addi	s8,s8,1
     cfe:	08090503          	lb	a0,128(s2)
	t2 = AES_ROUND (T, w2, w1, w0, w3, keys[4 * i + 2]);
     d02:	0100                	addi	s0,sp,128
     d04:	0805                	addi	a6,a6,1
     d06:	04097b03          	0x4097b03
	t3 = AES_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     d0a:	0100                	addi	s0,sp,128
     d0c:	0505                	addi	a0,a0,1
     d0e:	0306                	slli	t1,t1,0x1
     d10:	0901                	addi	s2,s2,0
     d12:	0004                	0x4
     d14:	0501                	addi	a0,a0,0
     d16:	060a                	slli	a2,a2,0x2
     d18:	00090003          	lb	zero,0(s2)
     d1c:	0100                	addi	s0,sp,128
     d1e:	0805                	addi	a6,a6,1
     d20:	20090003          	lb	zero,512(s2)
     d24:	0100                	addi	s0,sp,128
     d26:	0505                	addi	a0,a0,1
     d28:	0306                	slli	t1,t1,0x1
     d2a:	0901                	addi	s2,s2,0
     d2c:	0008                	0x8
     d2e:	0501                	addi	a0,a0,0
     d30:	060a                	slli	a2,a2,0x2
     d32:	00090003          	lb	zero,0(s2)
     d36:	0100                	addi	s0,sp,128
     d38:	0805                	addi	a6,a6,1
     d3a:	20090003          	lb	zero,512(s2)
     d3e:	0100                	addi	s0,sp,128
     d40:	0505                	addi	a0,a0,1
     d42:	0306                	slli	t1,t1,0x1
     d44:	0901                	addi	s2,s2,0
     d46:	0008                	0x8
     d48:	0501                	addi	a0,a0,0
     d4a:	060a                	slli	a2,a2,0x2
     d4c:	00090003          	lb	zero,0(s2)
     d50:	0100                	addi	s0,sp,128
     d52:	0805                	addi	a6,a6,1
     d54:	24090003          	lb	zero,576(s2)
    for (i = 1; i < rounds; i++)
     d58:	0100                	addi	s0,sp,128
     d5a:	0505                	addi	a0,a0,1
	t3 = AES_ROUND (T, w3, w2, w1, w0, keys[4 * i + 3]);
     d5c:	0306                	slli	t1,t1,0x1
     d5e:	0902                	c.slli64	s2
     d60:	0008                	0x8
     d62:	0301                	addi	t1,t1,0
     d64:	0912                	slli	s2,s2,0x4
     d66:	0084                	addi	s1,sp,64
{
     d68:	0501                	addi	a0,a0,0
     d6a:	060a                	slli	a2,a2,0x2
  assert_beebs (!(length % AES_BLOCK_SIZE));
     d6c:	00090003          	lb	zero,0(s2)
     d70:	0100                	addi	s0,sp,128
     d72:	28090103          	lb	sp,640(s2)
{
     d76:	0100                	addi	s0,sp,128
  assert_beebs (!(length % AES_BLOCK_SIZE));
     d78:	04097f03          	0x4097f03
{
     d7c:	0100                	addi	s0,sp,128
     d7e:	08090103          	lb	sp,128(s2)
  assert_beebs (!(length % AES_BLOCK_SIZE));
     d82:	0100                	addi	s0,sp,128
  _nettle_aes_encrypt (ctx->rounds, ctx->keys, &_aes_encrypt_table,
     d84:	08097f03          	0x8097f03
     d88:	0100                	addi	s0,sp,128
     d8a:	0805                	addi	a6,a6,1
     d8c:	08090003          	lb	zero,128(s2)
     d90:	0100                	addi	s0,sp,128
     d92:	0505                	addi	a0,a0,1
     d94:	0306                	slli	t1,t1,0x1
     d96:	0901                	addi	s2,s2,0
     d98:	0004                	0x4
     d9a:	0501                	addi	a0,a0,0
     d9c:	060a                	slli	a2,a2,0x2
     d9e:	00090003          	lb	zero,0(s2)
{
     da2:	0100                	addi	s0,sp,128
  assert_beebs (!(length % AES_BLOCK_SIZE));
     da4:	1c090103          	lb	sp,448(s2)
     da8:	0100                	addi	s0,sp,128
     daa:	08097f03          	0x8097f03
{
     dae:	0100                	addi	s0,sp,128
  assert_beebs (!(length % AES_BLOCK_SIZE));
     db0:	08090103          	lb	sp,128(s2)
{
     db4:	0100                	addi	s0,sp,128
     db6:	08097f03          	0x8097f03
  assert_beebs (!(length % AES_BLOCK_SIZE));
     dba:	0100                	addi	s0,sp,128
  _nettle_aes_decrypt (ctx->rounds, ctx->keys, &_aes_decrypt_table,
     dbc:	0805                	addi	a6,a6,1
     dbe:	08090003          	lb	zero,128(s2)
     dc2:	0100                	addi	s0,sp,128
     dc4:	0505                	addi	a0,a0,1
     dc6:	0306                	slli	t1,t1,0x1
     dc8:	0901                	addi	s2,s2,0
     dca:	0004                	0x4
     dcc:	0501                	addi	a0,a0,0
     dce:	060a                	slli	a2,a2,0x2
     dd0:	00090003          	lb	zero,0(s2)
     dd4:	0100                	addi	s0,sp,128
     dd6:	08090103          	lb	sp,128(s2)
{
     dda:	0100                	addi	s0,sp,128
     ddc:	04097f03          	0x4097f03
     de0:	0100                	addi	s0,sp,128
     de2:	10090103          	lb	sp,256(s2)
     de6:	0100                	addi	s0,sp,128
     de8:	0305                	addi	t1,t1,1
     dea:	04095d03          	lhu	s10,64(s2)
     dee:	0100                	addi	s0,sp,128
     df0:	0a05                	addi	s4,s4,1
     df2:	04092203          	lw	tp,64(s2)
     df6:	0100                	addi	s0,sp,128
     df8:	0305                	addi	t1,t1,1
     dfa:	08095e03          	lhu	t3,128(s2)
     dfe:	0100                	addi	s0,sp,128
     e00:	0a05                	addi	s4,s4,1
     e02:	04092203          	lw	tp,64(s2)
  for (i = 0; i < rpt; i++)
     e06:	0100                	addi	s0,sp,128
      aes_set_encrypt_key (&encctx, 32, key);
     e08:	0805                	addi	a6,a6,1
     e0a:	08090003          	lb	zero,128(s2)
     e0e:	0100                	addi	s0,sp,128
     e10:	0505                	addi	a0,a0,1
     e12:	0306                	slli	t1,t1,0x1
     e14:	0901                	addi	s2,s2,0
     e16:	0004                	0x4
      aes_encrypt (&encctx, LEN, encrypted, plaintext);
     e18:	0501                	addi	a0,a0,0
     e1a:	060a                	slli	a2,a2,0x2
     e1c:	00090003          	lb	zero,0(s2)
     e20:	0100                	addi	s0,sp,128
     e22:	0505                	addi	a0,a0,1
     e24:	30090203          	lb	tp,768(s2)
      aes_set_decrypt_key (&decctx, 32, key);
     e28:	0100                	addi	s0,sp,128
     e2a:	04090103          	lb	sp,64(s2)
     e2e:	0100                	addi	s0,sp,128
      aes_decrypt (&decctx, LEN, decrypted, encrypted);
     e30:	0a05                	addi	s4,s4,1
     e32:	04097d03          	0x4097d03
     e36:	0100                	addi	s0,sp,128
  for (i = 0; i < rpt; i++)
     e38:	0805                	addi	a6,a6,1
     e3a:	08090003          	lb	zero,128(s2)
}
     e3e:	0100                	addi	s0,sp,128
     e40:	0505                	addi	a0,a0,1
     e42:	04090403          	lb	s0,64(s2)
     e46:	0100                	addi	s0,sp,128
     e48:	0805                	addi	a6,a6,1
     e4a:	04097c03          	0x4097c03
     e4e:	0100                	addi	s0,sp,128
     e50:	0505                	addi	a0,a0,1
     e52:	0306                	slli	t1,t1,0x1
     e54:	0902                	c.slli64	s2
     e56:	0004                	0x4
     e58:	0301                	addi	t1,t1,0
     e5a:	0900                	addi	s0,sp,144
     e5c:	0000                	unimp
     e5e:	0301                	addi	t1,t1,0
     e60:	0900                	addi	s0,sp,144
     e62:	0008                	0x8
     e64:	0301                	addi	t1,t1,0
     e66:	0900                	addi	s0,sp,144
     e68:	0008                	0x8
     e6a:	0301                	addi	t1,t1,0
      aes_set_encrypt_key (&encctx, 32, key);
     e6c:	0900                	addi	s0,sp,144
     e6e:	0008                	0x8
     e70:	0301                	addi	t1,t1,0
     e72:	0901                	addi	s2,s2,0
     e74:	0000                	unimp
     e76:	0301                	addi	t1,t1,0
     e78:	0900                	addi	s0,sp,144
     e7a:	0000                	unimp
      aes_encrypt (&encctx, LEN, encrypted, plaintext);
     e7c:	0301                	addi	t1,t1,0
     e7e:	0900                	addi	s0,sp,144
     e80:	0008                	0x8
     e82:	0301                	addi	t1,t1,0
     e84:	0900                	addi	s0,sp,144
     e86:	0008                	0x8
     e88:	0301                	addi	t1,t1,0
     e8a:	0900                	addi	s0,sp,144
     e8c:	0008                	0x8
     e8e:	0301                	addi	t1,t1,0
      aes_set_decrypt_key (&decctx, 32, key);
     e90:	0901                	addi	s2,s2,0
     e92:	0000                	unimp
     e94:	0301                	addi	t1,t1,0
     e96:	0900                	addi	s0,sp,144
     e98:	0000                	unimp
     e9a:	0301                	addi	t1,t1,0
     e9c:	0900                	addi	s0,sp,144
     e9e:	0008                	0x8
      aes_decrypt (&decctx, LEN, decrypted, encrypted);
     ea0:	0301                	addi	t1,t1,0
     ea2:	0900                	addi	s0,sp,144
     ea4:	0008                	0x8
     ea6:	0301                	addi	t1,t1,0
     ea8:	0900                	addi	s0,sp,144
     eaa:	0008                	0x8
     eac:	0301                	addi	t1,t1,0
     eae:	0901                	addi	s2,s2,0
     eb0:	0000                	unimp
     eb2:	0301                	addi	t1,t1,0
  for (i = 0; i < rpt; i++)
     eb4:	0900                	addi	s0,sp,144
     eb6:	0000                	unimp
     eb8:	0301                	addi	t1,t1,0
     eba:	0900                	addi	s0,sp,144
  for (unsigned int i = 0; i < LEN; i++)
     ebc:	0008                	0x8
     ebe:	0301                	addi	t1,t1,0
  bool correct = true;
     ec0:	0900                	addi	s0,sp,144
     ec2:	0008                	0x8
      if (encrypted[i] != expected[i])
     ec4:	0301                	addi	t1,t1,0
     ec6:	0900                	addi	s0,sp,144
     ec8:	0008                	0x8
     eca:	0501                	addi	a0,a0,0
     ecc:	58030603          	lb	a2,1408(t1)
     ed0:	0409                	addi	s0,s0,2
     ed2:	0100                	addi	s0,sp,128
      if (plaintext[i] != decrypted[i])
     ed4:	0105                	addi	sp,sp,1
     ed6:	08092a03          	lw	s4,128(s2)
     eda:	0100                	addi	s0,sp,128
     edc:	0205                	addi	tp,tp,1
     ede:	0306                	slli	t1,t1,0x1
     ee0:	0966                	slli	s2,s2,0x19
     ee2:	003c                	addi	a5,sp,8
  for (unsigned int i = 0; i < LEN; i++)
     ee4:	0301                	addi	t1,t1,0
     ee6:	0901                	addi	s2,s2,0
      if (encrypted[i] != expected[i])
     ee8:	0000                	unimp
     eea:	0301                	addi	t1,t1,0
     eec:	0901                	addi	s2,s2,0
     eee:	0000                	unimp
     ef0:	0301                	addi	t1,t1,0
     ef2:	0901                	addi	s2,s2,0
     ef4:	0000                	unimp
     ef6:	0301                	addi	t1,t1,0
     ef8:	0905                	addi	s2,s2,1
     efa:	0000                	unimp
	correct = false;
     efc:	0301                	addi	t1,t1,0
     efe:	0901                	addi	s2,s2,0
      if (plaintext[i] != decrypted[i])
     f00:	0000                	unimp
     f02:	0301                	addi	t1,t1,0
     f04:	0901                	addi	s2,s2,0
     f06:	0000                	unimp
     f08:	0301                	addi	t1,t1,0
     f0a:	0901                	addi	s2,s2,0
     f0c:	0000                	unimp
     f0e:	0501                	addi	a0,a0,0
     f10:	75030607          	0x75030607
	correct = false;
     f14:	0009                	c.nop	2
     f16:	0100                	addi	s0,sp,128
  for (unsigned int i = 0; i < LEN; i++)
     f18:	0505                	addi	a0,a0,1
     f1a:	0c090003          	lb	zero,192(s2)
     f1e:	0100                	addi	s0,sp,128
}
     f20:	0705                	addi	a4,a4,1
     f22:	04090003          	lb	zero,64(s2)
}
     f26:	0100                	addi	s0,sp,128
  int  res = benchmark_body (heat);
     f28:	0505                	addi	a0,a0,1
     f2a:	0c090003          	lb	zero,192(s2)
  return benchmark_body (LOCAL_SCALE_FACTOR * CPU_MHZ);
     f2e:	0100                	addi	s0,sp,128
     f30:	0705                	addi	a4,a4,1
     f32:	04090003          	lb	zero,64(s2)
  seed = (seed * 1103515245L + 12345) & ((1UL << 31) - 1);
     f36:	0100                	addi	s0,sp,128
     f38:	0505                	addi	a0,a0,1
     f3a:	04090003          	lb	zero,64(s2)
     f3e:	0100                	addi	s0,sp,128
     f40:	0705                	addi	a4,a4,1
     f42:	04090003          	lb	zero,64(s2)
     f46:	0100                	addi	s0,sp,128
     f48:	0505                	addi	a0,a0,1
     f4a:	10090003          	lb	zero,256(s2)
     f4e:	0100                	addi	s0,sp,128
     f50:	0705                	addi	a4,a4,1
     f52:	04090003          	lb	zero,64(s2)
     f56:	0100                	addi	s0,sp,128
     f58:	0505                	addi	a0,a0,1
     f5a:	04090003          	lb	zero,64(s2)
     f5e:	0100                	addi	s0,sp,128
     f60:	0705                	addi	a4,a4,1
     f62:	08090103          	lb	sp,128(s2)
}
     f66:	0100                	addi	s0,sp,128
     f68:	0505                	addi	a0,a0,1
     f6a:	08097f03          	0x8097f03
  seed = (long int) new_seed;
     f6e:	0100                	addi	s0,sp,128
     f70:	0705                	addi	a4,a4,1
     f72:	04090103          	lb	sp,64(s2)
}
     f76:	0100                	addi	s0,sp,128
  heap_end = (void *) ((char *) heap_ptr + heap_size);
     f78:	0505                	addi	a0,a0,1
     f7a:	04097f03          	0x4097f03
  heap_ptr = (void *) heap;
     f7e:	0100                	addi	s0,sp,128
     f80:	0705                	addi	a4,a4,1
     f82:	04090103          	lb	sp,64(s2)
  heap_end = (void *) ((char *) heap_ptr + heap_size);
     f86:	0100                	addi	s0,sp,128
     f88:	0505                	addi	a0,a0,1
     f8a:	04090003          	lb	zero,64(s2)
  heap_requested = 0;
     f8e:	0100                	addi	s0,sp,128
     f90:	0705                	addi	a4,a4,1
     f92:	04090003          	lb	zero,64(s2)
}
     f96:	0100                	addi	s0,sp,128
  return ((void *) ((char *) heap + heap_requested) <= heap_end);
     f98:	0505                	addi	a0,a0,1
     f9a:	08090003          	lb	zero,128(s2)
     f9e:	0100                	addi	s0,sp,128
     fa0:	0705                	addi	a4,a4,1
     fa2:	04090003          	lb	zero,64(s2)
     fa6:	0100                	addi	s0,sp,128
     fa8:	0505                	addi	a0,a0,1
     faa:	04090003          	lb	zero,64(s2)
     fae:	0100                	addi	s0,sp,128
     fb0:	0705                	addi	a4,a4,1
     fb2:	04090003          	lb	zero,64(s2)
     fb6:	0100                	addi	s0,sp,128
}
     fb8:	0505                	addi	a0,a0,1
     fba:	10090003          	lb	zero,256(s2)
     fbe:	0100                	addi	s0,sp,128
  heap_requested += size;
     fc0:	0705                	addi	a4,a4,1
     fc2:	04090003          	lb	zero,64(s2)
     fc6:	0100                	addi	s0,sp,128
     fc8:	0505                	addi	a0,a0,1
     fca:	04090003          	lb	zero,64(s2)
  void *new_ptr = heap_ptr;
     fce:	0100                	addi	s0,sp,128
     fd0:	0705                	addi	a4,a4,1
     fd2:	08090103          	lb	sp,128(s2)
     fd6:	0100                	addi	s0,sp,128
  heap_requested += size;
     fd8:	0505                	addi	a0,a0,1
     fda:	08097f03          	0x8097f03
     fde:	0100                	addi	s0,sp,128
     fe0:	0705                	addi	a4,a4,1
     fe2:	04090103          	lb	sp,64(s2)
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
     fe6:	0100                	addi	s0,sp,128
     fe8:	0505                	addi	a0,a0,1
     fea:	04097f03          	0x4097f03
     fee:	0100                	addi	s0,sp,128
     ff0:	0705                	addi	a4,a4,1
     ff2:	04090103          	lb	sp,64(s2)
     ff6:	0100                	addi	s0,sp,128
     ff8:	0505                	addi	a0,a0,1
     ffa:	04090003          	lb	zero,64(s2)
      heap_ptr = (void *) ((char *) heap_ptr + size);
     ffe:	0100                	addi	s0,sp,128
    1000:	0705                	addi	a4,a4,1
    1002:	04090003          	lb	zero,64(s2)
}
    1006:	0100                	addi	s0,sp,128
    1008:	0505                	addi	a0,a0,1
    100a:	08090003          	lb	zero,128(s2)
    return NULL;
    100e:	0100                	addi	s0,sp,128
    1010:	0705                	addi	a4,a4,1
    1012:	04090003          	lb	zero,64(s2)
  void *new_ptr = malloc_beebs (nmemb * size);
    1016:	0100                	addi	s0,sp,128
{
    1018:	0505                	addi	a0,a0,1
    101a:	04090003          	lb	zero,64(s2)
    101e:	0100                	addi	s0,sp,128
    1020:	0705                	addi	a4,a4,1
    1022:	04090003          	lb	zero,64(s2)
  void *new_ptr = malloc_beebs (nmemb * size);
    1026:	0100                	addi	s0,sp,128
    1028:	0505                	addi	a0,a0,1
    102a:	10090003          	lb	zero,256(s2)
    102e:	0100                	addi	s0,sp,128
    1030:	0705                	addi	a4,a4,1
    1032:	04090003          	lb	zero,64(s2)
  if (NULL != new_ptr)
    1036:	0100                	addi	s0,sp,128
    memset (new_ptr, 0, nmemb * size);
    1038:	0505                	addi	a0,a0,1
    103a:	04090003          	lb	zero,64(s2)
    103e:	0100                	addi	s0,sp,128
    1040:	0705                	addi	a4,a4,1
    1042:	08090103          	lb	sp,128(s2)
}
    1046:	0100                	addi	s0,sp,128
    1048:	0505                	addi	a0,a0,1
    104a:	04097f03          	0x4097f03
    104e:	0100                	addi	s0,sp,128
    1050:	0705                	addi	a4,a4,1
    1052:	08090103          	lb	sp,128(s2)
    1056:	0100                	addi	s0,sp,128
  heap_requested += size;
    1058:	0505                	addi	a0,a0,1
    105a:	1c090003          	lb	zero,448(s2)
    105e:	0100                	addi	s0,sp,128
    1060:	0705                	addi	a4,a4,1
    1062:	08090003          	lb	zero,128(s2)
  void *new_ptr = heap_ptr;
    1066:	0100                	addi	s0,sp,128
    1068:	0505                	addi	a0,a0,1
    106a:	08090003          	lb	zero,128(s2)
    106e:	0100                	addi	s0,sp,128
  heap_requested += size;
    1070:	0705                	addi	a4,a4,1
    1072:	08090003          	lb	zero,128(s2)
    1076:	0100                	addi	s0,sp,128
    1078:	0505                	addi	a0,a0,1
    107a:	0c090003          	lb	zero,192(s2)
  if (((void *) ((char *) heap_ptr + size) > heap_end) || (0 == size))
    107e:	0100                	addi	s0,sp,128
    1080:	0705                	addi	a4,a4,1
    1082:	04090003          	lb	zero,64(s2)
    1086:	0100                	addi	s0,sp,128
    1088:	0505                	addi	a0,a0,1
    108a:	04090003          	lb	zero,64(s2)
    108e:	0100                	addi	s0,sp,128
    1090:	1e05                	addi	t3,t3,-31
    1092:	08097b03          	0x8097b03
      heap_ptr = (void *) ((char *) heap_ptr + size);
    1096:	0100                	addi	s0,sp,128
    1098:	0505                	addi	a0,a0,1
    109a:	04090503          	lb	a0,64(s2)
      if (NULL != ptr)
    109e:	0100                	addi	s0,sp,128
	  for (i = 0; i < size; i++)
    10a0:	0105                	addi	sp,sp,1
    10a2:	0306                	slli	t1,t1,0x1
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
    10a4:	091f 000c 0501      	0x501000c091f
    10aa:	09010303          	lb	t1,144(sp)
    10ae:	0000                	unimp
	  for (i = 0; i < size; i++)
    10b0:	0501                	addi	a0,a0,0
    10b2:	0601                	addi	a2,a2,0
	    ((char *) new_ptr)[i] = ((char *) ptr)[i];
    10b4:	00097f03          	0x97f03
	  for (i = 0; i < size; i++)
    10b8:	0100                	addi	s0,sp,128
    10ba:	0305                	addi	t1,t1,1
}
    10bc:	04090103          	lb	sp,64(s2)
    10c0:	0100                	addi	s0,sp,128
    10c2:	0200                	addi	s0,sp,256
    return NULL;
    10c4:	0104                	addi	s1,sp,128
    10c6:	0306                	slli	t1,t1,0x1
    10c8:	0900                	addi	s0,sp,144
    10ca:	0008                	0x8
}
    10cc:	0501                	addi	a0,a0,0
    10ce:	0001                	nop
  __asm__ volatile ("li a0, 0" : : : "memory");
    10d0:	0402                	c.slli64	s0
    10d2:	0601                	addi	a2,a2,0
}
    10d4:	00097f03          	0x97f03
  __asm__ volatile ("li a0, 0" : : : "memory");
    10d8:	0100                	addi	s0,sp,128
    10da:	0305                	addi	t1,t1,1
}
    10dc:	0200                	addi	s0,sp,256
    10de:	0104                	addi	s1,sp,128
  __asm__ volatile ("li a0, 0" : : : "memory");
    10e0:	04090103          	lb	sp,64(s2)
}
    10e4:	0100                	addi	s0,sp,128
    10e6:	0105                	addi	sp,sp,1
  jal x0, default_exc_handler
    10e8:	0200                	addi	s0,sp,256
    10ea:	0104                	addi	s1,sp,128
  mv  x1, x0
    10ec:	04097f03          	0x4097f03
  mv  x2, x1
    10f0:	0100                	addi	s0,sp,128
    10f2:	0305                	addi	t1,t1,1
  mv  x3, x1
    10f4:	0200                	addi	s0,sp,256
    10f6:	0104                	addi	s1,sp,128
  mv  x4, x1
    10f8:	04090103          	lb	sp,64(s2)
  mv  x5, x1
    10fc:	0100                	addi	s0,sp,128
    10fe:	0200                	addi	s0,sp,256
  mv  x6, x1
    1100:	0204                	addi	s1,sp,256
    1102:	04090103          	lb	sp,64(s2)
  mv  x7, x1
    1106:	0100                	addi	s0,sp,128
  mv  x8, x1
    1108:	2c05                	jal	1338 <__call_exitprocs+0x88>
    110a:	0200                	addi	s0,sp,256
  mv  x9, x1
    110c:	0204                	addi	s1,sp,256
    110e:	0306                	slli	t1,t1,0x1
  mv x10, x1
    1110:	097f                	0x97f
    1112:	0010                	0x10
  mv x11, x1
    1114:	0501                	addi	a0,a0,0
    1116:	04020003          	lb	zero,64(tp) # 40 <__DYNAMIC+0x40>
  mv x12, x1
    111a:	0302                	c.slli64	t1
  mv x13, x1
    111c:	0901                	addi	s2,s2,0
    111e:	0000                	unimp
  mv x14, x1
    1120:	0501                	addi	a0,a0,0
    1122:	0301                	addi	t1,t1,0
  mv x15, x1
    1124:	090a                	slli	s2,s2,0x2
    1126:	000c                	0xc
  mv x16, x1
    1128:	0501                	addi	a0,a0,0
    112a:	09010303          	lb	t1,144(sp)
  mv x17, x1
    112e:	0000                	unimp
  mv x18, x1
    1130:	0501                	addi	a0,a0,0
    1132:	0601                	addi	a2,a2,0
  mv x19, x1
    1134:	00097f03          	0x97f03
  mv x20, x1
    1138:	0100                	addi	s0,sp,128
    113a:	0305                	addi	t1,t1,1
  mv x21, x1
    113c:	04090103          	lb	sp,64(s2)
  mv x22, x1
    1140:	0100                	addi	s0,sp,128
    1142:	0200                	addi	s0,sp,256
  mv x23, x1
    1144:	0104                	addi	s1,sp,128
    1146:	0306                	slli	t1,t1,0x1
  mv x24, x1
    1148:	0900                	addi	s0,sp,144
    114a:	0008                	0x8
  mv x25, x1
    114c:	0501                	addi	a0,a0,0
    114e:	0001                	nop
  mv x26, x1
    1150:	0402                	c.slli64	s0
    1152:	0601                	addi	a2,a2,0
  mv x27, x1
    1154:	00097f03          	0x97f03
  mv x28, x1
    1158:	0100                	addi	s0,sp,128
    115a:	0305                	addi	t1,t1,1
  mv x29, x1
    115c:	0200                	addi	s0,sp,256
    115e:	0104                	addi	s1,sp,128
  mv x30, x1
    1160:	04090103          	lb	sp,64(s2)
  mv x31, x1
    1164:	0100                	addi	s0,sp,128
    1166:	0105                	addi	sp,sp,1
  la   x2, _stack_start
    1168:	0200                	addi	s0,sp,256
    116a:	0104                	addi	s1,sp,128
    116c:	04097f03          	0x4097f03
  la x26, _bss_start
    1170:	0100                	addi	s0,sp,128
    1172:	0305                	addi	t1,t1,1
    1174:	0200                	addi	s0,sp,256
    1176:	0104                	addi	s1,sp,128
  la x27, _bss_end
    1178:	04090103          	lb	sp,64(s2)
    117c:	0100                	addi	s0,sp,128
    117e:	0200                	addi	s0,sp,256
  bge x26, x27, zero_loop_end
    1180:	0204                	addi	s1,sp,256
    1182:	04090103          	lb	sp,64(s2)
  sw x0, 0(x26)
    1186:	0100                	addi	s0,sp,128
  addi x26, x26, 4
    1188:	2c05                	jal	13b8 <__call_exitprocs+0x108>
    118a:	0200                	addi	s0,sp,256
  ble x26, x27, zero_loop
    118c:	0204                	addi	s1,sp,256
    118e:	0306                	slli	t1,t1,0x1
  addi x10, x0, 0
    1190:	097f                	0x97f
    1192:	0010                	0x10
  addi x11, x0, 0
    1194:	0501                	addi	a0,a0,0
    1196:	04020003          	lb	zero,64(tp) # 40 <__DYNAMIC+0x40>
  jal x1, main
    119a:	0302                	c.slli64	t1
    119c:	0901                	addi	s2,s2,0
    119e:	0000                	unimp
    11a0:	0501                	addi	a0,a0,0
    11a2:	0301                	addi	t1,t1,0
    11a4:	00f0                	addi	a2,sp,76
    11a6:	0c09                	addi	s8,s8,2
    11a8:	0100                	addi	s0,sp,128
    11aa:	0305                	addi	t1,t1,1
    11ac:	00090103          	lb	sp,0(s2)
    11b0:	0100                	addi	s0,sp,128
    11b2:	00090203          	lb	tp,0(s2)
    11b6:	0100                	addi	s0,sp,128
    11b8:	0105                	addi	sp,sp,1
    11ba:	0306                	slli	t1,t1,0x1
    11bc:	097d                	addi	s2,s2,31
    11be:	0000                	unimp
    11c0:	0301                	addi	t1,t1,0
    11c2:	0900                	addi	s0,sp,144
    11c4:	0028                	addi	a0,sp,8
    11c6:	0501                	addi	a0,a0,0
    11c8:	030a                	slli	t1,t1,0x2
    11ca:	00040903          	lb	s2,0(s0)
    11ce:	0501                	addi	a0,a0,0
    11d0:	09020307          	0x9020307
    11d4:	0004                	0x4
    11d6:	0301                	addi	t1,t1,0
    11d8:	0901                	addi	s2,s2,0
    11da:	0010                	0x10
    11dc:	0301                	addi	t1,t1,0
    11de:	0902                	c.slli64	s2
    11e0:	0010                	0x10
    11e2:	0301                	addi	t1,t1,0
    11e4:	0901                	addi	s2,s2,0
    11e6:	0008                	0x8
    11e8:	0501                	addi	a0,a0,0
    11ea:	04020003          	lb	zero,64(tp) # 40 <__DYNAMIC+0x40>
    11ee:	0301                	addi	t1,t1,0
    11f0:	097a                	slli	s2,s2,0x1e
    11f2:	0008                	0x8
    11f4:	0601                	addi	a2,a2,0
    11f6:	04090903          	lb	s2,64(s2)
    11fa:	0100                	addi	s0,sp,128
    11fc:	0105                	addi	sp,sp,1
    11fe:	0306                	slli	t1,t1,0x1
    1200:	0901                	addi	s2,s2,0
    1202:	0000                	unimp
    1204:	0501                	addi	a0,a0,0
    1206:	04020007          	0x4020007
    120a:	78030603          	lb	a2,1920(t1)
    120e:	3009                	jal	a10 <_nettle_aes_decrypt+0x150>
    1210:	0100                	addi	s0,sp,128
    1212:	0200                	addi	s0,sp,256
    1214:	0304                	addi	s1,sp,384
    1216:	10090103          	lb	sp,256(s2)
    121a:	0100                	addi	s0,sp,128
    121c:	0200                	addi	s0,sp,256
    121e:	0304                	addi	s1,sp,384
    1220:	14090203          	lb	tp,320(s2)
    1224:	0100                	addi	s0,sp,128
    1226:	0200                	addi	s0,sp,256
    1228:	0304                	addi	s1,sp,384
    122a:	10090103          	lb	sp,256(s2)
    122e:	0100                	addi	s0,sp,128
    1230:	1905                	addi	s2,s2,-31
    1232:	0200                	addi	s0,sp,256
    1234:	0304                	addi	s1,sp,384
    1236:	0306                	slli	t1,t1,0x1
    1238:	097a                	slli	s2,s2,0x1e
    123a:	0014                	0x14
    123c:	0501                	addi	a0,a0,0
    123e:	0601                	addi	a2,a2,0
    1240:	08095503          	lhu	a0,128(s2)
    1244:	0100                	addi	s0,sp,128
    1246:	0305                	addi	t1,t1,1
    1248:	00090103          	lb	sp,0(s2)
    124c:	0100                	addi	s0,sp,128
    124e:	00090203          	lb	tp,0(s2)
    1252:	0100                	addi	s0,sp,128
    1254:	0805                	addi	a6,a6,1
    1256:	00090003          	lb	zero,0(s2)
    125a:	0100                	addi	s0,sp,128
    125c:	1505                	addi	a0,a0,-31
    125e:	0306                	slli	t1,t1,0x1
    1260:	0900                	addi	s0,sp,144
    1262:	0000                	unimp
    1264:	0501                	addi	a0,a0,0
    1266:	0308                	addi	a0,sp,384
    1268:	097e                	slli	s2,s2,0x1f
    126a:	0004                	0x4
    126c:	0501                	addi	a0,a0,0
    126e:	0314                	addi	a3,sp,384
    1270:	0904                	addi	s1,sp,144
    1272:	0004                	0x4
    1274:	0501                	addi	a0,a0,0
    1276:	09000323          	sb	a6,134(zero) # 86 <__DYNAMIC+0x86>
    127a:	0008                	0x8
    127c:	0501                	addi	a0,a0,0
    127e:	0314                	addi	a3,sp,384
    1280:	0902                	c.slli64	s2
    1282:	0008                	0x8
    1284:	0501                	addi	a0,a0,0
    1286:	0324                	addi	s1,sp,392
    1288:	0900                	addi	s0,sp,144
    128a:	0008                	0x8
    128c:	0501                	addi	a0,a0,0
    128e:	097c0303          	lb	t1,151(s8) # b097 <_bss_end+0x6a9f>
    1292:	0008                	0x8
    1294:	0501                	addi	a0,a0,0
    1296:	02030607          	0x2030607
    129a:	0409                	addi	s0,s0,2
    129c:	0100                	addi	s0,sp,128
    129e:	1405                	addi	s0,s0,-31
    12a0:	0306                	slli	t1,t1,0x1
    12a2:	0900                	addi	s0,sp,144
    12a4:	0000                	unimp
    12a6:	0501                	addi	a0,a0,0
    12a8:	09000323          	sb	a6,134(zero) # 86 <__DYNAMIC+0x86>
    12ac:	0004                	0x4
    12ae:	0501                	addi	a0,a0,0
    12b0:	030a                	slli	t1,t1,0x2
    12b2:	0900                	addi	s0,sp,144
    12b4:	0004                	0x4
    12b6:	0301                	addi	t1,t1,0
    12b8:	0901                	addi	s2,s2,0
    12ba:	000c                	0xc
    12bc:	0501                	addi	a0,a0,0
    12be:	01030607          	0x1030607
    12c2:	0409                	addi	s0,s0,2
    12c4:	0100                	addi	s0,sp,128
    12c6:	1405                	addi	s0,s0,-31
    12c8:	0306                	slli	t1,t1,0x1
    12ca:	0900                	addi	s0,sp,144
    12cc:	0000                	unimp
    12ce:	0501                	addi	a0,a0,0
    12d0:	0324                	addi	s1,sp,392
    12d2:	0900                	addi	s0,sp,144
    12d4:	0004                	0x4
    12d6:	0501                	addi	a0,a0,0
    12d8:	030a                	slli	t1,t1,0x2
    12da:	0900                	addi	s0,sp,144
    12dc:	0004                	0x4
    12de:	0301                	addi	t1,t1,0
    12e0:	0901                	addi	s2,s2,0
    12e2:	000c                	0xc
    12e4:	0501                	addi	a0,a0,0
    12e6:	0026                	c.slli	zero,0x9
    12e8:	0402                	c.slli64	s0
    12ea:	0302                	c.slli64	t1
    12ec:	0004097b          	0x4097b
    12f0:	0501                	addi	a0,a0,0
    12f2:	04020003          	lb	zero,64(tp) # 40 <__DYNAMIC+0x40>
    12f6:	0302                	c.slli64	t1
    12f8:	0900                	addi	s0,sp,144
    12fa:	0004                	0x4
    12fc:	0501                	addi	a0,a0,0
    12fe:	0301                	addi	t1,t1,0
    1300:	0909                	addi	s2,s2,2
    1302:	0004                	0x4
    1304:	0601                	addi	a2,a2,0
    1306:	04090403          	lb	s0,64(s2)
    130a:	0100                	addi	s0,sp,128
    130c:	00090103          	lb	sp,0(s2)
    1310:	0100                	addi	s0,sp,128
    1312:	04090703          	lb	a4,64(s2)
    1316:	0100                	addi	s0,sp,128
    1318:	0305                	addi	t1,t1,1
    131a:	00090103          	lb	sp,0(s2)
    131e:	0100                	addi	s0,sp,128
    1320:	0e05                	addi	t3,t3,1
    1322:	0306                	slli	t1,t1,0x1
    1324:	0900                	addi	s0,sp,144
    1326:	0000                	unimp
    1328:	0501                	addi	a0,a0,0
    132a:	0601                	addi	a2,a2,0
    132c:	04090803          	lb	a6,64(s2)
    1330:	0100                	addi	s0,sp,128
    1332:	0305                	addi	t1,t1,1
    1334:	00090103          	lb	sp,0(s2)
    1338:	0100                	addi	s0,sp,128
    133a:	0a05                	addi	s4,s4,1
    133c:	0306                	slli	t1,t1,0x1
    133e:	0900                	addi	s0,sp,144
    1340:	0000                	unimp
    1342:	0901                	addi	s2,s2,0
    1344:	0008                	0x8
    1346:	0100                	addi	s0,sp,128
    1348:	2a01                	jal	1458 <__register_exitproc+0x14>
    134a:	0004                	0x4
    134c:	0300                	addi	s0,sp,384
    134e:	5c00                	lw	s0,56(s0)
    1350:	0001                	nop
    1352:	0100                	addi	s0,sp,128
    1354:	fb01                	bnez	a4,1264 <memset+0x90>
    1356:	0d0e                	slli	s10,s10,0x3
    1358:	0100                	addi	s0,sp,128
    135a:	0101                	addi	sp,sp,0
    135c:	0001                	nop
    135e:	0000                	unimp
    1360:	0001                	nop
    1362:	0100                	addi	s0,sp,128
    1364:	6d6f682f          	0x6d6f682f
    1368:	2f65                	jal	1b20 <_aes_decrypt_table+0x174>
    136a:	622f4343          	fmadd.d	ft6,ft10,ft2,fa2,rmm
    136e:	6562                	flw	fa0,24(sp)
    1370:	7375                	lui	t1,0xffffd
    1372:	6574                	flw	fa3,76(a0)
    1374:	2f72                	fld	ft10,280(sp)
    1376:	7041                	c.lui	zero,0xffff0
    1378:	6c70                	flw	fa2,92(s0)
    137a:	6369                	lui	t1,0x1a
    137c:	7461                	lui	s0,0xffff8
    137e:	6f69                	lui	t5,0x1a
    1380:	736e                	flw	ft6,248(sp)
    1382:	7369722f          	0x7369722f
    1386:	34367663          	bgeu	a2,gp,16d2 <mtable+0x126>
    138a:	752d                	lui	a0,0xfffeb
    138c:	6b6e                	flw	fs6,216(sp)
    138e:	6f6e                	flw	ft10,216(sp)
    1390:	652d6e77          	0x652d6e77
    1394:	666c                	flw	fa1,76(a2)
    1396:	672d                	lui	a4,0xb
    1398:	382d6363          	bltu	s10,sp,171e <mtable+0x172>
    139c:	332e                	fld	ft6,232(sp)
    139e:	302e                	fld	ft0,232(sp)
    13a0:	322d                	jal	cca <_nettle_aes_decrypt+0x40a>
    13a2:	3130                	fld	fa2,96(a0)
    13a4:	2e39                	jal	16c2 <mtable+0x116>
    13a6:	3830                	fld	fa2,112(s0)
    13a8:	302e                	fld	ft0,232(sp)
    13aa:	782d                	lui	a6,0xfffeb
    13ac:	3638                	fld	fa4,104(a2)
    13ae:	365f 2d34 696c      	0x696c2d34365f
    13b4:	756e                	flw	fa0,248(sp)
    13b6:	2d78                	fld	fa4,216(a0)
    13b8:	746e6563          	bltu	t3,t1,1b02 <_aes_decrypt_table+0x156>
    13bc:	2f36736f          	jal	t1,68eae <_stack_start+0x58eae>
    13c0:	696c                	flw	fa1,84(a0)
    13c2:	2f62                	fld	ft10,24(sp)
    13c4:	2f636367          	0x2f636367
    13c8:	6972                	flw	fs2,28(sp)
    13ca:	36766373          	csrrsi	t1,0x367,12
    13ce:	2d34                	fld	fa3,88(a0)
    13d0:	6e75                	lui	t3,0x1d
    13d2:	776f6e6b          	0x776f6e6b
    13d6:	2d6e                	fld	fs10,216(sp)
    13d8:	6c65                	lui	s8,0x19
    13da:	2f66                	fld	ft10,88(sp)
    13dc:	2e38                	fld	fa4,88(a2)
    13de:	2f302e33          	0x2f302e33
    13e2:	6e69                	lui	t3,0x1a
    13e4:	64756c63          	bltu	a0,t2,1a3c <_aes_decrypt_table+0x90>
    13e8:	0065                	c.nop	25
    13ea:	6d6f682f          	0x6d6f682f
    13ee:	2f65                	jal	1ba6 <_aes_decrypt_table+0x1fa>
    13f0:	622f4343          	fmadd.d	ft6,ft10,ft2,fa2,rmm
    13f4:	6562                	flw	fa0,24(sp)
    13f6:	7375                	lui	t1,0xffffd
    13f8:	6574                	flw	fa3,76(a0)
    13fa:	2f72                	fld	ft10,280(sp)
    13fc:	7041                	c.lui	zero,0xffff0
    13fe:	6c70                	flw	fa2,92(s0)
    1400:	6369                	lui	t1,0x1a
    1402:	7461                	lui	s0,0xffff8
    1404:	6f69                	lui	t5,0x1a
    1406:	736e                	flw	ft6,248(sp)
    1408:	7369722f          	0x7369722f
    140c:	34367663          	bgeu	a2,gp,1758 <mtable+0x1ac>
    1410:	752d                	lui	a0,0xfffeb
    1412:	6b6e                	flw	fs6,216(sp)
    1414:	6f6e                	flw	ft10,216(sp)
    1416:	652d6e77          	0x652d6e77
    141a:	666c                	flw	fa1,76(a2)
    141c:	672d                	lui	a4,0xb
    141e:	382d6363          	bltu	s10,sp,17a4 <mtable+0x1f8>
    1422:	332e                	fld	ft6,232(sp)
    1424:	302e                	fld	ft0,232(sp)
    1426:	322d                	jal	d50 <_nettle_aes_decrypt+0x490>
    1428:	3130                	fld	fa2,96(a0)
    142a:	2e39                	jal	1748 <mtable+0x19c>
    142c:	3830                	fld	fa2,112(s0)
    142e:	302e                	fld	ft0,232(sp)
    1430:	782d                	lui	a6,0xfffeb
    1432:	3638                	fld	fa4,104(a2)
    1434:	365f 2d34 696c      	0x696c2d34365f
    143a:	756e                	flw	fa0,248(sp)
    143c:	2d78                	fld	fa4,216(a0)
    143e:	746e6563          	bltu	t3,t1,1b88 <_aes_decrypt_table+0x1dc>
    1442:	2f36736f          	jal	t1,68f34 <_stack_start+0x58f34>
    1446:	6972                	flw	fs2,28(sp)
    1448:	36766373          	csrrsi	t1,0x367,12
    144c:	2d34                	fld	fa3,88(a0)
    144e:	6e75                	lui	t3,0x1d
    1450:	776f6e6b          	0x776f6e6b
    1454:	2d6e                	fld	fs10,216(sp)
    1456:	6c65                	lui	s8,0x19
    1458:	2f66                	fld	ft10,88(sp)
    145a:	6e69                	lui	t3,0x1a
    145c:	64756c63          	bltu	a0,t2,1ab4 <_aes_decrypt_table+0x108>
    1460:	2f65                	jal	1c18 <_aes_decrypt_table+0x26c>
    1462:	00737973          	csrrci	s2,0x7,6
    1466:	6200                	flw	fs0,0(a2)
    1468:	6565                	lui	a0,0x19
    146a:	7362                	flw	ft6,56(sp)
    146c:	00632e63          	0x632e63
    1470:	0000                	unimp
    1472:	7300                	flw	fs0,32(a4)
    1474:	6474                	flw	fa3,76(s0)
    1476:	6564                	flw	fs1,76(a0)
    1478:	2e66                	fld	ft8,88(sp)
    147a:	0068                	addi	a0,sp,12
    147c:	0001                	nop
    147e:	5f00                	lw	s0,56(a4)
    1480:	7974                	flw	fa3,116(a0)
    1482:	6570                	flw	fa2,76(a0)
    1484:	00682e73          	csrrs	t3,0x6,a6
    1488:	0002                	c.slli64	zero
    148a:	7200                	flw	fs0,32(a2)
    148c:	6565                	lui	a0,0x19
    148e:	746e                	flw	fs0,248(sp)
    1490:	682e                	flw	fa6,200(sp)
    1492:	0200                	addi	s0,sp,256
    1494:	0000                	unimp
    1496:	6f6c                	flw	fa1,92(a4)
    1498:	682e6b63          	bltu	t3,sp,1b2e <_aes_decrypt_table+0x182>
    149c:	0200                	addi	s0,sp,256
    149e:	0000                	unimp
    14a0:	623c                	flw	fa5,64(a2)
    14a2:	6975                	lui	s2,0x1d
    14a4:	746c                	flw	fa1,108(s0)
    14a6:	692d                	lui	s2,0xb
    14a8:	3e6e                	fld	ft8,248(sp)
    14aa:	0000                	unimp
    14ac:	0000                	unimp
    14ae:	0500                	addi	s0,sp,640
    14b0:	0001                	nop
    14b2:	0205                	addi	tp,tp,1
    14b4:	0f34                	addi	a3,sp,920
    14b6:	0000                	unimp
    14b8:	05012903          	lw	s2,80(sp)
    14bc:	09010303          	lb	t1,144(sp)
    14c0:	0000                	unimp
    14c2:	0501                	addi	a0,a0,0
    14c4:	0610                	addi	a2,sp,768
    14c6:	00090003          	lb	zero,0(s2) # b000 <_bss_end+0x6a08>
    14ca:	0100                	addi	s0,sp,128
    14cc:	1e05                	addi	t3,t3,-31
    14ce:	18090003          	lb	zero,384(s2)
    14d2:	0100                	addi	s0,sp,128
    14d4:	2705                	jal	1bf4 <_aes_decrypt_table+0x248>
    14d6:	0c090003          	lb	zero,192(s2)
    14da:	0100                	addi	s0,sp,128
    14dc:	0805                	addi	a6,a6,1
    14de:	08090003          	lb	zero,128(s2)
    14e2:	0100                	addi	s0,sp,128
    14e4:	0305                	addi	t1,t1,1
    14e6:	0306                	slli	t1,t1,0x1
    14e8:	0901                	addi	s2,s2,0
    14ea:	0004                	0x4
    14ec:	0501                	addi	a0,a0,0
    14ee:	0601                	addi	a2,a2,0
    14f0:	00090103          	lb	sp,0(s2)
    14f4:	0100                	addi	s0,sp,128
    14f6:	0306                	slli	t1,t1,0x1
    14f8:	00080907          	0x80907
    14fc:	0501                	addi	a0,a0,0
    14fe:	09010303          	lb	t1,144(sp)
    1502:	0000                	unimp
    1504:	0501                	addi	a0,a0,0
    1506:	0608                	addi	a0,sp,768
    1508:	00090003          	lb	zero,0(s2)
    150c:	0100                	addi	s0,sp,128
    150e:	0105                	addi	sp,sp,1
    1510:	08090103          	lb	sp,128(s2)
    1514:	0100                	addi	s0,sp,128
    1516:	0306                	slli	t1,t1,0x1
    1518:	0908                	addi	a0,sp,144
    151a:	0004                	0x4
    151c:	0501                	addi	a0,a0,0
    151e:	09010303          	lb	t1,144(sp)
    1522:	0000                	unimp
    1524:	0501                	addi	a0,a0,0
    1526:	060e                	slli	a2,a2,0x3
    1528:	00090103          	lb	sp,0(s2)
    152c:	0100                	addi	s0,sp,128
    152e:	0c05                	addi	s8,s8,1
    1530:	04097f03          	0x4097f03
    1534:	0100                	addi	s0,sp,128
    1536:	0305                	addi	t1,t1,1
{
    1538:	0306                	slli	t1,t1,0x1
    153a:	0901                	addi	s2,s2,0
    153c:	0008                	0x8
    153e:	0501                	addi	a0,a0,0
  initialise_board ();
    1540:	060c                	addi	a1,sp,768
    1542:	00090003          	lb	zero,0(s2)
  initialise_benchmark ();
    1546:	0100                	addi	s0,sp,128
  warm_caches (WARMUP_HEAT);
    1548:	0305                	addi	t1,t1,1
    154a:	0306                	slli	t1,t1,0x1
    154c:	0901                	addi	s2,s2,0
    154e:	0008                	0x8
  start_trigger ();
    1550:	0501                	addi	a0,a0,0
    1552:	0612                	slli	a2,a2,0x4
  result = benchmark ();
    1554:	00090003          	lb	zero,0(s2)
    1558:	0100                	addi	s0,sp,128
    155a:	0105                	addi	sp,sp,1
  stop_trigger ();
    155c:	08090103          	lb	sp,128(s2)
  correct = verify_benchmark (result);
    1560:	0100                	addi	s0,sp,128
    1562:	0306                	slli	t1,t1,0x1
    1564:	090a                	slli	s2,s2,0x2
    1566:	0004                	0x4
    1568:	0501                	addi	a0,a0,0
    156a:	09010303          	lb	t1,144(sp)
    asm("wfi");
    156e:	0000                	unimp
    1570:	0501                	addi	a0,a0,0
    1572:	0003060b          	0x3060b
    1576:	0009                	c.nop	2
    1578:	0100                	addi	s0,sp,128
    157a:	3505                	jal	139a <__call_exitprocs+0xea>
    157c:	10090003          	lb	zero,256(s2)
    1580:	0100                	addi	s0,sp,128
    1582:	0105                	addi	sp,sp,1
    1584:	10090103          	lb	sp,256(s2)
    1588:	0100                	addi	s0,sp,128
    158a:	0306                	slli	t1,t1,0x1
    158c:	090e                	slli	s2,s2,0x3
    158e:	0008                	0x8
    1590:	0501                	addi	a0,a0,0
    1592:	09010303          	lb	t1,144(sp)
    1596:	0000                	unimp
    1598:	0501                	addi	a0,a0,0
    159a:	0612                	slli	a2,a2,0x4
    159c:	00090203          	lb	tp,0(s2)
    15a0:	0100                	addi	s0,sp,128
    15a2:	0905                	addi	s2,s2,1
    15a4:	0c097e03          	0xc097e03
    15a8:	0100                	addi	s0,sp,128
    15aa:	0305                	addi	t1,t1,1
    15ac:	0306                	slli	t1,t1,0x1
    15ae:	0902                	c.slli64	s2
    15b0:	000c                	0xc
    15b2:	0501                	addi	a0,a0,0
    15b4:	0612                	slli	a2,a2,0x4
    15b6:	00090003          	lb	zero,0(s2)
    15ba:	0100                	addi	s0,sp,128
    15bc:	0305                	addi	t1,t1,1
    15be:	0306                	slli	t1,t1,0x1
    15c0:	0902                	c.slli64	s2
    15c2:	000c                	0xc
    15c4:	0501                	addi	a0,a0,0
    15c6:	062c                	addi	a1,sp,776
    15c8:	00090003          	lb	zero,0(s2)
    15cc:	0100                	addi	s0,sp,128
    15ce:	0605                	addi	a2,a2,1
    15d0:	08090003          	lb	zero,128(s2)
    15d4:	0100                	addi	s0,sp,128
    15d6:	0805                	addi	a6,a6,1
    15d8:	04090003          	lb	zero,64(s2)
    15dc:	0100                	addi	s0,sp,128
    15de:	0605                	addi	a2,a2,1
    15e0:	04090003          	lb	zero,64(s2)
    15e4:	0100                	addi	s0,sp,128
    15e6:	3805                	jal	e16 <benchmark_body+0x3e>
    15e8:	0200                	addi	s0,sp,256
    15ea:	0104                	addi	s1,sp,128
    15ec:	04090003          	lb	zero,64(s2)
    15f0:	0100                	addi	s0,sp,128
    15f2:	0705                	addi	a4,a4,1
    15f4:	0306                	slli	t1,t1,0x1
    15f6:	0904                	addi	s1,sp,144
    15f8:	0004                	0x4
    15fa:	0501                	addi	a0,a0,0
    15fc:	0610                	addi	a2,sp,768
    15fe:	00090003          	lb	zero,0(s2)
    1602:	0100                	addi	s0,sp,128
    1604:	0705                	addi	a4,a4,1
    1606:	0306                	slli	t1,t1,0x1
    1608:	0901                	addi	s2,s2,0
    160a:	0008                	0x8
    160c:	0501                	addi	a0,a0,0
    160e:	0601                	addi	a2,a2,0
    1610:	00090203          	lb	tp,0(s2)
    1614:	0100                	addi	s0,sp,128
    1616:	0c05                	addi	s8,s8,1
    1618:	08097a03          	0x8097a03
    161c:	0100                	addi	s0,sp,128
    161e:	0105                	addi	sp,sp,1
    1620:	0306                	slli	t1,t1,0x1
    1622:	0008090f          	0x8090f
    1626:	0501                	addi	a0,a0,0
    1628:	09010303          	lb	t1,144(sp)
    162c:	0000                	unimp
    162e:	0501                	addi	a0,a0,0
    1630:	00030613          	mv	a2,t1
    1634:	0009                	c.nop	2
    1636:	0100                	addi	s0,sp,128
    1638:	0105                	addi	sp,sp,1
    163a:	04097f03          	0x4097f03
    163e:	0100                	addi	s0,sp,128
    1640:	1305                	addi	t1,t1,-31
    1642:	0c090103          	lb	sp,192(s2)
    1646:	0100                	addi	s0,sp,128
    1648:	0305                	addi	t1,t1,1
    164a:	0306                	slli	t1,t1,0x1
    164c:	0905                	addi	s2,s2,1
    164e:	0010                	0x10
    1650:	0501                	addi	a0,a0,0
    1652:	0606                	slli	a2,a2,0x1
    1654:	00090003          	lb	zero,0(s2)
    1658:	0100                	addi	s0,sp,128
    165a:	0505                	addi	a0,a0,1
    165c:	0306                	slli	t1,t1,0x1
    165e:	0901                	addi	s2,s2,0
    1660:	0004                	0x4
    1662:	0501                	addi	a0,a0,0
    1664:	09020303          	lb	t1,144(tp) # 90 <_aes_set_key+0x4>
    1668:	000c                	0xc
    166a:	0501                	addi	a0,a0,0
    166c:	0601                	addi	a2,a2,0
    166e:	00090103          	lb	sp,0(s2)
    1672:	0100                	addi	s0,sp,128
    1674:	0306                	slli	t1,t1,0x1
    1676:	090a                	slli	s2,s2,0x2
    1678:	0014                	0x14
    167a:	0501                	addi	a0,a0,0
    167c:	09010303          	lb	t1,144(sp)
    1680:	0000                	unimp
    1682:	0501                	addi	a0,a0,0
    1684:	0612                	slli	a2,a2,0x4
    1686:	00090203          	lb	tp,0(s2)
    168a:	0100                	addi	s0,sp,128
    168c:	0905                	addi	s2,s2,1
    168e:	0c097e03          	0xc097e03
    1692:	0100                	addi	s0,sp,128
    1694:	0305                	addi	t1,t1,1
    1696:	0306                	slli	t1,t1,0x1
    1698:	0902                	c.slli64	s2
    169a:	000c                	0xc
    169c:	0501                	addi	a0,a0,0
    169e:	0612                	slli	a2,a2,0x4
    16a0:	00090003          	lb	zero,0(s2)
    16a4:	0100                	addi	s0,sp,128
    16a6:	0305                	addi	t1,t1,1
    16a8:	0306                	slli	t1,t1,0x1
    16aa:	0902                	c.slli64	s2
    16ac:	000c                	0xc
    16ae:	0501                	addi	a0,a0,0
    16b0:	062c                	addi	a1,sp,776
    16b2:	00090003          	lb	zero,0(s2)
    16b6:	0100                	addi	s0,sp,128
    16b8:	0605                	addi	a2,a2,1
    16ba:	08090003          	lb	zero,128(s2)
    16be:	0100                	addi	s0,sp,128
    16c0:	0805                	addi	a6,a6,1
    16c2:	04090003          	lb	zero,64(s2)
    16c6:	0100                	addi	s0,sp,128
    16c8:	0605                	addi	a2,a2,1
    16ca:	04090003          	lb	zero,64(s2)
    16ce:	0100                	addi	s0,sp,128
    16d0:	3805                	jal	f00 <verify_benchmark+0x44>
    16d2:	0200                	addi	s0,sp,256
    16d4:	0104                	addi	s1,sp,128
    16d6:	04090003          	lb	zero,64(s2)
    16da:	0100                	addi	s0,sp,128
    16dc:	0705                	addi	a4,a4,1
    16de:	0306                	slli	t1,t1,0x1
    16e0:	0904                	addi	s1,sp,144
    16e2:	0004                	0x4
    16e4:	0501                	addi	a0,a0,0
    16e6:	0610                	addi	a2,sp,768
    16e8:	00090003          	lb	zero,0(s2)
    16ec:	0100                	addi	s0,sp,128
    16ee:	0705                	addi	a4,a4,1
    16f0:	0306                	slli	t1,t1,0x1
    16f2:	00080907          	0x80907
    16f6:	0501                	addi	a0,a0,0
    16f8:	060a                	slli	a2,a2,0x2
    16fa:	00090003          	lb	zero,0(s2)
    16fe:	0100                	addi	s0,sp,128
    1700:	0b05                	addi	s6,s6,1
    1702:	04090403          	lb	s0,64(s2)
    1706:	0100                	addi	s0,sp,128
    1708:	0605                	addi	a2,a2,1
    170a:	0200                	addi	s0,sp,256
    170c:	0304                	addi	s1,sp,384
    170e:	0306                	slli	t1,t1,0x1
    1710:	0901                	addi	s2,s2,0
    1712:	0004                	0x4
    1714:	0501                	addi	a0,a0,0
    1716:	002c                	addi	a1,sp,8
    1718:	0402                	c.slli64	s0
    171a:	00030603          	lb	a2,0(t1) # 1a000 <_stack_start+0xa000>
    171e:	0009                	c.nop	2
    1720:	0100                	addi	s0,sp,128
    1722:	1c05                	addi	s8,s8,-31
    1724:	0200                	addi	s0,sp,256
    1726:	0304                	addi	s1,sp,384
    1728:	08090003          	lb	zero,128(s2)
    172c:	0100                	addi	s0,sp,128
    172e:	1b05                	addi	s6,s6,-31
    1730:	0200                	addi	s0,sp,256
    1732:	0304                	addi	s1,sp,384
    1734:	04097f03          	0x4097f03
    1738:	0100                	addi	s0,sp,128
    173a:	1c05                	addi	s8,s8,-31
    173c:	0200                	addi	s0,sp,256
    173e:	0304                	addi	s1,sp,384
    1740:	04090103          	lb	sp,64(s2)
    1744:	0100                	addi	s0,sp,128
    1746:	0405                	addi	s0,s0,1
    1748:	0200                	addi	s0,sp,256
    174a:	0304                	addi	s1,sp,384
    174c:	04097f03          	0x4097f03
    1750:	0100                	addi	s0,sp,128
    1752:	0105                	addi	sp,sp,1
    1754:	04090603          	lb	a2,64(s2)
    1758:	0100                	addi	s0,sp,128
    175a:	0c05                	addi	s8,s8,1
    175c:	08096c03          	0x8096c03
    1760:	0100                	addi	s0,sp,128
    1762:	0105                	addi	sp,sp,1
    1764:	0306                	slli	t1,t1,0x1
    1766:	091d                	addi	s2,s2,7
    1768:	0008                	0x8
    176a:	0301                	addi	t1,t1,0
    176c:	0901                	addi	s2,s2,0
    176e:	0000                	unimp
    1770:	0901                	addi	s2,s2,0
    1772:	0004                	0x4
    1774:	0100                	addi	s0,sp,128
    1776:	7e01                	lui	t3,0xfffe0
    1778:	0000                	unimp
    177a:	0300                	addi	s0,sp,384
    177c:	2500                	fld	fs0,8(a0)
    177e:	0000                	unimp
    1780:	0100                	addi	s0,sp,128
    1782:	fb01                	bnez	a4,1692 <mtable+0xe6>
    1784:	0d0e                	slli	s10,s10,0x3
    1786:	0100                	addi	s0,sp,128
    1788:	0101                	addi	sp,sp,0
    178a:	0001                	nop
    178c:	0000                	unimp
    178e:	0001                	nop
    1790:	0100                	addi	s0,sp,128
    1792:	6200                	flw	fs0,0(a2)
    1794:	6472616f          	jal	sp,285da <_stack_start+0x185da>
    1798:	70707573          	csrrci	a0,0x707,0
    179c:	2e74726f          	jal	tp,49282 <_stack_start+0x39282>
    17a0:	00000063          	beqz	zero,17a0 <mtable+0x1f4>
    17a4:	0000                	unimp
    17a6:	0105                	addi	sp,sp,1
    17a8:	0500                	addi	s0,sp,640
    17aa:	d002                	sw	zero,32(sp)
    17ac:	0010                	0x10
    17ae:	0300                	addi	s0,sp,384
    17b0:	010d                	addi	sp,sp,3
    17b2:	0305                	addi	t1,t1,1
    17b4:	00090103          	lb	sp,0(s2)
    17b8:	0100                	addi	s0,sp,128
    17ba:	0105                	addi	sp,sp,1
    17bc:	0306                	slli	t1,t1,0x1
    17be:	0901                	addi	s2,s2,0
    17c0:	0004                	0x4
    17c2:	0601                	addi	a2,a2,0
    17c4:	04090403          	lb	s0,64(s2)
    17c8:	0100                	addi	s0,sp,128
    17ca:	0305                	addi	t1,t1,1
    17cc:	00090103          	lb	sp,0(s2)
    17d0:	0100                	addi	s0,sp,128
    17d2:	0105                	addi	sp,sp,1
    17d4:	0306                	slli	t1,t1,0x1
    17d6:	0901                	addi	s2,s2,0
    17d8:	0004                	0x4
    17da:	0601                	addi	a2,a2,0
    17dc:	04090403          	lb	s0,64(s2)
    17e0:	0100                	addi	s0,sp,128
    17e2:	0305                	addi	t1,t1,1
    17e4:	00090103          	lb	sp,0(s2)
    17e8:	0100                	addi	s0,sp,128
    17ea:	0105                	addi	sp,sp,1
    17ec:	0306                	slli	t1,t1,0x1
    17ee:	0901                	addi	s2,s2,0
    17f0:	0004                	0x4
    17f2:	0901                	addi	s2,s2,0
    17f4:	0004                	0x4
    17f6:	0100                	addi	s0,sp,128
    17f8:	ca01                	beqz	a2,1808 <mtable+0x25c>
    17fa:	0000                	unimp
    17fc:	0300                	addi	s0,sp,384
    17fe:	2a00                	fld	fs0,16(a2)
    1800:	0000                	unimp
    1802:	0100                	addi	s0,sp,128
    1804:	fb01                	bnez	a4,1714 <mtable+0x168>
    1806:	0d0e                	slli	s10,s10,0x3
    1808:	0100                	addi	s0,sp,128
    180a:	0101                	addi	sp,sp,0
    180c:	0001                	nop
    180e:	0000                	unimp
    1810:	0001                	nop
    1812:	0100                	addi	s0,sp,128
    1814:	6d00                	flw	fs0,24(a0)
    1816:	6961                	lui	s2,0x18
    1818:	2e6e                	fld	ft8,216(sp)
    181a:	00000063          	beqz	zero,181a <mtable+0x26e>
    181e:	7300                	flw	fs0,32(a4)
    1820:	7075                	c.lui	zero,0xffffd
    1822:	6f70                	flw	fa2,92(a4)
    1824:	7472                	flw	fs0,60(sp)
    1826:	682e                	flw	fa6,200(sp)
    1828:	0000                	unimp
    182a:	0000                	unimp
    182c:	0500                	addi	s0,sp,640
    182e:	0001                	nop
    1830:	0205                	addi	tp,tp,1
    1832:	1538                	addi	a4,sp,680
    1834:	0000                	unimp
    1836:	05011303          	lh	t1,80(sp)
    183a:	09010303          	lb	t1,144(sp)
    183e:	0000                	unimp
    1840:	0301                	addi	t1,t1,0
    1842:	0901                	addi	s2,s2,0
    1844:	0000                	unimp
    1846:	0301                	addi	t1,t1,0
    1848:	0902                	c.slli64	s2
    184a:	0000                	unimp
    184c:	0501                	addi	a0,a0,0
    184e:	0601                	addi	a2,a2,0
    1850:	00097c03          	0x97c03
    1854:	0100                	addi	s0,sp,128
    1856:	0305                	addi	t1,t1,1
    1858:	08090403          	lb	s0,128(s2) # 18080 <_stack_start+0x8080>
    185c:	0100                	addi	s0,sp,128
    185e:	0306                	slli	t1,t1,0x1
    1860:	0901                	addi	s2,s2,0
    1862:	0004                	0x4
    1864:	0301                	addi	t1,t1,0
    1866:	0901                	addi	s2,s2,0
    1868:	0004                	0x4
    186a:	0301                	addi	t1,t1,0
    186c:	0902                	c.slli64	s2
    186e:	0008                	0x8
    1870:	0301                	addi	t1,t1,0
    1872:	0901                	addi	s2,s2,0
    1874:	0004                	0x4
    1876:	0501                	addi	a0,a0,0
    1878:	060c                	addi	a1,sp,768
    187a:	00090003          	lb	zero,0(s2)
    187e:	0100                	addi	s0,sp,128
    1880:	0a05                	addi	s4,s4,1
    1882:	04090003          	lb	zero,64(s2)
    1886:	0100                	addi	s0,sp,128
    1888:	0305                	addi	t1,t1,1
    188a:	0306                	slli	t1,t1,0x1
    188c:	0901                	addi	s2,s2,0
    188e:	0004                	0x4
    1890:	0301                	addi	t1,t1,0
    1892:	0904                	addi	s1,sp,144
    1894:	0004                	0x4
    1896:	0501                	addi	a0,a0,0
    1898:	060d                	addi	a2,a2,3
    189a:	00090003          	lb	zero,0(s2)
    189e:	0100                	addi	s0,sp,128
    18a0:	0b05                	addi	s6,s6,1
    18a2:	08090003          	lb	zero,128(s2)
    18a6:	0100                	addi	s0,sp,128
    18a8:	0305                	addi	t1,t1,1
    18aa:	0200                	addi	s0,sp,256
    18ac:	0104                	addi	s1,sp,128
    18ae:	0306                	slli	t1,t1,0x1
    18b0:	00040903          	lb	s2,0(s0) # ffff8000 <_stack_start+0xfffe8000>
    18b4:	0501                	addi	a0,a0,0
    18b6:	0005                	c.nop	1
    18b8:	0402                	c.slli64	s0
    18ba:	0301                	addi	t1,t1,0
    18bc:	0901                	addi	s2,s2,0
    18be:	0000                	unimp
    18c0:	0901                	addi	s2,s2,0
    18c2:	0008                	0x8
    18c4:	0100                	addi	s0,sp,128
    18c6:	5001                	c.li	zero,-32
    18c8:	0001                	nop
    18ca:	0300                	addi	s0,sp,384
    18cc:	1d00                	addi	s0,sp,688
    18ce:	0000                	unimp
    18d0:	0100                	addi	s0,sp,128
    18d2:	fb01                	bnez	a4,17e2 <mtable+0x236>
    18d4:	0d0e                	slli	s10,s10,0x3
    18d6:	0100                	addi	s0,sp,128
    18d8:	0101                	addi	sp,sp,0
    18da:	0001                	nop
    18dc:	0000                	unimp
    18de:	0001                	nop
    18e0:	0100                	addi	s0,sp,128
    18e2:	6300                	flw	fs0,0(a4)
    18e4:	7472                	flw	fs0,60(sp)
    18e6:	2e30                	fld	fa2,88(a2)
    18e8:	00000053          	fadd.s	ft0,ft0,ft0,rne
    18ec:	0000                	unimp
    18ee:	0500                	addi	s0,sp,640
    18f0:	e802                	fsw	ft0,16(sp)
    18f2:	0010                	0x10
    18f4:	1500                	addi	s0,sp,672
    18f6:	04090403          	lb	s0,64(s2)
    18fa:	0100                	addi	s0,sp,128
    18fc:	04090103          	lb	sp,64(s2)
    1900:	0100                	addi	s0,sp,128
    1902:	04090103          	lb	sp,64(s2)
    1906:	0100                	addi	s0,sp,128
    1908:	04090103          	lb	sp,64(s2)
    190c:	0100                	addi	s0,sp,128
    190e:	04090103          	lb	sp,64(s2)
    1912:	0100                	addi	s0,sp,128
    1914:	04090103          	lb	sp,64(s2)
    1918:	0100                	addi	s0,sp,128
    191a:	04090103          	lb	sp,64(s2)
    191e:	0100                	addi	s0,sp,128
    1920:	04090103          	lb	sp,64(s2)
    1924:	0100                	addi	s0,sp,128
    1926:	04090103          	lb	sp,64(s2)
    192a:	0100                	addi	s0,sp,128
    192c:	04090103          	lb	sp,64(s2)
    1930:	0100                	addi	s0,sp,128
    1932:	04090103          	lb	sp,64(s2)
    1936:	0100                	addi	s0,sp,128
    1938:	04090103          	lb	sp,64(s2)
    193c:	0100                	addi	s0,sp,128
    193e:	04090103          	lb	sp,64(s2)
    1942:	0100                	addi	s0,sp,128
    1944:	04090103          	lb	sp,64(s2)
    1948:	0100                	addi	s0,sp,128
    194a:	04090103          	lb	sp,64(s2)
    194e:	0100                	addi	s0,sp,128
    1950:	04090103          	lb	sp,64(s2)
    1954:	0100                	addi	s0,sp,128
    1956:	04090103          	lb	sp,64(s2)
    195a:	0100                	addi	s0,sp,128
    195c:	04090103          	lb	sp,64(s2)
    1960:	0100                	addi	s0,sp,128
    1962:	04090103          	lb	sp,64(s2)
    1966:	0100                	addi	s0,sp,128
    1968:	04090103          	lb	sp,64(s2)
    196c:	0100                	addi	s0,sp,128
    196e:	04090103          	lb	sp,64(s2)
    1972:	0100                	addi	s0,sp,128
    1974:	04090103          	lb	sp,64(s2)
    1978:	0100                	addi	s0,sp,128
    197a:	04090103          	lb	sp,64(s2)
    197e:	0100                	addi	s0,sp,128
    1980:	04090103          	lb	sp,64(s2)
    1984:	0100                	addi	s0,sp,128
    1986:	04090103          	lb	sp,64(s2)
    198a:	0100                	addi	s0,sp,128
    198c:	04090103          	lb	sp,64(s2)
    1990:	0100                	addi	s0,sp,128
    1992:	04090103          	lb	sp,64(s2)
    1996:	0100                	addi	s0,sp,128
    1998:	04090103          	lb	sp,64(s2)
    199c:	0100                	addi	s0,sp,128
    199e:	04090103          	lb	sp,64(s2)
    19a2:	0100                	addi	s0,sp,128
    19a4:	04090103          	lb	sp,64(s2)
    19a8:	0100                	addi	s0,sp,128
    19aa:	04090103          	lb	sp,64(s2)
    19ae:	0100                	addi	s0,sp,128
    19b0:	04090303          	lb	t1,64(s2)
    19b4:	0100                	addi	s0,sp,128
    19b6:	08090603          	lb	a2,128(s2)
    19ba:	0100                	addi	s0,sp,128
    19bc:	08090103          	lb	sp,128(s2)
    19c0:	0100                	addi	s0,sp,128
    19c2:	08090203          	lb	tp,128(s2)
    19c6:	0100                	addi	s0,sp,128
    19c8:	04090303          	lb	t1,64(s2)
    19cc:	0100                	addi	s0,sp,128
    19ce:	04090103          	lb	sp,64(s2)
    19d2:	0100                	addi	s0,sp,128
    19d4:	04090103          	lb	sp,64(s2)
    19d8:	0100                	addi	s0,sp,128
    19da:	04090603          	lb	a2,64(s2)
    19de:	0100                	addi	s0,sp,128
    19e0:	04090103          	lb	sp,64(s2)
    19e4:	0100                	addi	s0,sp,128
    19e6:	04090103          	lb	sp,64(s2)
    19ea:	0100                	addi	s0,sp,128
    19ec:	0409                	addi	s0,s0,2
    19ee:	0000                	unimp
    19f0:	0101                	addi	sp,sp,0
    19f2:	0500                	addi	s0,sp,640
    19f4:	0002                	c.slli64	zero
    19f6:	0000                	unimp
    19f8:	0300                	addi	s0,sp,384
    19fa:	030100cb          	fnmsub.d	ft1,ft2,fa6,ft0,rne
    19fe:	0901                	addi	s2,s2,0
    1a00:	007c                	addi	a5,sp,12
    1a02:	0301                	addi	t1,t1,0
    1a04:	0904                	addi	s1,sp,144
    1a06:	0004                	0x4
    1a08:	0301                	addi	t1,t1,0
    1a0a:	0904                	addi	s1,sp,144
    1a0c:	0004                	0x4
    1a0e:	0301                	addi	t1,t1,0
    1a10:	0904                	addi	s1,sp,144
    1a12:	0004                	0x4
    1a14:	0901                	addi	s2,s2,0
    1a16:	0004                	0x4
    1a18:	0100                	addi	s0,sp,128
    1a1a:	01              	Address 0x0000000000001a1a is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
  .endr
   0:	645f 6f73 685f      	0x685f6f73645f
   6:	6e61                	lui	t3,0x18
   8:	6c64                	flw	fs1,92(s0)
   a:	0065                	c.nop	25
   c:	656c                	flw	fa1,76(a0)
   e:	676e                	flw	fa4,216(sp)
  10:	6874                	flw	fa3,84(s0)
  12:	5f00                	lw	s0,56(a4)
  14:	6172                	flw	ft2,28(sp)
  16:	646e                	flw	fs0,216(sp)
  18:	3834                	fld	fa3,112(s0)
  1a:	5f00                	lw	s0,56(a4)
  1c:	6d65                	lui	s10,0x19
  1e:	7265                	lui	tp,0xffff9
  20:	636e6567          	0x636e6567
  24:	0079                	c.nop	30
  26:	615f 7365 655f      	0x655f7365615f
  2c:	636e                	flw	ft6,216(sp)
  2e:	7972                	flw	fs2,60(sp)
  30:	7470                	flw	fa2,108(s0)
  32:	745f 6261 656c      	0x656c6261745f
  38:	5f00                	lw	s0,56(a4)
  3a:	755f 6e69 3874      	0x38746e69755f
  40:	745f 5f00 6164      	0x61645f00745f
  46:	6174                	flw	fa3,68(a0)
  48:	5f00                	lw	s0,56(a4)
  4a:	74726377          	0x74726377
  4e:	5f626d6f          	jal	s10,26644 <_stack_start+0x16644>
  52:	74617473          	csrrci	s0,0x746,2
  56:	0065                	c.nop	25
  58:	775f 7363 7472      	0x74727363775f
  5e:	73626d6f          	jal	s10,26794 <_stack_start+0x16794>
  62:	735f 6174 6574      	0x65746174735f
  68:	6c00                	flw	fs0,24(s0)
  6a:	20676e6f          	jal	t3,76270 <_stack_start+0x66270>
  6e:	6f6c                	flw	fa1,92(a4)
  70:	676e                	flw	fa4,216(sp)
  72:	7520                	flw	fs0,104(a0)
  74:	736e                	flw	ft6,248(sp)
  76:	6769                	lui	a4,0x1a
  78:	656e                	flw	fa0,216(sp)
  7a:	2064                	fld	fs1,192(s0)
  jal x0, default_exc_handler
  7c:	6e69                	lui	t3,0x1a
  7e:	0074                	addi	a3,sp,12
  jal x0, reset_handler
  80:	6c5f 6662 6973      	0x697366626c5f
  jal x0, default_exc_handler
  86:	657a                	flw	fa0,156(sp)
  jal x0, default_exc_handler
  88:	5f00                	lw	s0,56(a4)
  8a:	6c5f 636f 6c61      	0x6c61636f6c5f
{
  90:	5f65                	li	t5,-7
  92:	0074                	addi	a3,sp,12
  assert_beebs (nk != 0);
  94:	616c                	flw	fa1,68(a0)
  96:	656b7473          	csrrci	s0,0x656,22
{
  9a:	0079                	c.nop	30
  assert_beebs (nk != 0);
  9c:	6d5f 7262 6f74      	0x6f7472626d5f
  lastkey = (AES_BLOCK_SIZE / 4) * (nr + 1);
  a2:	735f6377          	0x735f6377
  a6:	6174                	flw	fa3,68(a0)
  for (i = 0, rp = rcon; i < nk; i++)
  a8:	6574                	flw	fa3,76(a0)
  aa:	6d00                	flw	fs0,24(a0)
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
  ac:	6174                	flw	fa3,68(a0)
  ae:	6c62                	flw	fs8,24(sp)
  b0:	0065                	c.nop	25
  b2:	775f 7463 6d6f      	0x6d6f7463775f
  b8:	5f62                	lw	t5,56(sp)
  ba:	74617473          	csrrci	s0,0x746,2
  be:	0065                	c.nop	25
  c0:	5f5f 6d74 735f      	0x735f6d745f5f
  c6:	6365                	lui	t1,0x19
  c8:	6c00                	flw	fs0,24(s0)
  ca:	20676e6f          	jal	t3,762d0 <_stack_start+0x662d0>
  for (i = 0, rp = rcon; i < nk; i++)
  ce:	6f6c                	flw	fa1,92(a4)
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
  d0:	676e                	flw	fa4,216(sp)
  d2:	6920                	flw	fs0,80(a0)
  d4:	746e                	flw	fs0,248(sp)
  d6:	7200                	flw	fs0,32(a2)
  d8:	006e6f63          	bltu	t3,t1,f6 <_aes_set_key+0x6a>
  dc:	755f 7562 0066      	0x667562755f
  e2:	625f 7361 0065      	0x657361625f
  for (i = 0, rp = rcon; i < nk; i++)
  e8:	5f5f 6d74 685f      	0x685f6d745f5f
  ee:	0072756f          	jal	a0,278f4 <_stack_start+0x178f4>
  f2:	5f5f 6673 5f00      	0x5f0066735f5f
  f8:	655f6e6f          	jal	t3,f6f4c <_stack_start+0xe6f4c>
  fc:	6978                	flw	fa4,84(a0)
  fe:	5f74                	lw	a3,124(a4)
 100:	7261                	lui	tp,0xffff8
 102:	5f007367          	0x5f007367
 106:	6b6f6f63          	bltu	t5,s6,7c4 <_nettle_aes_encrypt+0x3ac>
      else if (nk > 6 && (i % nk) == 4)
 10a:	6569                	lui	a0,0x1a
 10c:	5f00                	lw	s0,56(a4)
 10e:	735f 6c67 6575      	0x65756c67735f
	t = SUBBYTE (t, aes_sbox);
 114:	5f00                	lw	s0,56(a4)
 116:	6c66                	flw	fs8,88(sp)
  for (i = nk; i < lastkey; i++)
 118:	6761                	lui	a4,0x18
 11a:	695f0073          	0x695f0073
 11e:	78635f73          	csrrwi	t5,0x786,6
      if (i % nk == 0)
 122:	0061                	c.nop	24
      t = subkeys[i - 1];
 124:	735f 6474 6e69      	0x6e696474735f
      if (i % nk == 0)
 12a:	5f00                	lw	s0,56(a4)
	t = SUBBYTE (ROTL32 (24, t), aes_sbox) ^ *rp++;
 12c:	6561                	lui	a0,0x18
 12e:	65645f73          	csrrwi	t5,0x656,8
 132:	70797263          	bgeu	s2,t2,836 <_nettle_aes_encrypt+0x41e>
 136:	5f74                	lw	a3,124(a4)
 138:	6174                	flw	fa3,68(a0)
 13a:	6c62                	flw	fs8,24(sp)
 13c:	0065                	c.nop	25
 13e:	625f 6b6c 6973      	0x69736b6c625f
 144:	657a                	flw	fa0,156(sp)
 146:	6200                	flw	fs0,0(a2)
 148:	6e65                	lui	t3,0x19
 14a:	616d6863          	bltu	s10,s6,75a <_nettle_aes_encrypt+0x342>
 14e:	6b72                	flw	fs6,28(sp)
 150:	625f 646f 0079      	0x79646f625f
 156:	6b627573          	csrrci	a0,0x6b6,4
 15a:	7965                	lui	s2,0xffff9
 15c:	62730073          	0x62730073
 160:	5f00786f          	jal	a6,7750 <_bss_end+0x3158>
 164:	62747663          	bgeu	s0,t2,790 <_nettle_aes_encrypt+0x378>
 168:	6675                	lui	a2,0x1d
 16a:	5f00                	lw	s0,56(a4)
 16c:	7366666f          	jal	a2,668a2 <_stack_start+0x568a2>
 170:	7465                	lui	s0,0xffff9
 172:	5f00                	lw	s0,56(a4)
 174:	626d                	lui	tp,0x1b
 176:	6f747273          	csrrci	tp,0x6f7,8
 17a:	5f736377          	0x5f736377
 17e:	74617473          	csrrci	s0,0x746,2
 182:	0065                	c.nop	25
 184:	6d5f 7262 656c      	0x656c72626d5f
 18a:	5f6e                	lw	t5,248(sp)
 18c:	74617473          	csrrci	s0,0x746,2
 190:	0065                	c.nop	25
 192:	665f 616e 6772      	0x6772616e665f
      subkeys[i] = subkeys[i - nk] ^ t;
 198:	665f0073          	0x665f0073
  for (i = nk; i < lastkey; i++)
 19c:	736e                	flw	ft6,248(sp)
 19e:	5f00                	lw	s0,56(a4)
 1a0:	755f 6e69 3374      	0x33746e69755f
      subkeys[i] = subkeys[i - nk] ^ t;
 1a6:	5f32                	lw	t5,44(sp)
 1a8:	0074                	addi	a3,sp,12
 1aa:	735f 6769 006e      	0x6e6769735f
      else if (nk > 6 && (i % nk) == 4)
 1b0:	665f 6f6c 6b63      	0x6b636f6c665f
 1b6:	745f 5f00 7473      	0x74735f00745f
	t = SUBBYTE (t, aes_sbox);
 1bc:	6564                	flw	fs1,76(a0)
 1be:	7272                	flw	ft4,60(sp)
 1c0:	5f00                	lw	s0,56(a4)
 1c2:	6942                	flw	fs2,16(sp)
 1c4:	746e6967          	0x746e6967
 1c8:	5f00                	lw	s0,56(a4)
 1ca:	6d6d6167          	0x6d6d6167
 1ce:	5f61                	li	t5,-8
 1d0:	6e676973          	csrrsi	s2,0x6e6,14
 1d4:	006d6167          	0x6d6167
 1d8:	725f 6165 0064      	0x646165725f
 1de:	725f 7365 6c75      	0x6c757365725f
 1e4:	5f74                	lw	a3,124(a4)
 1e6:	5f5f006b          	0x5f5f006b
 1ea:	6d74                	flw	fa3,92(a0)
 1ec:	5f00                	lw	s0,56(a4)
 1ee:	775f 6863 0062      	0x626863775f
 1f4:	735f 6474 756f      	0x756f6474735f
 1fa:	0074                	addi	a3,sp,12
 1fc:	635f 7476 656c      	0x656c7476635f
 202:	006e                	c.slli	zero,0x1b
 204:	6e5f 7465 6c74      	0x6c7474656e5f
 20a:	5f65                	li	t5,-7
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
 20c:	6561                	lui	a0,0x18
 20e:	65645f73          	csrrwi	t5,0x656,8
 212:	70797263          	bgeu	s2,t2,916 <_nettle_aes_decrypt+0x56>
 216:	0074                	addi	a3,sp,12
{
 218:	7379656b          	0x7379656b
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
 21c:	7a69                	lui	s4,0xffffa
 21e:	0065                	c.nop	25
{
 220:	665f 6c69 0065      	0x656c69665f
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
 226:	6561                	lui	a0,0x18
  if (keysize == AES256_KEY_SIZE)
 228:	6e695f73          	csrrwi	t5,0x6e6,18
 22c:	6576                	flw	fa0,92(sp)
 22e:	7472                	flw	fs0,60(sp)
 230:	6b5f 7965 5f00      	0x5f0079656b5f
  else if (keysize >= AES192_KEY_SIZE)
 236:	7a697373          	csrrci	t1,0x7a6,18
 23a:	5f65                	li	t5,-7
      nr = _AES128_ROUNDS;
 23c:	0074                	addi	a3,sp,12
 23e:	6e5f 6f69 7362      	0x73626f696e5f
  ctx->rounds = nr;
 244:	7300                	flw	fs0,32(a4)
 246:	6f68                	flw	fa0,92(a4)
  _aes_set_key (nr, nk, ctx->keys, key);
 248:	7472                	flw	fs0,60(sp)
 24a:	7520                	flw	fs0,104(a0)
 24c:	736e                	flw	ft6,248(sp)
 24e:	6769                	lui	a4,0x1a
 250:	656e                	flw	fa0,216(sp)
 252:	2064                	fld	fs1,192(s0)
      nr = _AES256_ROUNDS;
 254:	6e69                	lui	t3,0x1a
 256:	0074                	addi	a3,sp,12
      nk = 8;
 258:	615f 6574 6978      	0x69786574615f
 25e:	3074                	fld	fa3,224(s0)
      nr = _AES192_ROUNDS;
 260:	6500                	flw	fs0,8(a0)
 262:	636e                	flw	ft6,216(sp)
      nk = 6;
 264:	7972                	flw	fs2,60(sp)
 266:	7470                	flw	fa2,108(s0)
 268:	6465                	lui	s0,0x19
 26a:	5f00                	lw	s0,56(a4)
  if (src == dst)
 26c:	6e676973          	csrrsi	s2,0x6e6,14
 270:	6c61                	lui	s8,0x18
 272:	625f 6675 5f00      	0x5f006675625f
 278:	7361                	lui	t1,0xffff8
 27a:	6d697463          	bgeu	s2,s6,942 <_nettle_aes_decrypt+0x82>
 27e:	5f65                	li	t5,-7
      for (i = 0; i <= rounds * 4; i += 4)
 280:	7562                	flw	fa0,56(sp)
 282:	0066                	c.slli	zero,0x19
	for (k = 0; k < 4; k++)
 284:	725f 7365 6c75      	0x6c757365725f
      for (i = 0; i <= rounds * 4; i += 4)
 28a:	0074                	addi	a3,sp,12
 28c:	5f5f 6377 0068      	0x6863775f5f
	  dst[i + k] = src[rounds * 4 - i + k];
 292:	746e6977          	0x746e6977
 296:	745f 5f00 6f6c      	0x6f6c5f00745f
 29c:	5f006b63          	bltu	zero,a6,892 <_nettle_aes_encrypt+0x47a>
 2a0:	6c66                	flw	fs8,88(sp)
 2a2:	6761                	lui	a4,0x18
	for (k = 0; k < 4; k++)
 2a4:	5f003273          	csrrc	tp,0x5f0,zero
      for (i = 0; i <= rounds * 4; i += 4)
 2a8:	74697277          	0x74697277
 2ac:	0065                	c.nop	25
 2ae:	5f5f 6d74 795f      	0x795f6d745f5f
 2b4:	6165                	addi	sp,sp,112
 2b6:	0072                	c.slli	zero,0x1c
 2b8:	6e5f 616d 6c6c      	0x6c6c616d6e5f
  if (src == dst)
 2be:	6c00636f          	jal	t1,697e <_bss_end+0x2386>
 2c2:	20676e6f          	jal	t3,764c8 <_stack_start+0x664c8>
	for (k = 0; k < 4; k++)
 2c6:	6f64                	flw	fs1,92(a4)
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
 2c8:	6275                	lui	tp,0x1d
 2ca:	656c                	flw	fa1,76(a0)
 2cc:	7000                	flw	fs0,32(s0)
 2ce:	616c                	flw	fa1,68(a0)
 2d0:	6e69                	lui	t3,0x1a
 2d2:	6574                	flw	fa3,76(a0)
      for (i = 0; i <= rounds * 4; i += 4)
 2d4:	7478                	flw	fa4,108(s0)
 2d6:	5f00                	lw	s0,56(a4)
    MIX_COLUMN (mtable, dst[i]);
 2d8:	656e                	flw	fa0,216(sp)
 2da:	7478                	flw	fa4,108(s0)
 2dc:	0066                	c.slli	zero,0x19
 2de:	6564                	flw	fs1,76(a0)
  for (i = 4; i < 4 * rounds; i++)
 2e0:	78746363          	bltu	s0,t2,a66 <_nettle_aes_decrypt+0x1a6>
}
 2e4:	5f00                	lw	s0,56(a4)
 2e6:	745f 5f6d 6f6d      	0x6f6d5f6d745f
 2ec:	006e                	c.slli	zero,0x1b
 2ee:	615f 6574 6978      	0x69786574615f
	for (k = 0; k < 4; k++)
 2f4:	0074                	addi	a3,sp,12
 2f6:	6f627573          	csrrci	a0,0x6f6,4
	  SWAP (dst[i + k], dst[j + k]);
 2fa:	7470                	flw	fa2,108(s0)
 2fc:	7261                	lui	tp,0xffff8
 2fe:	5f5f0067          	jr	1525(t5) # 1a5f5 <_stack_start+0xa5f5>
	for (k = 0; k < 4; k++)
 302:	64696473          	csrrsi	s0,0x646,18
	  SWAP (dst[i + k], dst[j + k]);
 306:	6e69                	lui	t3,0x1a
 308:	7469                	lui	s0,0xffffa
 30a:	5f00                	lw	s0,56(a4)
 30c:	5f66666f          	jal	a2,66902 <_stack_start+0x56902>
 310:	0074                	addi	a3,sp,12
 312:	6e5f 7465 6c74      	0x6c7474656e5f
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
 318:	5f65                	li	t5,-7
 31a:	6561                	lui	a0,0x18
 31c:	6e655f73          	csrrwi	t5,0x6e6,10
 320:	70797263          	bgeu	s2,t2,a24 <_nettle_aes_decrypt+0x164>
    MIX_COLUMN (mtable, dst[i]);
 324:	0074                	addi	a3,sp,12
 326:	665f 6572 6c65      	0x6c656572665f
  for (i = 4; i < 4 * rounds; i++)
 32c:	7369                	lui	t1,0xffffa
 32e:	0074                	addi	a3,sp,12
    MIX_COLUMN (mtable, dst[i]);
 330:	4c5f 434f 5f4b      	0x5f4b434f4c5f
 336:	4552                	lw	a0,20(sp)
 338:	53525543          	fmadd.d	fa0,ft4,fs5,fa0,unknown
 33c:	5649                	li	a2,-14
 33e:	5f45                	li	t5,-15
 340:	0054                	addi	a3,sp,4
 342:	5f74                	lw	a3,124(a4)
 344:	70617773          	csrrci	a4,0x706,2
 348:	6100                	flw	fs0,0(a0)
 34a:	7365                	lui	t1,0xffff9
 34c:	745f 6261 656c      	0x656c6261745f
 352:	7700                	flw	fs0,40(a4)
 354:	7261                	lui	tp,0xffff8
 356:	5f6d                	li	t5,-5
 358:	68636163          	bltu	t1,t1,9da <_nettle_aes_decrypt+0x11a>
 35c:	7365                	lui	t1,0xffff9
 35e:	5f00                	lw	s0,56(a4)
 360:	6f42                	flw	ft10,16(sp)
 362:	75006c6f          	jal	s8,6ab2 <_bss_end+0x24ba>
 366:	736e                	flw	ft6,248(sp)
 368:	6769                	lui	a4,0x1a
 36a:	656e                	flw	fa0,216(sp)
 36c:	2064                	fld	fs1,192(s0)
 36e:	72616863          	bltu	sp,t1,a9e <_nettle_aes_decrypt+0x1de>
 372:	5f00                	lw	s0,56(a4)
 374:	656e                	flw	fa0,216(sp)
 376:	65610077          	0x65610077
 37a:	65735f73          	csrrwi	t5,0x657,6
 37e:	5f74                	lw	a3,124(a4)
 380:	6e65                	lui	t3,0x19
 382:	70797263          	bgeu	s2,t2,a86 <_nettle_aes_decrypt+0x1c6>
 386:	5f74                	lw	a3,124(a4)
 388:	0079656b          	0x79656b
 38c:	685f 655f 7272      	0x7272655f685f
 392:	6f6e                	flw	ft10,216(sp)
 394:	7300                	flw	fs0,32(a4)
 396:	6f68                	flw	fa0,92(a4)
 398:	7472                	flw	fs0,60(sp)
 39a:	6920                	flw	fs0,80(a0)
 39c:	746e                	flw	fs0,248(sp)
 39e:	5f00                	lw	s0,56(a4)
 3a0:	745f 5f6d 6479      	0x64795f6d745f
 3a6:	7961                	lui	s2,0xffff8
{
 3a8:	5f00                	lw	s0,56(a4)
 3aa:	735f 7562 0066      	0x667562735f
 3b0:	695f 626f 0073      	0x73626f695f
 3b6:	5f5f 4946 454c      	0x454c49465f5f
 3bc:	5f00                	lw	s0,56(a4)
 3be:	626d                	lui	tp,0x1b
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
 3c0:	74617473          	csrrci	s0,0x746,2
 3c4:	5f65                	li	t5,-7
 3c6:	0074                	addi	a3,sp,12
{
 3c8:	5f5f 4673 4c49      	0x4c4946735f5f
  _nettle_aes_invert (src->rounds, dst->keys, src->keys);
 3ce:	0045                	c.nop	17
  dst->rounds = src->rounds;
 3d0:	6d5f 7362 6174      	0x617473626d5f
}
 3d6:	6574                	flw	fa3,76(a0)
 3d8:	5f00                	lw	s0,56(a4)
 3da:	6172                	flw	ft2,28(sp)
  dst->rounds = src->rounds;
 3dc:	646e                	flw	fs0,216(sp)
 3de:	6e5f 7865 0074      	0x7478656e5f
}
 3e4:	7865                	lui	a6,0xffff9
 3e6:	6570                	flw	fa2,76(a0)
 3e8:	64657463          	bgeu	a0,t1,a30 <_nettle_aes_decrypt+0x170>
{
 3ec:	5f00                	lw	s0,56(a4)
 3ee:	626d                	lui	tp,0x1b
 3f0:	656c                	flw	fa1,76(a0)
 3f2:	5f6e                	lw	t5,248(sp)
 3f4:	74617473          	csrrci	s0,0x746,2
 3f8:	0065                	c.nop	25
 3fa:	695f 636e 5f00      	0x5f00636e695f
  aes_invert_key (ctx, ctx);
 400:	6e69                	lui	t3,0x1a
 402:	0064                	addi	s1,sp,12
 404:	6c5f 636f 6c61      	0x6c61636f6c5f
}
 40a:	0065                	c.nop	25
 40c:	5f5f 6c63 6165      	0x61656c635f5f
 412:	756e                	flw	fa0,248(sp)
  aes_invert_key (ctx, ctx);
 414:	0070                	addi	a2,sp,12
 416:	755f 736e 6570      	0x6570736e755f
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
 41c:	69666963          	bltu	a2,s6,aae <_nettle_aes_decrypt+0x1ee>
 420:	6465                	lui	s0,0x19
 422:	6c5f 636f 6c61      	0x6c61636f6c5f
{
 428:	5f65                	li	t5,-7
 42a:	6e69                	lui	t3,0x1a
 42c:	6f66                	flw	ft10,88(sp)
 42e:	5f00                	lw	s0,56(a4)
 430:	616d                	addi	sp,sp,240
 432:	7778                	flw	fa4,108(a4)
 434:	7364                	flw	fs1,100(a4)
 436:	5f00                	lw	s0,56(a4)
 438:	6572                	flw	fa0,28(sp)
 43a:	6e65                	lui	t3,0x19
 43c:	0074                	addi	a3,sp,12
 43e:	6e5f 7465 6c74      	0x6c7474656e5f
 444:	5f65                	li	t5,-7
 446:	6561                	lui	a0,0x18
 448:	6e695f73          	csrrwi	t5,0x6e6,18
 44c:	6576                	flw	fa0,92(sp)
 44e:	7472                	flw	fs0,60(sp)
 450:	5f00                	lw	s0,56(a4)
 452:	635f 756f 746e      	0x746e756f635f
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
 458:	5f00                	lw	s0,56(a4)
 45a:	6b656573          	csrrsi	a0,0x6b6,10
 45e:	5f00                	lw	s0,56(a4)
 460:	7066                	flw	ft0,120(sp)
 462:	745f736f          	jal	t1,f83a6 <_stack_start+0xe83a6>
 466:	2f00                	fld	fs0,24(a4)
    w0 = LE_READ_UINT32 (src) ^ keys[0];
 468:	6f68                	flw	fa0,92(a4)
 46a:	656d                	lui	a0,0x1b
 46c:	2f43432f          	0x2f43432f
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
 470:	6262                	flw	ft4,24(sp)
 472:	7565                	lui	a0,0xffff9
    w0 = LE_READ_UINT32 (src) ^ keys[0];
 474:	72657473          	csrrci	s0,0x726,10
 478:	6f72502f          	0x6f72502f
 47c:	656a                	flw	fa0,152(sp)
 47e:	2f737463          	bgeu	t1,s7,766 <_nettle_aes_encrypt+0x34e>
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
 482:	68746967          	0x68746967
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
 486:	6275                	lui	tp,0x1d
    w0 = LE_READ_UINT32 (src) ^ keys[0];
 488:	632e                	flw	ft6,200(sp)
 48a:	702f6d6f          	jal	s10,f6b8c <_stack_start+0xe6b8c>
 48e:	6962                	flw	fs2,24(sp)
 490:	676e                	flw	fa4,216(sp)
 492:	6562692f          	0x6562692f
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
 496:	5f78                	lw	a4,124(a4)
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
 498:	732f6277          	0x732f6277
    w0 = LE_READ_UINT32 (src) ^ keys[0];
 49c:	656e2f77          	0x656e2f77
 4a0:	7474                	flw	fa3,108(s0)
 4a2:	656c                	flw	fa1,76(a0)
 4a4:	612d                	addi	sp,sp,224
 4a6:	7365                	lui	t1,0xffff9
 4a8:	6800                	flw	fs0,16(s0)
 4aa:	6165                	addi	sp,sp,112
    for (i = 1; i < rounds; i++)
 4ac:	0074                	addi	a3,sp,12
 4ae:	5f5f 6d74 6d5f      	0x6d5f6d745f5f
    w1 = LE_READ_UINT32 (src + 4) ^ keys[1];
 4b4:	6e69                	lui	t3,0x1a
 4b6:	5f00                	lw	s0,56(a4)
 4b8:	6561                	lui	a0,0x18
 4ba:	65735f73          	csrrwi	t5,0x657,6
 4be:	5f74                	lw	a3,124(a4)
 4c0:	0079656b          	0x79656b
 4c4:	72726f63          	bltu	tp,t2,c02 <_nettle_aes_decrypt+0x342>
 4c8:	6365                	lui	t1,0x19
 4ca:	0074                	addi	a3,sp,12
 4cc:	6d5f 6c75 0074      	0x746c756d5f
 4d2:	735f 7274 6f74      	0x6f747274735f
 4d8:	616c5f6b          	0x616c5f6b
    w2 = LE_READ_UINT32 (src + 8) ^ keys[2];
 4dc:	5f007473          	csrrci	s0,0x5f0,0
 4e0:	765f 6c61 6575      	0x65756c61765f
 4e6:	5f00                	lw	s0,56(a4)
 4e8:	6e66                	flw	ft8,88(sp)
 4ea:	7974                	flw	fa3,116(a0)
 4ec:	6570                	flw	fa2,76(a0)
 4ee:	615f0073          	0x615f0073
 4f2:	6464                	flw	fs1,76(s0)
 4f4:	5f00                	lw	s0,56(a4)
 4f6:	555f 6f4c 676e      	0x676e6f4c555f
 4fc:	5f00                	lw	s0,56(a4)
 4fe:	64746567          	0x64746567
 502:	7461                	lui	s0,0xffff8
    w3 = LE_READ_UINT32 (src + 12) ^ keys[3];
 504:	5f65                	li	t5,-7
 506:	7265                	lui	tp,0xffff9
 508:	0072                	c.slli	zero,0x1c
 50a:	20554e47          	fmsub.s	ft8,fa0,ft5,ft4,rmm
 50e:	20373143          	fmadd.s	ft2,fa4,ft3,ft4,rup
 512:	2e38                	fld	fa4,88(a2)
 514:	20302e33          	0x20302e33
 518:	6d2d                	lui	s10,0xb
 51a:	7261                	lui	tp,0xffff8
 51c:	723d6863          	bltu	s10,gp,c4c <_nettle_aes_decrypt+0x38c>
 520:	3376                	fld	ft6,376(sp)
 522:	6932                	flw	fs2,12(sp)
 524:	206d                	jal	5ce <_nettle_aes_encrypt+0x1b6>
 526:	6d2d                	lui	s10,0xb
 528:	6261                	lui	tp,0x18
 52a:	3d69                	jal	3c4 <aes_invert_key+0x1c>
 52c:	6c69                	lui	s8,0x1a
 52e:	3370                	fld	fa2,224(a4)
    for (i = 1; i < rounds; i++)
 530:	2032                	fld	ft0,264(sp)
 532:	6d2d                	lui	s10,0xb
 534:	646f6d63          	bltu	t5,t1,b8e <_nettle_aes_decrypt+0x2ce>
 538:	6c65                	lui	s8,0x19
 53a:	6d3d                	lui	s10,0xf
 53c:	6465                	lui	s0,0x19
 53e:	6e61                	lui	t3,0x18
 540:	2079                	jal	5ce <_nettle_aes_encrypt+0x1b6>
 542:	672d                	lui	a4,0xb
 544:	2d20                	fld	fs0,88(a0)
 546:	2d20734f          	0x2d20734f
 54a:	7666                	flw	fa2,120(sp)
 54c:	7369                	lui	t1,0xffffa
 54e:	6269                	lui	tp,0x1a
 550:	6c69                	lui	s8,0x1a
 552:	7469                	lui	s0,0xffffa
 554:	3d79                	jal	3f2 <aes_set_decrypt_key+0x6>
 556:	6968                	flw	fa0,84(a0)
 558:	6464                	flw	fs1,76(s0)
 55a:	6e65                	lui	t3,0x19
 55c:	5f00                	lw	s0,56(a4)
 55e:	626f6c67          	0x626f6c67
 562:	6c61                	lui	s8,0x18
 564:	695f 706d 7275      	0x7275706d695f
 56a:	5f65                	li	t5,-7
 56c:	7470                	flw	fa2,108(s0)
 56e:	0072                	c.slli	zero,0x1c
 570:	755f 756e 6573      	0x6573756e755f
 576:	5f64                	lw	s1,124(a4)
 578:	6172                	flw	ft2,28(sp)
 57a:	646e                	flw	fs0,216(sp)
 57c:	7600                	flw	fs0,40(a2)
 57e:	7265                	lui	tp,0xffff9
 580:	6669                	lui	a2,0x1a
 582:	5f79                	li	t5,-2
 584:	6562                	flw	fa0,24(sp)
 586:	636e                	flw	ft6,216(sp)
 588:	6d68                	flw	fa0,92(a0)
 58a:	7261                	lui	tp,0xffff8
 58c:	775f006b          	0x775f006b
 590:	7364                	flw	fs1,100(a4)
 592:	5f00                	lw	s0,56(a4)
 594:	745f 5f6d 6477      	0x64775f6d745f
 59a:	7961                	lui	s2,0xffff8
 59c:	5f00                	lw	s0,56(a4)
 59e:	65756c67          	0x65756c67
 5a2:	5f00                	lw	s0,56(a4)
 5a4:	366c                	fld	fa1,232(a2)
 5a6:	6134                	flw	fa3,64(a0)
 5a8:	625f 6675 5f00      	0x5f006675625f
 5ae:	5f676973          	csrrsi	s2,0x5f6,14
 5b2:	7566                	flw	fa0,120(sp)
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
 5b4:	636e                	flw	ft6,216(sp)
 5b6:	6100                	flw	fs0,0(a0)
 5b8:	7365                	lui	t1,0xffff9
 5ba:	735f 7465 645f      	0x645f7465735f
 5c0:	6365                	lui	t1,0x19
 5c2:	7972                	flw	fs2,60(sp)
 5c4:	7470                	flw	fa2,108(s0)
 5c6:	6b5f 7965 7200      	0x720079656b5f
 5cc:	646e756f          	jal	a0,e7c12 <_stack_start+0xd7c12>
 5d0:	6e650073          	0x6e650073
 5d4:	78746363          	bltu	s0,t2,d5a <_nettle_aes_decrypt+0x49a>
 5d8:	6e00                	flw	fs0,24(a2)
 5da:	7465                	lui	s0,0xffff9
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
 5dc:	6c74                	flw	fa3,92(s0)
 5de:	2d65                	jal	c96 <_nettle_aes_decrypt+0x3d6>
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
 5e0:	6561                	lui	a0,0x18
 5e2:	00632e73          	csrrs	t3,0x6,t1
 5e6:	6e5f 7562 0066      	0x6675626e5f
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
 5ec:	755f 756e 6573      	0x6573756e755f
    t0 = AES_FINAL_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
 5f2:	0064                	addi	s1,sp,12
 5f4:	5f5f 6d74 695f      	0x695f6d745f5f
 5fa:	74736473          	csrrsi	s0,0x747,6
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
 5fe:	5f00                	lw	s0,56(a4)
 600:	6f6c                	flw	fa1,92(a4)
 602:	746c6163          	bltu	s8,t1,d44 <_nettle_aes_decrypt+0x484>
 606:	6d69                	lui	s10,0x1a
 608:	5f65                	li	t5,-7
 60a:	7562                	flw	fa0,56(sp)
 60c:	0066                	c.slli	zero,0x19
 60e:	635f 6f6c 6573      	0x65736f6c635f
 614:	5f00                	lw	s0,56(a4)
 616:	3472                	fld	fs0,312(sp)
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
 618:	0038                	addi	a4,sp,8
 61a:	6d5f 7462 776f      	0x776f74626d5f
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
 620:	74735f63          	bge	t1,t2,d7e <aes_encrypt+0x16>
 624:	7461                	lui	s0,0xffff8
 626:	0065                	c.nop	25
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
 628:	705f 7335 6100      	0x61007335705f
 62e:	7365                	lui	t1,0xffff9
    t1 = AES_FINAL_ROUND (T, w1, w2, w3, w0, keys[4 * i + 1]);
 630:	635f 7874 6900      	0x69007874635f
 636:	696e                	flw	fs2,216(sp)
 638:	6974                	flw	fa3,84(a0)
 63a:	6c61                	lui	s8,0x18
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
 63c:	7369                	lui	t1,0xffffa
 63e:	5f65                	li	t5,-7
 640:	6562                	flw	fa0,24(sp)
 642:	636e                	flw	ft6,216(sp)
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
 644:	6d68                	flw	fa0,92(a0)
 646:	7261                	lui	tp,0xffff8
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
 648:	5f5f006b          	0x5f5f006b
 64c:	6d74                	flw	fa3,92(a0)
 64e:	6d5f 6164 0079      	0x7961646d5f
 654:	6564                	flw	fs1,76(a0)
 656:	70797263          	bgeu	s2,t2,d5a <_nettle_aes_decrypt+0x49a>
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
 65a:	6574                	flw	fa3,76(a0)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
 65c:	0064                	addi	s1,sp,12
 65e:	5f5f 7562 6c69      	0x6c6975625f5f
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
 664:	6974                	flw	fa3,84(a0)
 666:	5f6e                	lw	t5,248(sp)
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
 668:	656d                	lui	a0,0x1b
 66a:	736d                	lui	t1,0xffffb
    t2 = AES_FINAL_ROUND (T, w2, w3, w0, w1, keys[4 * i + 2]);
 66c:	7465                	lui	s0,0xffff9
 66e:	6800                	flw	fs0,16(s0)
 670:	6165                	addi	sp,sp,112
 672:	5f70                	lw	a2,124(a4)
 674:	657a6973          	csrrsi	s2,0x657,20
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
 678:	6e00                	flw	fs0,24(a2)
 67a:	7765                	lui	a4,0xffff9
 67c:	705f 7274 6300      	0x63007274705f
 682:	6568                	flw	fa0,76(a0)
 684:	685f6b63          	bltu	t5,t0,d1a <_nettle_aes_decrypt+0x45a>
 688:	6165                	addi	sp,sp,112
 68a:	5f70                	lw	a2,124(a4)
 68c:	6562                	flw	fa0,24(sp)
 68e:	6265                	lui	tp,0x19
 690:	6e690073          	0x6e690073
 694:	7469                	lui	s0,0xffffa
 696:	685f 6165 5f70      	0x5f706165685f
 69c:	6562                	flw	fa0,24(sp)
 69e:	6265                	lui	tp,0x19
 6a0:	65680073          	0x65680073
 6a4:	7061                	c.lui	zero,0xffff8
 6a6:	725f 7165 6575      	0x65757165725f
    LE_WRITE_UINT32 (dst + 4, t1);
 6ac:	64657473          	csrrci	s0,0x646,10
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
 6b0:	6800                	flw	fs0,16(s0)
 6b2:	6165                	addi	sp,sp,112
 6b4:	5f70                	lw	a2,124(a4)
 6b6:	7470                	flw	fa2,108(s0)
 6b8:	0072                	c.slli	zero,0x1c
 6ba:	656e                	flw	fa0,216(sp)
    LE_WRITE_UINT32 (dst + 8, t2);
 6bc:	65735f77          	0x65735f77
    t3 = AES_FINAL_ROUND (T, w3, w0, w1, w2, keys[4 * i + 3]);
 6c0:	6465                	lui	s0,0x19
 6c2:	7200                	flw	fs0,32(a2)
    LE_WRITE_UINT32 (dst, t0);
 6c4:	6165                	addi	sp,sp,112
 6c6:	6c6c                	flw	fa1,92(s0)
 6c8:	625f636f          	jal	t1,f74ec <_stack_start+0xe74ec>
 6cc:	6565                	lui	a0,0x19
 6ce:	7362                	flw	ft6,56(sp)
 6d0:	7300                	flw	fs0,32(a4)
 6d2:	6172                	flw	ft2,28(sp)
 6d4:	646e                	flw	fs0,216(sp)
 6d6:	625f 6565 7362      	0x73626565625f
    LE_WRITE_UINT32 (dst + 4, t1);
 6dc:	6300                	flw	fs0,0(a4)
 6de:	6c61                	lui	s8,0x18
 6e0:	6f6c                	flw	fa1,92(a4)
 6e2:	65625f63          	bge	tp,s6,d40 <_nettle_aes_decrypt+0x480>
 6e6:	6265                	lui	tp,0x19
 6e8:	616d0073          	0x616d0073
 6ec:	6c6c                	flw	fa1,92(s0)
 6ee:	625f636f          	jal	t1,f7512 <_stack_start+0xe7512>
 6f2:	6565                	lui	a0,0x19
    LE_WRITE_UINT32 (dst + 8, t2);
 6f4:	7362                	flw	ft6,56(sp)
 6f6:	6800                	flw	fs0,16(s0)
 6f8:	6165                	addi	sp,sp,112
 6fa:	5f70                	lw	a2,124(a4)
 6fc:	6e65                	lui	t3,0x19
 6fe:	0064                	addi	s1,sp,12
 700:	7266                	flw	ft4,120(sp)
 702:	6565                	lui	a0,0x19
 704:	625f 6565 7362      	0x73626565625f
 70a:	6200                	flw	fs0,0(a2)
    LE_WRITE_UINT32 (dst + 12, t3);
 70c:	6565                	lui	a0,0x19
 70e:	7362                	flw	ft6,56(sp)
 710:	00632e63          	0x632e63
 714:	6568                	flw	fa0,76(a0)
 716:	7061                	c.lui	zero,0xffff8
 718:	6e00                	flw	fs0,24(a2)
 71a:	656d                	lui	a0,0x1b
 71c:	626d                	lui	tp,0x1b
 71e:	7300                	flw	fs0,32(a4)
 720:	6f74                	flw	fa3,92(a4)
 722:	5f70                	lw	a2,124(a4)
 724:	7274                	flw	fa3,100(a2)
 726:	6769                	lui	a4,0x1a
  FOR_BLOCKS (length, dst, src, AES_BLOCK_SIZE)
 728:	00726567          	0x726567
 72c:	6f62                	flw	ft10,24(sp)
 72e:	7261                	lui	tp,0xffff8
}
 730:	2e64                	fld	fs1,216(a2)
 732:	74730063          	beq	t1,t2,e72 <benchmark_body+0x9a>
 736:	7261                	lui	tp,0xffff8
 738:	5f74                	lw	a3,124(a4)
 73a:	7274                	flw	fa3,100(a2)
 73c:	6769                	lui	a4,0x1a
 73e:	00726567          	0x726567
 742:	6e69                	lui	t3,0x1a
 744:	7469                	lui	s0,0xffffa
 746:	6169                	addi	sp,sp,208
 748:	696c                	flw	fa1,84(a0)
 74a:	625f6573          	csrrsi	a0,0x625,30
 74e:	6472616f          	jal	sp,27594 <_stack_start+0x17594>
 752:	6100                	flw	fs0,0(a0)
 754:	6772                	flw	fa4,28(sp)
 756:	0076                	c.slli	zero,0x1d
 758:	7261                	lui	tp,0xffff8
 75a:	6d006367          	0x6d006367
 75e:	6961                	lui	s2,0x18
 760:	2e6e                	fld	ft8,216(sp)
 762:	616d0063          	beq	s10,s6,d62 <_nettle_aes_decrypt+0x4a2>
 766:	6e69                	lui	t3,0x1a
 768:	6300                	flw	fs0,0(a4)
 76a:	7472                	flw	fs0,60(sp)
	t0 = AES_ROUND (T, w0, w1, w2, w3, keys[4 * i]);
 76c:	2e30                	fld	fa2,88(a2)
 76e:	4e470053          	0x4e470053
 772:	2055                	jal	816 <_nettle_aes_encrypt+0x3fe>
 774:	5341                	li	t1,-16
 776:	3220                	fld	fs0,96(a2)
 778:	332e                	fld	ft6,232(sp)
 77a:	0032                	c.slli	zero,0xc

Disassembly of section .comment:

00000000 <.comment>:
  .endr
   0:	3a434347          	fmsub.d	ft6,ft6,ft4,ft7,rmm
   4:	2820                	fld	fs0,80(s0)
   6:	69466953          	0x69466953
   a:	6576                	flw	fa0,92(sp)
   c:	4720                	lw	s0,72(a4)
   e:	38204343          	fmadd.s	ft6,ft0,ft2,ft7,rmm
  12:	332e                	fld	ft6,232(sp)
  14:	302e                	fld	ft0,232(sp)
  16:	322d                	jal	fffff940 <_stack_start+0xfffef940>
  18:	3130                	fld	fa2,96(a0)
  1a:	2e39                	jal	338 <_nettle_aes_invert+0xcc>
  1c:	3830                	fld	fa2,112(s0)
  1e:	302e                	fld	ft0,232(sp)
  20:	2029                	jal	2a <__DYNAMIC+0x2a>
  22:	2e38                	fld	fa4,88(a2)
  24:	00302e33          	sgtz	t3,gp

Disassembly of section .riscv.attributes:

00000000 <.riscv.attributes>:
   0:	2041                	jal	80 <__DYNAMIC+0x80>
   2:	0000                	unimp
   4:	7200                	flw	fs0,32(a2)
   6:	7369                	lui	t1,0xffffa
   8:	01007663          	bgeu	zero,a6,14 <__DYNAMIC+0x14>
   c:	0016                	c.slli	zero,0x5
   e:	0000                	unimp
  10:	1004                	addi	s1,sp,32
  12:	7205                	lui	tp,0xfffe1
  14:	3376                	fld	ft6,376(sp)
  16:	6932                	flw	fs2,12(sp)
  18:	7032                	flw	ft0,44(sp)
  1a:	5f30                	lw	a2,120(a4)
  1c:	326d                	jal	fffff9c6 <_stack_start+0xfffef9c6>
  1e:	3070                	fld	fa2,224(s0)
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	000c                	0xc
   2:	0000                	unimp
   4:	ffff                	0xffff
   6:	ffff                	0xffff
   8:	0001                	nop
   a:	7c01                	lui	s8,0xfffe0
   c:	0d01                	addi	s10,s10,0
   e:	0002                	c.slli64	zero
  10:	0018                	0x18
  12:	0000                	unimp
  14:	0000                	unimp
  16:	0000                	unimp
  18:	008c                	addi	a1,sp,64
  1a:	0000                	unimp
  1c:	0180                	addi	s0,sp,192
  1e:	0000                	unimp
  20:	0e48                	addi	a0,sp,788
  22:	4810                	lw	a2,16(s0)
  24:	0181                	addi	gp,gp,0
  26:	0e44                	addi	s1,sp,788
  28:	c100                	sw	s0,0(a0)
  2a:	0000                	unimp
  2c:	0018                	0x18
  2e:	0000                	unimp
  30:	0000                	unimp
  32:	0000                	unimp
  34:	020c                	addi	a1,sp,256
  36:	0000                	unimp
  38:	0060                	addi	s0,sp,12
  3a:	0000                	unimp
  3c:	0e50                	addi	a2,sp,788
  3e:	4810                	lw	a2,16(s0)
  40:	0181                	addi	gp,gp,0
  42:	0e44                	addi	s1,sp,788
  44:	c100                	sw	s0,0(a0)
  46:	0000                	unimp
  48:	000c                	0xc
  4a:	0000                	unimp
  4c:	0000                	unimp
  4e:	0000                	unimp
  50:	026c                	addi	a1,sp,268
  52:	0000                	unimp
  54:	013c                	addi	a5,sp,136
  56:	0000                	unimp
  58:	0024                	addi	s1,sp,8
  5a:	0000                	unimp
  5c:	0000                	unimp
  5e:	0000                	unimp
  60:	03a8                	addi	a0,sp,456
  62:	0000                	unimp
  64:	0044                	addi	s1,sp,4
  66:	0000                	unimp
  68:	0e44                	addi	s1,sp,788
  6a:	4410                	lw	a2,8(s0)
  6c:	0288                	addi	a0,sp,320
  6e:	894c                	0x894c
  70:	01815003          	lhu	zero,24(sp)
  74:	c14c                	sw	a1,4(a0)
  76:	c844                	sw	s1,20(s0)
  78:	c948                	sw	a0,20(a0)
  7a:	0e44                	addi	s1,sp,788
  jal x0, default_exc_handler
  7c:	0000                	unimp
  7e:	0000                	unimp
  jal x0, reset_handler
  80:	001c                	0x1c
  82:	0000                	unimp
  jal x0, default_exc_handler
  84:	0000                	unimp
  86:	0000                	unimp
  jal x0, default_exc_handler
  88:	03ec                	addi	a1,sp,460
  8a:	0000                	unimp
  assert_beebs (nk != 0);
  8c:	002c                	addi	a1,sp,8
  8e:	0000                	unimp
{
  90:	0e44                	addi	s1,sp,788
  92:	4810                	lw	a2,16(s0)
  assert_beebs (nk != 0);
  94:	0288                	addi	a0,sp,320
  96:	0181                	addi	gp,gp,0
{
  98:	c854                	sw	a3,20(s0)
  9a:	c144                	sw	s1,4(a0)
  assert_beebs (nk != 0);
  9c:	0e44                	addi	s1,sp,788
  9e:	0000                	unimp
  lastkey = (AES_BLOCK_SIZE / 4) * (nr + 1);
  a0:	004c                	addi	a1,sp,4
  a2:	0000                	unimp
  a4:	0000                	unimp
  a6:	0000                	unimp
  for (i = 0, rp = rcon; i < nk; i++)
  a8:	0418                	addi	a4,sp,512
  aa:	0000                	unimp
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
  ac:	04a8                	addi	a0,sp,584
  ae:	0000                	unimp
  b0:	0e44                	addi	s1,sp,788
  b2:	7c50                	flw	fa2,60(s0)
  b4:	0181                	addi	gp,gp,0
  b6:	0288                	addi	a0,sp,320
  b8:	0389                	addi	t2,t2,2
  ba:	0492                	slli	s1,s1,0x4
  bc:	06940593          	addi	a1,s0,105 # ffffa069 <_stack_start+0xfffea069>
  c0:	0795                	addi	a5,a5,5
  c2:	0896                	slli	a7,a7,0x5
  c4:	0a980997          	auipc	s3,0xa980
  c8:	0b99                	addi	s7,s7,6
  ca:	0c9a                	slli	s9,s9,0x6
  for (i = 0, rp = rcon; i < nk; i++)
  cc:	dc030d9b          	0xdc030d9b
    subkeys[i] = LE_READ_UINT32 (key + i * 4);
  d0:	0a02                	c.slli64	s4
  d2:	44c1                	li	s1,16
  d4:	44c8                	lw	a0,12(s1)
  d6:	44c9                	li	s1,18
  d8:	44d2                	lw	s1,20(sp)
  da:	44d444d3          	0x44d444d3
  de:	44d5                	li	s1,21
  e0:	44d6                	lw	s1,84(sp)
  e2:	44d844d7          	0x44d844d7
  e6:	44d9                	li	s1,22
  for (i = 0, rp = rcon; i < nk; i++)
  e8:	44da                	lw	s1,148(sp)
  ea:	000e44db          	0xe44db
  ee:	0b44                	addi	s1,sp,404
  f0:	004c                	addi	a1,sp,4
  f2:	0000                	unimp
  f4:	0000                	unimp
  f6:	0000                	unimp
  f8:	08c0                	addi	s0,sp,84
  fa:	0000                	unimp
  fc:	04a8                	addi	a0,sp,584
  fe:	0000                	unimp
 100:	0e44                	addi	s1,sp,788
 102:	7c50                	flw	fa2,60(s0)
 104:	0181                	addi	gp,gp,0
 106:	0288                	addi	a0,sp,320
      else if (nk > 6 && (i % nk) == 4)
 108:	0389                	addi	t2,t2,2
 10a:	0492                	slli	s1,s1,0x4
 10c:	06940593          	addi	a1,s0,105
	t = SUBBYTE (t, aes_sbox);
 110:	0795                	addi	a5,a5,5
 112:	0896                	slli	a7,a7,0x5
 114:	0a980997          	auipc	s3,0xa980
  for (i = nk; i < lastkey; i++)
 118:	0b99                	addi	s7,s7,6
 11a:	0c9a                	slli	s9,s9,0x6
 11c:	dc030d9b          	0xdc030d9b
      if (i % nk == 0)
 120:	0a02                	c.slli64	s4
 122:	44c1                	li	s1,16
      t = subkeys[i - 1];
 124:	44c8                	lw	a0,12(s1)
 126:	44c9                	li	s1,18
      if (i % nk == 0)
 128:	44d2                	lw	s1,20(sp)
 12a:	44d444d3          	0x44d444d3
	t = SUBBYTE (ROTL32 (24, t), aes_sbox) ^ *rp++;
 12e:	44d5                	li	s1,21
 130:	44d6                	lw	s1,84(sp)
 132:	44d844d7          	0x44d844d7
 136:	44d9                	li	s1,22
 138:	44da                	lw	s1,148(sp)
 13a:	000e44db          	0xe44db
 13e:	0b44                	addi	s1,sp,404
 140:	0018                	0x18
 142:	0000                	unimp
 144:	0000                	unimp
 146:	0000                	unimp
 148:	0d68                	addi	a0,sp,668
 14a:	0000                	unimp
 14c:	0038                	addi	a4,sp,8
 14e:	0000                	unimp
 150:	0e50                	addi	a2,sp,788
 152:	4810                	lw	a2,16(s0)
 154:	0181                	addi	gp,gp,0
 156:	0e44                	addi	s1,sp,788
 158:	c100                	sw	s0,0(a0)
 15a:	0000                	unimp
 15c:	0018                	0x18
 15e:	0000                	unimp
 160:	0000                	unimp
 162:	0000                	unimp
 164:	0da0                	addi	s0,sp,728
 166:	0000                	unimp
 168:	0038                	addi	a4,sp,8
 16a:	0000                	unimp
 16c:	0e50                	addi	a2,sp,788
 16e:	4810                	lw	a2,16(s0)
 170:	0181                	addi	gp,gp,0
 172:	0e44                	addi	s1,sp,788
 174:	c100                	sw	s0,0(a0)
 176:	0000                	unimp
 178:	003c                	addi	a5,sp,8
 17a:	0000                	unimp
 17c:	0000                	unimp
 17e:	0000                	unimp
 180:	0dd8                	addi	a4,sp,724
 182:	0000                	unimp
 184:	00e4                	addi	s1,sp,76
 186:	0000                	unimp
 188:	0e44                	addi	s1,sp,788
 18a:	6430                	flw	fa2,72(s0)
 18c:	0288                	addi	a0,sp,320
 18e:	0389                	addi	t2,t2,2
 190:	0492                	slli	s1,s1,0x4
 192:	06940593          	addi	a1,s0,105
      subkeys[i] = subkeys[i - nk] ^ t;
 196:	0795                	addi	a5,a5,5
 198:	0896                	slli	a7,a7,0x5
 19a:	01810997          	auipc	s3,0x1810
  for (i = nk; i < lastkey; i++)
 19e:	4002                	0x4002
 1a0:	c10a                	sw	sp,128(sp)
 1a2:	c844                	sw	s1,20(s0)
      subkeys[i] = subkeys[i - nk] ^ t;
 1a4:	c944                	sw	s1,20(a0)
 1a6:	d244                	sw	s1,36(a2)
 1a8:	d344                	sw	s1,36(a4)
 1aa:	d444                	sw	s1,44(s0)
 1ac:	d544                	sw	s1,44(a0)
 1ae:	d644                	sw	s1,44(a2)
      else if (nk > 6 && (i % nk) == 4)
 1b0:	d744                	sw	s1,44(a4)
 1b2:	0e48                	addi	a0,sp,788
 1b4:	4400                	lw	s0,8(s0)
 1b6:	000c000b          	0xc000b
	t = SUBBYTE (t, aes_sbox);
 1ba:	0000                	unimp
 1bc:	0000                	unimp
 1be:	0000                	unimp
 1c0:	0ebc                	addi	a5,sp,856
 1c2:	0000                	unimp
 1c4:	0068                	addi	a0,sp,12
 1c6:	0000                	unimp
 1c8:	000c                	0xc
 1ca:	0000                	unimp
 1cc:	0000                	unimp
 1ce:	0000                	unimp
 1d0:	0f24                	addi	s1,sp,920
 1d2:	0000                	unimp
 1d4:	0004                	0x4
 1d6:	0000                	unimp
 1d8:	000c                	0xc
 1da:	0000                	unimp
 1dc:	0000                	unimp
 1de:	0000                	unimp
 1e0:	0f28                	addi	a0,sp,920
 1e2:	0000                	unimp
 1e4:	0004                	0x4
 1e6:	0000                	unimp
 1e8:	000c                	0xc
 1ea:	0000                	unimp
 1ec:	0000                	unimp
 1ee:	0000                	unimp
 1f0:	0f2c                	addi	a1,sp,920
 1f2:	0000                	unimp
 1f4:	0008                	0x8
 1f6:	0000                	unimp
 1f8:	000c                	0xc
 1fa:	0000                	unimp
 1fc:	ffff                	0xffff
 1fe:	ffff                	0xffff
 200:	0001                	nop
 202:	7c01                	lui	s8,0xfffe0
 204:	0d01                	addi	s10,s10,0
 206:	0002                	c.slli64	zero
 208:	000c                	0xc
 20a:	0000                	unimp
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
 20c:	01f8                	addi	a4,sp,204
 20e:	0000                	unimp
 210:	0f34                	addi	a3,sp,920
 212:	0000                	unimp
 214:	0038                	addi	a4,sp,8
 216:	0000                	unimp
{
 218:	000c                	0xc
 21a:	0000                	unimp
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
 21c:	01f8                	addi	a4,sp,204
 21e:	0000                	unimp
{
 220:	0f6c                	addi	a1,sp,924
 222:	0000                	unimp
  assert_beebs (keysize >= AES_MIN_KEY_SIZE);
 224:	000c                	0xc
 226:	0000                	unimp
  if (keysize == AES256_KEY_SIZE)
 228:	000c                	0xc
 22a:	0000                	unimp
 22c:	01f8                	addi	a4,sp,204
 22e:	0000                	unimp
 230:	0f78                	addi	a4,sp,924
 232:	0000                	unimp
  else if (keysize >= AES192_KEY_SIZE)
 234:	0020                	addi	s0,sp,8
 236:	0000                	unimp
 238:	000c                	0xc
 23a:	0000                	unimp
      nr = _AES128_ROUNDS;
 23c:	01f8                	addi	a4,sp,204
 23e:	0000                	unimp
      nk = 4;
 240:	0f98                	addi	a4,sp,976
 242:	0000                	unimp
  ctx->rounds = nr;
 244:	0028                	addi	a0,sp,8
 246:	0000                	unimp
  _aes_set_key (nr, nk, ctx->keys, key);
 248:	000c                	0xc
 24a:	0000                	unimp
 24c:	01f8                	addi	a4,sp,204
 24e:	0000                	unimp
 250:	0fc0                	addi	s0,sp,980
 252:	0000                	unimp
      nr = _AES256_ROUNDS;
 254:	0054                	addi	a3,sp,4
 256:	0000                	unimp
      nk = 8;
 258:	001c                	0x1c
 25a:	0000                	unimp
 25c:	01f8                	addi	a4,sp,204
 25e:	0000                	unimp
      nr = _AES192_ROUNDS;
 260:	1014                	addi	a3,sp,32
 262:	0000                	unimp
      nk = 6;
 264:	0044                	addi	s1,sp,4
 266:	0000                	unimp
 268:	0e48                	addi	a0,sp,788
 26a:	4820                	lw	s0,80(s0)
  if (src == dst)
 26c:	0288                	addi	a0,sp,320
 26e:	0181                	addi	gp,gp,0
 270:	c168                	sw	a0,68(a0)
 272:	c844                	sw	s1,20(s0)
 274:	0e44                	addi	s1,sp,788
 276:	0000                	unimp
 278:	000c                	0xc
 27a:	0000                	unimp
 27c:	01f8                	addi	a4,sp,204
 27e:	0000                	unimp
      for (i = 0; i <= rounds * 4; i += 4)
 280:	1058                	addi	a4,sp,36
 282:	0000                	unimp
	for (k = 0; k < 4; k++)
 284:	0074                	addi	a3,sp,12
 286:	0000                	unimp
      for (i = 0; i <= rounds * 4; i += 4)
 288:	000c                	0xc
 28a:	0000                	unimp
 28c:	01f8                	addi	a4,sp,204
 28e:	0000                	unimp
	  dst[i + k] = src[rounds * 4 - i + k];
 290:	10cc                	addi	a1,sp,100
 292:	0000                	unimp
 294:	0004                	0x4
 296:	0000                	unimp
 298:	000c                	0xc
 29a:	0000                	unimp
 29c:	ffff                	0xffff
 29e:	ffff                	0xffff
 2a0:	0001                	nop
 2a2:	7c01                	lui	s8,0xfffe0
	for (k = 0; k < 4; k++)
 2a4:	0d01                	addi	s10,s10,0
 2a6:	0002                	c.slli64	zero
      for (i = 0; i <= rounds * 4; i += 4)
 2a8:	000c                	0xc
 2aa:	0000                	unimp
 2ac:	0298                	addi	a4,sp,320
 2ae:	0000                	unimp
 2b0:	10d0                	addi	a2,sp,100
 2b2:	0000                	unimp
 2b4:	0008                	0x8
 2b6:	0000                	unimp
 2b8:	000c                	0xc
 2ba:	0000                	unimp
  if (src == dst)
 2bc:	0298                	addi	a4,sp,320
 2be:	0000                	unimp
 2c0:	10d8                	addi	a4,sp,100
 2c2:	0000                	unimp
	for (k = 0; k < 4; k++)
 2c4:	0008                	0x8
 2c6:	0000                	unimp
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
 2c8:	000c                	0xc
 2ca:	0000                	unimp
 2cc:	0298                	addi	a4,sp,320
 2ce:	0000                	unimp
 2d0:	10e0                	addi	s0,sp,108
 2d2:	0000                	unimp
      for (i = 0; i <= rounds * 4; i += 4)
 2d4:	0008                	0x8
 2d6:	0000                	unimp
    MIX_COLUMN (mtable, dst[i]);
 2d8:	000c                	0xc
 2da:	0000                	unimp
 2dc:	ffff                	0xffff
 2de:	ffff                	0xffff
  for (i = 4; i < 4 * rounds; i++)
 2e0:	0001                	nop
 2e2:	7c01                	lui	s8,0xfffe0
}
 2e4:	0d01                	addi	s10,s10,0
 2e6:	0002                	c.slli64	zero
 2e8:	0014                	0x14
 2ea:	0000                	unimp
 2ec:	02d8                	addi	a4,sp,324
 2ee:	0000                	unimp
      for (i = 0, j = rounds * 4; i < j; i += 4, j -= 4)
 2f0:	1538                	addi	a4,sp,680
 2f2:	0000                	unimp
	for (k = 0; k < 4; k++)
 2f4:	003c                	addi	a5,sp,8
 2f6:	0000                	unimp
	  SWAP (dst[i + k], dst[j + k]);
 2f8:	0e44                	addi	s1,sp,788
 2fa:	4420                	lw	s0,72(s0)
 2fc:	0181                	addi	gp,gp,0
	...
